<?php

use JetBrains\PhpStorm\Pure;

/**
* <div id="class.zookeeper" class="reference"> <h1 class="title">The Zookeeper class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p>   <div class="section" id="zookeeper.intro">   <h2 class="title">简介</h2>   <p class="para">    Represents ZooKeeper session.   </p>  </div>   <div class="section" id="zookeeper.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Zookeeper</strong>     </span>      {</div>     <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$host</span><span class="initializer"> = ''</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$recv_timeout</span><span class="initializer"> = 10000</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.addauth.php" class="methodname" style="color:#CC7832">addAuth</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$scheme</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cert</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$completion_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.connect.php" class="methodname" style="color:#CC7832">connect</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$host</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$recv_timeout</span><span class="initializer"> = 10000</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.create.php" class="methodname" style="color:#CC7832">create</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$acls</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.delete.php" class="methodname" style="color:#CC7832">delete</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.exists.php" class="methodname" style="color:#CC7832">exists</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.get.php" class="methodname" style="color:#CC7832">get</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$stat</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$max_size</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getacl.php" class="methodname" style="color:#CC7832">getAcl</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getchildren.php" class="methodname" style="color:#CC7832">getChildren</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getclientid.php" class="methodname" style="color:#CC7832">getClientId</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getconfig.php" class="methodname" style="color:#CC7832">getConfig</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.zookeeperconfig.php" class="type ZookeeperConfig" style="color:#EAB766">ZookeeperConfig</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getrecvtimeout.php" class="methodname" style="color:#CC7832">getRecvTimeout</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.getstate.php" class="methodname" style="color:#CC7832">getState</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.isrecoverable.php" class="methodname" style="color:#CC7832">isRecoverable</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.set.php" class="methodname" style="color:#CC7832">set</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span><span class="initializer"> = -1</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$stat</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.setacl.php" class="methodname" style="color:#CC7832">setAcl</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$acl</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="modifier">static</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.setdebuglevel.php" class="methodname" style="color:#CC7832">setDebugLevel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$logLevel</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="modifier">static</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.setdeterministicconnorder.php" class="methodname" style="color:#CC7832">setDeterministicConnOrder</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$yesOrNo</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.setlogstream.php" class="methodname" style="color:#CC7832">setLogStream</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/zookeeper.setwatcher.php" class="methodname" style="color:#CC7832">setWatcher</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-read"><var class="varname">PERM_READ</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-write"><var class="varname">PERM_WRITE</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-create"><var class="varname">PERM_CREATE</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-delete"><var class="varname">PERM_DELETE</var></a></var><span class="initializer"> = 8</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-admin"><var class="varname">PERM_ADMIN</var></a></var><span class="initializer"> = 16</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perm-all"><var class="varname">PERM_ALL</var></a></var><span class="initializer"> = 31</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.ephemeral"><var class="varname">EPHEMERAL</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.sequence"><var class="varname">SEQUENCE</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.log-level-error"><var class="varname">LOG_LEVEL_ERROR</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.log-level-warn"><var class="varname">LOG_LEVEL_WARN</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.log-level-info"><var class="varname">LOG_LEVEL_INFO</var></a></var><span class="initializer"> = 3</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.log-level-debug"><var class="varname">LOG_LEVEL_DEBUG</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.expired-session-state"><var class="varname">EXPIRED_SESSION_STATE</var></a></var><span class="initializer"> = -112</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.auth-failed-state"><var class="varname">AUTH_FAILED_STATE</var></a></var><span class="initializer"> = -113</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.connecting-state"><var class="varname">CONNECTING_STATE</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.associating-state"><var class="varname">ASSOCIATING_STATE</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.connected-state"><var class="varname">CONNECTED_STATE</var></a></var><span class="initializer"> = 3</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.readonly-state"><var class="varname">READONLY_STATE</var></a></var><span class="initializer"> = 5</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.notconnected-state"><var class="varname">NOTCONNECTED_STATE</var></a></var><span class="initializer"> = 999</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.created-event"><var class="varname">CREATED_EVENT</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.deleted-event"><var class="varname">DELETED_EVENT</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.changed-event"><var class="varname">CHANGED_EVENT</var></a></var><span class="initializer"> = 3</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.child-event"><var class="varname">CHILD_EVENT</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.session-event"><var class="varname">SESSION_EVENT</var></a></var><span class="initializer"> = -1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.notwatching-event"><var class="varname">NOTWATCHING_EVENT</var></a></var><span class="initializer"> = -2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.systemerror"><var class="varname">SYSTEMERROR</var></a></var><span class="initializer"> = -1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.runtimeinconsistency"><var class="varname">RUNTIMEINCONSISTENCY</var></a></var><span class="initializer"> = -2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.datainconsistency"><var class="varname">DATAINCONSISTENCY</var></a></var><span class="initializer"> = -3</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.connectionloss"><var class="varname">CONNECTIONLOSS</var></a></var><span class="initializer"> = -4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.marshallingerror"><var class="varname">MARSHALLINGERROR</var></a></var><span class="initializer"> = -5</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.unimplemented"><var class="varname">UNIMPLEMENTED</var></a></var><span class="initializer"> = -6</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.operationtimeout"><var class="varname">OPERATIONTIMEOUT</var></a></var><span class="initializer"> = -7</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.badarguments"><var class="varname">BADARGUMENTS</var></a></var><span class="initializer"> = -8</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.invalidstate"><var class="varname">INVALIDSTATE</var></a></var><span class="initializer"> = -9</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.newconfignoquorum"><var class="varname">NEWCONFIGNOQUORUM</var></a></var><span class="initializer"> = -13</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.reconfiginprogress"><var class="varname">RECONFIGINPROGRESS</var></a></var><span class="initializer"> = -14</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.ok"><var class="varname">OK</var></a></var><span class="initializer"> = 0</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.apierror"><var class="varname">APIERROR</var></a></var><span class="initializer"> = -100</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.nonode"><var class="varname">NONODE</var></a></var><span class="initializer"> = -101</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.noauth"><var class="varname">NOAUTH</var></a></var><span class="initializer"> = -102</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.badversion"><var class="varname">BADVERSION</var></a></var><span class="initializer"> = -103</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.nochildrenforephemerals"><var class="varname">NOCHILDRENFOREPHEMERALS</var></a></var><span class="initializer"> = -108</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.nodeexists"><var class="varname">NODEEXISTS</var></a></var><span class="initializer"> = -110</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.notempty"><var class="varname">NOTEMPTY</var></a></var><span class="initializer"> = -111</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.sessionexpired"><var class="varname">SESSIONEXPIRED</var></a></var><span class="initializer"> = -112</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.invalidcallback"><var class="varname">INVALIDCALLBACK</var></a></var><span class="initializer"> = -113</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.invalidacl"><var class="varname">INVALIDACL</var></a></var><span class="initializer"> = -114</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.authfailed"><var class="varname">AUTHFAILED</var></a></var><span class="initializer"> = -115</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.closing"><var class="varname">CLOSING</var></a></var><span class="initializer"> = -116</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.nothing"><var class="varname">NOTHING</var></a></var><span class="initializer"> = -117</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.sessionmoved"><var class="varname">SESSIONMOVED</var></a></var><span class="initializer"> = -118</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.notreadonly"><var class="varname">NOTREADONLY</var></a></var><span class="initializer"> = -119</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.ephemeralonlocalsession"><var class="varname">EPHEMERALONLOCALSESSION</var></a></var><span class="initializer"> = -120</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.nowatcher"><var class="varname">NOWATCHER</var></a></var><span class="initializer"> = -121</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.reconfigdisabled"><var class="varname">RECONFIGDISABLED</var></a></var><span class="initializer"> = -122</span>;</div>   }</div>  </div>  <div class="section" id="zookeeper.class.constants">   <h2 class="title">预定义常量</h2>   <div class="section" id="zookeeper.constants.perms">    <h2 class="title"><abbr>ZooKeeper</abbr> Permissions</h2>    <dl>           <dt id="zookeeper.constants.perm-read"><strong><span>{@link Zookeeper::PERM_READ}</span></strong></dt>      <dd>       <p class="para">Can read nodes value and list its children</p>      </dd>                <dt id="zookeeper.constants.perm-write"><strong><span>{@link Zookeeper::PERM_WRITE}</span></strong></dt>      <dd>       <p class="para">Can set the nodes value</p>      </dd>                <dt id="zookeeper.constants.perm-create"><strong><span>{@link Zookeeper::PERM_CREATE}</span></strong></dt>      <dd>       <p class="para">Can create children</p>      </dd>                <dt id="zookeeper.constants.perm-delete"><strong><span>{@link Zookeeper::PERM_DELETE}</span></strong></dt>      <dd>       <p class="para">Can delete children</p>      </dd>                <dt id="zookeeper.constants.perm-admin"><strong><span>{@link Zookeeper::PERM_ADMIN}</span></strong></dt>      <dd>       <p class="para">Can execute set_acl()</p>      </dd>                <dt id="zookeeper.constants.perm-all"><strong><span>{@link Zookeeper::PERM_ALL}</span></strong></dt>      <dd>       <p class="para">All of the above flags ORd together</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.create-flags">    <h2 class="title"><abbr>ZooKeeper</abbr> Create Flags</h2>    <dl>           <dt id="zookeeper.constants.ephemeral"><strong><span>{@link Zookeeper::EPHEMERAL}</span></strong></dt>      <dd>       <p class="para">If Zookeeper::EPHEMERAL flag is set, the node will automatically get removed if the client session goes away.</p>      </dd>                <dt id="zookeeper.constants.sequence"><strong><span>{@link Zookeeper::SEQUENCE}</span></strong></dt>      <dd>       <p class="para">If the Zookeeper::SEQUENCE flag is set, a unique monotonically increasing sequence number is appended to the path name. The sequence number is always fixed length of 10 digits, 0 padded.</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.log-levels">    <h2 class="title"><abbr>ZooKeeper</abbr> Log Levels</h2>    <dl>           <dt id="zookeeper.constants.log-level-error"><strong><span>{@link Zookeeper::LOG_LEVEL_ERROR}</span></strong></dt>      <dd>       <p class="para">Outputs only error mesages</p>      </dd>                <dt id="zookeeper.constants.log-level-warn"><strong><span>{@link Zookeeper::LOG_LEVEL_WARN}</span></strong></dt>      <dd>       <p class="para">Outputs errors/warnings</p>      </dd>                <dt id="zookeeper.constants.log-level-info"><strong><span>{@link Zookeeper::LOG_LEVEL_INFO}</span></strong></dt>      <dd>       <p class="para">Outputs big action messages besides errors/warnings</p>      </dd>                <dt id="zookeeper.constants.log-level-debug"><strong><span>{@link Zookeeper::LOG_LEVEL_DEBUG}</span></strong></dt>      <dd>       <p class="para">Outputs all</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.states">    <h2 class="title"><abbr>ZooKeeper</abbr> States</h2>    <dl>           <dt id="zookeeper.constants.expired-session-state"><strong><span>{@link Zookeeper::EXPIRED_SESSION_STATE}</span></strong></dt>      <dd>       <p class="para">Connected but session expired</p>      </dd>                <dt id="zookeeper.constants.auth-failed-state"><strong><span>{@link Zookeeper::AUTH_FAILED_STATE}</span></strong></dt>      <dd>       <p class="para">Connected but auth failed</p>      </dd>                <dt id="zookeeper.constants.connecting-state"><strong><span>{@link Zookeeper::CONNECTING_STATE}</span></strong></dt>      <dd>       <p class="para">Connecting</p>      </dd>                <dt id="zookeeper.constants.associating-state"><strong><span>{@link Zookeeper::ASSOCIATING_STATE}</span></strong></dt>      <dd>       <p class="para">Associating</p>      </dd>                <dt id="zookeeper.constants.connected-state"><strong><span>{@link Zookeeper::CONNECTED_STATE}</span></strong></dt>      <dd>       <p class="para">Connected</p>      </dd>                <dt id="zookeeper.constants.readonly-state"><strong><span>{@link Zookeeper::READONLY_STATE}</span></strong></dt>      <dd>       <p class="para">TODO: help us improve this extension.</p>      </dd>                <dt id="zookeeper.constants.notconnected-state"><strong><span>{@link Zookeeper::NOTCONNECTED_STATE}</span></strong></dt>      <dd>       <p class="para">Connection failed</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.watch-types">    <h2 class="title"><abbr>ZooKeeper</abbr> Watch Types</h2>    <dl>           <dt id="zookeeper.constants.created-event"><strong><span>{@link Zookeeper::CREATED_EVENT}</span></strong></dt>      <dd>       <p class="para">A node has been created</p>       <p class="para">This is only generated by watches on non-existent nodes. These watches are set using Zookeeper::exists.</p>      </dd>                <dt id="zookeeper.constants.deleted-event"><strong><span>{@link Zookeeper::DELETED_EVENT}</span></strong></dt>      <dd>       <p class="para">A node has been deleted</p>       <p class="para">This is only generated by watches on nodes. These watches are set using Zookeeper::exists and Zookeeper::get.</p>      </dd>                <dt id="zookeeper.constants.changed-event"><strong><span>{@link Zookeeper::CHANGED_EVENT}</span></strong></dt>      <dd>       <p class="para">A node has changed</p>       <p class="para">This is only generated by watches on nodes. These watches are set using Zookeeper::exists and Zookeeper::get.</p>      </dd>                <dt id="zookeeper.constants.child-event"><strong><span>{@link Zookeeper::CHILD_EVENT}</span></strong></dt>      <dd>       <p class="para">A change as occurred in the list of children</p>       <p class="para">This is only generated by watches on the child list of a node. These watches are set using Zookeeper::getChildren.</p>      </dd>                <dt id="zookeeper.constants.session-event"><strong><span>{@link Zookeeper::SESSION_EVENT}</span></strong></dt>      <dd>       <p class="para">A session has been lost</p>       <p class="para">This is generated when a client loses contact or reconnects with a server.</p>      </dd>                <dt id="zookeeper.constants.notwatching-event"><strong><span>{@link Zookeeper::NOTWATCHING_EVENT}</span></strong></dt>      <dd>       <p class="para">A watch has been removed</p>       <p class="para">This is generated when the server for some reason, probably a resource constraint, will no longer watch a node for a client.</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.system-n-server-side-errors">    <h2 class="title"><abbr>ZooKeeper</abbr> System and Server-side Errors</h2>    <dl>           <dt id="zookeeper.constants.systemerror"><strong><span>{@link Zookeeper::SYSTEMERROR}</span></strong></dt>      <dd>       <p class="para">This is never thrown by the server, it shouldn't be used other than to indicate a range. Specifically error codes greater than this value, but lesser than Zookeeper::APIERROR, are system errors.</p>      </dd>                <dt id="zookeeper.constants.runtimeinconsistency"><strong><span>{@link Zookeeper::RUNTIMEINCONSISTENCY}</span></strong></dt>      <dd>       <p class="para">A runtime inconsistency was found.</p>      </dd>                <dt id="zookeeper.constants.datainconsistency"><strong><span>{@link Zookeeper::DATAINCONSISTENCY}</span></strong></dt>      <dd>       <p class="para">A data inconsistency was found.</p>      </dd>                <dt id="zookeeper.constants.connectionloss"><strong><span>{@link Zookeeper::CONNECTIONLOSS}</span></strong></dt>      <dd>       <p class="para">Connection to the server has been lost.</p>      </dd>                <dt id="zookeeper.constants.marshallingerror"><strong><span>{@link Zookeeper::MARSHALLINGERROR}</span></strong></dt>      <dd>       <p class="para">Error while marshalling or unmarshalling data.</p>      </dd>                <dt id="zookeeper.constants.unimplemented"><strong><span>{@link Zookeeper::UNIMPLEMENTED}</span></strong></dt>      <dd>       <p class="para">Operation is unimplemented.</p>      </dd>                <dt id="zookeeper.constants.operationtimeout"><strong><span>{@link Zookeeper::OPERATIONTIMEOUT}</span></strong></dt>      <dd>       <p class="para">Operation timeout.</p>      </dd>                <dt id="zookeeper.constants.badarguments"><strong><span>{@link Zookeeper::BADARGUMENTS}</span></strong></dt>      <dd>       <p class="para">Invalid arguments.</p>      </dd>                <dt id="zookeeper.constants.invalidstate"><strong><span>{@link Zookeeper::INVALIDSTATE}</span></strong></dt>      <dd>       <p class="para">Invalid zhandle state.</p>      </dd>                <dt id="zookeeper.constants.newconfignoquorum"><strong><span>{@link Zookeeper::NEWCONFIGNOQUORUM}</span></strong></dt>      <dd>       <p class="para">No quorum of new config is connected and up-to-date with the leader of last committed config - try invoking reconfiguration after new servers are connected and synced.</p>       <p class="para">Available as of ZooKeeper 3.5.0</p>      </dd>                <dt id="zookeeper.constants.reconfiginprogress"><strong><span>{@link Zookeeper::RECONFIGINPROGRESS}</span></strong></dt>      <dd>       <p class="para">Reconfiguration requested while another reconfiguration is currently in progress. This is currently not supported. Please retry.</p>       <p class="para">Available as of ZooKeeper 3.5.0</p>      </dd>         </dl>   </div>   <div class="section" id="zookeeper.constants.api-errors">    <h2 class="title"><abbr>ZooKeeper</abbr> API Errors</h2>    <dl>           <dt id="zookeeper.constants.ok"><strong><span>{@link Zookeeper::OK}</span></strong></dt>      <dd>       <p class="para">Everything is OK.</p>      </dd>                <dt id="zookeeper.constants.apierror"><strong><span>{@link Zookeeper::APIERROR}</span></strong></dt>      <dd>       <p class="para">This is never thrown by the server, it shouldn't be used other than to indicate a range. Specifically error codes greater than this value are API errors (while values less than this indicate a Zookeeper::SYSTEMERROR).</p>      </dd>                <dt id="zookeeper.constants.nonode"><strong><span>{@link Zookeeper::NONODE}</span></strong></dt>      <dd>       <p class="para">Node does not exist.</p>      </dd>                <dt id="zookeeper.constants.noauth"><strong><span>{@link Zookeeper::NOAUTH}</span></strong></dt>      <dd>       <p class="para">Not authenticated.</p>      </dd>                <dt id="zookeeper.constants.badversion"><strong><span>{@link Zookeeper::BADVERSION}</span></strong></dt>      <dd>       <p class="para">Version conflict.</p>      </dd>                <dt id="zookeeper.constants.nochildrenforephemerals"><strong><span>{@link Zookeeper::NOCHILDRENFOREPHEMERALS}</span></strong></dt>      <dd>       <p class="para">Ephemeral nodes may not have children.</p>      </dd>                <dt id="zookeeper.constants.nodeexists"><strong><span>{@link Zookeeper::NODEEXISTS}</span></strong></dt>      <dd>       <p class="para">The node already exists.</p>      </dd>                <dt id="zookeeper.constants.notempty"><strong><span>{@link Zookeeper::NOTEMPTY}</span></strong></dt>      <dd>       <p class="para">The node has children.</p>      </dd>                <dt id="zookeeper.constants.sessionexpired"><strong><span>{@link Zookeeper::SESSIONEXPIRED}</span></strong></dt>      <dd>       <p class="para">The session has been expired by the server.</p>      </dd>                <dt id="zookeeper.constants.invalidcallback"><strong><span>{@link Zookeeper::INVALIDCALLBACK}</span></strong></dt>      <dd>       <p class="para">Invalid callback specified.</p>      </dd>                <dt id="zookeeper.constants.invalidacl"><strong><span>{@link Zookeeper::INVALIDACL}</span></strong></dt>      <dd>       <p class="para">Invalid ACL specified.</p>      </dd>                <dt id="zookeeper.constants.authfailed"><strong><span>{@link Zookeeper::AUTHFAILED}</span></strong></dt>      <dd>       <p class="para">Client authentication failed.</p>      </dd>                <dt id="zookeeper.constants.closing"><strong><span>{@link Zookeeper::CLOSING}</span></strong></dt>      <dd>       <p class="para">ZooKeeper is closing.</p>      </dd>                <dt id="zookeeper.constants.nothing"><strong><span>{@link Zookeeper::NOTHING}</span></strong></dt>      <dd>       <p class="para">(not error) No server responses to process.</p>      </dd>                <dt id="zookeeper.constants.sessionmoved"><strong><span>{@link Zookeeper::SESSIONMOVED}</span></strong></dt>      <dd>       <p class="para">Session moved to another server, so operation is ignored.</p>      </dd>                <dt id="zookeeper.constants.notreadonly"><strong><span>{@link Zookeeper::NOTREADONLY}</span></strong></dt>      <dd>       <p class="para">State-changing request is passed to read-only server.</p>      </dd>                <dt id="zookeeper.constants.ephemeralonlocalsession"><strong><span>{@link Zookeeper::EPHEMERALONLOCALSESSION}</span></strong></dt>      <dd>       <p class="para">Attempt to create ephemeral node on a local session.</p>      </dd>                <dt id="zookeeper.constants.nowatcher"><strong><span>{@link Zookeeper::NOWATCHER}</span></strong></dt>      <dd>       <p class="para">The watcher couldn't be found.</p>      </dd>                <dt id="zookeeper.constants.reconfigdisabled"><strong><span>{@link Zookeeper::RECONFIGDISABLED}</span></strong></dt>      <dd>       <p class="para">Attempts to perform a reconfiguration operation when reconfiguration feature is disabled.</p>      </dd>         </dl>   </div>  </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Zookeeper::addAuth} — Specify application credentials</li><li>{@link Zookeeper::close} — Close the zookeeper handle and free up any resources</li><li>{@link Zookeeper::connect} — Create a handle to used communicate with zookeeper</li><li>{@link Zookeeper::__construct} — Create a handle to used communicate with zookeeper</li><li>{@link Zookeeper::create} — Create a node synchronously</li><li>{@link Zookeeper::delete} — Delete a node in zookeeper synchronously</li><li>{@link Zookeeper::exists} — Checks the existence of a node in zookeeper synchronously</li><li>{@link Zookeeper::get} — Gets the data associated with a node synchronously</li><li>{@link Zookeeper::getAcl} — Gets the acl associated with a node synchronously</li><li>{@link Zookeeper::getChildren} — Lists the children of a node synchronously</li><li>{@link Zookeeper::getClientId} — Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)</li><li>{@link Zookeeper::getConfig} — Get instance of ZookeeperConfig</li><li>{@link Zookeeper::getRecvTimeout} — Return the timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server re-connect</li><li>{@link Zookeeper::getState} — Get the state of the zookeeper connection</li><li>{@link Zookeeper::isRecoverable} — Checks if the current zookeeper connection state can be recovered</li><li>{@link Zookeeper::set} — Sets the data associated with a node</li><li>{@link Zookeeper::setAcl} — Sets the acl associated with a node synchronously</li><li>{@link Zookeeper::setDebugLevel} — Sets the debugging level for the library</li><li>{@link Zookeeper::setDeterministicConnOrder} — Enable/disable quorum endpoint order randomization</li><li>{@link Zookeeper::setLogStream} — Sets the stream to be used by the library for logging</li><li>{@link Zookeeper::setWatcher} — Set a watcher function</li></ul></div>
*
 * Zookeeper class.
 * @link https://www.php.net/manual/en/class.zookeeper.php
 
*/
class Zookeeper
{
    /* class constants */
    public const PERM_READ = 1;
    public const PERM_WRITE = 2;
    public const PERM_CREATE = 4;
    public const PERM_DELETE = 8;
    public const PERM_ADMIN = 16;
    public const PERM_ALL = 31;
    public const EPHEMERAL = 1;
    public const SEQUENCE = 2;
    public const EXPIRED_SESSION_STATE = -112;
    public const AUTH_FAILED_STATE = -113;
    public const CONNECTING_STATE = 1;
    public const ASSOCIATING_STATE = 2;
    public const CONNECTED_STATE = 3;
    public const NOTCONNECTED_STATE = 999;
    public const CREATED_EVENT = 1;
    public const DELETED_EVENT = 2;
    public const CHANGED_EVENT = 3;
    public const CHILD_EVENT = 4;
    public const SESSION_EVENT = -1;
    public const NOTWATCHING_EVENT = -2;
    public const LOG_LEVEL_ERROR = 1;
    public const LOG_LEVEL_WARN = 2;
    public const LOG_LEVEL_INFO = 3;
    public const LOG_LEVEL_DEBUG = 4;
    public const SYSTEMERROR = -1;
    public const RUNTIMEINCONSISTENCY = -2;
    public const DATAINCONSISTENCY = -3;
    public const CONNECTIONLOSS = -4;
    public const MARSHALLINGERROR = -5;
    public const UNIMPLEMENTED = -6;
    public const OPERATIONTIMEOUT = -7;
    public const BADARGUMENTS = -8;
    public const INVALIDSTATE = -9;

    /**
     * @since 3.5
     */
    public const NEWCONFIGNOQUORUM = -13;

    /**
     * @since 3.5
     */
    public const RECONFIGINPROGRESS = -14;
    public const OK = 0;
    public const APIERROR = -100;
    public const NONODE = -101;
    public const NOAUTH = -102;
    public const BADVERSION = -103;
    public const NOCHILDRENFOREPHEMERALS = -108;
    public const NODEEXISTS = -110;
    public const NOTEMPTY = -111;
    public const SESSIONEXPIRED = -112;
    public const INVALIDCALLBACK = -113;
    public const INVALIDACL = -114;
    public const AUTHFAILED = -115;
    public const CLOSING = -116;
    public const NOTHING = -117;
    public const SESSIONMOVED = -118;

    /**
     * Create a handle to used communicate with zookeeper.
     * If the host is provided, attempt to connect.
     * @param string $host
     * @param callable $watcher_cb
     * @param int $recv_timeout
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when host is provided and when failed to connect to the host
     * @link https://www.php.net/manual/en/zookeeper.construct.php
     */
    public function __construct($host = '', $watcher_cb = null, $recv_timeout = 10000) {}

/**
* <div id="zookeeper.connect" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::connect</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.2.0)</p><p class="refpurpose"><span class="refname">Zookeeper::connect</span> — <span class="dc-title">Create a handle to used communicate with zookeeper</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.connect-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::connect</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$host</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$recv_timeout</span><span class="initializer"> = 10000</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   This method creates a new handle and a zookeeper session that corresponds to that handle. Session establishment is asynchronous, meaning that the session should not be considered established until (and unless) an event of state ZOO_CONNECTED_STATE is received.  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.connect-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">host</span></dt>    <dd>     <p class="para">      Comma separated host:port pairs, each corresponding to a zk server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002"     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">watcher_cb</span></dt>    <dd>     <p class="para">      The global watcher callback function. When notifications are triggered this function will be invoked.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">recv_timeout</span></dt>    <dd>     <p class="para">      The timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.connect-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.connect-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or could not init instance.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.connect-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Create a handle to used communicate with zookeeper.
     * @param string $host
     * @param callable $watcher_cb
     * @param int $recv_timeout
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when failed to connect to Zookeeper
     * @link https://www.php.net/manual/en/zookeeper.connect.php
     
*/
    public function connect($host, $watcher_cb = null, $recv_timeout = 10000) {}

/**
* <div id="zookeeper.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::close</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.5.0)</p><p class="refpurpose"><span class="refname">Zookeeper::close</span> — <span class="dc-title">Close the zookeeper handle and free up any resources</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::close</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.close-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.close-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives when closing an uninitialized instance.  </p> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.close-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Close the zookeeper handle and free up any resources.
     * @link https://www.php.net/manual/en/zookeeper.close.php
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when closing an uninitialized instance
     
*/
    public function close() {}

/**
* <div id="zookeeper.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::create</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::create</span> — <span class="dc-title">Create a node synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.create-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::create</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$acls</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   This method will create a node in ZooKeeper. A node can only be created if it does not already exists. The Create Flags affect the creation of nodes. If ZOO_EPHEMERAL flag is set, the node will automatically get removed if the client session goes away. If the ZOO_SEQUENCE flag is set, a unique monotonically increasing sequence number is appended to the path name.  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.create-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The data to be stored in the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">acls</span></dt>    <dd>     <p class="para">      The initial ACL of the node. The ACL must not be null or empty.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>    <dd>     <p class="para">      this parameter can be set to 0 for normal create or an OR of the Create Flags     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the path of the new node (this might be different than the supplied path because of the ZOO_SEQUENCE flag) on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.create-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to create node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.create-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.create.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::create()</strong></span> example</strong></p>   <div class="example-contents"><p>     Create a new node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$aclArray </span><span style="color: #007700">= array(<br>  array(<br>    </span><span style="color: #DD0000">'perms'  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">::</span><span style="color: #9876AA">PERM_ALL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'scheme' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'world'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'id'     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'anyone'</span><span style="color: #007700">,<br>  )<br>);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/newnode'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$realPath </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">$aclArray</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$realPath</span><span style="color: #007700">)<br>  echo </span><span style="color: #9876AA">$realPath</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">/path/to/newnode</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.create-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::delete()} - Delete a node in zookeeper synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getChildren()} - Lists the children of a node synchronously</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perms" class="link">ZooKeeper Permissions</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Create a node synchronously.
     * @param string $path
     * @param string $value
     * @param array $acl
     * @param int $flags
     * @return string
     * @throws ZookeeperException
     * @throws ZookeeperNoNodeException when parent path does not exist
     * @link https://www.php.net/manual/en/zookeeper.create.php
     
*/
    public function create($path, $value, $acl, $flags = null) {}

/**
* <div id="zookeeper.delete" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::delete</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.2.0)</p><p class="refpurpose"><span class="refname">Zookeeper::delete</span> — <span class="dc-title">Delete a node in zookeeper synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.delete-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::delete</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.delete-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">version</span></dt>    <dd>     <p class="para">      The expected version of the node. The function will fail if the actual version of the node does not match the expected version. If -1 is used the version check will not take place.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.delete-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.delete-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to delete node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.delete-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.delete.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::delete()</strong></span> example</strong></p>   <div class="example-contents"><p>     Delete a existing node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">delete</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #DD0000">'SUCCESS'</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">SUCCESS</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.delete-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getChildren()} - Lists the children of a node synchronously</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Delete a node in zookeeper synchronously.
     * @param string $path
     * @param int $version
     * @return bool
     * @throws ZookeeperException
     * @throws ZookeeperNoNodeException when path does not exist
     * @link https://www.php.net/manual/en/zookeeper.delete.php
     
*/
    public function delete($path, $version = -1) {}

/**
* <div id="zookeeper.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::set</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::set</span> — <span class="dc-title">Sets the data associated with a node</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::set</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span><span class="initializer"> = -1</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$stat</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The data to be stored in the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">version</span></dt>    <dd>     <p class="para">      The expected version of the node. The function will fail if the actual version of the node does not match the expected version. If -1 is used the version check will not take place.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">stat</span></dt>    <dd>     <p class="para">      If not NULL, will hold the value of stat for the path on return.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.set-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to save value to node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.set-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.set.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::set()</strong></span> example</strong></p>   <div class="example-contents"><p>     Save value to node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #DD0000">'nodevalue'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #DD0000">'SUCCESS'</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">SUCCESS</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.set-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::get()} - Gets the data associated with a node synchronously</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Sets the data associated with a node.
     * @param string $path
     * @param string $data
     * @param int $version
     * @param array  &$stat
     * @return bool
     * @throws ZookeeperException
     * @throws ZookeeperNoNodeException when path does not exist
     * @link https://www.php.net/manual/en/zookeeper.set.php
     
*/
    public function set($path, $data, $version = -1, &$stat = null) {}

/**
* <div id="zookeeper.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::get</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::get</span> — <span class="dc-title">Gets the data associated with a node synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::get</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$stat</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$max_size</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">watcher_cb</span></dt>    <dd>     <p class="para">      If nonzero, a watch will be set at the server to notify the client if the node changes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">stat</span></dt>    <dd>     <p class="para">      If not NULL, will hold the value of stat for the path on return.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_size</span></dt>    <dd>     <p class="para">      Max size of the data. If 0 is used, this method will return the whole data.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the data on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.get-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to get value from node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.get-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.get.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::get()</strong></span> example</strong></p>   <div class="example-contents"><p>     Get value from node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #DD0000">'nodevalue'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #9876AA">$r</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">nodevalue</blockquote></div>   </div>  </div>  <div class="example" id="zookeeper.get.example.stat">   <p><strong>示例 #2 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::get()</strong></span> stat example</strong></p>   <div class="example-contents"><p>     Get node stat info.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$stat </span><span style="color: #007700">= [];<br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">$stat</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$stat</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(11) {<br>  ["czxid"]=&gt;<br>  float(0)<br>  ["mzxid"]=&gt;<br>  float(0)<br>  ["ctime"]=&gt;<br>  float(0)<br>  ["mtime"]=&gt;<br>  float(0)<br>  ["version"]=&gt;<br>  int(0)<br>  ["cversion"]=&gt;<br>  int(-2)<br>  ["aversion"]=&gt;<br>  int(0)<br>  ["ephemeralOwner"]=&gt;<br>  float(0)<br>  ["dataLength"]=&gt;<br>  int(0)<br>  ["numChildren"]=&gt;<br>  int(2)<br>  ["pzxid"]=&gt;<br>  float(0)<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.get-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::set()} - Sets the data associated with a node</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Gets the data associated with a node synchronously.
     * @param string $path
     * @param callable $watcher_cb
     * @param array    &$stat
     * @param int $max_size
     * @return string
     * @throws ZookeeperException
     * @throws ZookeeperNoNodeException when path does not exist
     * @link https://www.php.net/manual/en/zookeeper.get.php
     
*/
    public function get($path, $watcher_cb = null, &$stat = null, $max_size = 0) {}

/**
* <div id="zookeeper.getchildren" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::getChildren</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::getChildren</span> — <span class="dc-title">Lists the children of a node synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.getchildren-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getChildren</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.getchildren-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">watcher_cb</span></dt>    <dd>     <p class="para">      If nonzero, a watch will be set at the server to notify the client if the node changes.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.getchildren-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with children paths on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.getchildren-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to list children of a node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.getchildren-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.getchildren.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getChildren()</strong></span> example</strong></p>   <div class="example-contents"><p>     Lists children of a node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/zookeeper'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getchildren</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br>} else {<br>    echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(1) {<br>  [0]=&gt;<br>  string(6) "config"<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.getchildren-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::delete()} - Delete a node in zookeeper synchronously</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Get children data of a path.
     * @param string $path
     * @param callable $watcher_cb
     * @return array|false
     * @throws ZookeeperException       when connection not in connected status
     * @throws ZookeeperNoNodeException when path does not exist
     * @link https://www.php.net/manual/en/zookeeper.getchildren.php
     
    #[Pure]
*/
    public function getChildren($path, $watcher_cb = null) {}

/**
* <div id="zookeeper.exists" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::exists</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::exists</span> — <span class="dc-title">Checks the existence of a node in zookeeper synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.exists-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::exists</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.exists-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">watcher_cb</span></dt>    <dd>     <p class="para">      if nonzero, a watch will be set at the server to notify the client if the node changes. The watch will be set even if the node does not     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.exists-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the value of stat for the path if the given node exists, otherwise false.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.exists-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to check the existence of a node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.exists-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.exists.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::exists()</strong></span> example</strong></p>   <div class="example-contents"><p>     Check the existence of a node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #DD0000">'EXISTS'</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'N/A or ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">EXISTS</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.exists-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::get()} - Gets the data associated with a node synchronously</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Checks the existence of a node in zookeeper synchronously.
     * @param string $path
     * @param callable $watcher_cb
     * @return bool
     * @throws ZookeeperException
     * @link https://www.php.net/manual/en/zookeeper.exists.php
     
*/
    public function exists($path, $watcher_cb = null) {}

/**
* <div id="zookeeper.getacl" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::getAcl</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::getAcl</span> — <span class="dc-title">Gets the acl associated with a node synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.getacl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getAcl</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.getacl-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.getacl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return acl array on success and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.getacl-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to get ACL of a node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.getacl-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.getacl.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getAcl()</strong></span> example</strong></p>   <div class="example-contents"><p>     Get ACL of a node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$aclArray </span><span style="color: #007700">= array(<br>  array(<br>    </span><span style="color: #DD0000">'perms'  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">::</span><span style="color: #9876AA">PERM_ALL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'scheme' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'world'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'id'     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'anyone'</span><span style="color: #007700">,<br>  )<br>);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/newnode'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAcl</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$aclArray</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAcl</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(1) {<br>  [0]=&gt;<br>  array(3) {<br>    ["perms"]=&gt;<br>    int(31)<br>    ["scheme"]=&gt;<br>    string(5) "world"<br>    ["id"]=&gt;<br>    string(6) "anyone"<br>  }<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.getacl-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::setAcl()} - Sets the acl associated with a node synchronously</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perms" class="link">ZooKeeper Permissions</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Gets the acl associated with a node synchronously.
     * @param string $path
     * @return array
     * @throws ZookeeperException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.getacl.php
     
    #[Pure]
*/
    public function getAcl($path) {}

/**
* <div id="zookeeper.setacl" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::setAcl</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::setAcl</span> — <span class="dc-title">Sets the acl associated with a node synchronously</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.setacl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setAcl</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$version</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$acl</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.setacl-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      The name of the node. Expressed as a file name with slashes separating ancestors of the node.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">version</span></dt>    <dd>     <p class="para">      The expected version of the path.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">acl</span></dt>    <dd>     <p class="para">      The acl to be set on the path.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.setacl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.setacl-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to set ACL for a node.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.setacl-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.setacl.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setAcl()</strong></span> example</strong></p>   <div class="example-contents"><p>     Set ACL for a node.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$aclArray </span><span style="color: #007700">= array(<br>  array(<br>    </span><span style="color: #DD0000">'perms'  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">::</span><span style="color: #9876AA">PERM_ALL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'scheme' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'world'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'id'     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'anyone'</span><span style="color: #007700">,<br>  )<br>);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/newnode'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAcl</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$aclArray</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAcl</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(1) {<br>  [0]=&gt;<br>  array(3) {<br>    ["perms"]=&gt;<br>    int(31)<br>    ["scheme"]=&gt;<br>    string(5) "world"<br>    ["id"]=&gt;<br>    string(6) "anyone"<br>  }<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.setacl-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getAcl()} - Gets the acl associated with a node synchronously</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.perms" class="link">ZooKeeper Permissions</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Sets the acl associated with a node synchronously.
     * @param string $path
     * @param int $version
     * @param array $acls
     * @return bool
     * @throws ZookeeperException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.setacl.php
     
*/
    public function setAcl($path, $version, $acls) {}

/**
* <div id="zookeeper.getclientid" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::getClientId</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::getClientId</span> — <span class="dc-title">Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.getclientid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getClientId</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.getclientid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.getclientid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the client session id on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.getclientid-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when it could not get client session id.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.getclientid-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getState()} - Get the state of the zookeeper connection</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.states" class="link">ZooKeeper States</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * return the client session id, only valid if the connections is currently connected
     * (ie. last watcher state is ZOO_CONNECTED_STATE).
     * @return int
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.getclientid.php
     
    #[Pure]
*/
    public function getClientId() {}

/**
* <div id="zookeeper.setwatcher" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::setWatcher</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::setWatcher</span> — <span class="dc-title">Set a watcher function</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.setwatcher-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setWatcher</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$watcher_cb</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.setwatcher-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">watcher_cb</span></dt>    <dd>     <p class="para">      A watch will be set at the server to notify the client if the node changes.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.setwatcher-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.setwatcher-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to set watcher.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.setwatcher-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::exists()} - Checks the existence of a node in zookeeper synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::get()} - Gets the data associated with a node synchronously</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Set a watcher function.
     * @param callable $watcher_cb
     * @return bool
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.setwatcher.php
     
*/
    public function setWatcher($watcher_cb) {}

/**
* <div id="zookeeper.getstate" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::getState</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::getState</span> — <span class="dc-title">Get the state of the zookeeper connection</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.getstate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getState</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.getstate-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.getstate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the state of zookeeper connection on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.getstate-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when it fails to get state of zookeeper connection.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.getstate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getClientId()} - Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.states" class="link">ZooKeeper States</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Get the state of the zookeeper connection.
     * @return int
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.getstate.php
     
    #[Pure]
*/
    public function getState() {}

/**
* <div id="zookeeper.getrecvtimeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::getRecvTimeout</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::getRecvTimeout</span> — <span class="dc-title">Return the timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server re-connect</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.getrecvtimeout-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::getRecvTimeout</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.getrecvtimeout-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.getrecvtimeout-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the timeout for this session on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.getrecvtimeout-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when operation fails.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.getrecvtimeout-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Return the timeout for this session, only valid if the connections is currently connected
     * (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server reconnect.
     * @return int
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.getrecvtimeout.php
     
    #[Pure]
*/
    public function getRecvTimeout() {}

/**
* <div id="zookeeper.addauth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::addAuth</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::addAuth</span> — <span class="dc-title">Specify application credentials</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.addauth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::addAuth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$scheme</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cert</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$completion_cb</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The application calls this function to specify its credentials for purposes of authentication. The server will use the security provider specified by the scheme parameter to authenticate the client connection. If the authentication request has failed:    - the server connection is dropped.    - the watcher is called with the ZOO_AUTH_FAILED_STATE value as the state parameter.  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.addauth-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">scheme</span></dt>    <dd>     <p class="para">      The id of authentication scheme. Natively supported: "digest" password-based authentication     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cert</span></dt>    <dd>     <p class="para">      Application credentials. The actual value depends on the scheme.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">completion_cb</span></dt>    <dd>     <p class="para">      The routine to invoke when the request completes. One of the following result codes may be passed into the completion callback:      - ZOK operation completed successfully      - ZAUTHFAILED authentication failed     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.addauth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.addauth-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or operation fails.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.addauth-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.addauth.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::addAuth()</strong></span> example</strong></p>   <div class="example-contents"><p>     Add auth before requesting node value.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$zookeeper </span><span style="color: #007700">= new </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">(</span><span style="color: #DD0000">'locahost:2181'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/node'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #DD0000">'nodevalue'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addAuth</span><span style="color: #007700">(</span><span style="color: #DD0000">'digest'</span><span style="color: #007700">, </span><span style="color: #DD0000">'user0:passwd0'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">$zookeeper</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #9876AA">$r</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">nodevalue</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.addauth-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::create()} - Create a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::setAcl()} - Sets the acl associated with a node synchronously</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getAcl()} - Gets the acl associated with a node synchronously</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.states" class="link">ZooKeeper States</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Specify application credentials.
     * @param string $scheme
     * @param string $cert
     * @param callable $completion_cb
     * @return bool
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.addauth.php
     
*/
    public function addAuth($scheme, $cert, $completion_cb = null) {}

/**
* <div id="zookeeper.isrecoverable" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::isRecoverable</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::isRecoverable</span> — <span class="dc-title">Checks if the current zookeeper connection state can be recovered</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.isrecoverable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::isRecoverable</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The application must close the handle and try to reconnect.  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.isrecoverable-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.isrecoverable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns true/false on success, and false on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.isrecoverable-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when operation fails.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.isrecoverable-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::getClientId()} - Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)</span></li>   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.states" class="link">ZooKeeper States</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Checks if the current zookeeper connection state can be recovered.
     * @return bool
     * @throws ZookeeperException
     * @throws ZookeeperConnectionException when connection not in connected status
     * @link https://www.php.net/manual/en/zookeeper.isrecoverable.php
     
*/
    public function isRecoverable() {}

/**
* <div id="zookeeper.setlogstream" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::setLogStream</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::setLogStream</span> — <span class="dc-title">Sets the stream to be used by the library for logging</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.setlogstream-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setLogStream</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The zookeeper library uses stderr as its default log stream. Application must make sure the stream is writable. Passing in NULL resets the stream to its default value (stderr).  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.setlogstream-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>    <dd>     <p class="para">      The stream to be used by the library for logging.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.setlogstream-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.setlogstream-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or operation fails.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.setlogstream-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::setDebugLevel()} - Sets the debugging level for the library</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Sets the stream to be used by the library for logging.
     * TODO: might be able to set a stream like php://stderr or something
     * @param resource $file
     * @return bool
     * @link https://www.php.net/manual/en/zookeeper.setlogstream.php
     
*/
    public function setLogStream($file) {}

/**
* <div id="zookeeper.setdebuglevel" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::setDebugLevel</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::setDebugLevel</span> — <span class="dc-title">Sets the debugging level for the library</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.setdebuglevel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="modifier">static</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setDebugLevel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$logLevel</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.setdebuglevel-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">logLevel</span></dt>    <dd>     <p class="para">      ZooKeeper log level constants.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.setdebuglevel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.setdebuglevel-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or fail to set debug level.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 examples" id="refsect1-zookeeper.setdebuglevel-examples">  <h3 class="title">示例</h3>  <div class="example" id="zookeeper.setdebuglevel.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setDebugLevel()</strong></span> example</strong></p>   <div class="example-contents"><p>     Set debugl level.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$r </span><span style="color: #007700">= </span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">::</span><span style="color: #9876AA">setDebugLevel</span><span style="color: #007700">(</span><span style="color: #9876AA">Zookeeper</span><span style="color: #007700">::</span><span style="color: #9876AA">LOG_LEVEL_WARN</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">)<br>  echo </span><span style="color: #DD0000">'SUCCESS'</span><span style="color: #007700">;<br>else<br>  echo </span><span style="color: #DD0000">'ERR'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;<br></span>?&gt;</span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">SUCCESS</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.setdebuglevel-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><a href="https://php.net/manual/zh/class.zookeeper.php#zookeeper.constants.log-levels" class="link">ZooKeeper Log Levels</a></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Sets the debugging level for the library.
     * @param int $level
     * @return bool
     * @link https://www.php.net/manual/en/zookeeper.setdebuglevel.php
     
*/
    public static function setDebugLevel($level) {}

/**
* <div id="zookeeper.setdeterministicconnorder" class="refentry"> <div class="refnamediv">  <h1 class="refname">Zookeeper::setDeterministicConnOrder</h1>  <p class="verinfo">(PECL zookeeper &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">Zookeeper::setDeterministicConnOrder</span> — <span class="dc-title">Enable/disable quorum endpoint order randomization</span></p> </div> <div class="refsect1 description" id="refsect1-zookeeper.setdeterministicconnorder-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span>   <span class="modifier">static</span>   <span class="methodname" style="color:#CC7832"><strong>Zookeeper::setDeterministicConnOrder</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$yesOrNo</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   If passed a true value, will make the client connect to quorum peers in the order as specified in the zookeeper_init() call. A false value causes zookeeper_init() to permute the peer endpoints which is good for more even client connection distribution among the quorum peers.   ZooKeeper C Client uses false by default.  </p> </div> <div class="refsect1 parameters" id="refsect1-zookeeper.setdeterministicconnorder-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">yesOrNo</span></dt>    <dd>     <p class="para">      Disable/enable quorum endpoint order randomization.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-zookeeper.setdeterministicconnorder-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-zookeeper.setdeterministicconnorder-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method emits PHP error/warning when parameters count or types are wrong or operation fails.  </p>  <div class="caution"><strong class="caution">警告</strong>    <p class="para">      Since version 0.3.0, this method emits <span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span> and it's derivatives.    </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-zookeeper.setdeterministicconnorder-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::__construct()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Zookeeper::connect()} - Create a handle to used communicate with zookeeper</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a></span></li>  </ul> </div></div>
    *
     * Enable/disable quorum endpoint order randomization.
     * @param bool $trueOrFalse
     * @return bool
     * @link https://www.php.net/manual/en/zookeeper.setdeterministicconnorder.php
     
*/
    public static function setDeterministicConnOrder($trueOrFalse) {}
}

/**
* <div id="class.zookeeperexception" class="reference"> <h1 class="title">The ZookeeperException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeeperexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper exception handling class.   </p>  </div>   <div class="section" id="zookeeperexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperException extends Exception {}

/**
* <div id="class.zookeeperoperationtimeoutexception" class="reference"> <h1 class="title">The ZookeeperOperationTimeoutException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeeperoperationtimeoutexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper operation timeout exception handling class.   </p>  </div>   <div class="section" id="zookeeperoperationtimeoutexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperOperationTimeoutException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperOperationTimeoutException extends ZookeeperException {}

/**
* <div id="class.zookeeperconnectionexception" class="reference"> <h1 class="title">The ZookeeperConnectionException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeeperconnectionexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper connection exception handling class.   </p>  </div>   <div class="section" id="zookeeperconnectionexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperConnectionException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperConnectionException extends ZookeeperException {}

/**
* <div id="class.zookeepermarshallingexception" class="reference"> <h1 class="title">The ZookeeperMarshallingException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeepermarshallingexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper exception (while marshalling or unmarshalling data) handling class.   </p>  </div>   <div class="section" id="zookeepermarshallingexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperMarshallingException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperMarshallingException extends ZookeeperException {}

/**
* <div id="class.zookeeperauthenticationexception" class="reference"> <h1 class="title">The ZookeeperAuthenticationException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeeperauthenticationexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper authentication exception handling class.   </p>  </div>   <div class="section" id="zookeeperauthenticationexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperAuthenticationException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperAuthenticationException extends ZookeeperException {}

/**
* <div id="class.zookeepersessionexception" class="reference"> <h1 class="title">The ZookeeperSessionException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeepersessionexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper session exception handling class.   </p>  </div>   <div class="section" id="zookeepersessionexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperSessionException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperSessionException extends ZookeeperException {}

/**
* <div id="class.zookeepernonodeexception" class="reference"> <h1 class="title">The ZookeeperNoNodeException class</h1>   <div class="partintro"><p class="verinfo">(PECL zookeeper &gt;= 0.3.0)</p>   <div class="section" id="zookeepernonodeexception.intro">   <h2 class="title">简介</h2>   <p class="para">    The ZooKeeper exception (when node does not exist) handling class.   </p>  </div>   <div class="section" id="zookeepernonodeexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ZookeeperNoNodeException</strong>     </span>     <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.zookeeperexception.php" class="classname">ZookeeperException</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
*/
class ZookeeperNoNodeException extends ZookeeperException {}
