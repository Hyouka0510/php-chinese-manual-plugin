<?php

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Pure;

/**
 * <div id="function.stream-select" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_select</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_select</span> — <span class="dc-title">Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by seconds and microseconds</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-select-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_select</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$read</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$write</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$except</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$seconds</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$microseconds</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   The <span class="function"><strong>stream_select()</strong></span> function accepts arrays of streams and   waits for them to change status. Its operation is equivalent to that of   the <span class="function">{@link socket_select()}</span> function except in that it acts on streams.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-select-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">read</span></dt>     <dd>      <p class="para">       The streams listed in the <span class="parameter" style="color:#3A95FF">read</span> array will be watched to       see if characters become available for reading (more precisely, to see if       a read will not block - in particular, a stream resource is also ready on       end-of-file, in which case an <span class="function">{@link fread()}</span> will return       a zero length string).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">write</span></dt>     <dd>      <p class="para">       The streams listed in the <span class="parameter" style="color:#3A95FF">write</span> array will be       watched to see if a write will not block.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">except</span></dt>     <dd>      <p class="para">       The streams listed in the <span class="parameter" style="color:#3A95FF">except</span> array will be       watched for high priority exceptional ("out-of-band") data arriving.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        When <span class="function"><strong>stream_select()</strong></span> returns, the arrays        <span class="parameter" style="color:#3A95FF">read</span>, <span class="parameter" style="color:#3A95FF">write</span> and        <span class="parameter" style="color:#3A95FF">except</span> are modified to indicate which stream        resource(s) actually changed status.        The original keys of the <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>s are preserved.       </p>      </blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">seconds</span></dt>     <dd>      <p class="para">       The <span class="parameter" style="color:#3A95FF">seconds</span> and <span class="parameter" style="color:#3A95FF">microseconds</span>       together form the <em>timeout</em> parameter,       <span class="parameter" style="color:#3A95FF">seconds</span> specifies the number of seconds while       <span class="parameter" style="color:#3A95FF">microseconds</span> the number of microseconds.       The <span class="parameter" style="color:#3A95FF">timeout</span> is an upper bound on the amount of time       that <span class="function"><strong>stream_select()</strong></span> will wait before it returns.       If <span class="parameter" style="color:#3A95FF">seconds</span> and <span class="parameter" style="color:#3A95FF">microseconds</span> are       both set to <span class="literal">0</span>, <span class="function"><strong>stream_select()</strong></span> will       not wait for data - instead it will return immediately, indicating the       current status of the streams.      </p>      <p class="para">       If <span class="parameter" style="color:#3A95FF">seconds</span> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> <span class="function"><strong>stream_select()</strong></span>       can block indefinitely, returning only when an event on one of the       watched streams occurs (or if a signal interrupts the system call).      </p>      <div class="warning"><strong class="warning">警告</strong>       <p class="para">        Using a timeout value of <span class="literal">0</span> allows you to        instantaneously poll the status of the streams, however, it is NOT a        good idea to use a <span class="literal">0</span> timeout value in a loop as it        will cause your script to consume too much CPU time.       </p>       <p class="para">        It is much better to specify a timeout value of a few seconds, although        if you need to be checking and running other code concurrently, using a        timeout value of at least <span class="literal">200000</span> microseconds will        help reduce the CPU usage of your script.       </p>       <p class="para">        Remember that the timeout value is the maximum time that will elapse;        <span class="function"><strong>stream_select()</strong></span> will return as soon as the        requested streams are ready for use.       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">microseconds</span></dt>     <dd>      <p class="para">       See <span class="parameter" style="color:#3A95FF">seconds</span> description.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-select-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   On success <span class="function"><strong>stream_select()</strong></span> returns the number of   stream resources contained in the modified arrays, which may be zero if   the timeout expires before anything interesting happens. On error <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>   is returned and a warning raised (this can happen if the system call is   interrupted by an incoming signal).  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-select-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">microseconds</span> is now nullable.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-select-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4041">    <p><strong>示例 #1 <span class="function"><strong>stream_select()</strong></span> Example</strong></p>    <div class="example-contents"><p>     This example checks to see if data has arrived for reading on either     <span class="parameter" style="color:#3A95FF">\$stream1</span> or <span class="parameter" style="color:#3A95FF">\$stream2</span>.     Since the timeout value is <span class="literal">0</span> it will return     immediately:    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Prepare the read array <br></span><span style="color: #9876AA">\$read   </span><span style="color: #007700">= array(</span><span style="color: #9876AA">\$stream1</span><span style="color: #007700">, </span><span style="color: #9876AA">\$stream2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$write  </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$except </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">false </span><span style="color: #007700">=== (</span><span style="color: #9876AA">\$num_changed_streams </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">\$read</span><span style="color: #007700">, </span><span style="color: #9876AA">\$write</span><span style="color: #007700">, </span><span style="color: #9876AA">\$except</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">))) {<br>    </span><span style="color: #FF8000">// Error handling <br></span><span style="color: #007700">} elseif (</span><span style="color: #9876AA">\$num_changed_streams </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// At least on one of the streams something interesting happened <br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-select-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Due to a limitation in the current Zend Engine it is not possible to pass a    constant modifier like <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> directly as a parameter to a function    which expects this parameter to be passed by reference. Instead use a    temporary variable or an expression with the leftmost member being a    temporary variable:    </p><div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$e </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">, </span><span style="color: #9876AA">\$w</span><span style="color: #007700">, </span><span style="color: #9876AA">\$e</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>     </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">   Be sure to use the <span class="literal">===</span> operator when checking for an   error. Since the <span class="function"><strong>stream_select()</strong></span> may return 0 the   comparison with <span class="literal">==</span> would evaluate to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>:   </p><div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$e </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">false </span><span style="color: #007700">=== </span><span style="color: #9876AA">stream_select</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">, </span><span style="color: #9876AA">\$w</span><span style="color: #007700">, </span><span style="color: #9876AA">\$e</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"stream_select() failed\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>     </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    If you read/write to a stream returned in the arrays be aware that    they do not necessarily read/write the full amount of data you have    requested. Be prepared to even only be able to read/write a single    byte.   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Some streams (like <span class="literal">zlib</span>) cannot be selected by this    function.   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>Windows compatibility</strong><br>   </p><p class="para">    Use of <span class="function"><strong>stream_select()</strong></span> on    file descriptors returned by <span class="function">{@link proc_open()}</span> will fail    and return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> under Windows.   </p>   <p class="para">    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.stdin">STDIN</a></span></strong> from a console changes status as soon as <em>any</em>    input events are available, but reading from the stream may still block.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-select-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>  </ul> </div></div>
 * 
 * Runs the equivalent of the select() system call on the given
 * arrays of streams with a timeout specified by tv_sec and tv_usec
 * @link https://php.net/manual/zh/function.stream-select.php
 * @param array|null &$read <p>
 * The streams listed in the read array will be watched to
 * see if characters become available for reading (more precisely, to see if
 * a read will not block - in particular, a stream resource is also ready on
 * end-of-file, in which case an fread will return
 * a zero length string).
 * </p>
 * @param array|null &$write <p>
 * The streams listed in the write array will be
 * watched to see if a write will not block.
 * </p>
 * @param array|null &$except <p>
 * The streams listed in the except array will be
 * watched for high priority exceptional ("out-of-band") data arriving.
 * </p>
 * <p>
 * When stream_select returns, the arrays
 * read, write and
 * except are modified to indicate which stream
 * resource(s) actually changed status.
 * </p>
 * You do not need to pass every array to
 * stream_select. You can leave it out and use an
 * empty array or null instead. Also do not forget that those arrays are
 * passed by reference and will be modified after
 * stream_select returns.
 * @param int|null $seconds <p>
 * The tv_sec and tv_usec
 * together form the timeout parameter,
 * tv_sec specifies the number of seconds while
 * tv_usec the number of microseconds.
 * The timeout is an upper bound on the amount of time
 * that stream_select will wait before it returns.
 * If tv_sec and tv_usec are
 * both set to 0, stream_select will
 * not wait for data - instead it will return immediately, indicating the
 * current status of the streams.
 * </p>
 * <p>
 * If tv_sec is null stream_select
 * can block indefinitely, returning only when an event on one of the
 * watched streams occurs (or if a signal interrupts the system call).
 * </p>
 * <p>
 * Using a timeout value of 0 allows you to
 * instantaneously poll the status of the streams, however, it is NOT a
 * good idea to use a 0 timeout value in a loop as it
 * will cause your script to consume too much CPU time.
 * </p>
 * <p>
 * It is much better to specify a timeout value of a few seconds, although
 * if you need to be checking and running other code concurrently, using a
 * timeout value of at least 200000 microseconds will
 * help reduce the CPU usage of your script.
 * </p>
 * <p>
 * Remember that the timeout value is the maximum time that will elapse;
 * stream_select will return as soon as the
 * requested streams are ready for use.
 * </p>
 * @param int $microseconds [optional] <p>
 * See tv_sec description.
 * </p>
 * @return int|false On success stream_select returns the number of
 * stream resources contained in the modified arrays, which may be zero if
 * the timeout expires before anything interesting happens. On error false
 * is returned and a warning raised (this can happen if the system call is
 * interrupted by an incoming signal).
 */
function stream_select(
    ?array &$read,
    ?array &$write,
    ?array &$except,
    ?int $seconds,
    #[LanguageLevelTypeAware(['8.1' => 'int|null'], default: 'int')] $microseconds
): int|false {}

/**
 * <div id="function.stream-context-create" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_create</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_create</span> — <span class="dc-title">创建资源流上下文</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-context-create-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$params</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></div>  <p class="para rdfs-comment">   创建并返回一个资源流上下文，该资源流中包含了 <span class="parameter" style="color:#3A95FF">options</span> 中提前设定的所有参数的值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       必须是一个二维关联数组或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，二维关联数组格式如下：<span class="literal">\$arr['wrapper']['option'] = \$value</span>。请参考       <a href="https://php.net/manual/zh/context.php" class="link">上下文（Context）选项</a> 中可用的封装协议和选项列表。      </p>      <p class="para">       默认为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">params</span></dt>     <dd>      <p class="para">       必须是 <span class="literal">\$arr['parameter'] = \$value</span> 格式的关联数组或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。       请参考 <a href="https://php.net/manual/zh/context.params.php" class="link">上下文（Context）参数</a> 里的标准资源流参数列表。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-context-create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   上下文资源流，类型为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-context-create-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">options</span> 和 <span class="parameter" style="color:#3A95FF">params</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-context-create-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4018">   <p><strong>示例 #1 使用 <span class="function"><strong>stream_context_create()</strong></span></strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$opts </span><span style="color: #007700">= [<br>  </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; [<br>    </span><span style="color: #DD0000">'method' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br>    </span><span style="color: #FF8000">// 使用 CRLF \r\n 分隔多个 header<br>    </span><span style="color: #DD0000">'header' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Accept-language: en\r\n" </span><span style="color: #007700">.<br>                </span><span style="color: #DD0000">"Cookie: foo=bar"</span><span style="color: #007700">,<br>  ]<br>];<br><br></span><span style="color: #9876AA">\$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">\$opts</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 包含上面的 header 头，向 www.example.com<br>   发送 HTTP 请求 <br></span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">\$context</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.stream-context-create-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_context_set_option()} - 对资源流、数据包或者上下文设置参数</span></li>   <li>支持的封装协议列表（<a href="https://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>）</li>   <li>上下文选项（<a href="https://php.net/manual/zh/context.php" class="xref">上下文（Context）选项和参数</a>）</li>  </ul> </div></div>
 * 
 * Create a stream context
 * @link https://php.net/manual/zh/function.stream-context-create.php
 * @param null|array $options [optional] <p>
 * Must be an associative array of associative arrays in the format
 * $arr['wrapper']['option'] = $value.
 * </p>
 * <p>
 * Default to an empty array.
 * </p>
 * @param null|array $params [optional] <p>
 * Must be an associative array in the format
 * $arr['parameter'] = $value.
 * Refer to context parameters for
 * a listing of standard stream parameters.
 * </p>
 * @return resource A stream context resource.
 */
function stream_context_create(?array $options, ?array $params) {}

/**
 * <div id="function.stream-context-set-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_set_params</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_set_params</span> — <span class="dc-title">Set parameters for a stream/wrapper/context</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-set-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_set_params</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$context</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$params</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets parameters on the specified context.  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.stream-context-set-params-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       The stream or context to apply the parameters too.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">params</span></dt>     <dd>      <p class="para">       An associative array of parameters to be set in the following format:       <span class="literal">\$params['paramname'] = "paramvalue";</span>.      </p>      <table class="doctable table">       <caption><strong>Supported parameters</strong></caption>               <thead>         <tr>          <th>Parameter</th>          <th>Purpose</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>           <span class="literal">notification</span>          </td>          <td>           Name of user-defined callback function to be called whenever a stream triggers a notification.           Only supported for <a href="https://php.net/manual/zh/wrappers.http.php" class="link">http://</a> and           <a href="https://php.net/manual/zh/wrappers.ftp.php" class="link">ftp://</a> stream wrappers.          </td>         </tr>         <tr>          <td>           <span class="literal">options</span>          </td>          <td>           Array of options as in <a href="https://php.net/manual/zh/context.php" class="link">context options and parameters</a>.          </td>         </tr>        </tbody>             </table>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 seealso" id="refsect1-function.stream-context-set-params-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_notification_callback()} - A callback function for the notification context parameter</span></li>  </ul> </div></div>
 * 
 * Set parameters for a stream/wrapper/context
 * @link https://php.net/manual/zh/function.stream-context-set-params.php
 * @param resource $context <p>
 * The stream or context to apply the parameters too.
 * </p>
 * @param array $params <p>
 * An array of parameters to set.
 * </p>
 * <p>
 * params should be an associative array of the structure:
 * $params['paramname'] = "paramvalue";.
 * </p>
 * @return bool true on success or false on failure.
 */
#[LanguageLevelTypeAware(['8.4' => 'true'], default: 'bool')]
function stream_context_set_params($context, array $params) {}

/**
 * <div id="function.stream-context-get-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_get_params</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_get_params</span> — <span class="dc-title">Retrieves parameters from a context</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-context-get-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_get_params</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$context</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Retrieves parameter and options information from the stream or context.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-get-params-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       A stream <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> or a       <a href="https://php.net/manual/zh/context.php" class="link">context</a> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associate array containing all context options and parameters.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-context-get-params-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4021">    <p><strong>示例 #1 <span class="function"><strong>stream_context_get_params()</strong></span> example</strong></p>    <div class="example-contents"><p>     Basic usage example    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$ctx </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$params </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"notification" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"stream_notification_callback"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">stream_context_set_params</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ctx</span><span style="color: #007700">, </span><span style="color: #9876AA">\$params</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_params</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ctx</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(2)&nbsp;{<br>&nbsp;&nbsp;["notification"]=&gt;<br>&nbsp;&nbsp;string(28)&nbsp;"stream_notification_callback"<br>&nbsp;&nbsp;["options"]=&gt;<br>&nbsp;&nbsp;array(0)&nbsp;{<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-context-get-params-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_context_set_option()} - 对资源流、数据包或者上下文设置参数</span></li>    <li><span class="function">{@link stream_context_set_params()} - Set parameters for a stream/wrapper/context</span></li>   </ul>   </div></div>
 * 
 * Retrieves parameters from a context
 * @link https://php.net/manual/zh/function.stream-context-get-params.php
 * @param resource $context <p>
 * A stream resource or a
 * context resource
 * </p>
 * @return array an associate array containing all context options and parameters.
 */
#[ArrayShape(["notification" => "string", "options" => "array"])]
function stream_context_get_params($context): array {}

/**
 * <div id="function.stream-context-set-option" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_set_option</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_set_option</span> — <span class="dc-title">对资源流、数据包或者上下文设置参数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-set-option-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_or_context</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$wrapper</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   自 PHP 8.4.0 起，下面的替代签名已被弃用，请使用 <span class="function">{@link stream_context_set_options()}</span> 代替。   </p><div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_or_context</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <p class="simpara">     给指定的上下文设置参数。参数 <span class="parameter" style="color:#3A95FF">value</span>     是设置 <span class="parameter" style="color:#3A95FF">wrapper</span> 的 <span class="parameter" style="color:#3A95FF">option</span> 参数的值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-set-option-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream_or_context</span></dt>     <dd>      <p class="para">       需要添加参数的资源流或者上下文。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">wrapper</span></dt>     <dd>      <p class="para">       封装协议的名称（可能与协议不同）。       请参考 <a href="https://php.net/manual/zh/context.php" class="link">上下文（Context）选项和参数</a>       查看资源流参数列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       选项的名称。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       选项的值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       给 <span class="parameter" style="color:#3A95FF">stream_or_context</span> 设置的选项。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        <span class="parameter" style="color:#3A95FF">options</span> 必须是一个 <span class="literal">\$arr['wrapper']['option'] = \$value</span> 格式二维关联数组 。       </p>       <p class="para">        请参考 <a href="https://php.net/manual/zh/context.php" class="link">上下文（Context）选项和参数</a> 查看资源流参数列表。       </p>      </blockquote>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-option-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-context-set-option-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       替代的双参数签名已被弃用。       请使用 <span class="function">{@link stream_context_set_options()}</span> 代替。      </td>     </tr>    </tbody>     </table> </div></div>
 * 
 * Sets an option for a stream/wrapper/context
 * @link https://php.net/manual/zh/function.stream-context-set-option.php
 * @param resource $context <p>
 * The stream or context resource to apply the options too.
 * </p>
 * @param string $wrapper_or_options
 * @param string $option_name
 * @param mixed $value
 * @return bool true on success or false on failure.
 */
#[LanguageLevelTypeAware(['8.4' => 'true'], default: 'bool')]
function stream_context_set_option($context, string $wrapper_or_options, string $option_name, mixed $value) {}

/**
 * <div id="function.stream-context-set-option" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_set_option</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_set_option</span> — <span class="dc-title">对资源流、数据包或者上下文设置参数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-set-option-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_or_context</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$wrapper</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   自 PHP 8.4.0 起，下面的替代签名已被弃用，请使用 <span class="function">{@link stream_context_set_options()}</span> 代替。   </p><div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>stream_context_set_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_or_context</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <p class="simpara">     给指定的上下文设置参数。参数 <span class="parameter" style="color:#3A95FF">value</span>     是设置 <span class="parameter" style="color:#3A95FF">wrapper</span> 的 <span class="parameter" style="color:#3A95FF">option</span> 参数的值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-set-option-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream_or_context</span></dt>     <dd>      <p class="para">       需要添加参数的资源流或者上下文。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">wrapper</span></dt>     <dd>      <p class="para">       封装协议的名称（可能与协议不同）。       请参考 <a href="https://php.net/manual/zh/context.php" class="link">上下文（Context）选项和参数</a>       查看资源流参数列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       选项的名称。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       选项的值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       给 <span class="parameter" style="color:#3A95FF">stream_or_context</span> 设置的选项。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        <span class="parameter" style="color:#3A95FF">options</span> 必须是一个 <span class="literal">\$arr['wrapper']['option'] = \$value</span> 格式二维关联数组 。       </p>       <p class="para">        请参考 <a href="https://php.net/manual/zh/context.php" class="link">上下文（Context）选项和参数</a> 查看资源流参数列表。       </p>      </blockquote>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-option-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-context-set-option-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       替代的双参数签名已被弃用。       请使用 <span class="function">{@link stream_context_set_options()}</span> 代替。      </td>     </tr>    </tbody>     </table> </div></div>
 * 
 * Sets an option for a stream/wrapper/context
 * @link https://php.net/manual/zh/function.stream-context-set-option.php
 * @param resource $stream_or_context The stream or context resource to apply the options too.
 * @param array $options The options to set for the default context.
 * @return bool true on success or false on failure.
 */
#[LanguageLevelTypeAware(['8.4' => 'true'], default: 'bool')]
function stream_context_set_option($stream_or_context, array $options) {}

/**
 * <div id="function.stream-context-set-options" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_set_options</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">stream_context_set_options</span> — <span class="dc-title">Sets options on the specified context</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-context-set-options-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_set_options</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$context</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets options on the specified context.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-set-options-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       The stream or context resource to apply the options to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The options to set for <span class="parameter" style="color:#3A95FF">context</span>.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        <span class="parameter" style="color:#3A95FF">options</span> must be an associative        <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of associative arrays in the format        <span class="code">\$array['wrapper']['option'] = \$value</span>.       </p>       <p class="para">        Refer to <a href="https://php.net/manual/zh/context.php" class="link">context options and parameters</a>        for a listing of stream options.       </p>      </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-options-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-context-set-options-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4023">    <p><strong>示例 #1 <span class="function"><strong>stream_context_set_options()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$options </span><span style="color: #007700">= [<br>    </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; [<br>        </span><span style="color: #DD0000">'protocol_version' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1.1</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">'user_agent' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PHPT Agent'</span><span style="color: #007700">,<br>    ],<br>];<br><br></span><span style="color: #9876AA">stream_context_set_options</span><span style="color: #007700">(</span><span style="color: #9876AA">\$context</span><span style="color: #007700">, </span><span style="color: #9876AA">\$options</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_options</span><span style="color: #007700">(</span><span style="color: #9876AA">\$context</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(1)&nbsp;{<br>&nbsp;&nbsp;["http"]=&gt;<br>&nbsp;&nbsp;array(2)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["protocol_version"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;float(1.1)<br>&nbsp;&nbsp;&nbsp;&nbsp;["user_agent"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(10)&nbsp;"PHPT&nbsp;Agent"<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-context-set-options-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_context_set_option()} - 对资源流、数据包或者上下文设置参数</span></li>   </ul>   </div></div>
 * 
 * @since 8.3
 */
#[LanguageLevelTypeAware(['8.4' => 'true'], default: 'bool')]
function stream_context_set_options($context, array $options) {}

/**
 * <div id="function.stream-context-get-options" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_get_options</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_get_options</span> — <span class="dc-title">获取资源流/数据包/上下文的参数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-get-options-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_get_options</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_or_context</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="simpara">   返回指定资源流或者上下文的数组参数。  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.stream-context-get-options-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream_or_context</span></dt>     <dd>      <p class="para">       获取参数信息的 <span class="type" style="color:#EAB766">stream</span> 或者 <span class="type" style="color:#EAB766">context</span> 。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-options-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个包含有原参数的关联数组。  </p> </div>  <div class="refsect1 examples" id="refsect1-function.stream-context-get-options-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="stream-context-get-options.example.basic">    <p><strong>示例 #1 <span class="function"><strong>stream_context_get_options()</strong></span> 的例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$params </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"method" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"POST"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">stream_context_set_default</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"http" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$params</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_options</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_context_get_default</span><span style="color: #007700">()));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(1)&nbsp;{<br>&nbsp;&nbsp;["http"]=&gt;<br>&nbsp;&nbsp;array(1)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["method"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(4)&nbsp;"POST"<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>   </div>   </div> </div>
 * 
 * Retrieve options for a stream/wrapper/context
 * @link https://php.net/manual/zh/function.stream-context-get-options.php
 * @param resource $stream_or_context <p>
 * The stream or context to get options from
 * </p>
 * @return array an associative array with the options.
 */
function stream_context_get_options($stream_or_context): array {}

/**
 * <div id="function.stream-context-get-default" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_get_default</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_get_default</span> — <span class="dc-title">Retrieve the default stream context</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-get-default-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_get_default</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></div>  <p class="simpara">   Returns the default stream context which is used whenever file operations   (<span class="function">{@link fopen()}</span>, <span class="function">{@link file_get_contents()}</span>, etc...)   are called without a context parameter.  Options for the default context   can optionally be specified with this function using the same syntax as   <span class="function">{@link stream_context_create()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-context-get-default-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <span class="simpara">       <span class="parameter" style="color:#3A95FF">options</span> must be an associative       array of associative arrays in the format       <span class="literal">\$arr['wrapper']['option'] = \$value</span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-context-get-default-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A stream context <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-context-get-default-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> is now nullable.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-context-get-default-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="stream-context-get-default.example.basic">    <p><strong>示例 #1 Using <span class="function"><strong>stream_context_get_default()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$default_opts </span><span style="color: #007700">= [<br>  </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; [<br>    </span><span style="color: #DD0000">'method' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'header' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Accept-language: en\r\n" </span><span style="color: #007700">.<br>                </span><span style="color: #DD0000">"Cookie: foo=bar"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'proxy' </span><span style="color: #007700">=&gt;  </span><span style="color: #DD0000">"tcp://10.54.1.39:8000"</span><span style="color: #007700">,<br>  ]<br>];<br><br><br></span><span style="color: #9876AA">\$alternate_opts </span><span style="color: #007700">= [<br>  </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; [<br>    </span><span style="color: #DD0000">'method'  </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"POST"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'header'  </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Content-type: application/x-www-form-urlencoded\r\n" </span><span style="color: #007700">.<br>                 </span><span style="color: #DD0000">"Content-length: " </span><span style="color: #007700">. </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #DD0000">"baz=bomb"</span><span style="color: #007700">),<br>    </span><span style="color: #DD0000">'content' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"baz=bomb"</span><span style="color: #007700">,<br>  ]<br>];<br><br></span><span style="color: #9876AA">\$default </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_get_default</span><span style="color: #007700">(</span><span style="color: #9876AA">\$default_opts</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$alternate </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">\$alternate_opts</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sends a regular GET request to proxy server at 10.54.1.39<br> * For www.example.com using context options specified in \$default_opts<br> <br></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sends a POST request directly to www.example.com<br> * Using context options specified in \$alternate_opts<br> <br></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">\$alternate</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-context-get-default-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    <li><span class="function">{@link stream_context_set_default()} - Set the default stream context</span></li>    <li>Listing of supported wrappers with context options (<a href="https://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>).</li>   </ul>   </div></div>
 * 
 * Retreive the default stream context
 * @link https://php.net/manual/zh/function.stream-context-get-default.php
 * @param null|array $options [optional] options must be an associative
 * array of associative arrays in the format
 * $arr['wrapper']['option'] = $value.
 * <p>
 * As of PHP 5.3.0, the stream_context_set_default function
 * can be used to set the default context.
 * </p>
 * @return resource A stream context resource.
 */
function stream_context_get_default(?array $options) {}

/**
 * <div id="function.stream-context-set-default" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_context_set_default</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_context_set_default</span> — <span class="dc-title">Set the default stream context</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-context-set-default-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_context_set_default</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></div>  <p class="simpara">   Set the default stream context which will be used whenever file operations   (<span class="function">{@link fopen()}</span>, <span class="function">{@link file_get_contents()}</span>, etc...)   are called without a context parameter. Uses the same syntax as   <span class="function">{@link stream_context_create()}</span>.  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.stream-context-set-default-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The options to set for the default context.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        <span class="parameter" style="color:#3A95FF">options</span> must be an associative        array of associative arrays in the format        <span class="literal">\$arr['wrapper']['option'] = \$value</span>.       </p>      </blockquote>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.stream-context-set-default-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the default stream context.   </p> </div>  <div class="refsect1 examples" id="refsect1-function.stream-context-set-default-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="stream-context-set-default.example.basic">    <p><strong>示例 #1 <span class="function"><strong>stream_context_set_default()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$default_opts </span><span style="color: #007700">= [<br>  </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; [<br>    </span><span style="color: #DD0000">'method' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'header' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Accept-language: en\r\n" </span><span style="color: #007700">.<br>                </span><span style="color: #DD0000">"Cookie: foo=bar"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'proxy'  </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"tcp://10.54.1.39:8000"</span><span style="color: #007700">,<br>  ]<br>];<br><br></span><span style="color: #9876AA">\$default </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_set_default</span><span style="color: #007700">(</span><span style="color: #9876AA">\$default_opts</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sends a regular GET request to proxy server at 10.54.1.39<br> * For www.example.com using context options specified in \$default_opts<br> <br></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-function.stream-context-set-default-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    <li><span class="function">{@link stream_context_get_default()} - Retrieve the default stream context</span></li>    <li>Listing of supported wrappers with context options (<a href="https://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>).</li>   </ul>   </div></div>
 * 
 * Set the default stream context
 * @link https://php.net/manual/zh/function.stream-context-set-default.php
 * @param array $options <p>
 * The options to set for the default context.
 * </p>
 * <p>
 * options must be an associative
 * array of associative arrays in the format
 * $arr['wrapper']['option'] = $value.
 * </p>
 * @return resource the default stream context.
 */
function stream_context_set_default(array $options) {}

/**
 * <div id="function.stream-filter-prepend" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_filter_prepend</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_filter_prepend</span> — <span class="dc-title">Attach a filter to a stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-filter-prepend-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_filter_prepend</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filtername</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$read_write</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$params</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></div>  <p class="para rdfs-comment">   Adds <span class="parameter" style="color:#3A95FF">filtername</span> to the list of filters   attached to <span class="parameter" style="color:#3A95FF">stream</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-filter-prepend-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The target stream.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filtername</span></dt>     <dd>      <p class="para">       The filter name.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">read_write</span></dt>     <dd>      <p class="para">       By default, <span class="function"><strong>stream_filter_prepend()</strong></span> will       attach the filter to the <span class="literal">read filter chain</span>       if the file was opened for reading (i.e. File Mode:       <span class="literal">r</span>, and/or <span class="literal">+</span>).  The filter       will also be attached to the <span class="literal">write filter chain</span>       if the file was opened for writing (i.e. File Mode:       <span class="literal">w</span>, <span class="literal">a</span>, and/or <span class="literal">+</span>).       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-read">STREAM_FILTER_READ</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-write">STREAM_FILTER_WRITE</a></span></strong>, and/or       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-all">STREAM_FILTER_ALL</a></span></strong> can also be passed to the       <span class="parameter" style="color:#3A95FF">read_write</span> parameter to override this behavior.       See <span class="function">{@link stream_filter_append()}</span> for an example of       using this parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">params</span></dt>     <dd>      <p class="para">       This filter will be added with the specified <span class="parameter" style="color:#3A95FF">params</span>       to the <em>beginning</em> of the list and will therefore be       called first during stream operations.  To add a filter to the end of the       list, use <span class="function">{@link stream_filter_append()}</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-filter-prepend-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a resource on success or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure. The resource can be   used to refer to this filter instance during a call to   <span class="function">{@link stream_filter_remove()}</span>.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned if <span class="parameter" style="color:#3A95FF">stream</span> is not a resource or   if <span class="parameter" style="color:#3A95FF">filtername</span> cannot be located.  </p> </div> <div class="refsect1 notes" id="refsect1-function.stream-filter-prepend-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>When using custom (user) filters</strong><br>   <span class="simpara">    <span class="function">{@link stream_filter_register()}</span> must be called first    in order to register the desired user filter to <span class="parameter" style="color:#3A95FF">filtername</span>.   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    Stream data is read from resources (both local and remote) in chunks,    with any unconsumed data kept in internal buffers.  When a new    filter is prepended to a stream, data in the internal buffers,    which has already been processed through other filters will    <em>not</em> be reprocessed through the new filter    at that time.  This differs from the behavior of    <span class="function">{@link stream_filter_append()}</span>.   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    When a filter is added for read and write, two instances of the filter    are created. <span class="function"><strong>stream_filter_prepend()</strong></span> must be called twice     with <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-read">STREAM_FILTER_READ</a></span></strong> and     <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-write">STREAM_FILTER_WRITE</a></span></strong> to get both filter resources.   </span>  </p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-filter-prepend-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>   <li><span class="function">{@link stream_filter_append()} - Attach a filter to a stream</span></li>  </ul> </div></div>
 * 
 * Attach a filter to a stream
 * @link https://php.net/manual/zh/function.stream-filter-prepend.php
 * @param resource $stream <p>
 * The target stream.
 * </p>
 * @param string $filter_name <p>
 * The filter name.
 * </p>
 * @param int $mode <p>
 * By default, stream_filter_prepend will
 * attach the filter to the read filter chain
 * if the file was opened for reading (i.e. File Mode:
 * r, and/or +). The filter
 * will also be attached to the write filter chain
 * if the file was opened for writing (i.e. File Mode:
 * w, a, and/or +).
 * STREAM_FILTER_READ,
 * STREAM_FILTER_WRITE, and/or
 * STREAM_FILTER_ALL can also be passed to the
 * read_write parameter to override this behavior.
 * See stream_filter_append for an example of
 * using this parameter.
 * </p>
 * @param mixed $params [optional] <p>
 * This filter will be added with the specified params
 * to the beginning of the list and will therefore be
 * called first during stream operations. To add a filter to the end of the
 * list, use stream_filter_append.
 * </p>
 * @return resource|false a resource which can be used to refer to this filter
 * instance during a call to stream_filter_remove.
 */
function stream_filter_prepend($stream, string $filter_name, int $mode = 0, mixed $params) {}

/**
 * <div id="function.stream-filter-append" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_filter_append</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_filter_append</span> — <span class="dc-title">Attach a filter to a stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-filter-append-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_filter_append</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filtername</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$read_write</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$params</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></div>  <p class="para rdfs-comment">   Adds <span class="parameter" style="color:#3A95FF">filtername</span> to the list of filters   attached to <span class="parameter" style="color:#3A95FF">stream</span>.    </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-filter-append-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The target stream.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filtername</span></dt>     <dd>      <p class="para">       The filter name.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">read_write</span></dt>     <dd>      <p class="para">       By default, <span class="function"><strong>stream_filter_append()</strong></span> will       attach the filter to the <span class="literal">read filter chain</span>       if the file was opened for reading (i.e. File Mode:       <span class="literal">r</span>, and/or <span class="literal">+</span>).  The filter       will also be attached to the <span class="literal">write filter chain</span>       if the file was opened for writing (i.e. File Mode:       <span class="literal">w</span>, <span class="literal">a</span>, and/or <span class="literal">+</span>).       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-read">STREAM_FILTER_READ</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-write">STREAM_FILTER_WRITE</a></span></strong>, and/or       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-all">STREAM_FILTER_ALL</a></span></strong> can also be passed to the       <span class="parameter" style="color:#3A95FF">read_write</span> parameter to override this behavior.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">params</span></dt>     <dd>      <p class="para">       This filter will be added with the specified        <span class="parameter" style="color:#3A95FF">params</span> to the <em>end</em> of       the list and will therefore be called last during stream operations.       To add a filter to the beginning of the list, use       <span class="function">{@link stream_filter_prepend()}</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-filter-append-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a resource on success or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure. The resource can be   used to refer to this filter instance during a call to   <span class="function">{@link stream_filter_remove()}</span>.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned if <span class="parameter" style="color:#3A95FF">stream</span> is not a resource or   if <span class="parameter" style="color:#3A95FF">filtername</span> cannot be located.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-filter-append-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4025">    <p><strong>示例 #1 Controlling where filters are applied</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Open a test file for reading and writing <br></span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'w+'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Apply the ROT13 filter to the<br> * write filter chain, but not the<br> * read filter chain <br></span><span style="color: #9876AA">stream_filter_append</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"string.rot13"</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_FILTER_WRITE</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Write a simple string to the file<br> * it will be ROT13 transformed on the<br> * way out <br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"This is a test\n"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Back up to the beginning of the file <br></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Read the contents of the file back out.<br> * Had the filter been applied to the<br> * read filter chain as well, we would see<br> * the text ROT13ed back to its original state <br></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Expected Output<br>   ---------------<br><br>Guvf vf n grfg<br><br> <br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-filter-append-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>When using custom (user) filters</strong><br>   <span class="simpara">    <span class="function">{@link stream_filter_register()}</span> must be called first    in order to register the desired user filter to <span class="parameter" style="color:#3A95FF">filtername</span>.   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    Stream data is read from resources (both local and remote) in chunks,    with any unconsumed data kept in internal buffers.  When a new    filter is appended to a stream, data in the internal buffers is processed through    the new filter at that time.  This differs from the behavior of    <span class="function">{@link stream_filter_prepend()}</span>.   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    When a filter is added for read and write, two instances of the filter    are created. <span class="function"><strong>stream_filter_append()</strong></span> must be called twice     with <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-read">STREAM_FILTER_READ</a></span></strong> and     <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-filter-write">STREAM_FILTER_WRITE</a></span></strong> to get both filter resources.   </span>  </p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-filter-append-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>   <li><span class="function">{@link stream_filter_prepend()} - Attach a filter to a stream</span></li>   <li><span class="function">{@link stream_get_filters()} - 获取已注册的数据流过滤器列表</span></li>  </ul> </div></div>
 * 
 * Attach a filter to a stream
 * @link https://php.net/manual/zh/function.stream-filter-append.php
 * @param resource $stream <p>
 * The target stream.
 * </p>
 * @param string $filter_name <p>
 * The filter name.
 * </p>
 * @param int $mode <p>
 * By default, stream_filter_append will
 * attach the filter to the read filter chain
 * if the file was opened for reading (i.e. File Mode:
 * r, and/or +). The filter
 * will also be attached to the write filter chain
 * if the file was opened for writing (i.e. File Mode:
 * w, a, and/or +).
 * STREAM_FILTER_READ,
 * STREAM_FILTER_WRITE, and/or
 * STREAM_FILTER_ALL can also be passed to the
 * read_write parameter to override this behavior.
 * </p>
 * @param mixed $params [optional] <p>
 * This filter will be added with the specified
 * params to the end of
 * the list and will therefore be called last during stream operations.
 * To add a filter to the beginning of the list, use
 * stream_filter_prepend.
 * </p>
 * @return resource|false a resource which can be used to refer to this filter
 * instance during a call to stream_filter_remove.
 */
function stream_filter_append($stream, string $filter_name, int $mode = 0, mixed $params) {}

/**
 * <div id="function.stream-filter-remove" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_filter_remove</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_filter_remove</span> — <span class="dc-title">从资源流里移除某个过滤器</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-filter-remove-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_filter_remove</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream_filter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   移除之前通过 <span class="function">{@link stream_filter_prepend()}</span> 或者 <span class="function">{@link stream_filter_append()}</span> 添加到资源流里面的过滤器。   在移除之前，残留在过滤器内部缓冲区里的所有数据刷新到下一个过滤器。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-filter-remove-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream_filter</span></dt>     <dd>      <p class="para">       需要被移除的资源流过滤器。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-filter-remove-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-filter-remove-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4028">    <p><strong>示例 #1 动态地重新过滤一个资源流</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 打开测试文件进行读写 <br></span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"rw"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$rot13_filter </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_filter_append</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"string.rot13"</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_FILTER_WRITE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"This is "</span><span style="color: #007700">);<br></span><span style="color: #9876AA">stream_filter_remove</span><span style="color: #007700">(</span><span style="color: #9876AA">\$rot13_filter</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"a test\n"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Guvf&nbsp;vf&nbsp;a&nbsp;test</blockquote></div>    </div>   </div>      </div> <div class="refsect1 seealso" id="refsect1-function.stream-filter-remove-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_filter_register()} - Register a user defined stream filter</span></li>    <li><span class="function">{@link stream_filter_append()} - Attach a filter to a stream</span></li>    <li><span class="function">{@link stream_filter_prepend()} - Attach a filter to a stream</span></li>   </ul>   </div></div>
 * 
 * Remove a filter from a stream
 * @link https://php.net/manual/zh/function.stream-filter-remove.php
 * @param resource $stream_filter <p>
 * The stream filter to be removed.
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_filter_remove($stream_filter): bool {}

/**
 * <div id="function.stream-socket-client" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_client</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_client</span> — <span class="dc-title">Open Internet or Unix domain socket connection</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-socket-client-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_client</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$address</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error_code</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error_message</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timeout</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-client-connect">STREAM_CLIENT_CONNECT</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></span> <span class="parameter" style="color:#3A95FF">\$context</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Initiates a stream or datagram connection to the destination specified   by <span class="parameter" style="color:#3A95FF">address</span>.  The type of socket created   is determined by the transport specified using standard URL formatting:   <span class="literal">transport://target</span>.  For Internet Domain sockets   (AF_INET) such as TCP and UDP, the <span class="literal">target</span> portion   of the <span class="parameter" style="color:#3A95FF">address</span> parameter should consist of   a hostname or IP address followed by a colon and a port number.  For Unix   domain sockets, the <span class="literal">target</span> portion should point   to the socket file on the filesystem.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    The stream will by default be opened in blocking mode.  You can    switch it to non-blocking mode by using    <span class="function">{@link stream_set_blocking()}</span>.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-client-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">address</span></dt>     <dd>      <p class="para">       Address to the socket to connect to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_code</span></dt>     <dd>      <p class="para">       Will be set to the system level error number if connection fails.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_message</span></dt>     <dd>      <p class="para">       Will be set to the system level error message if the connection fails.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timeout</span></dt>     <dd>      <p class="para">       Number of seconds until the <span class="literal">connect()</span> system call       should timeout. By default, <a href="https://php.net/manual/zh/filesystem.configuration.php#ini.default-socket-timeout" class="link">default_socket_timeout</a>       is used.       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <span class="simpara">         This parameter only applies when not making asynchronous         connection attempts.        </span>       </p></blockquote>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         To set a timeout for reading/writing data over the socket, use the         <span class="function">{@link stream_set_timeout()}</span>, as the         <span class="parameter" style="color:#3A95FF">timeout</span> only applies while making connecting         the socket.        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Bitmask field which may be set to any combination of connection flags.       Currently the select of connection flags is limited to       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-client-connect">STREAM_CLIENT_CONNECT</a></span></strong> (default),       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-client-async-connect">STREAM_CLIENT_ASYNC_CONNECT</a></span></strong> and       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-client-persistent">STREAM_CLIENT_PERSISTENT</a></span></strong>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       A valid context resource created with <span class="function">{@link stream_context_create()}</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-client-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   On success a stream resource is returned which may   be used together with the other file functions (such as   <span class="function">{@link fgets()}</span>, <span class="function">{@link fgetss()}</span>,   <span class="function">{@link fwrite()}</span>, <span class="function">{@link fclose()}</span>, and   <span class="function">{@link feof()}</span>), <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-function.stream-socket-client-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   On failure the <span class="parameter" style="color:#3A95FF">error_code</span> and   <span class="parameter" style="color:#3A95FF">error_message</span> arguments will be populated with the actual   system level error that occurred in the system-level   <span class="literal">connect()</span> call. If the value returned in   <span class="parameter" style="color:#3A95FF">error_code</span> is <span class="literal">0</span> and the   function returned <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, it is an indication that the error   occurred before the <span class="literal">connect()</span> call. This is   most likely due to a problem initializing the socket. Note that   the <span class="parameter" style="color:#3A95FF">error_code</span> and   <span class="parameter" style="color:#3A95FF">error_message</span> arguments will always be passed by   reference.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-socket-client-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">timeout</span> and <span class="parameter" style="color:#3A95FF">context</span> are now nullable.      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.stream-socket-client-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="stream-socket-client.example.basic">    <p><strong>示例 #1 <span class="function"><strong>stream_socket_client()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://www.example.com:80"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$errstr</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">\$errno</span><span style="color: #DD0000">)&lt;br /&gt;\n"</span><span style="color: #007700">;<br>} else {<br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: /\r\n\r\n"</span><span style="color: #007700">);<br>    while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">)) {<br>        echo </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br>    }<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="stream-socket-client.example.daytime">    <p><strong>示例 #2 Using UDP connection</strong></p>    <div class="example-contents"><p>     Retrieving the day and time from the UDP service "daytime" (port 13)     on localhost.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://127.0.0.1:13"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errstr</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"ERROR: </span><span style="color: #9876AA">\$errno</span><span style="color: #DD0000"> - </span><span style="color: #9876AA">\$errstr</span><span style="color: #DD0000">&lt;br /&gt;\n"</span><span style="color: #007700">;<br>} else {<br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br>    echo </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">26</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-socket-client-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">     UDP sockets will sometimes appear to have opened without an error,     even if the remote host is unreachable.  The error will only     become apparent when you read or write data to/from the socket.     The reason for this is because UDP is a "connectionless" protocol,     which means that the operating system does not try to establish     a link for the socket until it actually needs to send or receive data.   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">当指定数值型的 IPv6地址（例如 <span class="literal">fe80::1</span>）时必须用方括号将 IP 围起来——例如，<span class="literal">tcp://[fe80::1]:80</span>。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Depending on the environment, the Unix domain or the optional    connect timeout may not be available.  A list of available    transports can be retrieved using <span class="function">{@link stream_get_transports()}</span>.    See <a href="https://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器列表</a> for a list of built in transports.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-client-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_socket_server()} - 创建 Internet 或 Unix 域服务器套接字</span></li>    <li><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>    <li><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    <li><span class="function">{@link stream_select()} - Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by seconds and microseconds</span></li>    <li><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    <li><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>    <li><a href="https://php.net/manual/zh/ref.curl.php" class="xref">cURL 函数</a></li>   </ul>   </div></div>
 * 
 * Open Internet or Unix domain socket connection
 * @link https://php.net/manual/zh/function.stream-socket-client.php
 * @param string $address <p>
 * Address to the socket to connect to.
 * </p>
 * @param int &$error_code [optional] <p>
 * Will be set to the system level error number if connection fails.
 * </p>
 * @param string &$error_message [optional] <p>
 * Will be set to the system level error message if the connection fails.
 * </p>
 * @param float|null $timeout [optional] <p>
 * Number of seconds until the connect() system call
 * should timeout.
 * This parameter only applies when not making asynchronous
 * connection attempts.
 * <p>
 * To set a timeout for reading/writing data over the socket, use the
 * stream_set_timeout, as the
 * timeout only applies while making connecting
 * the socket.
 * </p>
 * </p>
 * @param int $flags [optional] <p>
 * Bitmask field which may be set to any combination of connection flags.
 * Currently the select of connection flags is limited to
 * STREAM_CLIENT_CONNECT (default),
 * STREAM_CLIENT_ASYNC_CONNECT and
 * STREAM_CLIENT_PERSISTENT.
 * </p>
 * @param resource $context [optional] <p>
 * A valid context resource created with stream_context_create.
 * </p>
 * @return resource|false On success a stream resource is returned which may
 * be used together with the other file functions (such as
 * fgets, fgetss,
 * fwrite, fclose, and
 * feof), false on failure.
 */
function stream_socket_client(string $address, &$error_code, &$error_message, ?float $timeout, int $flags = STREAM_CLIENT_CONNECT, $context) {}

/**
 * <div id="function.stream-socket-server" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_server</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_server</span> — <span class="dc-title">创建 Internet 或 Unix 域服务器套接字</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-socket-server-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_server</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$address</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error_code</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error_message</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></span> <span class="parameter" style="color:#3A95FF">\$context</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   在指定 <span class="parameter" style="color:#3A95FF">address</span> 上创建 stream 或者数据包套接字（datagram socket）。  </p>  <p class="para">   此函数仅创建套接字，并使用 <span class="function">{@link stream_socket_accept()}</span> 开始接受连接。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-server-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">address</span></dt>     <dd>      <p class="para">       传输器决定创建的套接字类型，其传输器由标准 URL 格式（<span class="literal">transport://target</span>）指定。      </p>      <p class="para">       对于 Internet 域套接字（<strong><span><a href="https://php.net/manual/zh/sockets.constants.php#constant.af-inet">AF_INET</a></span></strong>），比如 TCP 和 UDP，       <span class="parameter" style="color:#3A95FF">remote_socket</span> 参数的 <span class="literal">target</span>       部分应由主机名或者 IP 地址，随后跟着冒号和端口号组成。       对于 Unix 域套接字， <span class="literal">target</span> 部分指向文件系统中的套接字文件。      </p>      <p class="para">       环境的不同，可能会导致 Unix 域套接字无法使用。可以使用 <span class="function">{@link stream_get_transports()}</span>       检索可以使用的传输器列表。查看<a href="https://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器列表</a>获取内置传输器列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_code</span></dt>     <dd>      <p class="para">       如果指定了可选的 <span class="parameter" style="color:#3A95FF">error_code</span> 和 <span class="parameter" style="color:#3A95FF">error_message</span>       参数，它们将被设置为指出在系统级别进行 <span class="literal">socket()</span>、<span class="literal">bind()</span>、       <span class="literal">listen()</span> 调用时发生的真实系统级别错误。如果 <span class="parameter" style="color:#3A95FF">error_code</span>       返回的值为 <span class="literal">0</span> 且函数返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，则表明错误发生在 <span class="literal">bind()</span>       调用之前。请注意 <span class="parameter" style="color:#3A95FF">error_code</span> 和 <span class="parameter" style="color:#3A95FF">error_message</span>       始终通过引用传递。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_message</span></dt>     <dd>      <p class="para">       参阅 <span class="parameter" style="color:#3A95FF">error_code</span> 描述。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       位掩码字段，可以设置为套接字创建 flag 的任意组合。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        对于 UDP 套接字，你必须使用 <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-server-bind">STREAM_SERVER_BIND</a></span></strong> 作为        <span class="parameter" style="color:#3A95FF">flags</span> 参数。       </p>      </blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-server-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回已创建的 stream，错误时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-socket-server-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">context</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-socket-server-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4050">    <p><strong>示例 #1 使用 TCP 服务器套接字</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$socket </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://0.0.0.0:8000"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errstr</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">) {<br>  echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$errstr</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">\$errno</span><span style="color: #DD0000">)&lt;br /&gt;\n"</span><span style="color: #007700">;<br>} else {<br>  while (</span><span style="color: #9876AA">\$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">'The local time is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'n/j/Y g:i a'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$conn</span><span style="color: #007700">);<br>  }<br>  </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   下面的示例展示了如何充当时间服务器，可以响应时间查询，正如 <span class="function">{@link stream_socket_client()}</span> 上的示例。   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">     大多数系统在低于 1024 的端口号上创建服务器套接字时需要 root 访问权限。    </span>   </p></blockquote>   <div class="example" id="example-4051">    <p><strong>示例 #2 使用 UDP 服务器套接字</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$socket </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://127.0.0.1:1113"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_SERVER_BIND</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">) {<br>    die(</span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$errstr</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">\$errno</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br>}<br><br>do {<br>    </span><span style="color: #9876AA">\$pkt </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">\$peer</span><span style="color: #007700">);<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$peer</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">stream_socket_sendto</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"D M j H:i:s Y\r\n"</span><span style="color: #007700">), </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">\$peer</span><span style="color: #007700">);<br>} while (</span><span style="color: #9876AA">\$pkt </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-socket-server-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">当指定数值型的 IPv6地址（例如 <span class="literal">fe80::1</span>）时必须用方括号将 IP 围起来——例如，<span class="literal">tcp://[fe80::1]:80</span>。</span></p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-server-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>   <li><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>   <li><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>   <li><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>   <li><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>   <li><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>   <li><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>   <li><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>   <li><a href="https://php.net/manual/zh/ref.curl.php" class="link">Curl 扩展</a></li>  </ul> </div></div>
 * 
 * Create an Internet or Unix domain server socket
 * @link https://php.net/manual/zh/function.stream-socket-server.php
 * @param string $address <p>
 * The type of socket created is determined by the transport specified
 * using standard URL formatting: transport://target.
 * </p>
 * <p>
 * For Internet Domain sockets (AF_INET) such as TCP and UDP, the
 * target portion of the
 * remote_socket parameter should consist of a
 * hostname or IP address followed by a colon and a port number. For
 * Unix domain sockets, the target portion should
 * point to the socket file on the filesystem.
 * </p>
 * <p>
 * Depending on the environment, Unix domain sockets may not be available.
 * A list of available transports can be retrieved using
 * stream_get_transports. See
 * for a list of built-in transports.
 * </p>
 * @param int &$error_code [optional] <p>
 * If the optional errno and errstr
 * arguments are present they will be set to indicate the actual system
 * level error that occurred in the system-level socket(),
 * bind(), and listen() calls. If
 * the value returned in errno is
 * 0 and the function returned false, it is an
 * indication that the error occurred before the bind()
 * call. This is most likely due to a problem initializing the socket.
 * Note that the errno and
 * errstr arguments will always be passed by reference.
 * </p>
 * @param string &$error_message [optional] <p>
 * See errno description.
 * </p>
 * @param int $flags [optional] <p>
 * A bitmask field which may be set to any combination of socket creation
 * flags.
 * </p>
 * <p>
 * For UDP sockets, you must use STREAM_SERVER_BIND as
 * the flags parameter.
 * </p>
 * @param resource $context [optional] <p>
 * </p>
 * @return resource|false the created stream, or false on error.
 */
function stream_socket_server(string $address, &$error_code, &$error_message, int $flags = STREAM_SERVER_BIND|STREAM_SERVER_LISTEN, $context) {}

/**
 * <div id="function.stream-socket-accept" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_accept</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_accept</span> — <span class="dc-title">接受由 <span class="function">{@link stream_socket_server()}</span> 创建的套接字连接</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-socket-accept-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_accept</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$socket</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timeout</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$peer_name</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   接受由 <span class="function">{@link stream_socket_server()}</span> 创建的套接字连接。  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.stream-socket-accept-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">socket</span></dt>     <dd>      <p class="para">       需要接受的服务器创建的套接字连接。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timeout</span></dt>     <dd>      <p class="para">       覆盖默认的套接字接受的超时时限。输入的时间需以秒为单位。默认情况下，使用       <a href="https://php.net/manual/zh/filesystem.configuration.php#ini.default-socket-timeout" class="link">default_socket_timeout</a>       作为超时时限。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">peer_name</span></dt>     <dd>      <p class="para">       如果已选的传输器存在且有效的已连接客户端，则将该值设置为已连接客户端名称（地址）。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        也可以之后通过 <span class="function">{@link stream_socket_get_name()}</span> 来确定。       </p>      </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-accept-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回接受套接之后的资源流  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-socket-accept-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">timeout</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 notes" id="refsect1-function.stream-socket-accept-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    该函数不能被用于 UDP 套接字。可以使用 <span class="function">{@link stream_socket_recvfrom()}</span> 和    <span class="function">{@link stream_socket_sendto()}</span> 来取而代之。   </p> </div> </div>  <div class="refsect1 seealso" id="refsect1-function.stream-socket-accept-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_socket_server()} - 创建 Internet 或 Unix 域服务器套接字</span></li>    <li><span class="function">{@link stream_socket_get_name()} - 获取本地或者远程的套接字名称</span></li>    <li><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>    <li><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    <li><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    <li><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>    <li><a href="https://php.net/manual/zh/ref.curl.php" class="xref">cURL 函数</a></li>   </ul>   </div></div>
 * 
 * Accept a connection on a socket created by {@see stream_socket_server}
 * @link https://php.net/manual/zh/function.stream-socket-accept.php
 * @param resource $socket
 * @param float|null $timeout [optional] <p>
 * Override the default socket accept timeout. Time should be given in
 * seconds.
 * </p>
 * @param string &$peer_name [optional] <p>
 * Will be set to the name (address) of the client which connected, if
 * included and available from the selected transport.
 * </p>
 * <p>
 * Can also be determined later using
 * stream_socket_get_name.
 * </p>
 * @return resource|false Returns a stream to the accepted socket connection or FALSE on failure.
 */
function stream_socket_accept($socket, ?float $timeout, &$peer_name) {}

/**
 * <div id="function.stream-socket-get-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_get_name</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_get_name</span> — <span class="dc-title">获取本地或者远程的套接字名称</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-socket-get-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_get_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$socket</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$remote</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回给定的本地或者远程套接字连接的名称。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-get-name-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">socket</span></dt>     <dd>      <p class="para">       需要获取其名称的套接字连接。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">remote</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> ，那么将返回 <span class="literal">remote</span> 套接字连接名称；如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 则返回 <span class="literal">local</span> 套接字连接名称。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-get-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   套接字连接的名称， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-get-name-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link stream_socket_accept()} - 接受由 stream_socket_server 创建的套接字连接</span></li>   </ul>   </div></div>
 * 
 * Retrieve the name of the local or remote sockets
 * @link https://php.net/manual/zh/function.stream-socket-get-name.php
 * @param resource $socket <p>
 * The socket to get the name of.
 * </p>
 * @param bool $remote <p>
 * If set to true the remote socket name will be returned, if set
 * to false the local socket name will be returned.
 * </p>
 * @return string|false The name of the socket or false on error.
 */
function stream_socket_get_name($socket, bool $remote): string|false {}

/**
 * <div id="function.stream-socket-recvfrom" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_recvfrom</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_recvfrom</span> — <span class="dc-title">Receives data from a socket, connected or not</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-socket-recvfrom-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_recvfrom</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$socket</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$address</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>stream_socket_recvfrom()</strong></span> accepts   data from a remote socket up to <span class="parameter" style="color:#3A95FF">length</span> bytes.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-recvfrom-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">socket</span></dt>     <dd>      <p class="para">       The remote socket.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       The number of bytes to receive from the <span class="parameter" style="color:#3A95FF">socket</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       The value of <span class="parameter" style="color:#3A95FF">flags</span> can be any combination       of the following:       </p><table class="doctable table">        <caption><strong>Possible values for <span class="parameter" style="color:#3A95FF">flags</span></strong></caption>                 <tbody class="tbody">          <tr>           <td><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-oob">STREAM_OOB</a></span></strong></td>           <td>            Process OOB (<span class="literal">out-of-band</span>) data.           </td>          </tr>          <tr>           <td><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-peek">STREAM_PEEK</a></span></strong></td>           <td>            Retrieve data from the socket, but do not consume the buffer.            Subsequent calls to <span class="function">{@link fread()}</span> or            <span class="function"><strong>stream_socket_recvfrom()</strong></span> will see            the same data.           </td>          </tr>         </tbody>               </table>           </dd>             <dt><span class="parameter" style="color:#3A95FF">address</span></dt>     <dd>      <p class="para">       If <span class="parameter" style="color:#3A95FF">address</span> is provided it will be populated with       the address of the remote socket.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-recvfrom-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the read data, as a string, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-socket-recvfrom-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4048">    <p><strong>示例 #1 <span class="function"><strong>stream_socket_recvfrom()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Open a server socket to port 1234 on localhost <br></span><span style="color: #9876AA">\$server </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1234'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Accept a connection <br></span><span style="color: #9876AA">\$socket </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_accept</span><span style="color: #007700">(</span><span style="color: #9876AA">\$server</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Grab a packet (1500 is a typical MTU size) of OOB data <br></span><span style="color: #007700">echo </span><span style="color: #DD0000">"Received Out-Of-Band: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #9876AA">1500</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_OOB</span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Take a peek at the normal in-band data, but don't consume it. <br></span><span style="color: #007700">echo </span><span style="color: #DD0000">"Data: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #9876AA">1500</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_PEEK</span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Get the exact same packet again, but remove it from the buffer this time. <br></span><span style="color: #007700">echo </span><span style="color: #DD0000">"Data: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">stream_socket_recvfrom</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #9876AA">1500</span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Close it up <br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$server</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-socket-recvfrom-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    If a message received is longer than the <span class="parameter" style="color:#3A95FF">length</span>    parameter, excess bytes may be discarded depending on the type of socket    the message is received from (such as UDP).   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Calls to <span class="function"><strong>stream_socket_recvfrom()</strong></span> on socket-based    streams, after calls to buffer-based stream functions (like    <span class="function">{@link fread()}</span> or <span class="function">{@link stream_get_line()}</span>) read    data directly from the socket and bypass the stream buffer.    </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-recvfrom-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_socket_sendto()} - Sends a message to a socket, whether it is connected or not</span></li>   <li><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>   <li><span class="function">{@link stream_socket_server()} - 创建 Internet 或 Unix 域服务器套接字</span></li>  </ul> </div></div>
 * 
 * Receives data from a socket, connected or not
 * @link https://php.net/manual/zh/function.stream-socket-recvfrom.php
 * @param resource $socket <p>
 * The remote socket.
 * </p>
 * @param int $length <p>
 * The number of bytes to receive from the socket.
 * </p>
 * @param int $flags <p>
 * The value of flags can be any combination
 * of the following:
 * <table>
 * Possible values for flags
 * <tr valign="top">
 * <td>STREAM_OOB</td>
 * <td>
 * Process OOB (out-of-band) data.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>STREAM_PEEK</td>
 * <td>
 * Retrieve data from the socket, but do not consume the buffer.
 * Subsequent calls to fread or
 * stream_socket_recvfrom will see
 * the same data.
 * </td>
 * </tr>
 * </table>
 * </p>
 * @param string &$address [optional] <p>
 * If address is provided it will be populated with
 * the address of the remote socket.
 * </p>
 * @return string|false the read data, as a string, or false on error
 */
function stream_socket_recvfrom($socket, int $length, int $flags = 0, &$address): string|false {}

/**
 * <div id="function.stream-socket-sendto" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_sendto</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_sendto</span> — <span class="dc-title">Sends a message to a socket, whether it is connected or not</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-socket-sendto-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_sendto</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$socket</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$address</span><span class="initializer"> = ""</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Sends the specified <span class="parameter" style="color:#3A95FF">data</span> through the   <span class="parameter" style="color:#3A95FF">socket</span>.    </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-sendto-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">socket</span></dt>     <dd>      <p class="para">       The socket to send <span class="parameter" style="color:#3A95FF">data</span> to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The data to be sent.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       The value of <span class="parameter" style="color:#3A95FF">flags</span> can be any combination       of the following:       </p><table class="doctable table">        <caption><strong>possible values for <span class="parameter" style="color:#3A95FF">flags</span></strong></caption>                 <tbody class="tbody">          <tr>           <td><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-oob">STREAM_OOB</a></span></strong></td>           <td>            Process OOB (out-of-band) data.           </td>          </tr>         </tbody>               </table>           </dd>             <dt><span class="parameter" style="color:#3A95FF">address</span></dt>     <dd>      <p class="para">       The address specified when the socket stream was created will be used       unless an alternate address is specified in <span class="parameter" style="color:#3A95FF">address</span>.      </p>      <p class="para">       If specified, it must be in dotted quad (or [ipv6]) format.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-sendto-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a result code, as an integer, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-socket-sendto-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4049">    <p><strong>示例 #1 <span class="function"><strong>stream_socket_sendto()</strong></span> Example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Open a socket to port 1234 on localhost <br></span><span style="color: #9876AA">\$socket </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1234'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Send ordinary data via ordinary channels. <br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #DD0000">"Normal data transmit."</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Send more data out of band. <br></span><span style="color: #9876AA">stream_socket_sendto</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">, </span><span style="color: #DD0000">"Out of Band data."</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_OOB</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Close it up <br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$socket</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-sendto-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_socket_recvfrom()} - Receives data from a socket, connected or not</span></li>   <li><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>   <li><span class="function">{@link stream_socket_server()} - 创建 Internet 或 Unix 域服务器套接字</span></li>  </ul> </div></div>
 * 
 * Sends a message to a socket, whether it is connected or not
 * @link https://php.net/manual/zh/function.stream-socket-sendto.php
 * @param resource $socket <p>
 * The socket to send data to.
 * </p>
 * @param string $data <p>
 * The data to be sent.
 * </p>
 * @param int $flags <p>
 * The value of flags can be any combination
 * of the following:
 * <table>
 * possible values for flags
 * <tr valign="top">
 * <td>STREAM_OOB</td>
 * <td>
 * Process OOB (out-of-band) data.
 * </td>
 * </tr>
 * </table>
 * </p>
 * @param string $address <p>
 * The address specified when the socket stream was created will be used
 * unless an alternate address is specified in address.
 * </p>
 * <p>
 * If specified, it must be in dotted quad (or [ipv6]) format.
 * </p>
 * @return int|false a result code, as an integer.
 */
function stream_socket_sendto($socket, string $data, int $flags = 0, string $address = ''): int|false {}

/**
 * <div id="function.stream-socket-enable-crypto" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_enable_crypto</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_enable_crypto</span> — <span class="dc-title">Turns encryption on/off on an already connected socket</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-socket-enable-crypto-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_enable_crypto</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$enable</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$crypto_method</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></span> <span class="parameter" style="color:#3A95FF">\$session_stream</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="simpara">   Enable or disable encryption on the stream.  </p>  <p class="simpara">   Once the crypto settings are established, cryptography can be turned   on and off dynamically by passing <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> in the   <span class="parameter" style="color:#3A95FF">enable</span> parameter.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-enable-crypto-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The stream resource.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">enable</span></dt>     <dd>      <p class="para">       Enable/disable cryptography on the stream.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">crypto_method</span></dt>     <dd>      <p class="para">       Setup encryption on the stream.       Valid methods are       </p><ul class="itemizedlist">        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv2-client">STREAM_CRYPTO_METHOD_SSLv2_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv3-client">STREAM_CRYPTO_METHOD_SSLv3_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv23-client">STREAM_CRYPTO_METHOD_SSLv23_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-any-client">STREAM_CRYPTO_METHOD_ANY_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tls-client">STREAM_CRYPTO_METHOD_TLS_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-0-client">STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-1-client">STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-2-client">STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-3-client">STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT</a></span></strong> (as of PHP 7.4.0)</span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv2-server">STREAM_CRYPTO_METHOD_SSLv2_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv3-server">STREAM_CRYPTO_METHOD_SSLv3_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-sslv23-server">STREAM_CRYPTO_METHOD_SSLv23_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-any-server">STREAM_CRYPTO_METHOD_ANY_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tls-server">STREAM_CRYPTO_METHOD_TLS_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-0-server">STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-1-server">STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-2-server">STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</a></span></strong></span></li>        <li class="listitem"><span class="simpara"><strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-crypto-method-tlsv1-3-server">STREAM_CRYPTO_METHOD_TLSv1_3_SERVER</a></span></strong> (as of PHP 7.4.0)</span></li>       </ul>            <p class="para">       If omitted, the <span class="literal">crypto_method</span> context option on       the stream's SSL context will be used instead.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">session_stream</span></dt>     <dd>      <p class="para">       Seed the stream with settings from <span class="parameter" style="color:#3A95FF">session_stream</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-enable-crypto-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if negotiation has failed or   <span class="literal">0</span> if there isn't enough data and you should try again   (only for non-blocking sockets).  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-socket-enable-crypto-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">session_stream</span> is now nullable.      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.stream-socket-enable-crypto-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="stream-socket-enable-crypto.example.basic">    <p><strong>示例 #1 <span class="function"><strong>stream_socket_enable_crypto()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"tcp://myproto.example.com:31337"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">\$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">) {<br>    die(</span><span style="color: #DD0000">"Unable to connect: </span><span style="color: #9876AA">\$errstr</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">\$errno</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// Turn on encryption for login phase <br></span><span style="color: #9876AA">stream_socket_enable_crypto</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_CRYPTO_METHOD_SSLv23_CLIENT</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"USER god\r\n"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"PASS secret\r\n"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Turn off encryption for the rest <br></span><span style="color: #9876AA">stream_socket_enable_crypto</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br><br>while (</span><span style="color: #9876AA">\$motd </span><span style="color: #007700">= </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #9876AA">\$motd</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-function.stream-socket-enable-crypto-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/ref.openssl.php" class="xref">OpenSSL 函数</a></li>    <li><a href="https://php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器列表</a></li>   </ul>   </div></div>
 * 
 * Turns encryption on/off on an already connected socket
 * @link https://php.net/manual/zh/function.stream-socket-enable-crypto.php
 * @param resource $stream <p>
 * The stream resource.
 * </p>
 * @param bool $enable <p>
 * Enable/disable cryptography on the stream.
 * </p>
 * @param int|null $crypto_method [optional] <p>
 * Setup encryption on the stream.
 * Valid methods are:<br>
 * STREAM_CRYPTO_METHOD_SSLv2_CLIENT</p>
 * @param resource $session_stream [optional] <p>
 * Seed the stream with settings from session_stream.
 * </p>
 * @return bool|int true on success, false if negotiation has failed or
 * 0 if there isn't enough data and you should try again
 * (only for non-blocking sockets).
 */
function stream_socket_enable_crypto($stream, bool $enable, ?int $crypto_method, $session_stream): int|bool {}

/**
 * <div id="function.stream-socket-shutdown" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_shutdown</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.1, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_shutdown</span> — <span class="dc-title">Shutdown a full-duplex connection</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-socket-shutdown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_shutdown</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$mode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Shutdowns (partially or not) a full-duplex connection.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    The associated buffer, or buffers, may or may not be emptied.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-shutdown-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       An open stream (opened with <span class="function">{@link stream_socket_client()}</span>,       for example)      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       One of the following constants: <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-shut-rd">STREAM_SHUT_RD</a></span></strong>       (disable further receptions), <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-shut-wr">STREAM_SHUT_WR</a></span></strong>       (disable further transmissions) or       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-shut-rdwr">STREAM_SHUT_RDWR</a></span></strong> (disable further receptions and       transmissions).      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-shutdown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-socket-shutdown-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4052">    <p><strong>示例 #1 A <span class="function"><strong>stream_socket_shutdown()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$server </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_server</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1337'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$client </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">'tcp://127.0.0.1:1337'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fputs</span><span style="color: #007700">(</span><span style="color: #9876AA">\$client</span><span style="color: #007700">, </span><span style="color: #DD0000">"hello"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">stream_socket_shutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">\$client</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_SHUT_WR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fputs</span><span style="color: #007700">(</span><span style="color: #9876AA">\$client</span><span style="color: #007700">, </span><span style="color: #DD0000">"hello"</span><span style="color: #007700">)); </span><span style="color: #FF8000">// doesn't work now<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(5)<br><br>Notice:&nbsp;fputs():&nbsp;send&nbsp;of&nbsp;5&nbsp;bytes&nbsp;failed&nbsp;with&nbsp;errno=32&nbsp;Broken&nbsp;pipe&nbsp;in&nbsp;test.php&nbsp;on&nbsp;line&nbsp;9<br>int(0)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-socket-shutdown-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>   </ul>   </div></div>
 * 
 * Shutdown a full-duplex connection
 * @link https://php.net/manual/zh/function.stream-socket-shutdown.php
 * @param resource $stream <p>
 * An open stream (opened with stream_socket_client,
 * for example)
 * </p>
 * @param int $mode <p>
 * One of the following constants: STREAM_SHUT_RD
 * (disable further receptions), STREAM_SHUT_WR
 * (disable further transmissions) or
 * STREAM_SHUT_RDWR (disable further receptions and
 * transmissions).
 * </p>
 * @return bool true on success or false on failure.
 * @since 5.2.1
 */
function stream_socket_shutdown($stream, int $mode): bool {}

/**
 * <div id="function.stream-socket-pair" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_socket_pair</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_socket_pair</span> — <span class="dc-title">   创建一对完全一样的网络套接字连接流  </span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-socket-pair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_socket_pair</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$protocol</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>stream_socket_pair()</strong></span> 创建一对完全一样的网络套接字连接，这个函数通常会被用在进程间通信（Inter-Process Communication）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-socket-pair-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       使用的协议族： <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-pf-inet">STREAM_PF_INET</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-pf-inet6">STREAM_PF_INET6</a></span></strong> or       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-pf-unix">STREAM_PF_UNIX</a></span></strong>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       通信类型:       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-sock-dgram">STREAM_SOCK_DGRAM</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-sock-raw">STREAM_SOCK_RAW</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-sock-rdm">STREAM_SOCK_RDM</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-sock-seqpacket">STREAM_SOCK_SEQPACKET</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-sock-stream">STREAM_SOCK_STREAM</a></span></strong>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">protocol</span></dt>     <dd>      <p class="para">       使用的传输协议: <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-ipproto-icmp">STREAM_IPPROTO_ICMP</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-ipproto-ip">STREAM_IPPROTO_IP</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-ipproto-raw">STREAM_IPPROTO_RAW</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-ipproto-tcp">STREAM_IPPROTO_TCP</a></span></strong>、       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-ipproto-udp">STREAM_IPPROTO_UDP</a></span></strong>             </p>     </dd>       </dl>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    关于每个常量的更多细节，请查阅 <a href="https://php.net/manual/zh/stream.constants.php" class="link">Stream 常量列表</a>。   </span>  </p></blockquote> </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-socket-pair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时将返回一个包含了两个 socket 资源的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，错误时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-socket-pair-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4047">    <p><strong>示例 #1 <span class="function"><strong>stream_socket_pair()</strong></span> 例子</strong></p>    <div class="example-contents"><p>     这个例子展示了     <span class="function"><strong>stream_socket_pair()</strong></span> 进程间通信的基本用法。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$sockets </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_pair</span><span style="color: #007700">(</span><span style="color: #9876AA">STREAM_PF_UNIX</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_SOCK_STREAM</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_IPPROTO_IP</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$pid     </span><span style="color: #007700">= </span><span style="color: #9876AA">pcntl_fork</span><span style="color: #007700">();<br><br>if (</span><span style="color: #9876AA">\$pid </span><span style="color: #007700">== -</span><span style="color: #9876AA">1</span><span style="color: #007700">) {<br>     die(</span><span style="color: #DD0000">'could not fork'</span><span style="color: #007700">);<br><br>} else if (</span><span style="color: #9876AA">\$pid</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// 父进程 <br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br><br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #DD0000">"child PID: </span><span style="color: #9876AA">\$pid</span><span style="color: #DD0000">\n"</span><span style="color: #007700">);<br>    echo </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br><br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br><br>} else {<br>    </span><span style="color: #FF8000">// 子进程 <br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br><br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"message from child\n"</span><span style="color: #007700">);<br>    echo </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br><br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sockets</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">child&nbsp;PID:&nbsp;1378<br>message&nbsp;from&nbsp;child</blockquote></div>    </div>   </div>   </div></div>
 * 
 * Creates a pair of connected, indistinguishable socket streams
 * @link https://php.net/manual/zh/function.stream-socket-pair.php
 * @param int $domain <p>
 * The protocol family to be used: STREAM_PF_INET,
 * STREAM_PF_INET6 or
 * STREAM_PF_UNIX
 * </p>
 * @param int $type <p>
 * The type of communication to be used:
 * STREAM_SOCK_DGRAM,
 * STREAM_SOCK_RAW,
 * STREAM_SOCK_RDM,
 * STREAM_SOCK_SEQPACKET or
 * STREAM_SOCK_STREAM
 * </p>
 * @param int $protocol <p>
 * The protocol to be used: STREAM_IPPROTO_ICMP,
 * STREAM_IPPROTO_IP,
 * STREAM_IPPROTO_RAW,
 * STREAM_IPPROTO_TCP or
 * STREAM_IPPROTO_UDP
 * </p>
 * @return array|false an array with the two socket resources on success, or
 * false on failure.
 */
function stream_socket_pair(int $domain, int $type, int $protocol): array|false {}

/**
 * <div id="function.stream-copy-to-stream" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_copy_to_stream</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_copy_to_stream</span> — <span class="dc-title">Copies data from one stream to another</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-copy-to-stream-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_copy_to_stream</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$from</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$to</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Makes a copy of up to <span class="parameter" style="color:#3A95FF">length</span> bytes   of data from the current position (or from the   <span class="parameter" style="color:#3A95FF">offset</span> position, if specified) in   <span class="parameter" style="color:#3A95FF">from</span> to <span class="parameter" style="color:#3A95FF">to</span>. If   <span class="parameter" style="color:#3A95FF">length</span> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, all remaining content in   <span class="parameter" style="color:#3A95FF">from</span> will be copied.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-copy-to-stream-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">from</span></dt>     <dd>      <p class="para">       The source stream      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       The destination stream      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       Maximum bytes to copy. By default all bytes left are copied.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The offset where to start to copy data      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-copy-to-stream-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the total count of bytes copied, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-copy-to-stream-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">length</span> is now nullable.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-copy-to-stream-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4024">    <p><strong>示例 #1 A <span class="function"><strong>stream_copy_to_stream()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$src </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dest1 </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'first1k.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dest2 </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'remainder.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">stream_copy_to_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">\$src</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dest1</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">) . </span><span style="color: #DD0000">" bytes copied to first1k.txt\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">stream_copy_to_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">\$src</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dest2</span><span style="color: #007700">) . </span><span style="color: #DD0000">" bytes copied to remainder.txt\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-copy-to-stream-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link copy()} - 拷贝文件</span></li>   </ul>   </div></div>
 * 
 * Copies data from one stream to another
 * @link https://php.net/manual/zh/function.stream-copy-to-stream.php
 * @param resource $from <p>
 * The source stream
 * </p>
 * @param resource $to <p>
 * The destination stream
 * </p>
 * @param int|null $length [optional] <p>
 * Maximum bytes to copy
 * </p>
 * @param int $offset <p>
 * The offset where to start to copy data
 * </p>
 * @return int|false the total count of bytes copied, or false on failure.
 */
function stream_copy_to_stream($from, $to, ?int $length, int $offset = 0): int|false {}

/**
 * <div id="function.stream-get-contents" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_get_contents</h1>   <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_get_contents</span> — <span class="dc-title">读取资源流到一个字符串</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-get-contents-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_get_contents</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   与 <span class="function">{@link file_get_contents()}</span> 一样，但是    <span class="function"><strong>stream_get_contents()</strong></span> 是对一个已经打开的资源流进行操作，并将其内容写入一个字符串返回。   返回的内容取决于 <span class="parameter" style="color:#3A95FF">length</span> 字节长度和 <span class="parameter" style="color:#3A95FF">offset</span> 指定的起始位置。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-get-contents-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span> (<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>)</dt>     <dd>      <p class="para">       一个资源流（例如 <span class="function">{@link fopen()}</span> 操作之后返回的结果）      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span> (<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>)</dt>     <dd>      <p class="para">       需要读取的最大的字节数。默认为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>（读取全部的缓冲数据）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span> (<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>)</dt>     <dd>      <p class="para">       在读取数据之前先查找指定的偏移量。如果这个数字是负数，就不进行查找，直接从当前位置开始读取。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-get-contents-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个字符串  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.stream-get-contents-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">length</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.stream-get-contents-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4029">    <p><strong>示例 #1 <span class="function"><strong>stream_get_contents()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">if (</span><span style="color: #9876AA">\$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">)) {<br>    </span><span style="color: #FF8000">// 打印从开始的位置偏移 10 个字节后页面的所有内容<br>    </span><span style="color: #007700">echo </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream</span><span style="color: #007700">);<br>}<br><br><br>if (</span><span style="color: #9876AA">\$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.net'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">)) {<br>    </span><span style="color: #FF8000">// 打印前 5 个字节<br>    </span><span style="color: #007700">echo </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-get-contents-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    当指定一个非 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 的 <span class="parameter" style="color:#3A95FF">length</span> 值时，即使实际内容要短得多，该函数也会立即分配一个内部缓冲区，其大小为指定的长度。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-get-contents-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>   </ul>   </div></div>
 * 
 * Reads remainder of a stream into a string
 * @link https://php.net/manual/zh/function.stream-get-contents.php
 * @param resource $stream <p>
 * A stream resource (e.g. returned from fopen)
 * </p>
 * @param int|null $length <p>
 * The maximum bytes to read. Defaults to -1 (read all the remaining
 * buffer).
 * </p>
 * @param int $offset [optional] <p>
 * Seek to the specified offset before reading.
 * </p>
 * @return string|false a string or false on failure.
 */
function stream_get_contents($stream, ?int $length = null, int $offset = -1): string|false {}

/**
 * <div id="function.stream-supports-lock" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_supports_lock</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_supports_lock</span> — <span class="dc-title">Tells whether the stream supports locking</span></p> </div>  <div class="refsect1 description" id="refsect1-function.stream-supports-lock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_supports_lock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Tells whether the stream supports locking through    <span class="function">{@link flock()}</span>.  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.stream-supports-lock-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The stream to check.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-supports-lock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 seealso" id="refsect1-function.stream-supports-lock-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link flock()} - 可移植的协同文件锁定</span></li>   </ul>   </div></div>
 * 
 * Tells whether the stream supports locking.
 * @link https://php.net/manual/zh/function.stream-supports-lock.php
 * @param resource $stream <p>
 * The stream to check.
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_supports_lock($stream): bool {}

/**
 * <div id="function.fgetcsv" class="refentry"> <div class="refnamediv">  <h1 class="refname">fgetcsv</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fgetcsv</span> — <span class="dc-title">从文件指针中读入一行并解析 CSV 字段</span></p> </div> <div class="refsect1 description" id="refsect1-function.fgetcsv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fgetcsv</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$separator</span><span class="initializer"> = ","</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$enclosure</span><span class="initializer"> = "\""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$escape</span><span class="initializer"> = "\\"</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   和 <span class="function">{@link fgets()}</span> 类似，只除了   <span class="function"><strong>fgetcsv()</strong></span> 解析读入的行并找出 <span>CSV</span>   格式的字段然后返回一个包含这些字段的数组。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    此函数会考虑区域设置。例如，如果 <strong><span><a href="https://php.net/manual/zh/string.constants.php#constant.lc-ctype">LC_CTYPE</a></span></strong> 为    <span class="literal">en_US.UTF-8</span>，可能会错误的解析某些单字节编码的数据。   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.fgetcsv-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       一个由 <span class="function">{@link fopen()}</span>、<span class="function">{@link popen()}</span> 或       <span class="function">{@link fsockopen()}</span> 产生的有效文件指针。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       必须大于在 CVS 文件（允许尾随行尾字符）中找到的最长行（以字符为单位）。否则，该行将拆分为       <span class="parameter" style="color:#3A95FF">length</span> 字符的块，除非拆分发生在环绕字符内。      </p>      <p class="para">       忽略此参数（或者设为 0 或者在 PHP 8.0.0 及以后的版本中设为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>）行的最大长度将不受限制，速度稍慢。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">separator</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">separator</span> 参数，设置字段分隔符。必须是单字节字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">enclosure</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">enclosure</span> 参数，设置字段环绕符。必须是单字节字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">escape</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">escape</span>       参数，设置转义字符。必须是单字节字符或者空字符串。空字符串（<span class="literal">""</span>）禁用所有的转义机制。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        通常，在字段内，通过双倍的 <span class="parameter" style="color:#3A95FF">enclosure</span> 字符对其进行转义；但是可以使用        <span class="parameter" style="color:#3A95FF">escape</span> 字符作为替代。因此，对于默认参数值，<span class="literal">""</span> 和        <span class="literal">\"</span> 具有相同的含义。除了允许转义 <span class="parameter" style="color:#3A95FF">enclosure</span>        字符外，<span class="parameter" style="color:#3A95FF">escape</span> 字符没有特殊含义；甚至不打算转义自身。       </span>      </p></blockquote>      <div class="warning"><strong class="warning">警告</strong>       <p class="simpara">        从 PHP 8.4.0 开始，弃用依赖 <span class="parameter" style="color:#3A95FF">escape</span> 的默认值。需要通过位置或使用<a href="https://php.net/manual/zh/functions.arguments.php#functions.named-arguments" class="link">命名参数</a>明确提供。       </p>      </div>     </dd>       </dl>    <div class="warning"><strong class="warning">警告</strong><p class="simpara"> 当 <span class="parameter" style="color:#3A95FF">escape</span> 被设置为非空字符串（<span class="literal">""</span>）时， 可能导致生成的 CSV 不符合 <a href="https://datatracker.ietf.org/doc/html/rfc4180" class="link external">»&nbsp;RFC 4180</a> 的要求， 或者无法通过 PHP CSV 函数的往返处理。 <span class="parameter" style="color:#3A95FF">escape</span> 的默认值是 <span class="literal">"\\"</span>，因此建议显式地将其设置为空字符串。 默认值将在未来的 PHP 版本中更改，不早于 PHP 9.0。</p></div> </div> <div class="refsect1 returnvalues" id="refsect1-function.fgetcsv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回包含读取字段的索引数组， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">        CSV 文件中的空行将被返回为一个包含有单个 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span> 字段的数组，不会被当成错误。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP不能正确的识别行结束符，启用运行时配置可选项 <a href="https://php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a>也许可以解决此问题。</span></p></blockquote> </div> <div class="refsect1 errors" id="refsect1-function.fgetcsv-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">separator</span> 或者 <span class="parameter" style="color:#3A95FF">enclosure</span>   长度不是一个字节，则抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p>  <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">escape</span> 的长度不是一个字节或者为空字符串，则抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.fgetcsv-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        现在已弃用依赖 escape 的默认值。       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        如果最后一个字段仅包含未终止的 enclosure，则返回空字符串，而不是带有单个 NULL 字节的字符串。       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        现在 <span class="parameter" style="color:#3A95FF">length</span> 允许为 null.       </td>      </tr>      <tr>       <td>7.4.0</td>       <td>        <span class="parameter" style="color:#3A95FF">escape</span> 参数也接受空字符串来禁用所有的转义机制。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.fgetcsv-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2322">    <p><strong>示例 #1 读取并显示 CSV 文件的整个内容</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$row </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>if ((</span><span style="color: #9876AA">\$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.csv"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">)) !== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">) {<br>    while ((</span><span style="color: #9876AA">\$data </span><span style="color: #007700">= </span><span style="color: #9876AA">fgetcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">\$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">1000</span><span style="color: #007700">, </span><span style="color: #DD0000">","</span><span style="color: #007700">)) !== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$num </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">\$data</span><span style="color: #007700">);<br>        echo </span><span style="color: #DD0000">"&lt;p&gt; </span><span style="color: #9876AA">\$num</span><span style="color: #DD0000"> fields in line </span><span style="color: #9876AA">\$row</span><span style="color: #DD0000">: &lt;br /&gt;&lt;/p&gt;\n"</span><span style="color: #007700">;<br>        </span><span style="color: #9876AA">\$row</span><span style="color: #007700">++;<br>        for (</span><span style="color: #9876AA">\$c</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$c </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$num</span><span style="color: #007700">; </span><span style="color: #9876AA">\$c</span><span style="color: #007700">++) {<br>            echo </span><span style="color: #9876AA">\$data</span><span style="color: #007700">[</span><span style="color: #9876AA">\$c</span><span style="color: #007700">] . </span><span style="color: #DD0000">"&lt;br /&gt;\n"</span><span style="color: #007700">;<br>        }<br>    }<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$handle</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.fgetcsv-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link fputcsv()} - 将行格式化为 CSV 并写入文件指针</span></li>   <li><span class="function">{@link str_getcsv()} - 解析 CSV 字符串为一个数组</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetcsv()} - Gets line from file and parse as CSV fields</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::fputcsv()} - Write a field array as a CSV line</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::setCsvControl()} - Set the delimiter, enclosure and escape character for CSV</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::getCsvControl()} - Get the delimiter, enclosure and escape character for CSV</span></li>   <li><span class="function">{@link explode()} - 使用一个字符串分割另一个字符串</span></li>   <li><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>   <li><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>  </ul> </div></div>
 * 
 * Gets line from file pointer and parse for CSV fields
 * @link https://php.net/manual/zh/function.fgetcsv.php
 * @param resource $stream <p>
 * A valid file pointer to a file successfully opened by
 * fopen, popen, or
 * fsockopen.
 * </p>
 * @param int|null $length <p>
 * Must be greater than the longest line (in characters) to be found in
 * the CSV file (allowing for trailing line-end characters). It became
 * optional in PHP 5. Omitting this parameter (or setting it to 0 in PHP
 * 5.0.4 and later) the maximum line length is not limited, which is
 * slightly slower.
 * </p>
 * @param string $separator [optional] <p>
 * Set the field delimiter (one character only).
 * </p>
 * @param string $enclosure [optional] <p>
 * Set the field enclosure character (one character only).
 * </p>
 * @param string $escape [optional] <p>
 * Set the escape character (one character only). Defaults as a backslash.
 * </p>
 * @return array|false|null an indexed array containing the fields read.
 * <p>
 * A blank line in a CSV file will be returned as an array
 * comprising a single null field, and will not be treated
 * as an error.
 * </p>
 * <p>
 * fgetcsv returns null if an invalid
 * handle is supplied or false on other errors,
 * including end of file.
 * </p>
 */
#[LanguageLevelTypeAware(['8.0' => 'array|false'], default: 'array|false|null')]
function fgetcsv($stream, ?int $length = null, string $separator = ',', string $enclosure = '"', string $escape = '\\') {}

/**
 * <div id="function.fputcsv" class="refentry"> <div class="refnamediv">  <h1 class="refname">fputcsv</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fputcsv</span> — <span class="dc-title">将行格式化为 CSV 并写入文件指针</span></p> </div>  <div class="refsect1 description" id="refsect1-function.fputcsv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fputcsv</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$fields</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$separator</span><span class="initializer"> = ","</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$enclosure</span><span class="initializer"> = "\""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$escape</span><span class="initializer"> = "\\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$eol</span><span class="initializer"> = "\n"</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>fputcsv()</strong></span> 将一行（传递 <span class="parameter" style="color:#3A95FF">fields</span> 数组）格式化为   <span>CSV</span>，并将其写入（以 <span class="parameter" style="color:#3A95FF">eol</span> 终止）到指定的   <span class="parameter" style="color:#3A95FF">stream</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.fputcsv-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fields</span></dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 数组。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">separator</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">separator</span> 参数，设置字段分隔符。必须是单字节字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">enclosure</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">enclosure</span> 参数，设置字段环绕符。必须是单字节字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">escape</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">escape</span>       参数，设置转义字符。必须是单字节字符或者空字符串。空字符串（<span class="literal">""</span>）禁用所有的转义机制。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        通常，在字段内，通过双倍的 <span class="parameter" style="color:#3A95FF">enclosure</span> 字符对其进行转义；但是可以使用        <span class="parameter" style="color:#3A95FF">escape</span> 字符作为替代。因此，对于默认参数值，<span class="literal">""</span> 和        <span class="literal">\"</span> 具有相同的含义。除了允许转义 <span class="parameter" style="color:#3A95FF">enclosure</span>        字符外，<span class="parameter" style="color:#3A95FF">escape</span> 字符没有特殊含义；甚至不打算转义自身。       </span>      </p></blockquote>      <div class="warning"><strong class="warning">警告</strong>       <p class="simpara">        从 PHP 8.4.0 开始，弃用依赖 <span class="parameter" style="color:#3A95FF">escape</span> 的默认值。需要通过位置或使用<a href="https://php.net/manual/zh/functions.arguments.php#functions.named-arguments" class="link">命名参数</a>明确提供。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">eol</span></dt>     <dd>      <p class="para">       可选的 <span class="parameter" style="color:#3A95FF">eol</span> 参数设置自定义行尾序列。      </p>     </dd>       </dl>    <div class="warning"><strong class="warning">警告</strong><p class="simpara"> 当 <span class="parameter" style="color:#3A95FF">escape</span> 被设置为非空字符串（<span class="literal">""</span>）时， 可能导致生成的 CSV 不符合 <a href="https://datatracker.ietf.org/doc/html/rfc4180" class="link external">»&nbsp;RFC 4180</a> 的要求， 或者无法通过 PHP CSV 函数的往返处理。 <span class="parameter" style="color:#3A95FF">escape</span> 的默认值是 <span class="literal">"\\"</span>，因此建议显式地将其设置为空字符串。 默认值将在未来的 PHP 版本中更改，不早于 PHP 9.0。</p></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    如果字段中包含 <span class="parameter" style="color:#3A95FF">enclosure</span> 字符，则会通过将其双倍 <span class="parameter" style="color:#3A95FF">enclosure</span>    来进行转义，除非该字符前面紧接着一个 <span class="parameter" style="color:#3A95FF">escape</span>。   </p>  </blockquote>  </div> <div class="refsect1 returnvalues" id="refsect1-function.fputcsv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回写入字符串的长度， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-function.fputcsv-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">separator</span> 或者 <span class="parameter" style="color:#3A95FF">enclosure</span>   长度不是一个字节，则抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p>  <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">escape</span> 的长度不是一个字节或者为空字符串，则抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.fputcsv-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        现在已弃用依赖 escape 的默认值。       </td>      </tr>      <tr>       <td>8.1.0</td>       <td>        新增可选的 <span class="parameter" style="color:#3A95FF">eol</span> 参数。       </td>      </tr>      <tr>       <td>7.4.0</td>       <td>        <span class="parameter" style="color:#3A95FF">escape</span> 参数现在接受空字符串来禁用专有转义机制。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.fputcsv-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2348">    <p><strong>示例 #1 <span class="function"><strong>fputcsv()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$list </span><span style="color: #007700">= [<br>    [</span><span style="color: #DD0000">'aaa'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bbb'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ccc'</span><span style="color: #007700">, </span><span style="color: #DD0000">'dddd'</span><span style="color: #007700">],<br>    [</span><span style="color: #DD0000">'123'</span><span style="color: #007700">, </span><span style="color: #DD0000">'456'</span><span style="color: #007700">, </span><span style="color: #DD0000">'789'</span><span style="color: #007700">],<br>    [</span><span style="color: #DD0000">'"aaa"'</span><span style="color: #007700">, </span><span style="color: #DD0000">'"bbb"'</span><span style="color: #007700">]<br>];<br><br></span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.csv'</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$list </span><span style="color: #007700">as </span><span style="color: #9876AA">\$fields</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">fputcsv</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">\$fields</span><span style="color: #007700">, </span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #DD0000">'"'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会写入以下的 <span class="literal">file.csv</span>：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">aaa,bbb,ccc,dddd<br>123,456,789<br>"""aaa""","""bbb"""</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.fputcsv-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link fgetcsv()} - 从文件指针中读入一行并解析 CSV 字段</span></li>   <li><span class="function">{@link str_getcsv()} - 解析 CSV 字符串为一个数组</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetcsv()} - Gets line from file and parse as CSV fields</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::fputcsv()} - Write a field array as a CSV line</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::setCsvControl()} - Set the delimiter, enclosure and escape character for CSV</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SplFileObject::getCsvControl()} - Get the delimiter, enclosure and escape character for CSV</span></li>  </ul> </div></div>
 * 
 * Format line as CSV and write to file pointer
 * @link https://php.net/manual/zh/function.fputcsv.php
 * @param resource $stream The file pointer must be valid, and must point to a file successfully opened by fopen() or fsockopen() (and not yet closed by fclose()).
 * @param array $fields <p>
 * An array of values.
 * </p>
 * @param string $separator [optional] <p>
 * The optional delimiter parameter sets the field
 * delimiter (one character only).
 * </p>
 * @param string $enclosure [optional] <p>
 * The optional enclosure parameter sets the field
 * enclosure (one character only).
 * </p>
 * @param string $escape [optional] <p>
 * The optional escape_char parameter sets the escape character (one character only).
 * </p>
 * @return int|false the length of the written string or false on failure.
 */
function fputcsv(

    $stream,
    array $fields,
    string $separator = ",",
    string $enclosure = '"',
    #[PhpStormStubsElementAvailable(from: '7.0')] string $escape = "\\",
    #[PhpStormStubsElementAvailable('8.1')] string $eol = PHP_EOL
): int|false {}

/**
 * <div id="function.flock" class="refentry"> <div class="refnamediv">  <h1 class="refname">flock</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">flock</span> — <span class="dc-title">可移植的协同文件锁定</span></p> </div> <div class="refsect1 description" id="refsect1-function.flock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>flock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$operation</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$would_block</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>flock()</strong></span> 允许执行简单的读取/写入模型,该模型可以在任何平台（包括大部分   Unix 衍生产品，甚至是 Windows）上使用。  </p>  <p class="para">   当调用 <span class="function">{@link fclose()}</span> 或者对 <span class="parameter" style="color:#3A95FF">stream</span> 垃圾收集时，锁会释放。  </p>  <p class="para">   PHP 支持以协同且可移植的方式锁定完整文件（也就是说所有访问程序必须使用相同锁定方式, 否则将无法工作）。默认情况下，该函数将堵塞直到获得锁；这可以通过下面文档中   <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-nb">LOCK_NB</a></span></strong> 选项来控制。  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.flock-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件系统指针，是典型地由<span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>(资源)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">operation</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">operation</span> 可以是以下值之一：       </p><ul class="itemizedlist">        <li class="listitem">         <span class="simpara">         <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-sh">LOCK_SH</a></span></strong>取得共享锁定（读取的程序）。         </span>        </li>        <li class="listitem">         <span class="simpara">         <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-ex">LOCK_EX</a></span></strong> 取得独占锁定（写入的程序。         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-un">LOCK_UN</a></span></strong> 释放锁定（无论共享或独占）。         </span>        </li>       </ul>            <p class="para">       It is also possible to add <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-nb">LOCK_NB</a></span></strong> as a bitmask to one        of the above operations, if <span class="function"><strong>flock()</strong></span> should not       block during the locking attempt.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">would_block</span></dt>     <dd>      <p class="para">       如果锁将堵塞（EWOULDBLOCK       错误码情况下），第三个可选参数会设置为 1。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.flock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.flock-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2343">    <p><strong>示例 #1 <span class="function"><strong>flock()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/lock.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r+"</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">LOCK_EX</span><span style="color: #007700">)) {  </span><span style="color: #FF8000">// 进行排它型锁定<br>    </span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);      </span><span style="color: #FF8000">// truncate file<br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"Write something here\n"</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fflush</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);            </span><span style="color: #FF8000">// flush output before releasing the lock<br>    </span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">LOCK_UN</span><span style="color: #007700">);    </span><span style="color: #FF8000">// 释放锁定<br></span><span style="color: #007700">} else {<br>    echo </span><span style="color: #DD0000">"Couldn't get the lock!"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2344">    <p><strong>示例 #2 <span class="function"><strong>flock()</strong></span> 使用 <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.lock-nb">LOCK_NB</a></span></strong> 选项</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp/lock.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Activate the LOCK_NB option on an LOCK_EX operation <br></span><span style="color: #007700">if(!</span><span style="color: #9876AA">flock</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">LOCK_EX </span><span style="color: #007700">| </span><span style="color: #9876AA">LOCK_NB</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">'Unable to obtain lock'</span><span style="color: #007700">;<br>    exit(-</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// ... <br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 notes" id="refsect1-function.flock-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在 Windows 上，<span class="function"><strong>flock()</strong></span> 使用的是强制锁而不是协同锁。    Mandatory locking is also supported on Linux and    System V based operating systems via the usual mechanism supported by the    fcntl() system call: that is, if the file in question has the setgid    permission bit set and the group execution bit cleared. On Linux, the file    system will also need to be mounted with the mand option for this to work.   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    由于 <span class="function"><strong>flock()</strong></span>    需要一个文件指针， 因此可能不得不用一个特殊的锁定文件来保护打算通过写模式打开的文件的访问（在    <span class="function">{@link fopen()}</span> 函数中加入 "w" 或 "w+"）。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    只能用于 <span class="function">{@link fopen()}</span> 返回本地文件的文件指针，或指向实现    <span class="function">{@link streamWrapper::stream_lock()}</span> 方法的用户空间流的文件指针。   </p>  </blockquote>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    在后续代码中为 <span class="parameter" style="color:#3A95FF">stream</span> 分配另一个值将释放锁。   </p>  </div>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    在部分操作系统中 <span class="function"><strong>flock()</strong></span> 以进程级实现。当用多线程服务器    API 时，可能无法依靠 <span class="function"><strong>flock()</strong></span>    来保护文件，因为运行于同一服务器实例中其它并行线程的 PHP 脚本可以对该文件进行处理！   </p>   <p class="para">    旧的文件系统（如 <span class="literal">FAT</span> 及其衍生）不支持    <span class="function"><strong>flock()</strong></span>，也因此在这些环境下总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在 Windows 上，如果锁进程再次打开文件，那么在解锁文件之前，无法通过第二个句柄访问文件。   </p>  </blockquote> </div></div>
 * 
 * Portable advisory file locking
 * @link https://php.net/manual/zh/function.flock.php
 * @param resource $stream <p>
 * An open file pointer.
 * </p>
 * @param int $operation <p>
 * operation is one of the following:
 * LOCK_SH to acquire a shared lock (reader).</p>
 * @param int &$would_block [optional] <p>
 * The optional third argument is set to 1 if the lock would block
 * (EWOULDBLOCK errno condition).
 * </p>
 * @return bool true on success or false on failure.
 */
function flock($stream, int $operation, &$would_block): bool {}

/**
 * <div id="function.get-meta-tags" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_meta_tags</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_meta_tags</span> — <span class="dc-title">   从一个文件中提取所有的 meta 标签 content 属性，返回一个数组  </span></p> </div> <div class="refsect1 description" id="refsect1-function.get-meta-tags-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_meta_tags</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$use_include_path</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   打开 <span class="parameter" style="color:#3A95FF">filename</span> 逐行解析文件中的    &lt;meta&gt; 标签。解析工作将在   <span class="literal">&lt;/head&gt;</span> 处停止。  </p> </div>   <div class="refsect1 parameters" id="refsect1-function.get-meta-tags-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       HTML 文件的路径字符串。       此参数可以是本地文件也可以是一个   <span>URL</span>。      </p>      <p class="para">       </p><div class="example" id="example-4105">        <p><strong>示例 #1 <span class="function"><strong>get_meta_tags()</strong></span> 解析了什么</strong></p>        <div class="example-contents"><div class="htmlcode"><blockquote style="border:1px gray solid;"><meta><br><meta><br><meta><br><meta><br>&nbsp;<!--&nbsp;è§£æå·¥ä½å¨æ­¤å¤åæ­¢&nbsp;--></blockquote></div>        </div>       </div>           </dd>             <dt><span class="parameter" style="color:#3A95FF">use_include_path</span></dt>     <dd>      <p class="para">       将 <span class="parameter" style="color:#3A95FF">use_include_path</span> 设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 将使    PHP 尝试按照 <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>   标准包含路径中的每个指向去打开文件。这只用于本地文件，不适用于 URL。      </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-function.get-meta-tags-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数组，包含所有解析过的 meta 标签。  </p>  <p class="para">   返回的关联数组以属性 name 的值作为键，属性 content    的值作为值，所以你可以很容易地使用标准数组函数遍历此关联数组或访问某个值。   属性   name 中的特殊字符将使用‘_’替换，而其它字符则转换成小写。如果有两个   meta 标签拥有相同的 name，则只返回最后出现的那一个。  </p>  <p class="para">   失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 。  </p> </div> <div class="refsect1 examples" id="refsect1-function.get-meta-tags-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4106">    <p><strong>示例 #2 <span class="function"><strong>get_meta_tags()</strong></span> 返回了什么</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 假设上边的标签是在 www.example.com 中<br></span><span style="color: #9876AA">\$tags </span><span style="color: #007700">= </span><span style="color: #9876AA">get_meta_tags</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 注意所有的键（key）均为小写，而键中的‘.’则转换成了‘_’。<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'author'</span><span style="color: #007700">];       </span><span style="color: #FF8000">// name<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'keywords'</span><span style="color: #007700">];     </span><span style="color: #FF8000">// php documentation<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'description'</span><span style="color: #007700">];  </span><span style="color: #FF8000">// a php manual<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$tags</span><span style="color: #007700">[</span><span style="color: #DD0000">'geo_position'</span><span style="color: #007700">]; </span><span style="color: #FF8000">// 49.33;-86.59<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.get-meta-tags-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    只有包含 name 属性的 meta 标签才会被解析。不需要引号。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.get-meta-tags-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>    <li><span class="function">{@link urlencode()} - 编码 URL 字符串</span></li>   </ul>   </div></div>
 * 
 * Extracts all meta tag content attributes from a file and returns an array
 * @link https://php.net/manual/zh/function.get-meta-tags.php
 * @param string $filename <p>
 * The path to the HTML file, as a string. This can be a local file or an
 * URL.
 * </p>
 * <p>
 * What get_meta_tags parses
 * </p>
 * <pre>
 * <meta name="author" content="name">
 * <meta name="keywords" content="php documentation">
 * <meta name="DESCRIPTION" content="a php manual">
 * <meta name="geo.position" content="49.33;-86.59">
 * </head> <!-- parsing stops here -->
 * </pre>
 * <p>
 * (pay attention to line endings - PHP uses a native function to
 * parse the input, so a Mac file won't work on Unix).
 * </p>
 * @param bool $use_include_path [optional] <p>
 * Setting use_include_path to true will result
 * in PHP trying to open the file along the standard include path as per
 * the include_path directive.
 * This is used for local files, not URLs.
 * </p>
 * @return array|false an array with all the parsed meta tags.
 * <p>
 * The value of the name property becomes the key, the value of the content
 * property becomes the value of the returned array, so you can easily use
 * standard array functions to traverse it or access single values.
 * Special characters in the value of the name property are substituted with
 * '_', the rest is converted to lower case. If two meta tags have the same
 * name, only the last one is returned.
 * </p>
 */
#[Pure(true)]
function get_meta_tags(string $filename, bool $use_include_path = false): array|false {}

/**
 * <div id="function.stream-set-write-buffer" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_set_write_buffer</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_set_write_buffer</span> — <span class="dc-title">Sets write file buffering on the given stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-set-write-buffer-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_set_write_buffer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$size</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Sets the buffering for write operations on the given <span class="parameter" style="color:#3A95FF">stream</span>   to <span class="parameter" style="color:#3A95FF">size</span> bytes.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-set-write-buffer-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The file pointer.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">size</span></dt>     <dd>      <p class="para">       The number of bytes to buffer. If <span class="parameter" style="color:#3A95FF">size</span>       is 0 then write operations are unbuffered.  This ensures that all writes       with <span class="function">{@link fwrite()}</span> are completed before other processes are       allowed to write to that output stream.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-set-write-buffer-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns 0 on success, or another value if the request cannot be honored.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-set-write-buffer-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4043">    <p><strong>示例 #1 <span class="function"><strong>stream_set_write_buffer()</strong></span> example</strong></p>    <div class="example-contents"><p>     The following example demonstrates how to use     <span class="function"><strong>stream_set_write_buffer()</strong></span> to create an unbuffered stream.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$file</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">) {<br>  if (</span><span style="color: #9876AA">stream_set_write_buffer</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">) !== </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>      </span><span style="color: #FF8000">// changing the buffering failed<br>  </span><span style="color: #007700">}<br>  </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">\$output</span><span style="color: #007700">);<br>  </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-set-write-buffer-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>   <li><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>  </ul> </div></div>
 * 
 * Sets write file buffering on the given stream
 * @link https://php.net/manual/zh/function.stream-set-write-buffer.php
 * @param resource $stream <p>
 * The file pointer.
 * </p>
 * @param int $size <p>
 * The number of bytes to buffer. If buffer
 * is 0 then write operations are unbuffered. This ensures that all writes
 * with fwrite are completed before other processes are
 * allowed to write to that output stream.
 * </p>
 * @return int 0 on success, or EOF if the request cannot be honored.
 * @see stream_set_read_buffer()
 */
function stream_set_write_buffer($stream, int $size): int {}

/**
 * <div id="function.stream-set-read-buffer" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_set_read_buffer</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_set_read_buffer</span> — <span class="dc-title">Set read file buffering on the given stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-set-read-buffer-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_set_read_buffer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$size</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Sets the read buffer. It's the equivalent of <span class="function">{@link stream_set_write_buffer()}</span>,   but for read operations.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-set-read-buffer-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>    <dd>     <p class="para">      The file pointer.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">size</span></dt>    <dd>     <p class="para">      The number of bytes to buffer. If <span class="parameter" style="color:#3A95FF">size</span>      is 0 then read operations are unbuffered.  This ensures that all reads      with <span class="function">{@link fread()}</span> are completed before other processes are      allowed to read from that input stream.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-set-read-buffer-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns 0 on success, or another value if the request   cannot be honored.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.stream-set-read-buffer-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_set_write_buffer()} - Sets write file buffering on the given stream</span></li>  </ul> </div></div>
 * 
 * Sets read file buffering on the given stream
 * @link https://php.net/manual/zh/function.stream-set-read-buffer.php
 * @param resource $stream <p>
 * The file pointer.
 * </p>
 * @param int $size <p>
 * The number of bytes to buffer. If buffer
 * is 0 then write operations are unbuffered. This ensures that all writes
 * with fwrite are completed before other processes are
 * allowed to write to that output stream.
 * </p>
 * @return int 0 on success, or EOF if the request cannot be honored.
 * @see stream_set_write_buffer()
 */
function stream_set_read_buffer($stream, int $size): int {}

/**
 * <div id="function.set-file-buffer" class="refentry"> <div class="refnamediv">  <h1 class="refname">set_file_buffer</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">set_file_buffer</span> — <span class="dc-title"><span class="function">{@link stream_set_write_buffer()}</span> 的别名</span></p> </div> <div class="refsect1 description" id="refsect1-function.set-file-buffer-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：<span class="function">{@link stream_set_write_buffer()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see stream_set_write_buffer}
 * <p>Sets the buffering for write operations on the given stream to buffer bytes.
 * Output using fwrite() is normally buffered at 8K.
 * This means that if there are two processes wanting to write to the same output stream (a file),
 * each is paused after 8K of data to allow the other to write.
 * </p>
 * @link https://php.net/manual/zh/function.set-file-buffer.php
 * @param resource $stream The file pointer.
 * @param int $size The number of bytes to buffer. If buffer is 0 then write operations are unbuffered.
 * This ensures that all writes with fwrite() are completed before other processes are allowed to write to that output stream.
 * @return int
 */
function set_file_buffer($stream, int $size): int {}

/**
 * Alias:
 * {@see stream_set_blocking}
 * <p>Sets blocking or non-blocking mode on a stream.
 * This function works for any stream that supports non-blocking mode (currently, regular files and socket streams)
 * </p>
 * @link https://php.net/manual/en/function.set-socket-blocking.php
 * @param resource $socket
 * @param bool $mode If mode is FALSE, the given stream will be switched to non-blocking mode, and if TRUE, it will be switched to blocking mode.
 * This affects calls like fgets() and fread() that read from the stream.
 * In non-blocking mode an fgets() call will always return right away while in blocking mode it will wait for data to become available on the stream.
 * @return bool Returns TRUE on success or FALSE on failure.
 * @removed 7.0
 * @see stream_set_blocking()
 */
#[Deprecated(replacement: "stream_set_blocking(%parametersList%)", since: 5.3)]
function set_socket_blocking($socket, bool $mode): bool {}

/**
 * <div id="function.stream-set-blocking" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_set_blocking</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_set_blocking</span> — <span class="dc-title">为资源流设置阻塞或者阻塞模式</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-set-blocking-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_set_blocking</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$enable</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">stream</span> 设置阻塞或者非阻塞模式。  </p>  <p class="para">   此函数适用于支持非阻塞模式的任何资源流（常规文件，套接字资源流等）。   </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-set-blocking-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       资源流。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">enable</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">enable</span> 为       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，资源流将会被转换为非阻塞模式；如果是       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，资源流将会被转换为阻塞模式。       该参数的设置将会影响到像       <span class="function">{@link fgets()}</span> 和       <span class="function">{@link fread()}</span> 这样的函数从资源流里读取数据。       在非阻塞模式下，调用 <span class="function">{@link fgets()}</span>       总是会立即返回；而在阻塞模式下，将会一直等到从资源流里面获取到数据才能返回。       </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-set-blocking-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 notes" id="refsect1-function.stream-set-blocking-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">在 Windows 系统上，这对本地文件没有影响。Windows 不支持本地文件的非阻塞 IO。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-set-blocking-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_select()} - Runs the equivalent of the select() system call on the given   arrays of streams with a timeout specified by seconds and microseconds</span></li>  </ul> </div></div>
 * 
 * Set blocking/non-blocking mode on a stream
 * @link https://php.net/manual/zh/function.stream-set-blocking.php
 * @param resource $stream <p>
 * The stream.
 * </p>
 * @param bool $enable <p>
 * If mode is FALSE, the given stream
 * will be switched to non-blocking mode, and if TRUE, it
 * will be switched to blocking mode. This affects calls like
 * fgets and fread
 * that read from the stream. In non-blocking mode an
 * fgets call will always return right away
 * while in blocking mode it will wait for data to become available
 * on the stream.
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_set_blocking($stream, bool $enable): bool {}

/**
 * <div id="function.socket-set-blocking" class="refentry"> <div class="refnamediv">  <h1 class="refname">socket_set_blocking</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">socket_set_blocking</span> — <span class="dc-title">别名 <span class="function">{@link stream_set_blocking()}</span></span></p>  </div> <div class="refsect1 description" id="refsect1-function.socket-set-blocking-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：    <span class="function">{@link stream_set_blocking()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see stream_set_blocking}
 * @link https://php.net/manual/zh/function.socket-set-blocking.php
 * @param resource $stream <p>
 * The stream.
 * </p>
 * @param bool $enable <p>
 * If mode is FALSE, the given stream
 * will be switched to non-blocking mode, and if TRUE, it
 * will be switched to blocking mode. This affects calls like
 * fgets and fread
 * that read from the stream. In non-blocking mode an
 * fgets call will always return right away
 * while in blocking mode it will wait for data to become available
 * on the stream.
 * </p>
 * @return bool true on success or false on failure.
 */
function socket_set_blocking($stream, bool $enable): bool {}

/**
 * <div id="function.stream-get-meta-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_get_meta_data</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_get_meta_data</span> — <span class="dc-title">从流或文件指针中获取 header/meta 数据</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-get-meta-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_get_meta_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   返回现有 <span class="parameter" style="color:#3A95FF">stream</span> 的有关信息。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-get-meta-data-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       流可以是通过 <span class="function">{@link fopen()}</span>、<span class="function">{@link fsockopen()}</span>、        <span class="function">{@link pfsockopen()}</span>、<span class="function">{@link stream_socket_client()}</span>       创建的任何流。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-get-meta-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回的数组包含以下元素：  </p>  <ul class="itemizedlist">   <li class="listitem">    <p class="para">     <span class="literal">timed_out</span>（bool）——如果流在最后调用      <span class="function">{@link fread()}</span> 或 <span class="function">{@link fgets()}</span>      时等待超时，则为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">blocked</span>（bool）——如果流是堵塞 IO      模式，则为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。参见 <span class="function">{@link stream_set_blocking()}</span>。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">eof</span>（bool）——如果流已经到达文件结尾（end-of-file），则为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。     注意套接字流即使 <span class="literal">unread_bytes</span>      不为零也可以为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。确定是否还可以读取更多数据，使用      <span class="function">{@link feof()}</span> 而不是读取此值。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">unread_bytes</span>（int）——当前在 PHP 内部缓冲区的字节数。    </p>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      <span class="simpara">      不要在脚本中使用此值。     </span>    </p></blockquote>   </li>   <li class="listitem">    <p class="para">     <span class="literal">stream_type</span>（string）——描述了流底层实现的标记。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">wrapper_type</span>（string）——描述了在流之上的协议封装实现的标记。更多关于封装协议的信息见    <a href="https://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">wrapper_data</span>（mixed）——当前流附加的封装协议数据。更多封装协议及其数据的信息见      <a href="https://php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。    </p>   </li>      <li class="listitem">    <p class="para">     <span class="literal">mode</span>（string）——对当前流所要求的访问类型（见     {@link fopen()} 参考中的表格 1）。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">seekable</span>（bool）——是否可以在当前流中定位。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">uri</span>（string）——与当前流关联的 URI 或文件名。    </p>   </li>   <li class="listitem">    <p class="para">     <span class="literal">crypto</span>（array）——当前流的 TLS      连接元数据。（注意：仅在资源流使用 TLS 时提供。）    </p>   </li>  </ul> </div> <div class="refsect1 examples" id="refsect1-function.stream-get-meta-data-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4031">    <p><strong>示例 #1 <span class="function"><strong>stream_get_meta_data()</strong></span> 示例，<span class="function">{@link fopen()}</span> 和 http 一起使用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$url </span><span style="color: #007700">= </span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">;<br><br>if (!</span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$url</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">trigger_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Unable to open URL (</span><span style="color: #9876AA">\$url</span><span style="color: #DD0000">)"</span><span style="color: #007700">, </span><span style="color: #9876AA">E_USER_ERROR</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">\$meta </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_get_meta_data</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$meta</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(10)&nbsp;{<br>&nbsp;&nbsp;'timed_out'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;'blocked'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;'eof'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;'wrapper_data'&nbsp;=&gt;<br>&nbsp;&nbsp;array(13)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(15)&nbsp;"HTTP/1.1&nbsp;200&nbsp;OK"<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(11)&nbsp;"Age:&nbsp;244629"<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(29)&nbsp;"Cache-Control:&nbsp;max-age=604800"<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(38)&nbsp;"Content-Type:&nbsp;text/html;&nbsp;charset=UTF-8"<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(35)&nbsp;"Date:&nbsp;Sat,&nbsp;20&nbsp;Nov&nbsp;2021&nbsp;18:17:57&nbsp;GMT"<br>&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(24)&nbsp;"Etag:&nbsp;"3147526947+ident""<br>&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(38)&nbsp;"Expires:&nbsp;Sat,&nbsp;27&nbsp;Nov&nbsp;2021&nbsp;18:17:57&nbsp;GMT"<br>&nbsp;&nbsp;&nbsp;&nbsp;[7]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(44)&nbsp;"Last-Modified:&nbsp;Thu,&nbsp;17&nbsp;Oct&nbsp;2019&nbsp;07:18:26&nbsp;GMT"<br>&nbsp;&nbsp;&nbsp;&nbsp;[8]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(22)&nbsp;"Server:&nbsp;ECS&nbsp;(chb/0286)"<br>&nbsp;&nbsp;&nbsp;&nbsp;[9]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(21)&nbsp;"Vary:&nbsp;Accept-Encoding"<br>&nbsp;&nbsp;&nbsp;&nbsp;[10]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(12)&nbsp;"X-Cache:&nbsp;HIT"<br>&nbsp;&nbsp;&nbsp;&nbsp;[11]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(20)&nbsp;"Content-Length:&nbsp;1256"<br>&nbsp;&nbsp;&nbsp;&nbsp;[12]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(17)&nbsp;"Connection:&nbsp;close"<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;'wrapper_type'&nbsp;=&gt;<br>&nbsp;&nbsp;string(4)&nbsp;"http"<br>&nbsp;&nbsp;'stream_type'&nbsp;=&gt;<br>&nbsp;&nbsp;string(14)&nbsp;"tcp_socket/ssl"<br>&nbsp;&nbsp;'mode'&nbsp;=&gt;<br>&nbsp;&nbsp;string(1)&nbsp;"r"<br>&nbsp;&nbsp;'unread_bytes'&nbsp;=&gt;<br>&nbsp;&nbsp;int(1256)<br>&nbsp;&nbsp;'seekable'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;'uri'&nbsp;=&gt;<br>&nbsp;&nbsp;string(23)&nbsp;"http://www.example.com/"<br>}</blockquote></div>    </div>   </div>   <div class="example" id="example-4032">    <p><strong>示例 #2 <span class="function"><strong>stream_get_meta_data()</strong></span> 示例，<span class="function">{@link stream_socket_client()}</span> 和 https 一起使用</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$streamContext </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(<br>    [<br>        </span><span style="color: #DD0000">'ssl' </span><span style="color: #007700">=&gt; [<br>            </span><span style="color: #DD0000">'capture_peer_cert' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>            </span><span style="color: #DD0000">'capture_peer_cert_chain' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>            </span><span style="color: #DD0000">'disable_compression' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>        ],<br>    ]<br>);<br><br></span><span style="color: #9876AA">\$client </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'ssl://www.example.com:443'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$errorNumber</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$errorDescription</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">40</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">STREAM_CLIENT_CONNECT</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$streamContext<br></span><span style="color: #007700">);<br><br><br></span><span style="color: #9876AA">\$meta </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_get_meta_data</span><span style="color: #007700">(</span><span style="color: #9876AA">\$client</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$meta</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">array(8)&nbsp;{<br>&nbsp;&nbsp;'crypto'&nbsp;=&gt;<br>&nbsp;&nbsp;array(4)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;'protocol'&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(7)&nbsp;"TLSv1.3"<br>&nbsp;&nbsp;&nbsp;&nbsp;'cipher_name'&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(22)&nbsp;"TLS_AES_256_GCM_SHA384"<br>&nbsp;&nbsp;&nbsp;&nbsp;'cipher_bits'&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(256)<br>&nbsp;&nbsp;&nbsp;&nbsp;'cipher_version'&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(7)&nbsp;"TLSv1.3"<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;'timed_out'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;'blocked'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;'eof'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;'stream_type'&nbsp;=&gt;<br>&nbsp;&nbsp;string(14)&nbsp;"tcp_socket/ssl"<br>&nbsp;&nbsp;'mode'&nbsp;=&gt;<br>&nbsp;&nbsp;string(2)&nbsp;"r+"<br>&nbsp;&nbsp;'unread_bytes'&nbsp;=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;'seekable'&nbsp;=&gt;<br>&nbsp;&nbsp;bool(false)<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.stream-get-meta-data-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">     本函数对通过 <a href="https://php.net/manual/zh/ref.sockets.php" class="link">Socket 扩展</a>创建的套接字无效。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.stream-get-meta-data-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link get_headers()} - 取得服务器响应 HTTP 请求所发送的所有标头</span></li>    <li><a href="https://php.net/manual/zh/reserved.variables.httpresponseheader.php" class="link">\$http_response_header</a></li>   </ul>   </div></div>
 * 
 * Retrieves header/meta data from streams/file pointers
 * @link https://php.net/manual/zh/function.stream-get-meta-data.php
 * @param resource $stream <p>
 * The stream can be any stream created by fopen,
 * fsockopen and pfsockopen.
 * </p>
 * @return array The result array contains the following items:
 * <p>
 * timed_out (bool) - true if the stream
 * timed out while waiting for data on the last call to
 * fread or fgets.
 * </p>
 * <p>
 * blocked (bool) - true if the stream is
 * in blocking IO mode. See stream_set_blocking.
 * </p>
 * <p>
 * eof (bool) - true if the stream has reached
 * end-of-file. Note that for socket streams this member can be true
 * even when unread_bytes is non-zero. To
 * determine if there is more data to be read, use
 * feof instead of reading this item.
 * </p>
 * <p>
 * unread_bytes (int) - the number of bytes
 * currently contained in the PHP's own internal buffer.
 * </p>
 * You shouldn't use this value in a script.
 * <p>
 * stream_type (string) - a label describing
 * the underlying implementation of the stream.
 * </p>
 * <p>
 * wrapper_type (string) - a label describing
 * the protocol wrapper implementation layered over the stream.
 * See for more information about wrappers.
 * </p>
 * <p>
 * wrapper_data (mixed) - wrapper specific
 * data attached to this stream. See for
 * more information about wrappers and their wrapper data.
 * </p>
 * <p>
 * filters (array) - and array containing
 * the names of any filters that have been stacked onto this stream.
 * Documentation on filters can be found in the
 * Filters appendix.
 * </p>
 * <p>
 * mode (string) - the type of access required for
 * this stream (see Table 1 of the fopen() reference)
 * </p>
 * <p>
 * seekable (bool) - whether the current stream can
 * be seeked.
 * </p>
 * <p>
 * uri (string) - the URI/filename associated with this
 * stream.
 * </p>
 */
#[ArrayShape(["timed_out" => "bool", "blocked" => "bool", "eof" => "bool", "unread_bytes" => "int", "stream_type" => "string", "wrapper_type" => "string", "wrapper_data" => "mixed", "mode" => "string", "seekable" => "bool", "uri" => "string", "crypto" => "array", "mediatype" => "string"])]
function stream_get_meta_data($stream): array {}

/**
 * <div id="function.stream-get-line" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_get_line</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_get_line</span> — <span class="dc-title">从资源流里读取一行直到给定的定界符</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-get-line-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_get_line</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ending</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">      从给定的资源流里读取一行。  </p>  <p class="para">   当读取到 <span class="parameter" style="color:#3A95FF">length</span> 个字节数就结束，或者当在读取的非空字符串中发现  <span class="parameter" style="color:#3A95FF">ending</span> （<em>不</em>包含到返回值里）也结束，又或者遇到了 <span>EOF</span> 也结束（总之以上条件中哪个先出现就以哪个为准）。  </p>  <p class="para">   这个函数与 <span class="function">{@link fgets()}</span> 几乎是相同的，唯一的区别是在这个函数里面允许指定行尾的定界符，而不是使用标准的 \n， \r 还有 \r\n ，并且返回值中<em>不</em>包含定界符。（翻译注：也可以把 \n 等作为定界符传入 <span class="parameter" style="color:#3A95FF">ending</span> ）  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-get-line-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       一个有效的文件句柄。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       需要从句柄中读取的最大字节数。不支持负值。       <span class="literal">0</span> 表示默认的套接字块大小（socket chunk size），即       <span class="literal">8192</span> 字节。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ending</span></dt>     <dd>      <p class="para">       可选参数，字符串定界符。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-get-line-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个字符串，该字符串的内容根据 <span class="parameter" style="color:#3A95FF">length</span>   字节数从 <span class="parameter" style="color:#3A95FF">stream</span> 里读取， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>   <div class="refsect1 seealso" id="refsect1-function.stream-get-line-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>   <li><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>   <li><span class="function">{@link fgetc()} - 从文件指针中读取字符</span></li>  </ul> </div></div>
 * 
 * Gets line from stream resource up to a given delimiter
 * @link https://php.net/manual/zh/function.stream-get-line.php
 * @param resource $stream <p>
 * A valid file handle.
 * </p>
 * @param int $length <p>
 * The number of bytes to read from the handle.
 * </p>
 * @param string $ending <p>
 * An optional string delimiter.
 * </p>
 * @return string|false a string of up to length bytes read from the file
 * pointed to by handle.
 * <p>
 * If an error occurs, returns false.
 * </p>
 */
function stream_get_line($stream, int $length, string $ending = ''): string|false {}

/**
 * <div id="function.stream-wrapper-register" class="refentry">   <div class="refnamediv">    <h1 class="refname">stream_wrapper_register</h1>    <p class="verinfo">(PHP 4 &gt;= 4.3.2, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_wrapper_register</span> — <span class="dc-title">注册一个用 PHP 类实现的 URL 封装协议</span></p>   </div>   <div class="refsect1 description" id="refsect1-function.stream-wrapper-register-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">     <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_register</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$protocol</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$class</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <p class="para rdfs-comment">     允许用户实现自定义的协议处理器和流，用于所有其它的文件系统函数中（例如     <span class="function">{@link fopen()}</span>，<span class="function">{@link fread()}</span> 等）。    </p>    </div>      <div class="refsect1 parameters" id="refsect1-function.stream-wrapper-register-parameters">  <h3 class="title">参数</h3>    <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">protocol</span></dt>     <dd>      <p class="para">       待注册的封装的名字。有效的协议名字必须只包含字母数字、点（.）、加号（+）、连字符（-）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">class</span></dt>     <dd>      <p class="para">       实现了 <span class="parameter" style="color:#3A95FF">protocol</span> 的类名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">protocol</span>       是一个 URL 协议，应该设置为       <strong><span><a href="https://php.net/manual/zh/stream.constants.php#constant.stream-is-url">STREAM_IS_URL</a></span></strong>。默认为 0，本地流。      </p>     </dd>       </dl>   </div>       <div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-register-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p>  <p class="para">    当 <span class="parameter" style="color:#3A95FF">protocol</span> 已经有处理者时，<span class="function"><strong>stream_wrapper_register()</strong></span> 将返回<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>   </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-wrapper-register-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4053">    <p><strong>示例 #1 如何注册一个 stream wrapper</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$existed </span><span style="color: #007700">= </span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">, </span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">());<br>if (</span><span style="color: #9876AA">\$existed</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">stream_wrapper_unregister</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">stream_wrapper_register</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">, </span><span style="color: #DD0000">"VariableStream"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$myvar </span><span style="color: #007700">= </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"var://myvar"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r+"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"line1\n"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"line2\n"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"line3\n"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$myvar</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">\$existed</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">stream_wrapper_restore</span><span style="color: #007700">(</span><span style="color: #DD0000">"var"</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">line1<br>line2<br>line3<br>string(18)&nbsp;"line1<br>line2<br>line3<br>"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-wrapper-register-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.streamwrapper.php" class="xref">streamWrapper</a>原型类</li>    <li><a href="https://php.net/manual/zh/stream.streamwrapper.example-1.php" class="xref">示例类注册为流封装器</a></li>    <li><span class="function">{@link stream_wrapper_unregister()} - Unregister a URL wrapper</span></li>    <li><span class="function">{@link stream_wrapper_restore()} - Restores a previously unregistered built-in wrapper</span></li>    <li><span class="function">{@link stream_get_wrappers()} - 获取已注册的流类型</span></li>   </ul>   </div></div>
 * 
 * Register a URL wrapper implemented as a PHP class
 * @link https://php.net/manual/zh/function.stream-wrapper-register.php
 * @param string $protocol <p>
 * The wrapper name to be registered.
 * </p>
 * @param string $class <p>
 * The classname which implements the protocol.
 * </p>
 * @param int $flags <p>
 * Should be set to STREAM_IS_URL if
 * protocol is a URL protocol. Default is 0, local
 * stream.
 * </p>
 * @return bool true on success or false on failure.
 * <p>
 * stream_wrapper_register will return false if the
 * protocol already has a handler.
 * </p>
 */
function stream_wrapper_register(string $protocol, string $class, int $flags = 0): bool {}

/**
 * <div id="function.stream-register-wrapper" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_register_wrapper</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_register_wrapper</span> — <span class="dc-title">别名 <span class="function">{@link stream_wrapper_register()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-register-wrapper-description">  <h3 class="title">说明</h3>  <p class="para">   此函数是该函数的别名： <span class="function">{@link stream_wrapper_register()}</span>.  </p> </div></div>
 * 
 * Alias:
 * {@see stream_wrapper_register}
 * <p>Register a URL wrapper implemented as a PHP class</p>
 * @link https://php.net/manual/zh/function.stream-register-wrapper.php
 * @param string $protocol <p>
 * The wrapper name to be registered.
 * </p>
 * @param string $class <p>
 * The classname which implements the protocol.
 * </p>
 * @param int $flags [optional] <p>
 * Should be set to STREAM_IS_URL if
 * protocol is a URL protocol. Default is 0, local
 * stream.
 * </p>
 * @return bool true on success or false on failure.
 * <p>
 * stream_wrapper_register will return false if the
 * protocol already has a handler.
 * </p>
 */
function stream_register_wrapper(string $protocol, string $class, int $flags = 0): bool {}

/**
 * <div id="function.stream-resolve-include-path" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_resolve_include_path</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_resolve_include_path</span> — <span class="dc-title">   Resolve filename against the include path  </span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-resolve-include-path-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_resolve_include_path</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Resolve <span class="parameter" style="color:#3A95FF">filename</span> against the include path according to the same rules as <span class="function">{@link fopen()}</span>/<span class="function">{@link include}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-resolve-include-path-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The filename to resolve.      </p>     </dd>           </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-resolve-include-path-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> containing the resolved absolute filename,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-resolve-include-path-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4040">    <p><strong>示例 #1 <span class="function"><strong>stream_resolve_include_path()</strong></span> example</strong></p>    <div class="example-contents"><p>     Basic usage example.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_resolve_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.php"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(22)&nbsp;"/var/www/html/test.php"</blockquote></div>    </div>   </div>   </div> </div>
 * 
 * Resolve filename against the include path according to the same rules as fopen()/include().
 * @link https://php.net/manual/zh/function.stream-resolve-include-path.php
 * @param string $filename The filename to resolve.
 * @return string|false containing the resolved absolute filename, or FALSE on failure.
 * @since 5.3.2
 */
function stream_resolve_include_path(string $filename): string|false {}

/**
 * <div id="function.stream-wrapper-unregister" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_wrapper_unregister</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_wrapper_unregister</span> — <span class="dc-title">Unregister a URL wrapper</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-wrapper-unregister-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_unregister</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$protocol</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Allows you to disable an already defined stream wrapper. Once the wrapper   has been disabled you may override it with a user-defined wrapper using   <span class="function">{@link stream_wrapper_register()}</span> or reenable it later on with   <span class="function">{@link stream_wrapper_restore()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-wrapper-unregister-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">protocol</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-unregister-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
 * Unregister a URL wrapper
 * @link https://php.net/manual/zh/function.stream-wrapper-unregister.php
 * @param string $protocol <p>
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_wrapper_unregister(string $protocol): bool {}

/**
 * <div id="function.stream-wrapper-restore" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_wrapper_restore</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_wrapper_restore</span> — <span class="dc-title">Restores a previously unregistered built-in wrapper</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-wrapper-restore-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_wrapper_restore</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$protocol</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Restores a built-in wrapper previously unregistered with   <span class="function">{@link stream_wrapper_unregister()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-wrapper-restore-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">protocol</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-wrapper-restore-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
 * Restores a previously unregistered built-in wrapper
 * @link https://php.net/manual/zh/function.stream-wrapper-restore.php
 * @param string $protocol <p>
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_wrapper_restore(string $protocol): bool {}

/**
 * <div id="function.stream-get-wrappers" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_get_wrappers</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_get_wrappers</span> — <span class="dc-title">获取已注册的流类型</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-get-wrappers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_get_wrappers</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取在当前运行系统中已经注册并可使用的流类型列表。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-get-wrappers-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-get-wrappers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个索引数组，该数组里包含了当前运行系统中可使用的流类型的名称。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-get-wrappers-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4034">    <p><strong>示例 #1 <span class="function"><strong>stream_get_wrappers()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;php<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;file<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;http<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;ftp<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;compress.bzip2<br>&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;compress.zlib<br>)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4035">    <p><strong>示例 #2 检查一个流类型是否存在</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 检查是否存在 bzip2 流包装器<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'compress.bzip2'</span><span style="color: #007700">, </span><span style="color: #9876AA">stream_get_wrappers</span><span style="color: #007700">())) {<br>    echo </span><span style="color: #DD0000">'compress.bzip2:// support enabled.'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'compress.bzip2:// support not enabled.'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-get-wrappers-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_wrapper_register()} - 注册一个用 PHP 类实现的 URL 封装协议</span></li>  </ul> </div></div>
 * 
 * Retrieve list of registered streams
 * @link https://php.net/manual/zh/function.stream-get-wrappers.php
 * @return list<string> an indexed array containing the name of all stream wrappers
 * available on the running system.
 */
#[Pure(true)]
function stream_get_wrappers(): array {}

/**
 * <div id="function.stream-get-transports" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_get_transports</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_get_transports</span> — <span class="dc-title">获取已注册的套接字传输协议列表</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-get-transports-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_get_transports</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="simpara">   返回一个包含当前运行系统中所有套接字传输协议名称的索引数组。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-get-transports-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-get-transports-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个套接字传输协议名称的索引数组。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-get-transports-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4033">    <p><strong>示例 #1 使用 <span class="function"><strong>stream_get_transports()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$xportlist </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_get_transports</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xportlist</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array&nbsp;(<br>&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;tcp<br>&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;udp<br>&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;unix<br>&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;udg<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.stream-get-transports-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link stream_get_filters()} - 获取已注册的数据流过滤器列表</span></li>   <li><span class="function">{@link stream_get_wrappers()} - 获取已注册的流类型</span></li>  </ul> </div></div>
 * 
 * Retrieve list of registered socket transports
 * @link https://php.net/manual/zh/function.stream-get-transports.php
 * @return list<string> an indexed array of socket transports names.
 */
#[Pure(true)]
function stream_get_transports(): array {}

/**
 * <div id="function.stream-is-local" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_is_local</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_is_local</span> — <span class="dc-title">Checks if a stream is a local stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-is-local-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_is_local</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks if a stream, or a URL, is a local one or not.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-is-local-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The stream <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> or URL to check.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-is-local-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-is-local-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4036">    <p><strong>示例 #1 <span class="function"><strong>stream_is_local()</strong></span> example</strong></p>    <div class="example-contents"><p>     Basic usage example.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_is_local</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">stream_is_local</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)</blockquote></div>    </div>   </div>   </div></div>
 * 
 * Checks if a stream is a local stream
 * @link https://php.net/manual/zh/function.stream-is-local.php
 * @param mixed $stream <p>
 * The stream resource or URL to check.
 * </p>
 * @return bool true on success or false on failure.
 * @since 5.2.4
 */
#[Pure]
function stream_is_local($stream): bool {}

/**
 * <div id="function.get-headers" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_headers</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_headers</span> — <span class="dc-title">取得服务器响应 HTTP 请求所发送的所有标头</span></p> </div> <div class="refsect1 description" id="refsect1-function.get-headers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_headers</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$associative</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span></span> <span class="parameter" style="color:#3A95FF">\$context</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>get_headers()</strong></span> 返回一个数组，包含有服务器响应一个   HTTP 请求所发送的标头。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.get-headers-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">url</span></dt>     <dd>      <p class="para">       目标 URL。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">associative</span></dt>     <dd>      <p class="para">        如果将可选的 <span class="parameter" style="color:#3A95FF">associative</span> 参数设为 true，则        <span class="function"><strong>get_headers()</strong></span> 会解析相应的信息并设定数组的键名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       使用 <span class="function">{@link stream_context_create()}</span> 创建的有效上下文资源，<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>       使用默认上下文。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.get-headers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回包含有服务器响应一个   HTTP 请求所发送标头的索引或关联数组，如果失败则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.get-headers-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">associative</span> 从 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 更改为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        新增 <span class="parameter" style="color:#3A95FF">context</span> 参数。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.get-headers-examples"> <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4103">    <p><strong>示例 #1 <span class="function"><strong>get_headers()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$url </span><span style="color: #007700">= </span><span style="color: #DD0000">'http://www.example.com'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #9876AA">\$url</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #9876AA">\$url</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;HTTP/1.1&nbsp;200&nbsp;OK<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Date:&nbsp;Sat,&nbsp;29&nbsp;May&nbsp;2004&nbsp;12:28:13&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Server:&nbsp;Apache/1.3.27&nbsp;(Unix)&nbsp;&nbsp;(Red-Hat/Linux)<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;Last-Modified:&nbsp;Wed,&nbsp;08&nbsp;Jan&nbsp;2003&nbsp;23:11:55&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;ETag:&nbsp;"3f80f-1b6-3e1cb03b"<br>&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;Accept-Ranges:&nbsp;bytes<br>&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;Content-Length:&nbsp;438<br>&nbsp;&nbsp;&nbsp;&nbsp;[7]&nbsp;=&gt;&nbsp;Connection:&nbsp;close<br>&nbsp;&nbsp;&nbsp;&nbsp;[8]&nbsp;=&gt;&nbsp;Content-Type:&nbsp;text/html<br>)<br><br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;HTTP/1.1&nbsp;200&nbsp;OK<br>&nbsp;&nbsp;&nbsp;&nbsp;[Date]&nbsp;=&gt;&nbsp;Sat,&nbsp;29&nbsp;May&nbsp;2004&nbsp;12:28:14&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;[Server]&nbsp;=&gt;&nbsp;Apache/1.3.27&nbsp;(Unix)&nbsp;&nbsp;(Red-Hat/Linux)<br>&nbsp;&nbsp;&nbsp;&nbsp;[Last-Modified]&nbsp;=&gt;&nbsp;Wed,&nbsp;08&nbsp;Jan&nbsp;2003&nbsp;23:11:55&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;[ETag]&nbsp;=&gt;&nbsp;"3f80f-1b6-3e1cb03b"<br>&nbsp;&nbsp;&nbsp;&nbsp;[Accept-Ranges]&nbsp;=&gt;&nbsp;bytes<br>&nbsp;&nbsp;&nbsp;&nbsp;[Content-Length]&nbsp;=&gt;&nbsp;438<br>&nbsp;&nbsp;&nbsp;&nbsp;[Connection]&nbsp;=&gt;&nbsp;close<br>&nbsp;&nbsp;&nbsp;&nbsp;[Content-Type]&nbsp;=&gt;&nbsp;text/html<br>)</blockquote></div>    </div>   </div>   <div class="example" id="example-4104">    <p><strong>示例 #2 <span class="function"><strong>get_headers()</strong></span> 使用 HEAD 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 默认 get_headers 使用 GET 请求获取 header。如果想要发送<br>// HEAD 请求，可以通过 stream context 进行 HEAD 请求：<br></span><span style="color: #9876AA">\$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(<br>    [<br>        </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; array(<br>            </span><span style="color: #DD0000">'method' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'HEAD'<br>        </span><span style="color: #007700">)<br>    ]<br>);<br></span><span style="color: #9876AA">\$headers </span><span style="color: #007700">= </span><span style="color: #9876AA">get_headers</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://example.com'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">\$context</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.get-headers-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link apache_request_headers()} - 获取全部 HTTP 请求 header</span></li>   </ul>   </div></div>
 * 
 * Fetches all the headers sent by the server in response to an HTTP request
 * @link https://php.net/manual/zh/function.get-headers.php
 * @param string $url <p>
 * The target URL.
 * </p>
 * @param bool $associative [optional] <p>
 * If the optional format parameter is set to true,
 * get_headers parses the response and sets the
 * array's keys.
 * </p>
 * @param resource $context [optional]
 * @return array|false an indexed or associative array with the headers, or false on
 * failure.
 */
#[Pure(true)]
function get_headers(
    string $url,
    #[LanguageLevelTypeAware(['8.0' => 'bool'], default: 'int')] $associative = false,
    #[PhpStormStubsElementAvailable(from: '7.1')] $context = null
): array|false {}

/**
 * <div id="function.stream-set-timeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">stream_set_timeout</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stream_set_timeout</span> — <span class="dc-title">Set timeout period on a stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.stream-set-timeout-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stream_set_timeout</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> <span class="parameter" style="color:#3A95FF">\$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$seconds</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microseconds</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets the timeout value on <span class="parameter" style="color:#3A95FF">stream</span>,   expressed in the sum of <span class="parameter" style="color:#3A95FF">seconds</span> and   <span class="parameter" style="color:#3A95FF">microseconds</span>.   </p>  <p class="para">   When the stream times out, the 'timed_out' key of the array returned by   <span class="function">{@link stream_get_meta_data()}</span> is set to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, although no   error/warning is generated.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.stream-set-timeout-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       The target stream.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">seconds</span></dt>     <dd>      <p class="para">       The seconds part of the timeout to be set.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">microseconds</span></dt>     <dd>      <p class="para">       The microseconds part of the timeout to be set.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.stream-set-timeout-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.stream-set-timeout-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4042">    <p><strong>示例 #1 <span class="function"><strong>stream_set_timeout()</strong></span> example</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fsockopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"www.example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">80</span><span style="color: #007700">);<br>if (!</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Unable to open\n"</span><span style="color: #007700">;<br>} else {<br><br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"GET / HTTP/1.0\r\n\r\n"</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">stream_set_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$res </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">2000</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">\$info </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_get_meta_data</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fp</span><span style="color: #007700">);<br><br>    if (</span><span style="color: #9876AA">\$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'timed_out'</span><span style="color: #007700">]) {<br>        echo </span><span style="color: #DD0000">'Connection timed out!'</span><span style="color: #007700">;<br>    } else {<br>        echo </span><span style="color: #9876AA">\$res</span><span style="color: #007700">;<br>    }<br><br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 notes" id="refsect1-function.stream-set-timeout-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This function doesn't work with advanced operations like    <span class="function">{@link stream_socket_recvfrom()}</span>, use    <span class="function">{@link stream_select()}</span> with timeout parameter instead.   </p>  </blockquote>  <p class="para">   This function was previously called as   <span class="function"><strong>set_socket_timeout()</strong></span> and later   <span class="function">{@link socket_set_timeout()}</span> but this usage is deprecated.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.stream-set-timeout-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>   <li><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>  </ul> </div></div>
 * 
 * Set timeout period on a stream
 * @link https://php.net/manual/zh/function.stream-set-timeout.php
 * @param resource $stream <p>
 * The target stream.
 * </p>
 * @param int $seconds <p>
 * The seconds part of the timeout to be set.
 * </p>
 * @param int $microseconds <p>
 * The microseconds part of the timeout to be set.
 * </p>
 * @return bool true on success or false on failure.
 */
function stream_set_timeout(

    $stream,
    int $seconds,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] int $microseconds,
    #[PhpStormStubsElementAvailable(from: '7.0')] int $microseconds = 0
): bool {}

/**
 * <div id="function.socket-set-timeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">socket_set_timeout</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">socket_set_timeout</span> — <span class="dc-title">别名 <span class="function">{@link stream_set_timeout()}</span></span></p>  </div> <div class="refsect1 description" id="refsect1-function.socket-set-timeout-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link stream_set_timeout()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see stream_set_timeout}
 * Set timeout period on a stream
 * @link https://php.net/manual/zh/function.socket-set-timeout.php
 * @param resource $stream <p>
 * The target stream.
 * </p>
 * @param int $seconds <p>
 * The seconds part of the timeout to be set.
 * </p>
 * @param int $microseconds <p>
 * The microseconds part of the timeout to be set.
 * </p>
 * @return bool true on success or false on failure.
 */
function socket_set_timeout(

    $stream,
    int $seconds,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] int $microseconds,
    #[PhpStormStubsElementAvailable(from: '7.0')] int $microseconds = 0
): bool {}

/**
 * <div id="function.socket-get-status" class="refentry"> <div class="refnamediv">  <h1 class="refname">socket_get_status</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">socket_get_status</span> — <span class="dc-title">别名 <span class="function">{@link stream_get_meta_data()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.socket-get-status-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link stream_get_meta_data()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see stream_get_meta_data}
 * Retrieves header/meta data from streams/file pointers
 * @link https://php.net/manual/zh/function.socket-get-status.php
 * @param resource $stream <p>
 * The stream can be any stream created by fopen,
 * fsockopen and pfsockopen.
 * </p>
 * @return array The result array contains the following items:
 * <p>
 * timed_out (bool) - true if the stream
 * timed out while waiting for data on the last call to
 * fread or fgets.
 * </p>
 * <p>
 * blocked (bool) - true if the stream is
 * in blocking IO mode. See stream_set_blocking.
 * </p>
 * <p>
 * eof (bool) - true if the stream has reached
 * end-of-file. Note that for socket streams this member can be true
 * even when unread_bytes is non-zero. To
 * determine if there is more data to be read, use
 * feof instead of reading this item.
 * </p>
 * <p>
 * unread_bytes (int) - the number of bytes
 * currently contained in the PHP's own internal buffer.
 * </p>
 * You shouldn't use this value in a script.
 * <p>
 * stream_type (string) - a label describing
 * the underlying implementation of the stream.
 * </p>
 * <p>
 * wrapper_type (string) - a label describing
 * the protocol wrapper implementation layered over the stream.
 * See for more information about wrappers.
 * </p>
 * <p>
 * wrapper_data (mixed) - wrapper specific
 * data attached to this stream. See for
 * more information about wrappers and their wrapper data.
 * </p>
 * <p>
 * filters (array) - and array containing
 * the names of any filters that have been stacked onto this stream.
 * Documentation on filters can be found in the
 * Filters appendix.
 * </p>
 * <p>
 * mode (string) - the type of access required for
 * this stream (see Table 1 of the fopen() reference)
 * </p>
 * <p>
 * seekable (bool) - whether the current stream can
 * be seeked.
 * </p>
 * <p>
 * uri (string) - the URI/filename associated with this
 * stream.
 * </p>
 */
function socket_get_status($stream): array {}

/**
 * <div id="function.realpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">realpath</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">realpath</span> — <span class="dc-title">返回规范化的绝对路径名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.realpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>realpath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$path</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>realpath()</strong></span> 扩展所有符号连接，并处理输入   <span class="parameter" style="color:#3A95FF">path</span> 中的 <span class="literal">/./</span>、<span class="literal">/../</span> 和多余的   <span class="literal">/</span>，并返回规范化的绝对路径名。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.realpath-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       要处理的路径。       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         虽然必须提供路径，但该值可以是一个空字符串。         在这种情况下，该值将被解释为当前目录。        </p>       </blockquote>           </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.realpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回规范化的绝对路径名。返回的路径中没有符号连接（symbolic link）、<span class="literal">/./</span> 或 <span class="literal">/../</span> 成分。   例如 <span class="literal">\</span> 和 <span class="literal">/</span> 这样的尾随分隔符也将被删除。  </p>  <p class="para">   <span class="function"><strong>realpath()</strong></span> 失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，例如文件不存在。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    当前运行的脚本必须对要处理的路径中的每层目录都具有可执行权限，否则    <span class="function"><strong>realpath()</strong></span> 将返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    对于不区分大小写的文件系统，<span class="function"><strong>realpath()</strong></span> 不一定会规范字符大小写。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>realpath()</strong></span> 函数不适用于 Phar 内的文件，因为该路径是虚拟路径，而不是真实路径。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在 Windows 上，目录的结点和符号链接仅扩展一级。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div> <div class="refsect1 examples" id="refsect1-function.realpath-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2391">    <p><strong>示例 #1 <span class="function"><strong>realpath()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>chdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'/var/www/'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'./../../etc/passwd'</span><span style="color: #007700">) . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp/'</span><span style="color: #007700">) . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">/etc/passwd<br>/tmp</blockquote></div>    </div>   </div>   <div class="example" id="example-2392">    <p><strong>示例 #2 Windows 上的 <span class="function"><strong>realpath()</strong></span></strong></p>    <div class="example-contents"><p>     在 Windows 上，<span class="function"><strong>realpath()</strong></span> 会将 unix 风格的路径改成 Windows 风格。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'/windows/system32'</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">'C:\Program Files\\'</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">C:\WINDOWS\System32<br>C:\Program&nbsp;Files</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.realpath-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link basename()} - 返回路径中的文件名部分</span></li>    <li><span class="function">{@link dirname()} - 返回路径中的目录部分</span></li>    <li><span class="function">{@link pathinfo()} - 返回文件路径的信息</span></li>   </ul>   </div></div>
 * 
 * Returns canonicalized absolute pathname
 * @link https://php.net/manual/zh/function.realpath.php
 * @param string $path <p>
 * The path being checked.
 * </p>
 * @return string|false the canonicalized absolute pathname on success. The resulting path
 * will have no symbolic link, '/./' or '/../' components.
 * <p>
 * realpath returns false on failure, e.g. if
 * the file does not exist.
 * </p>
 */
#[Pure(true)]
function realpath(string $path): string|false {}

/**
 * <div id="function.fnmatch" class="refentry"> <div class="refnamediv">  <h1 class="refname">fnmatch</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fnmatch</span> — <span class="dc-title">用模式匹配文件名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.fnmatch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fnmatch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>fnmatch()</strong></span> 检查传入的 <span class="parameter" style="color:#3A95FF">filename</span>   是否匹配给出的 shell 通配符 <span class="parameter" style="color:#3A95FF">pattern</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.fnmatch-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       要匹配的 <span class="parameter" style="color:#3A95FF">pattern</span>。通常，<span class="parameter" style="color:#3A95FF">pattern</span>       将包含匹配符，像 <span class="literal">'?'</span> 和 <span class="literal">'*'</span>。       </p><table class="doctable table">        <caption><strong>         <span class="parameter" style="color:#3A95FF">pattern</span> 参数要使用的匹配符        </strong></caption>                 <thead>          <tr>           <th>匹配符</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>            <span class="literal">?</span>           </td>           <td>            问号将匹配任何单个字符。比如，模式 <span class="literal">"file?.txt"</span> 将匹配 <span class="literal">"file1.txt"</span>            和 <span class="literal">"fileA.txt"</span>，但不会匹配 <span class="literal">"file10.txt"</span>。           </td>          </tr>          <tr>           <td>            <span class="literal">*</span>           </td>           <td>            星号将匹配零或多个字符。例如 <span class="literal">"foo*.xml"</span> 将匹配             <span class="literal">"foo.xml"</span> 和 <span class="literal">"foobar.xml"</span>。           </td>          </tr>          <tr>           <td>            <span class="literal">[ ]</span>           </td>           <td>            中括号用于创建 ASCII 码点范围或字符集。例如，模式 <span class="literal">"index.php[45]"</span> 将匹配 <span class="literal">"index.php4"</span> 和            <span class="literal">"index.php5"</span>，但不会匹配 <span class="literal">"index.phpt"</span>。众所周知的范围是 <span class="literal">[0-9]</span>、<span class="literal">[a-z]</span>            和 <span class="literal">[A-Z]</span>。可以同时使用多个集合和范围，例如 <span class="literal">[0-9a-zABC]</span>。           </td>          </tr>          <tr>           <td>            <span class="literal">!</span>           </td>           <td>            感叹号用于否定中括号内的字符。例如，<span class="literal">"[!A-Z]*.html"</span> 将匹配            <span class="literal">"demo.html"</span>，但不会匹配 <span class="literal">"Demo.html"</span>。           </td>          </tr>          <tr>           <td>            <span class="literal">\</span>           </td>           <td>            反斜线用于转义特殊字符。例如 <span class="literal">"Name\?"</span> 将匹配 <span class="literal">"Name?"</span> ，但不会匹配 <span class="literal">"Names"</span>。           </td>          </tr>         </tbody>               </table>           </dd>             <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要检查的字符串。       此函数对于文件名尤其有用，但也可以用于普通的字符串。      </p>      <p class="para">       普通用户可能习惯于 shell 模式或者至少在最简单的形式下使用       <span class="literal">'?'</span> 和 <span class="literal">'*'</span> 通配符，       因此在前端搜索表达式输入中，使用 <span class="function"><strong>fnmatch()</strong></span> 来代替       <span class="function">{@link preg_match()}</span> 对于非编程用户更加方便。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">flags</span> 值可以是下列 flag 的任意组合，并用<a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">位运算符 OR (|)</a> 连接。       </p><table class="doctable table">        <caption><strong>         <span class="function"><strong>fnmatch()</strong></span> flag 列表        </strong></caption>                 <thead>          <tr>           <th><span class="parameter" style="color:#3A95FF">Flag</span></th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.fnm-noescape">FNM_NOESCAPE</a></span></strong></td>           <td>            禁用反斜线转义。           </td>          </tr>          <tr>           <td><strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.fnm-pathname">FNM_PATHNAME</a></span></strong></td>           <td>            Slash in string only matches slash in the given pattern.           </td>          </tr>          <tr>           <td><strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.fnm-period">FNM_PERIOD</a></span></strong></td>           <td>            Leading period in string must be exactly matched by period in the given pattern.           </td>          </tr>          <tr>           <td><strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.fnm-casefold">FNM_CASEFOLD</a></span></strong></td>           <td>            Caseless match. Part of the GNU extension.           </td>          </tr>         </tbody>               </table>           </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.fnmatch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   匹配则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.fnmatch-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2345">    <p><strong>示例 #1 用 shell 中的通配符模式匹配来检查颜色名称</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">fnmatch</span><span style="color: #007700">(</span><span style="color: #DD0000">"*gr[ae]y"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$color</span><span style="color: #007700">)) {<br>  echo </span><span style="color: #DD0000">"some form of gray ..."</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 notes" id="refsect1-function.fnmatch-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    目前该函数无法在 Windows 或其它非 POSIX 兼容的系统上使用。   </p>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.fnmatch-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link glob()} - 寻找与模式匹配的文件路径</span></li>    <li><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>    <li><span class="function">{@link sscanf()} - 根据指定格式解析输入的字符</span></li>    <li><span class="function">{@link printf()} - 输出格式化字符串</span></li>    <li><span class="function">{@link sprintf()} - 返回格式化字符串</span></li>   </ul>   </div> </div>
 * 
 * Match filename against a pattern
 * @link https://php.net/manual/zh/function.fnmatch.php
 * @param string $pattern <p>
 * The shell wildcard pattern.
 * </p>
 * @param string $filename <p>
 * The tested string. This function is especially useful for filenames,
 * but may also be used on regular strings.
 * </p>
 * <p>
 * The average user may be used to shell patterns or at least in their
 * simplest form to '?' and '*'
 * wildcards so using fnmatch instead of
 * preg_match for
 * frontend search expression input may be way more convenient for
 * non-programming users.
 * </p>
 * @param int $flags <p>
 * The value of flags can be any combination of
 * the following flags, joined with the
 * binary OR (|) operator.
 * <table>
 * A list of possible flags for fnmatch
 * <tr valign="top">
 * <td>Flag</td>
 * <td>Description</td>
 * </tr>
 * <tr valign="top">
 * <td>FNM_NOESCAPE</td>
 * <td>
 * Disable backslash escaping.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>FNM_PATHNAME</td>
 * <td>
 * Slash in string only matches slash in the given pattern.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>FNM_PERIOD</td>
 * <td>
 * Leading period in string must be exactly matched by period in the given pattern.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>FNM_CASEFOLD</td>
 * <td>
 * Caseless match. Part of the GNU extension.
 * </td>
 * </tr>
 * </table>
 * </p>
 * @return bool true if there is a match, false otherwise.
 */
#[Pure(true)]
function fnmatch(string $pattern, string $filename, int $flags = 0): bool {}
