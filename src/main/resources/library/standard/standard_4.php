<?php

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Pure;

/**
 * <div id="function.error-get-last" class="refentry"> <div class="refnamediv">  <h1 class="refname">error_get_last</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">error_get_last</span> — <span class="dc-title">获取最后发生的错误</span></p> </div> <div class="refsect1 description" id="refsect1-function.error-get-last-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>error_get_last</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   获取关于最后一个发生的错误的信息。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.error-get-last-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.error-get-last-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回了一个关联数组，描述了最后错误的信息，以该错误的 "type"、   "message"、"file" 和 "line" 为数组的键。   如果该错误由 PHP 内置函数导致的，"message"会以该函数名开头。   如果还没有错误则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.error-get-last-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-573">    <p><strong>示例 #1 An <span class="function"><strong>error_get_last()</strong></span> 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$a</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">error_get_last</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;8<br>&nbsp;&nbsp;&nbsp;&nbsp;[message]&nbsp;=&gt;&nbsp;Undefined&nbsp;variable:&nbsp;a<br>&nbsp;&nbsp;&nbsp;&nbsp;[file]&nbsp;=&gt;&nbsp;C:\WWW\index.php<br>&nbsp;&nbsp;&nbsp;&nbsp;[line]&nbsp;=&gt;&nbsp;2<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.error-get-last-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/errorfunc.constants.php" class="link">Error 常量</a></li>    <li><var class="varname"><a href="https://php.net/manual/zh/reserved.variables.phperrormsg.php" class="classname">\$php_errormsg</a></var> 变量</li>    <li><span class="function">{@link error_clear_last()} - 清除最近一次错误</span></li>    <li><a href="https://php.net/manual/zh/errorfunc.configuration.php#ini.display-errors" class="link"><span class="parameter" style="color:#3A95FF">display_errors</span> 指令</a></li>    <li><a href="https://php.net/manual/zh/errorfunc.configuration.php#ini.php-errors" class="link"><span class="parameter" style="color:#3A95FF">html_errors</span> 指令</a></li>    <li><a href="https://php.net/manual/zh/errorfunc.configuration.php#ini.xmlrpc-errors" class="link"><span class="parameter" style="color:#3A95FF">xmlrpc_errors</span> 指令</a></li>   </ul>   </div></div>
 * 
 * Get the last occurred error
 * @link https://php.net/manual/zh/function.error-get-last.php
 * @return array|null an associative array describing the last error with keys "type",
 * "message", "file" and "line". Returns null if there hasn't been an error
 * yet.
 */
#[ArrayShape(["type" => "int", "message" => "string", "file" => "string", "line" => "int"])]
#[Pure(true)]
function error_get_last(): ?array {}

/**
 * <div id="function.call-user-func" class="refentry"> <div class="refnamediv">  <h1 class="refname">call_user_func</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">call_user_func</span> — <span class="dc-title">把第一个参数作为回调函数调用</span></p> </div> <div class="refsect1 description" id="refsect1-function.call-user-func-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>call_user_func</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   第一个参数 <span class="parameter" style="color:#3A95FF">callback</span> 是被调用的回调函数，其余参数是回调函数的参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.call-user-func-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       将被调用的回调函数（<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">args</span></dt>     <dd>      <p class="para">       0个或以上的参数，被传入回调函数。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        请注意，传入<span class="function"><strong>call_user_func()</strong></span>的参数不能为引用传递。        </p><div class="example" id="example-5361">         <p><strong>示例 #1 <span class="function"><strong>call_user_func()</strong></span> 的参考例子</strong></p>         <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br>function </span><span style="color: #9876AA">increment</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">\$var</span><span style="color: #007700">)<br>{<br>    </span><span style="color: #9876AA">\$var</span><span style="color: #007700">++;<br>}<br><br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'increment'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$a</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// it is possible to use this instead<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'increment'</span><span style="color: #007700">, array(&amp;</span><span style="color: #9876AA">\$a</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$a</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// it is also possible to use a variable function<br></span><span style="color: #9876AA">\$increment </span><span style="color: #007700">= </span><span style="color: #DD0000">'increment'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$increment</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$a</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>         </div>         <div class="example-contents"><p>以上示例会输出：</p></div>         <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="parameterscode"><blockquote style="border:1px gray solid;">Warning:&nbsp;Parameter&nbsp;1&nbsp;to&nbsp;increment()&nbsp;expected&nbsp;to&nbsp;be&nbsp;a&nbsp;reference,&nbsp;value&nbsp;given&nbsp;in&nbsp;â¦<br>0<br>1<br>2</blockquote></div>         </div>        </div>             </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.call-user-func-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回回调函数的返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.call-user-func-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5362">    <p><strong>示例 #2 <span class="function"><strong>call_user_func()</strong></span> 的例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">barber</span><span style="color: #007700">(</span><span style="color: #9876AA">\$type</span><span style="color: #007700">)<br>{<br>    echo </span><span style="color: #DD0000">"You wanted a </span><span style="color: #9876AA">\$type</span><span style="color: #DD0000"> haircut, no problem\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'barber'</span><span style="color: #007700">, </span><span style="color: #DD0000">"mushroom"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #DD0000">'barber'</span><span style="color: #007700">, </span><span style="color: #DD0000">"shave"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">You&nbsp;wanted&nbsp;a&nbsp;mushroom&nbsp;haircut,&nbsp;no&nbsp;problem<br>You&nbsp;wanted&nbsp;a&nbsp;shave&nbsp;haircut,&nbsp;no&nbsp;problem</blockquote></div>    </div>   </div>   <div class="example" id="example-5363">    <p><strong>示例 #3 <span class="function"><strong>call_user_func()</strong></span> 命名空间的使用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">namespace </span><span style="color: #9876AA">Foobar</span><span style="color: #007700">;<br><br>class </span><span style="color: #9876AA">Foo </span><span style="color: #007700">{<br>    static public function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        print </span><span style="color: #DD0000">"Hello world!\n"</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #9876AA">__NAMESPACE__ </span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo::test'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">__NAMESPACE__ </span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'test'</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello&nbsp;world!<br>Hello&nbsp;world!</blockquote></div>    </div>   </div>   <div class="example" id="example-5364">    <p><strong>示例 #4 用<span class="function"><strong>call_user_func()</strong></span>来调用一个类里面的方法</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">myclass </span><span style="color: #007700">{<br>    static function </span><span style="color: #9876AA">say_hello</span><span style="color: #007700">()<br>    {<br>        echo </span><span style="color: #DD0000">"Hello!\n"</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">\$classname </span><span style="color: #007700">= </span><span style="color: #DD0000">"myclass"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">\$classname</span><span style="color: #007700">, </span><span style="color: #DD0000">'say_hello'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(</span><span style="color: #9876AA">\$classname </span><span style="color: #007700">.</span><span style="color: #DD0000">'::say_hello'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$myobject </span><span style="color: #007700">= new </span><span style="color: #9876AA">myclass</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">call_user_func</span><span style="color: #007700">(array(</span><span style="color: #9876AA">\$myobject</span><span style="color: #007700">, </span><span style="color: #DD0000">'say_hello'</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello!<br>Hello!<br>Hello!</blockquote></div>    </div>      </div>   <div class="example" id="example-5365">    <p><strong>示例 #5 把完整的函数作为回调传入<span class="function"><strong>call_user_func()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>call_user_func</span><span style="color: #007700">(function(</span><span style="color: #9876AA">\$arg</span><span style="color: #007700">) { print </span><span style="color: #DD0000">"[</span><span style="color: #9876AA">\$arg</span><span style="color: #DD0000">]\n"</span><span style="color: #007700">; }, </span><span style="color: #DD0000">'test'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">[test]</blockquote></div>    </div>      </div>   </div> <div class="refsect1 notes" id="refsect1-function.call-user-func-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">在函数中注册有多个回调内容时(如使用<span class="function"><strong>call_user_func()</strong></span> 与 <span class="function">{@link call_user_func_array()}</span>)，如在前一个回调中有未捕获的异常，其后的将不再被调用。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.call-user-func-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>    <li><span class="function">{@link is_callable()} - 验证值是否可以在当前范围内作为函数调用</span></li>    <li><a href="https://php.net/manual/zh/functions.variable-functions.php" class="link">Variable functions</a></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionFunction::invoke()} - Invokes function</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionMethod::invoke()} - Invoke</span></li>   </ul>   </div></div>
 * 
 * Call the callback given by the first parameter
 * @link https://php.net/manual/zh/function.call-user-func.php
 * @param callable $callback <p>
 * The function to be called. Class methods may also be invoked
 * statically using this function by passing
 * array($classname, $methodname) to this parameter.
 * Additionally class methods of an object instance may be called by passing
 * array($objectinstance, $methodname) to this parameter.
 * </p>
 * @param mixed ...$args [optional] <p>
 * Zero or more parameters to be passed to the function.
 * </p>
 * <p>
 * Note that the parameters for call_user_func are
 * not passed by reference.
 * call_user_func example and references
 * </p>
 * @return mixed the function result, or false on error.
 */
function call_user_func(callable $callback, mixed ...$args): mixed {}

/**
 * <div id="function.call-user-func-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">call_user_func_array</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">call_user_func_array</span> — <span class="dc-title">调用回调函数，并把一个数组参数作为回调函数的参数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.call-user-func-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>call_user_func_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   把第一个参数作为回调函数（<span class="parameter" style="color:#3A95FF">callback</span>）调用，把参数数组作（<span class="parameter" style="color:#3A95FF">args</span>）为回调函数的的参数传入。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.call-user-func-array-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       被调用的回调函数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">args</span></dt>     <dd>      <p class="para">       要被传入回调函数的数组。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">args</span> 的 key 都是数字，则会忽略 key，并按顺序将每个元素作为位置参数传递给 <span class="parameter" style="color:#3A95FF">callback</span> 。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">args</span> 的任一 key 是字符串，则这些元素将作为命名参数传递给 <span class="parameter" style="color:#3A95FF">callback</span>，名称由 key 指定。      </p>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">args</span> 中，如果数字 key 在 字符串 key 之后出现，或者字符串 key       与 <span class="parameter" style="color:#3A95FF">callback</span> 的任何参数名称不匹配，将会导致 fatal error。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.call-user-func-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回回调函数的结果。如果出错的话就返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.call-user-func-array-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">args</span> 键现在将被解释为参数名称，而不是被默默地忽略。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.call-user-func-array-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5366">    <p><strong>示例 #1 <span class="function"><strong>call_user_func_array()</strong></span>例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">foobar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arg</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arg2</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">__FUNCTION__</span><span style="color: #007700">, </span><span style="color: #DD0000">" got </span><span style="color: #9876AA">\$arg</span><span style="color: #DD0000"> and </span><span style="color: #9876AA">\$arg2</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br>class </span><span style="color: #9876AA">foo </span><span style="color: #007700">{<br>    function </span><span style="color: #9876AA">bar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arg</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arg2</span><span style="color: #007700">) {<br>        echo </span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">, </span><span style="color: #DD0000">" got </span><span style="color: #9876AA">\$arg</span><span style="color: #DD0000"> and </span><span style="color: #9876AA">\$arg2</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>    }<br>}<br><br><br></span><span style="color: #FF8000">// Call the foobar() function with 2 arguments<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"foobar"</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"one"</span><span style="color: #007700">, </span><span style="color: #DD0000">"two"</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Call the \$foo-&gt;bar() method with 2 arguments<br></span><span style="color: #9876AA">\$foo </span><span style="color: #007700">= new </span><span style="color: #9876AA">foo</span><span style="color: #007700">;<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(array(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #DD0000">"bar"</span><span style="color: #007700">), array(</span><span style="color: #DD0000">"three"</span><span style="color: #007700">, </span><span style="color: #DD0000">"four"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">foobar&nbsp;got&nbsp;one&nbsp;and&nbsp;two<br>foo::bar&nbsp;got&nbsp;three&nbsp;and&nbsp;four</blockquote></div>    </div>   </div>   <div class="example" id="example-5367">    <p><strong>示例 #2 <span class="function"><strong>call_user_func_array()</strong></span>使用命名空间的情况</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">namespace </span><span style="color: #9876AA">Foobar</span><span style="color: #007700">;<br><br>class </span><span style="color: #9876AA">Foo </span><span style="color: #007700">{<br>    static public function </span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">) {<br>        print </span><span style="color: #DD0000">"Hello </span><span style="color: #007700">{</span><span style="color: #9876AA">\$name</span><span style="color: #007700">}</span><span style="color: #DD0000">!\n"</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #9876AA">__NAMESPACE__ </span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo::test'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'Hannes'</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(array(</span><span style="color: #9876AA">__NAMESPACE__ </span><span style="color: #007700">.</span><span style="color: #DD0000">'\Foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'test'</span><span style="color: #007700">), array(</span><span style="color: #DD0000">'Philip'</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello&nbsp;Hannes!<br>Hello&nbsp;Philip!</blockquote></div>    </div>   </div>   <div class="example" id="example-5368">    <p><strong>示例 #3 把完整的函数作为回调传入<span class="function"><strong>call_user_func_array()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$func </span><span style="color: #007700">= function(</span><span style="color: #9876AA">\$arg1</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arg2</span><span style="color: #007700">) {<br>    return </span><span style="color: #9876AA">\$arg1 </span><span style="color: #007700">* </span><span style="color: #9876AA">\$arg2</span><span style="color: #007700">;<br>};<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #9876AA">\$func</span><span style="color: #007700">, array(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">)));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(8)</blockquote></div>    </div>   </div>   <div class="example" id="example-5369">    <p><strong>示例 #4 传引用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">function </span><span style="color: #9876AA">mega</span><span style="color: #007700">(&amp;</span><span style="color: #9876AA">\$a</span><span style="color: #007700">){<br>    </span><span style="color: #9876AA">\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">55</span><span style="color: #007700">;<br>    echo </span><span style="color: #DD0000">"function mega \\$a=</span><span style="color: #9876AA">\$a</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">77</span><span style="color: #007700">;<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'mega'</span><span style="color: #007700">,array(&amp;</span><span style="color: #9876AA">\$bar</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"global \\$bar=</span><span style="color: #9876AA">\$bar</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">function&nbsp;mega&nbsp;\$a=55<br>global&nbsp;\$bar=55</blockquote></div>    </div>   </div>   <div class="example" id="example-5370">    <p><strong>示例 #5 <span class="function"><strong>call_user_func_array()</strong></span> 使用命名参数</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">foobar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$first</span><span style="color: #007700">, </span><span style="color: #9876AA">\$second</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">__FUNCTION__</span><span style="color: #007700">, </span><span style="color: #DD0000">" got </span><span style="color: #9876AA">\$first</span><span style="color: #DD0000"> and </span><span style="color: #9876AA">\$second</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #FF8000">// Call the foobar() function with named arguments in non-positional order<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"foobar"</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"second" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"two"</span><span style="color: #007700">, </span><span style="color: #DD0000">"first" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"one"</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Call the foobar() function with one named argument<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"foobar"</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">, </span><span style="color: #DD0000">"second" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"bar"</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Fatal error: Cannot use positional argument after named argument<br></span><span style="color: #9876AA">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">"foobar"</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"first" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"one"</span><span style="color: #007700">, </span><span style="color: #DD0000">"bar"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">foobar&nbsp;got&nbsp;one&nbsp;and&nbsp;two<br>foobar&nbsp;got&nbsp;foo&nbsp;and&nbsp;bar<br><br>Fatal&nbsp;error:&nbsp;Uncaught&nbsp;Error:&nbsp;Cannot&nbsp;use&nbsp;positional&nbsp;argument&nbsp;after&nbsp;named&nbsp;argument</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.call-user-func-array-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">在函数中注册有多个回调内容时(如使用<span class="function">{@link call_user_func()}</span> 与 <span class="function"><strong>call_user_func_array()</strong></span>)，如在前一个回调中有未捕获的异常，其后的将不再被调用。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.call-user-func-array-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionFunction::invokeArgs()} - Invokes function args</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionMethod::invokeArgs()} - 带参数执行</span></li>   </ul>   </div></div>
 * 
 * Call a callback with an array of parameters
 * @link https://php.net/manual/zh/function.call-user-func-array.php
 * @param callable $callback <p>
 * The function to be called.
 * </p>
 * @param array $args <p>
 * The parameters to be passed to the function, as an indexed array.
 * </p>
 * @return mixed the function result, or false on error.
 */
function call_user_func_array(callable $callback, array $args): mixed {}

/**
 * Call a user method on an specific object
 * @link https://php.net/manual/en/function.call-user-method.php
 * @param string $method_name
 * @param object &$obj
 * @param mixed ...$parameter [optional]
 * @return mixed
 * @removed 7.0
 * @see call_user_func()
 */
#[Deprecated(reason: "use call_user_func() instead", since: "5.3")]
function call_user_method(string $method_name, object &$obj, ...$parameter): mixed {}

/**
 * Call a user method given with an array of parameters
 * @link https://php.net/manual/en/function.call-user-method-array.php
 * @param string $method_name
 * @param object &$obj
 * @param array $params
 * @return mixed
 * @removed 7.0
 * @see call_user_func()
 */
#[Deprecated(reason: "use call_user_func() instead", since: "5.3")]
function call_user_method_array(string $method_name, object &$obj, array $params): mixed {}

/**
 * <div id="function.forward-static-call" class="refentry"> <div class="refnamediv">  <h1 class="refname">forward_static_call</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">forward_static_call</span> — <span class="dc-title">调用静态方法</span></p> </div> <div class="refsect1 description" id="refsect1-function.forward-static-call-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>forward_static_call</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   使用以下参数，调用通过 <span class="parameter" style="color:#3A95FF">callback</span>   参数给出的用户定义的函数或者方法。此函数必须在方法上下文中调用，不能在类外调用。它使用<a href="https://php.net/manual/zh/language.oop5.late-static-bindings.php" class="link">后期静态绑定</a>  </p> </div> <div class="refsect1 parameters" id="refsect1-function.forward-static-call-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       要调用的函数或者方法。此参数可以是带类名及方法的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 或者带函数名的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">args</span></dt>     <dd>      <p class="para">       要传递给函数的零到多个参数。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.forward-static-call-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回函数结果，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.forward-static-call-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5374">    <p><strong>示例 #1 <span class="function"><strong>forward_static_call()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">A<br></span><span style="color: #007700">{<br>    const </span><span style="color: #9876AA">NAME </span><span style="color: #007700">= </span><span style="color: #DD0000">'A'</span><span style="color: #007700">;<br>    public static function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">\$args </span><span style="color: #007700">= </span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br>        echo static::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">, </span><span style="color: #DD0000">" "</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #9876AA">\$args</span><span style="color: #007700">).</span><span style="color: #DD0000">" \n"</span><span style="color: #007700">;<br>    }<br>}<br><br>class </span><span style="color: #9876AA">B </span><span style="color: #007700">extends </span><span style="color: #9876AA">A<br></span><span style="color: #007700">{<br>    const </span><span style="color: #9876AA">NAME </span><span style="color: #007700">= </span><span style="color: #DD0000">'B'</span><span style="color: #007700">;<br><br>    public static function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        echo </span><span style="color: #9876AA">self</span><span style="color: #007700">::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>        </span><span style="color: #9876AA">forward_static_call</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'A'</span><span style="color: #007700">, </span><span style="color: #DD0000">'test'</span><span style="color: #007700">), </span><span style="color: #DD0000">'more'</span><span style="color: #007700">, </span><span style="color: #DD0000">'args'</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">forward_static_call</span><span style="color: #007700">( </span><span style="color: #DD0000">'test'</span><span style="color: #007700">, </span><span style="color: #DD0000">'other'</span><span style="color: #007700">, </span><span style="color: #DD0000">'args'</span><span style="color: #007700">);<br>    }<br>}<br><br></span><span style="color: #9876AA">B</span><span style="color: #007700">::</span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br><br>function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">\$args </span><span style="color: #007700">= </span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br>        echo </span><span style="color: #DD0000">"C "</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #9876AA">\$args</span><span style="color: #007700">).</span><span style="color: #DD0000">" \n"</span><span style="color: #007700">;<br>    }<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">B<br>B&nbsp;more,args&nbsp;<br>C&nbsp;other,args</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.forward-static-call-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link forward_static_call_array()} - 调用静态方法且参数作为数组传递</span></li>    <li><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>    <li><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>    <li><span class="function">{@link is_callable()} - 验证值是否可以在当前范围内作为函数调用</span></li>   </ul>   </div></div>
 * 
 * Call a static method
 * @link https://php.net/manual/zh/function.forward-static-call.php
 * @param callable $callback <p>
 * The function or method to be called. This parameter may be an array,
 * with the name of the class, and the method, or a string, with a function
 * name.
 * </p>
 * @param mixed ...$args [optional] <p>
 * Zero or more parameters to be passed to the function.
 * </p>
 * @return mixed the function result, or false on error.
 */
function forward_static_call(callable $callback, mixed ...$args): mixed {}

/**
 * <div id="function.forward-static-call-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">forward_static_call_array</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">forward_static_call_array</span> — <span class="dc-title">调用静态方法且参数作为数组传递</span></p> </div> <div class="refsect1 description" id="refsect1-function.forward-static-call-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>forward_static_call_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   通过 <span class="parameter" style="color:#3A95FF">callback</span>   参数指定调用用户定义的函数或者方法。此函数必须在方法上下文中调用，不能在类外使用。它使用<a href="https://php.net/manual/zh/language.oop5.late-static-bindings.php" class="link">后期静态绑定</a>。转发方法的所有参数都作为值和数组传递，类似于   <span class="function">{@link call_user_func_array()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.forward-static-call-array-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       要调用的函数或者方法。此参数可以是带类名及方法的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 或者带函数名的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">parameter</span></dt>     <dd>      <p class="para">       参数，将所有方法参数聚合到一个数组中。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        注意 <span class="function"><strong>forward_static_call_array()</strong></span> 的参数不是通过引用传递的。       </p>      </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.forward-static-call-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回函数的结果，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.forward-static-call-array-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5375">    <p><strong>示例 #1 <span class="function"><strong>forward_static_call_array()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">A<br></span><span style="color: #007700">{<br>    const </span><span style="color: #9876AA">NAME </span><span style="color: #007700">= </span><span style="color: #DD0000">'A'</span><span style="color: #007700">;<br>    public static function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">\$args </span><span style="color: #007700">= </span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br>        echo static::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">, </span><span style="color: #DD0000">" "</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #9876AA">\$args</span><span style="color: #007700">).</span><span style="color: #DD0000">" \n"</span><span style="color: #007700">;<br>    }<br>}<br><br>class </span><span style="color: #9876AA">B </span><span style="color: #007700">extends </span><span style="color: #9876AA">A<br></span><span style="color: #007700">{<br>    const </span><span style="color: #9876AA">NAME </span><span style="color: #007700">= </span><span style="color: #DD0000">'B'</span><span style="color: #007700">;<br><br>    public static function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        echo </span><span style="color: #9876AA">self</span><span style="color: #007700">::</span><span style="color: #9876AA">NAME</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>        </span><span style="color: #9876AA">forward_static_call_array</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'A'</span><span style="color: #007700">, </span><span style="color: #DD0000">'test'</span><span style="color: #007700">), array(</span><span style="color: #DD0000">'more'</span><span style="color: #007700">, </span><span style="color: #DD0000">'args'</span><span style="color: #007700">));<br>        </span><span style="color: #9876AA">forward_static_call_array</span><span style="color: #007700">( </span><span style="color: #DD0000">'test'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'other'</span><span style="color: #007700">, </span><span style="color: #DD0000">'args'</span><span style="color: #007700">));<br>    }<br>}<br><br></span><span style="color: #9876AA">B</span><span style="color: #007700">::</span><span style="color: #9876AA">test</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br><br>function </span><span style="color: #9876AA">test</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">\$args </span><span style="color: #007700">= </span><span style="color: #9876AA">func_get_args</span><span style="color: #007700">();<br>        echo </span><span style="color: #DD0000">"C "</span><span style="color: #007700">.</span><span style="color: #9876AA">join</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #9876AA">\$args</span><span style="color: #007700">).</span><span style="color: #DD0000">" \n"</span><span style="color: #007700">;<br>    }<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">B<br>B&nbsp;more,args&nbsp;<br>C&nbsp;other,args</blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-function.forward-static-call-array-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link forward_static_call()} - 调用静态方法</span></li>    <li><span class="function">{@link call_user_func()} - 把第一个参数作为回调函数调用</span></li>    <li><span class="function">{@link call_user_func_array()} - 调用回调函数，并把一个数组参数作为回调函数的参数</span></li>    <li><span class="function">{@link is_callable()} - 验证值是否可以在当前范围内作为函数调用</span></li>   </ul>   </div></div>
 * 
 * Call a static method and pass the arguments as array
 * @link https://php.net/manual/zh/function.forward-static-call-array.php
 * @param callable $callback <p>
 * The function or method to be called. This parameter may be an array,
 * with the name of the class, and the method, or a string, with a function
 * name.
 * </p>
 * @param array $args
 * @return mixed the function result, or false on error.
 */
function forward_static_call_array(callable $callback, array $args): mixed {}

/**
 * <div id="function.serialize" class="refentry"> <div class="refnamediv">  <h1 class="refname">serialize</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">serialize</span> — <span class="dc-title">生成值的可存储表示</span></p> </div>  <div class="refsect1 description" id="refsect1-function.serialize-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>serialize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   生成值的可存储表示。  </p>  <p class="para">   这有利于存储或传递 PHP 的值，同时不丢失其类型和结构。  </p>  <p class="para">    想要将已序列化的字符串变回 PHP 的值，可使用    <span class="function">{@link unserialize()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.serialize-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要序列化的值。<span class="function"><strong>serialize()</strong></span> 处理所有的类型，除了 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 类型和一些       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>（见下面的注释）。<span class="function"><strong>serialize()</strong></span>       甚至可以序列化包含对自身引用的数组。数组/对象内的循环引用也会被存储。其它任何引用都会丢失。      </p>      <p class="para">       序列化对象时，PHP 将尝试在序列化之前调用成员函数 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.serialize" class="link">__serialize()</a> 或       <a href="https://php.net/manual/zh/language.oop5.magic.php#object.sleep" class="link">__sleep()</a>。这是为了允许对象在序列化之前进行最后一分钟的清理等等。同样，当使用       <span class="function">{@link unserialize()}</span> 恢复对象时，会调用 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.unserialize" class="link">__unserialize()</a>       或 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a> 成员函数。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        对象的 private 成员会在名前添加类名；protected 成员会在名前添加“*”；这些前置值在两边都有 null 字节。       </p>      </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.serialize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串，包含 <span class="parameter" style="color:#3A95FF">value</span> 的字节流表示，可以存储在任何地方。  </p>  <p class="para">   注意这可能是包含 null 字节的二进制字符串，需要按原样存储和处理。例如，<span class="function"><strong>serialize()</strong></span>   的输出通常应该存储在数据库中 的 BLOB 字段，而不是 CHAR 或 TEXT 字段。  </p> </div> <div class="refsect1 examples" id="refsect1-function.serialize-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5641">    <p><strong>示例 #1 <span class="function"><strong>serialize()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="annotation-non-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// \$sssion_data 是多维数组，包含当前用户的<br>// 会话信息。可以在请求结束时使用 serialize()<br>// 将其存储在数据库中。<br><br></span><span style="color: #9876AA">\$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">odbc_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"webdb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"chicken"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">odbc_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">\$conn</span><span style="color: #007700">,<br>      </span><span style="color: #DD0000">"UPDATE sessions SET data = ? WHERE id = ?"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$sqldata </span><span style="color: #007700">= array (</span><span style="color: #9876AA">serialize</span><span style="color: #007700">(</span><span style="color: #9876AA">\$session_data</span><span style="color: #007700">), </span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_AUTH_USER'</span><span style="color: #007700">]);<br>if (!</span><span style="color: #9876AA">odbc_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$sqldata</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">\$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">odbc_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">\$conn</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">"INSERT INTO sessions (id, data) VALUES(?, ?)"</span><span style="color: #007700">);<br>    if (!</span><span style="color: #9876AA">odbc_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stmt</span><span style="color: #007700">, </span><span style="color: #9876AA">array_reverse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sqldata</span><span style="color: #007700">))) {<br>        </span><span style="color: #FF8000">// Something went wrong.. <br>    </span><span style="color: #007700">}<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.serialize-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    注意许多内置 PHP 对象不能序列化。然而，要么实现 <span class="interfacename"><a href="https://php.net/manual/zh/class.serializable.php" class="interfacename">Serializable</a></span> 接口，要么实现 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.serialize" class="link">__serialize()</a>/<a href="https://php.net/manual/zh/language.oop5.magic.php#object.unserialize" class="link">__unserialize()</a>    或 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.sleep" class="link">__sleep()</a>/<a href="https://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a>    魔术方法的则是可以的。如果内部类不满足这些其中任意一个，则就不能可靠的进行序列化。   </p>   <p class="para">    上述规则有一些历史例外，一些内部对象可以在不实现接口或公开方法的情况下，使其序列化。   </p>  </blockquote>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    当 <span class="function"><strong>serialize()</strong></span> 序列化对象时，命名空间中的类名不要以反斜线开头，以便实现最大兼容性。   </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.serialize-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link unserialize()} - 从已存储的表示中创建 PHP 的值</span></li>    <li><span class="function">{@link var_export()} - 输出或返回变量的可解析字符串表示</span></li>    <li><span class="function">{@link json_encode()} - 对变量进行 JSON 编码</span></li>    <li><a href="https://php.net/manual/zh/language.oop5.serialization.php" class="link">序列化对象</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.sleep" class="link">__sleep()</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.serialize" class="link">__serialize()</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.unserialize" class="link">__unserialize()</a></li>   </ul>   </div></div>
 * 
 * Generates a storable representation of a value
 * @link https://php.net/manual/zh/function.serialize.php
 * @param mixed $value <p>
 * The value to be serialized. serialize
 * handles all types, except the resource-type.
 * You can even serialize arrays that contain
 * references to itself. Circular references inside the array/object you
 * are serializing will also be stored. Any other
 * reference will be lost.
 * </p>
 * <p>
 * When serializing objects, PHP will attempt to call the member function
 * __sleep prior to serialization.
 * This is to allow the object to do any last minute clean-up, etc. prior
 * to being serialized. Likewise, when the object is restored using
 * unserialize the __wakeup member function is called.
 * </p>
 * <p>
 * Object's private members have the class name prepended to the member
 * name; protected members have a '*' prepended to the member name.
 * These prepended values have null bytes on either side.
 * </p>
 * @return string a string containing a byte-stream representation of
 * value that can be stored anywhere.
 */
function serialize(mixed $value): string {}

/**
 * <div id="function.unserialize" class="refentry"> <div class="refnamediv">  <h1 class="refname">unserialize</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">unserialize</span> — <span class="dc-title">   从已存储的表示中创建 PHP 的值  </span></p> </div> <div class="refsect1 description" id="refsect1-function.unserialize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>unserialize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="simpara">   <span class="function"><strong>unserialize()</strong></span> 对单一的已序列化的变量进行操作，将其转换回    PHP 的值。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    无论 <span class="literal">allowed_classes</span> 的 <span class="parameter" style="color:#3A95FF">options</span>    值如何，都不要将不受信任的用户输入传递给    <span class="function"><strong>unserialize()</strong></span>。由于对象实例化和自动加载，反序列化可能会导致加载代码并执行，恶意用户可能会利用这一点。如果需要将序列化数据传递给用户，请使用安全、标准的数据交换格式，例如    JSON（通过 <span class="function">{@link json_decode()}</span> 和 <span class="function">{@link json_encode()}</span>）。   </p>   <p class="para">    如果需要反序列化外部存储的序列化数据，请考虑使用 <span class="function">{@link hash_hmac()}</span> 做数据验证。确保数据不会被任何人修改。   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.unserialize-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       序列化后的字符串。      </p>      <p class="para">       若被反序列化的变量是一个对象，在成功地重新构造对象之后，PHP 会试图自动调用       <a href="https://php.net/manual/zh/language.oop5.magic.php#object.unserialize" class="link">__unserialize()</a> 或       <a href="https://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a> 方法（如果存在）。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <strong>         <a href="https://php.net/manual/zh/var.configuration.php#ini.unserialize-callback-func" class="link">unserialize_callback_func</a>          指令        </strong><br>        </p><p class="para">         在反序列化未定义类时会调用 <a href="https://php.net/manual/zh/var.configuration.php#ini.unserialize-callback-func" class="link">unserialize_callback_func</a>         指令中指定的回调。如果没有指定回调，将对象实例化为 <span class="classname"><a href="https://php.net/manual/zh/class.php-incomplete-class.php" class="classname">__PHP_Incomplete_Class</a></span>。        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       使用关联数组提供给 <span class="function"><strong>unserialize()</strong></span> 的任何选项。      </p>      <table class="doctable table">       <caption><strong>可用选项</strong></caption>               <thead>         <tr>          <th>名称</th>          <th>类型</th>          <th>说明</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td><span class="literal">allowed_classes</span></td>          <td><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></td>          <td>           <span class="simpara">            应该接受的类名数组，<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 表示不接受任何类，或者 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 表示接受所有类。如果定义此选项且            <span class="function"><strong>unserialize()</strong></span> 遇到不接受的类的对象，则该对象将会实例化为            <span class="classname"><a href="https://php.net/manual/zh/class.php-incomplete-class.php" class="classname">__PHP_Incomplete_Class</a></span>。           </span>           <span class="simpara">            省略此选项等同于定义为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>：PHP 将会尝试实例化任何类的对象。           </span>          </td>         </tr>         <tr>          <td><span class="literal">max_depth</span></td>          <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>          <td>           <span class="simpara">            反序列时允许的最大结构深度，主要为了防止栈溢出。默认深度限制为 <span class="literal">4096</span>，可以通过将            <span class="literal">max_depth</span> 设置为 <span class="literal">0</span> 来禁用。           </span>          </td>         </tr>        </tbody>             </table>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.unserialize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回的是转换之后的值，可为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>、<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>、<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>、<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>、<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>   或 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>。  </p>  <p class="para">   如果传递的字符串不可反序列化，则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，并产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-function.unserialize-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   对象可能会在反序列化处理程序中抛出 <span class="classname"><a href="https://php.net/manual/zh/class.throwable.php" class="classname">Throwable</a></span>。  </p>  <p class="simpara">   自 PHP 8.4.0 起，如果 <span class="parameter" style="color:#3A95FF">options</span> 的 <span class="literal">allowed_classes</span>   元素不是类名 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，则 <span class="function"><strong>unserialize()</strong></span> 会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span>   和 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.unserialize-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        如果 <span class="parameter" style="color:#3A95FF">options</span> 的 <span class="literal">allowed_classes</span>        元素不是类名 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，现在会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span>        和 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        当输入字符串有未使用的数据时，现在会发出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        当传递的字符串有未消耗的数据时，现在会发出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        当传递的字符串不可序列化时，现在抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>；        之前是抛出 <span class="classname"><strong class="classname">E_NOTICE</strong></span>。       </td>      </tr>      <tr>       <td>7.4.0</td>       <td>        新增 <span class="parameter" style="color:#3A95FF">options</span> 的 <span class="literal">max_depth</span> 元素，设置反序列化时允许的最大结构深度。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        <span class="parameter" style="color:#3A95FF">options</span> 的 <span class="literal">allowed_classes</span> 元素现在是严格类型，即如果给出        <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 或 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> 以外的任何内容，则 <span class="function"><strong>unserialize()</strong></span> 返回        <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 并发出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.unserialize-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5644">    <p><strong>示例 #1 <span class="function"><strong>unserialize()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="annotation-non-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 这里，我们使用 unserialize() 装载来自数据库的 \$session_data 数组中的会话数据。<br>// 此例是描述 serialize() 的那个例子的补充。<br><br></span><span style="color: #9876AA">\$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">odbc_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"webdb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"chicken"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">odbc_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">\$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT data FROM sessions WHERE id = ?"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$sqldata </span><span style="color: #007700">= array(</span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_AUTH_USER'</span><span style="color: #007700">]);<br>if (!</span><span style="color: #9876AA">odbc_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$sqldata</span><span style="color: #007700">) || !</span><span style="color: #9876AA">odbc_fetch_into</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$tmp</span><span style="color: #007700">)) {<br>    </span><span style="color: #FF8000">// 如果执行出错或返回错误，则初始化为空数组<br>    </span><span style="color: #9876AA">\$session_data </span><span style="color: #007700">= array();<br>} else {<br>    </span><span style="color: #FF8000">// 现在我们需要的是 \$tmp[0] 中已序列化的数据。<br>    </span><span style="color: #9876AA">\$session_data </span><span style="color: #007700">= </span><span style="color: #9876AA">unserialize</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tmp</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br>    if (!</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">\$session_data</span><span style="color: #007700">)) {<br>        </span><span style="color: #FF8000">// 出错，初始化为空数组<br>        </span><span style="color: #9876AA">\$session_data </span><span style="color: #007700">= array();<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5645">    <p><strong>示例 #2 unserialize_callback_func 示例</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$serialized_object</span><span style="color: #007700">=</span><span style="color: #DD0000">'O:1:"a":1:{s:5:"value";s:3:"100";}'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'unserialize_callback_func'</span><span style="color: #007700">, </span><span style="color: #DD0000">'mycallback'</span><span style="color: #007700">); </span><span style="color: #FF8000">// 设置回调函数<br><br></span><span style="color: #007700">function </span><span style="color: #9876AA">mycallback</span><span style="color: #007700">(</span><span style="color: #9876AA">\$classname</span><span style="color: #007700">)<br>{<br>   </span><span style="color: #FF8000">// 只需包含含有类定义的文件<br>   // \$classname 指出需要的是哪一个类<br>   </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$classname</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">unserialize</span><span style="color: #007700">(</span><span style="color: #9876AA">\$serialized_object</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.unserialize-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果发生了错误或反序列化了已序列化的 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 值，则会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。可以通过 <span class="parameter" style="color:#3A95FF">data</span> 和    <span class="literal">serialize(false)</span> 进行比较，或者捕捉 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-notice">E_NOTICE</a></span></strong> 错误来判断这种特殊情况。   </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.unserialize-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link json_encode()} - 对变量进行 JSON 编码</span></li>    <li><span class="function">{@link json_decode()} - 对 JSON 格式的字符串进行解码</span></li>    <li><span class="function">{@link hash_hmac()} - 使用 HMAC 方法生成带有密钥的散列值</span></li>    <li><span class="function">{@link serialize()} - 生成值的可存储表示</span></li>    <li><a href="https://php.net/manual/zh/language.oop5.autoload.php" class="link">自动加载类</a></li>    <li><a href="https://php.net/manual/zh/var.configuration.php#ini.unserialize-callback-func" class="link">unserialize_callback_func</a></li>    <li><a href="https://php.net/manual/zh/var.configuration.php#ini.unserialize-max-depth" class="link">unserialize_max_depth</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.wakeup" class="link">__wakeup()</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.serialize" class="link">__serialize()</a></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#object.unserialize" class="link">__unserialize()</a></li>   </ul>   </div></div>
 * 
 * Creates a PHP value from a stored representation
 * @link https://php.net/manual/zh/function.unserialize.php
 * @param string $data <p>
 * The serialized string.
 * </p>
 * <p>
 * If the variable being unserialized is an object, after successfully
 * reconstructing the object PHP will automatically attempt to call the
 * __wakeup member function (if it exists).
 * </p>
 * <p>
 * unserialize_callback_func directive
 * </p>
 * <p>
 * It's possible to set a callback-function which will be called,
 * if an undefined class should be instantiated during unserializing.
 * (to prevent getting an incomplete object "__PHP_Incomplete_Class".)
 * Use your "php.ini", ini_set or ".htaccess"
 * to define 'unserialize_callback_func'. Everytime an undefined class
 * should be instantiated, it'll be called. To disable this feature just
 * empty this setting.
 * </p>
 * @param array $options [optional]
 * <p>Any options to be provided to unserialize(), as an associative array.</p>
 * <p>
 * The 'allowed_classes' option key may be set to a value that is
 * either an array of class names which should be accepted, FALSE to
 * accept no classes, or TRUE to accept all classes. If this option is defined
 * and unserialize() encounters an object of a class that isn't to be accepted,
 * then the object will be instantiated as __PHP_Incomplete_Class instead.
 * Omitting this option is the same as defining it as TRUE: PHP will attempt
 * to instantiate objects of any class.
 * </p>
 * @return mixed <p>The converted value is returned, and can be a boolean,
 * integer, float, string,
 * array or object.
 * </p>
 * <p>
 * In case the passed string is not unserializeable, false is returned and
 * E_NOTICE is issued.</p>
 */
function unserialize(string $data, #[PhpStormStubsElementAvailable(from: '7.0')] array $options = []): mixed {}

/**
 * <div id="function.var-dump" class="refentry"> <div class="refnamediv">  <h1 class="refname">var_dump</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">var_dump</span> — <span class="dc-title">打印变量的相关信息</span></p> </div> <div class="refsect1 description" id="refsect1-function.var-dump-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>var_dump</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$values</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="simpara">     此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组和对象将递归展开值，通过缩进显示其结构。  </p>  <p class="simpara">   对象的所有公共、私有和受保护的属性都会在输出中返回，除非该对象实现了   <a href="https://php.net/manual/zh/language.oop5.magic.php#language.oop5.magic.debuginfo" class="link">__debugInfo()</a> 方法。  </p>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">和直接将结果输出到浏览器一样，可使用<a href="https://php.net/manual/zh/book.outcontrol.php" class="link">输出控制函数</a>来捕获当前函数的输出，然后(例如)保存到一个 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 中。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.var-dump-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要打印的表达式。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       更多要打印的表达式。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.var-dump-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.var-dump-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5651">    <p><strong>示例 #1 <span class="function"><strong>var_dump()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$a </span><span style="color: #007700">= array(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">array(3)&nbsp;{<br>&nbsp;&nbsp;[0]=&gt;<br>&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;[1]=&gt;<br>&nbsp;&nbsp;int(2)<br>&nbsp;&nbsp;[2]=&gt;<br>&nbsp;&nbsp;array(3)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"a"<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"b"<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"c"<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$b </span><span style="color: #007700">= </span><span style="color: #9876AA">3.1</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$c </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">\$c</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">float(3.1)<br>bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.var-dump-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link print_r()} - 打印人类可读的变量信息</span></li>    <li><span class="function">{@link debug_zval_dump()} - 将表示内部 zval 结构的字符串转储到输出</span></li>    <li><span class="function">{@link var_export()} - 输出或返回变量的可解析字符串表示</span></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#language.oop5.magic.debuginfo" class="link">__debugInfo()</a></li>   </ul>     </div></div>
 * 
 * Dumps information about a variable
 * @link https://php.net/manual/zh/function.var-dump.php
 * @param mixed $value <p>
 * The variable you want to export.
 * </p>
 * @param mixed ...$values [optional]
 * @return void
 */
#[PhpStormStubsElementAvailable(from: '8.0')]
function var_dump(mixed $value, mixed ...$values): void {}

/**
 * <div id="function.var-dump" class="refentry"> <div class="refnamediv">  <h1 class="refname">var_dump</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">var_dump</span> — <span class="dc-title">打印变量的相关信息</span></p> </div> <div class="refsect1 description" id="refsect1-function.var-dump-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>var_dump</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$values</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="simpara">     此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组和对象将递归展开值，通过缩进显示其结构。  </p>  <p class="simpara">   对象的所有公共、私有和受保护的属性都会在输出中返回，除非该对象实现了   <a href="https://php.net/manual/zh/language.oop5.magic.php#language.oop5.magic.debuginfo" class="link">__debugInfo()</a> 方法。  </p>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">和直接将结果输出到浏览器一样，可使用<a href="https://php.net/manual/zh/book.outcontrol.php" class="link">输出控制函数</a>来捕获当前函数的输出，然后(例如)保存到一个 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 中。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.var-dump-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要打印的表达式。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       更多要打印的表达式。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.var-dump-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.var-dump-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5651">    <p><strong>示例 #1 <span class="function"><strong>var_dump()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$a </span><span style="color: #007700">= array(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">array(3)&nbsp;{<br>&nbsp;&nbsp;[0]=&gt;<br>&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;[1]=&gt;<br>&nbsp;&nbsp;int(2)<br>&nbsp;&nbsp;[2]=&gt;<br>&nbsp;&nbsp;array(3)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"a"<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"b"<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(1)&nbsp;"c"<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$b </span><span style="color: #007700">= </span><span style="color: #9876AA">3.1</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$c </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">\$c</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">float(3.1)<br>bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.var-dump-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link print_r()} - 打印人类可读的变量信息</span></li>    <li><span class="function">{@link debug_zval_dump()} - 将表示内部 zval 结构的字符串转储到输出</span></li>    <li><span class="function">{@link var_export()} - 输出或返回变量的可解析字符串表示</span></li>    <li><a href="https://php.net/manual/zh/language.oop5.magic.php#language.oop5.magic.debuginfo" class="link">__debugInfo()</a></li>   </ul>     </div></div>
 * 
 * Dumps information about a variable
 * @link https://php.net/manual/zh/function.var-dump.php
 * @param mixed ...$vars <p>
 * The variable you want to export.
 * </p>
 * @return void
 */
#[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')]
function var_dump(...$vars): void {}

/**
 * <div id="function.var-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">var_export</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">var_export</span> — <span class="dc-title">输出或返回变量的可解析字符串表示</span></p> </div> <div class="refsect1 description" id="refsect1-function.var-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>var_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$return</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="simpara">    <span class="function"><strong>var_export()</strong></span> 函数返回关于传递给该函数的变量的结构信息，它和    <span class="function">{@link var_dump()}</span> 函数类似，不同的是其返回的表示是合法的 PHP 代码。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.var-export-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">        想要输出的变量名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">return</span></dt>     <dd>      <p class="para">       此参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，<span class="function"><strong>var_export()</strong></span> 将返回一个变量，而不是输出它。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.var-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    参数 <span class="parameter" style="color:#3A95FF">return</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时返回变量。否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.var-export-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.0</td>       <td>        现在导出的是完整类名；以前会省略开头反斜线。       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        现在将 <span class="classname"><a href="https://php.net/manual/zh/class.stdclass.php" class="classname">stdClass</a></span> 对象作为数组类型转换为对象输出（        <span class="code">(object) array( ... )</span>），而不是使用不存在的        <span class="methodname" style="color:#CC7832"><strong>stdClass::__setState()</strong></span> 方法。实际效果是，现在        <span class="classname"><a href="https://php.net/manual/zh/class.stdclass.php" class="classname">stdClass</a></span> 是可输出的，生成的代码甚至可以在早期的        PHP 版本上运行。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.var-export-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5652">    <p><strong>示例 #1 <span class="function"><strong>var_export()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$a </span><span style="color: #007700">= array (</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, array (</span><span style="color: #DD0000">"a"</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;1,<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;2,<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;<br>&nbsp;&nbsp;array&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'a',<br>&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'b',<br>&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'c',<br>&nbsp;&nbsp;),<br>)</blockquote></div>    </div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$b </span><span style="color: #007700">= </span><span style="color: #9876AA">3.1</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$v </span><span style="color: #007700">= </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$v</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">3.1</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5653">    <p><strong>示例 #2 输出 stdClass 类 (自 PHP 7.3.0 起)</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$person </span><span style="color: #007700">= new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$person</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">name </span><span style="color: #007700">= </span><span style="color: #DD0000">'ElePHPant ElePHPantsdotter'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$person</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">website </span><span style="color: #007700">= </span><span style="color: #DD0000">'https://php.net/elephpant.php'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$person</span><span style="color: #007700">);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">(object)&nbsp;array(<br>&nbsp;&nbsp;&nbsp;'name'&nbsp;=&gt;&nbsp;'ElePHPant&nbsp;ElePHPantsdotter',<br>&nbsp;&nbsp;&nbsp;'website'&nbsp;=&gt;&nbsp;'https://php.net/elephpant.php',<br>)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5654">    <p><strong>示例 #3 输出对象 (自 PHP 5.1.0 起)</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">A </span><span style="color: #007700">{ public </span><span style="color: #9876AA">\$var</span><span style="color: #007700">; }<br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= new </span><span style="color: #9876AA">A</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">var </span><span style="color: #007700">= </span><span style="color: #9876AA">5</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">\A::__set_state(array(<br>&nbsp;&nbsp;&nbsp;'var'&nbsp;=&gt;&nbsp;5,<br>))</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5655">    <p><strong>示例 #4 使用 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.set-state" class="link">__set_state()</a></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">A<br></span><span style="color: #007700">{<br>    public </span><span style="color: #9876AA">\$var1</span><span style="color: #007700">;<br>    public </span><span style="color: #9876AA">\$var2</span><span style="color: #007700">;<br><br>    public static function </span><span style="color: #9876AA">__set_state</span><span style="color: #007700">(</span><span style="color: #9876AA">\$an_array</span><span style="color: #007700">)<br>    {<br>        </span><span style="color: #9876AA">\$obj </span><span style="color: #007700">= new </span><span style="color: #9876AA">A</span><span style="color: #007700">;<br>        </span><span style="color: #9876AA">\$obj</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">var1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$an_array</span><span style="color: #007700">[</span><span style="color: #DD0000">'var1'</span><span style="color: #007700">];<br>        </span><span style="color: #9876AA">\$obj</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">var2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$an_array</span><span style="color: #007700">[</span><span style="color: #DD0000">'var2'</span><span style="color: #007700">];<br>        return </span><span style="color: #9876AA">\$obj</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= new </span><span style="color: #9876AA">A</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">var1 </span><span style="color: #007700">= </span><span style="color: #9876AA">5</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">var2 </span><span style="color: #007700">= </span><span style="color: #DD0000">'foo'</span><span style="color: #007700">;<br><br>eval(</span><span style="color: #DD0000">'\$b = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) . </span><span style="color: #DD0000">';'</span><span style="color: #007700">); </span><span style="color: #FF8000">// \$b = A::__set_state(array(<br>                                            //    'var1' =&gt; 5,<br>                                            //    'var2' =&gt; 'foo',<br>                                            // ));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$b</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">object(A)#2&nbsp;(2)&nbsp;{<br>&nbsp;&nbsp;["var1"]=&gt;<br>&nbsp;&nbsp;int(5)<br>&nbsp;&nbsp;["var2"]=&gt;<br>&nbsp;&nbsp;string(3)&nbsp;"foo"<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.var-export-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    类型为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 的变量无法通过此函数输出。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>var_export()</strong></span> 不处理循环引用，因为几乎不可能为此生成可解析的 PHP    代码。如果您想对数组或对象的完整表示进行操作，请使用 <span class="function">{@link serialize()}</span>。   </p>  </blockquote>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    PHP 8.2.0 之前，当 <span class="function"><strong>var_export()</strong></span> 输出对象时，为了最大的兼容性，命名空间类的类名中不包含前导反斜杠。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    为了能够执行 <span class="function"><strong>var_export()</strong></span> 生成的 PHP    ，所有被处理的对象必须实现 <a href="https://php.net/manual/zh/language.oop5.magic.php#object.set-state" class="link">__set_state</a>    魔术方法。 唯一的例外是 <span class="classname"><a href="https://php.net/manual/zh/class.stdclass.php" class="classname">stdClass</a></span>    ，它作为数组类型转换为对象输出。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.var-export-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link print_r()} - 打印人类可读的变量信息</span></li>    <li><span class="function">{@link serialize()} - 生成值的可存储表示</span></li>    <li><span class="function">{@link var_dump()} - 打印变量的相关信息</span></li>   </ul>     </div></div>
 * 
 * Outputs or returns a parsable string representation of a variable
 * @link https://php.net/manual/zh/function.var-export.php
 * @param mixed $value <p>
 * The variable you want to export.
 * </p>
 * @param bool $return [optional] <p>
 * If used and set to true, var_export will return
 * the variable representation instead of outputting it.
 * </p>
 * @return string|null the variable representation when the return
 * parameter is used and evaluates to true. Otherwise, this function will
 * return null.
 */
function var_export(mixed $value, bool $return = false): ?string {}

/**
 * <div id="function.debug-zval-dump" class="refentry"> <div class="refnamediv">  <h1 class="refname">debug_zval_dump</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">debug_zval_dump</span> — <span class="dc-title">将表示内部 zval 结构的字符串转储到输出</span></p> </div> <div class="refsect1 description" id="refsect1-function.debug-zval-dump-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>debug_zval_dump</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$values</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   将表示内部 zval（Zend 值）结构的字符串转储到输出。这对于理解或调试 Zend 引擎或 PHP 扩展的实现细节非常有用。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.debug-zval-dump-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要转储的变量或值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       要进一步转储的变量或值。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.debug-zval-dump-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.debug-zval-dump-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5608">    <p><strong>示例 #1 <span class="function"><strong>debug_zval_dump()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$var1 </span><span style="color: #007700">= </span><span style="color: #DD0000">'Hello'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$var1 </span><span style="color: #007700">.= </span><span style="color: #DD0000">' World'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$var2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$var1</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">debug_zval_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$var1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">string(11)&nbsp;"Hello&nbsp;World"&nbsp;refcount(3)</blockquote></div>    </div>   </div>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>理解 <span class="literal">refcount</span></strong><br>   </p><p class="para">    如果没有深入了解过引擎实现，该函数显示的 <span class="literal">refcount</span> 值可能会令人惊讶。   </p>   <p class="para">    Zend 引擎使用引用计数来实现两个不同的目的：   </p>   <p class="para">    </p><ul class="simplelist">     <li>      使用叫做“写时复制”的技术来优化内存使用，其中拥有相同值的多个变量指向内存中的同一个副本。当其中修改其中一个变量时，它会指向内存中的一个新副本，并且原始副本的引用计数会减少 1。     </li>     <li>      跟踪已分配或通过引用传递的变量（参见<a href="https://php.net/manual/zh/language.references.php" class="link">引用解释</a>）。这个 refcount      存储在单独的 reference zval 上，指向当前值的 zval。这个额外的 zval 目前不会在 <span class="function"><strong>debug_zval_dump()</strong></span> 中显示。     </li>    </ul>      <p class="para">    因为 <span class="function"><strong>debug_zval_dump()</strong></span> 将输入作为普通参数传递，通过值传递，所以将使用写时复制技术来传递它们：而不是复制数据，refcount    将在函数调用的生命周期内增加 1。如果函数在接收参数后修改了它，那么将会进行复制；由于没有修改参数，所以在调用范围内显示的 refcount 会比较高。   </p>   <p class="para">    参数传递也会阻止 <span class="function"><strong>debug_zval_dump()</strong></span> 显示通过引用分配的变量。为了说明这一点，对上面示例进行略微修改：    </p><div class="informalexample">     <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$var1 </span><span style="color: #007700">= </span><span style="color: #DD0000">'Hello'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$var1 </span><span style="color: #007700">.= </span><span style="color: #DD0000">' World'</span><span style="color: #007700">;<br></span><span style="color: #FF8000">// Point three variables as references to the same value<br></span><span style="color: #9876AA">\$var2 </span><span style="color: #007700">=&amp; </span><span style="color: #9876AA">\$var1</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$var3 </span><span style="color: #007700">=&amp; </span><span style="color: #9876AA">\$var1</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">debug_zval_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$var1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">string(11)&nbsp;"Hello&nbsp;World"&nbsp;refcount(2)</blockquote></div>     </div>    </div>      <p class="para">    尽管 <var class="varname">\$var1</var>、<var class="varname">\$var2</var> 和 <var class="varname">\$var3</var> 是通过引用链接，但只有 <em>value</em>    传递给了 <span class="function"><strong>debug_zval_dump()</strong></span>。这个值在引用集合中使用了一次，在 <span class="function"><strong>debug_zval_dump()</strong></span> 内部使用了一次，所以显示的引用计数为 2。   </p>   <p class="para">     由于引擎针对不同数据类型进行的优化，还会出现进一步的复杂情况。比如一些像整数之类的类型，不使用"写时复制"，因此根本不会显示    refcount。在其他情况下，refcount 显示了内部使用的额外副本，比如当字面字符串或数组作为代码指令的一部分存储时。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.debug-zval-dump-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link var_dump()} - 打印变量的相关信息</span></li>    <li><span class="function">{@link debug_backtrace()} - 产生一条回溯跟踪(backtrace)</span></li>    <li><a href="https://php.net/manual/zh/language.references.php" class="link">引用解释</a></li>    <li><a href="http://derickrethans.nl/php_references_article.php" class="link external">»&nbsp;引用解释（作者：Derick Rethans）</a></li>   </ul>   </div></div>
 * 
 * Dumps a string representation of an internal zend value to output
 * @link https://php.net/manual/zh/function.debug-zval-dump.php
 * @param mixed $value The variable being evaluated.
 * @param mixed ...$values <p>
 * The other variable being evaluated.
 * </p>
 * @return void
 */
function debug_zval_dump(
    #[PhpStormStubsElementAvailable(from: '8.0')] mixed $value,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $values,
    mixed ...$values
): void {}

/**
 * <div id="function.print-r" class="refentry"> <div class="refnamediv">  <h1 class="refname">print_r</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">print_r</span> — <span class="dc-title">   打印人类可读的变量信息  </span></p> </div>  <div class="refsect1 description" id="refsect1-function.print-r-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>print_r</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$return</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>print_r()</strong></span> 以人类可读的方式显示变量的信息。  </p>  <p class="para">   <span class="function"><strong>print_r()</strong></span>、<span class="function">{@link var_dump()}</span>、<span class="function">{@link var_export()}</span>    还将显示对象的 protected 和 private 属性。不会显示静态类成员。  </p> </div>    <div class="refsect1 parameters" id="refsect1-function.print-r-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要打印的表达式。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">return</span></dt>     <dd>      <p class="para">       想要捕获 <span class="function"><strong>print_r()</strong></span> 的输出，请使用 <span class="parameter" style="color:#3A95FF">return</span>       参数。当此参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，<span class="function"><strong>print_r()</strong></span> 将返回信息，而不是打印它。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.print-r-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果是指定 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>、<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 或 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>，会直接打印值本身。如果是指定   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，值将以键和元素的格式显示。<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 也一样。  </p>  <p class="para">   当 <span class="parameter" style="color:#3A95FF">return</span> 参数设置成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，本函数会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.print-r-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        返回类型从 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> 变为 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></span>。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.print-r-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5639">    <p><strong>示例 #1 <span class="function"><strong>print_r()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">&lt;pre&gt;<br><span style="color: #9876AA">&lt;?php<br>\$a </span><span style="color: #007700">= array (</span><span style="color: #DD0000">'a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">, </span><span style="color: #DD0000">'b' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'banana'</span><span style="color: #007700">, </span><span style="color: #DD0000">'c' </span><span style="color: #007700">=&gt; array (</span><span style="color: #DD0000">'x'</span><span style="color: #007700">, </span><span style="color: #DD0000">'y'</span><span style="color: #007700">, </span><span style="color: #DD0000">'z'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;<br></span>&lt;/pre&gt;</span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><pre><br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[a]&nbsp;=&gt;&nbsp;apple<br>&nbsp;&nbsp;&nbsp;&nbsp;[b]&nbsp;=&gt;&nbsp;banana<br>&nbsp;&nbsp;&nbsp;&nbsp;[c]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;x<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;y<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;z<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>)<br></pre></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5640">    <p><strong>示例 #2 <span class="parameter" style="color:#3A95FF">return</span> 参数的例子</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$b </span><span style="color: #007700">= array (</span><span style="color: #DD0000">'m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'monkey'</span><span style="color: #007700">, </span><span style="color: #DD0000">'foo' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; array (</span><span style="color: #DD0000">'x'</span><span style="color: #007700">, </span><span style="color: #DD0000">'y'</span><span style="color: #007700">, </span><span style="color: #DD0000">'z'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$results </span><span style="color: #007700">= </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">); </span><span style="color: #FF8000">// \$results 包含了 print_r 的输出<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$results</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.print-r-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">When the <span class="parameter" style="color:#3A95FF">return</span> parameteris used, this function uses internal output buffering prior to PHP 7.1.0, so it cannot be used inside an<span class="function">{@link ob_start()}</span> callback function.</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.print-r-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>    <li><span class="function">{@link var_dump()} - 打印变量的相关信息</span></li>    <li><span class="function">{@link var_export()} - 输出或返回变量的可解析字符串表示</span></li>   </ul>   </div></div>
 * 
 * Prints human-readable information about a variable
 * @link https://php.net/manual/zh/function.print-r.php
 * @param mixed $value <p>
 * The expression to be printed.
 * </p>
 * @param bool $return [optional] <p>
 * If you would like to capture the output of print_r,
 * use the return parameter. If this parameter is set
 * to true, print_r will return its output, instead of
 * printing it (which it does by default).
 * </p>
 * @return string|bool If given a string, integer or float,
 * the value itself will be printed. If given an array, values
 * will be presented in a format that shows keys and elements. Similar
 * notation is used for objects.
 */
#[LanguageLevelTypeAware(['8.4' => 'string|true'], default: 'string|bool')]
function print_r(mixed $value, bool $return = false) {}

/**
 * <div id="function.memory-get-usage" class="refentry"> <div class="refnamediv">  <h1 class="refname">memory_get_usage</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.2, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">memory_get_usage</span> — <span class="dc-title">返回分配给 PHP 的内存量</span></p> </div>  <div class="refsect1 description" id="refsect1-function.memory-get-usage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>memory_get_usage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$real_usage</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   返回当前分配给你的 PHP 脚本的内存量，单位是字节（byte）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.memory-get-usage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">real_usage</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，获取系统分配总的内存尺寸，包括未使用的页。如果未设置或者设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，仅仅报告实际使用的内存量。      </p>     </dd>       </dl>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">PHP 不跟踪非<span class="literal">emalloc()</span> 分配的内存</p>  </blockquote> </div> <div class="refsect1 returnvalues" id="refsect1-function.memory-get-usage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回内存量字节数。  </p> </div> <div class="refsect1 examples" id="refsect1-function.memory-get-usage-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-637">    <p><strong>示例 #1 一个 <span class="function"><strong>memory_get_usage()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//这只是个示例，下面的数字取决于你的系统<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 36640<br><br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">, </span><span style="color: #9876AA">4242</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 57960<br><br></span><span style="color: #007700">unset(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">memory_get_usage</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 36744<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.memory-get-usage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link memory_get_peak_usage()} - 返回分配给 PHP 内存的峰值</span></li>    <li><a href="https://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">memory_limit</a></li>   </ul>   </div></div>
 * 
 * Returns the amount of memory allocated to PHP
 * @link https://php.net/manual/zh/function.memory-get-usage.php
 * @param bool $real_usage [optional] <p>
 * Set this to true to get the real size of memory allocated from
 * system. If not set or false only the memory used by
 * emalloc() is reported.
 * </p>
 * @return int the memory amount in bytes.
 */
#[Pure(true)]
function memory_get_usage(bool $real_usage = false): int {}

/**
 * <div id="function.memory-get-peak-usage" class="refentry"> <div class="refnamediv">  <h1 class="refname">memory_get_peak_usage</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">memory_get_peak_usage</span> — <span class="dc-title">返回分配给 PHP 内存的峰值</span></p> </div> <div class="refsect1 description" id="refsect1-function.memory-get-peak-usage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>memory_get_peak_usage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$real_usage</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   返回分配给你的 PHP 脚本的内存峰值字节数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.memory-get-peak-usage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">real_usage</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 可以获取从系统分配到的真实内存尺寸。       如果未设置，或者设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，仅会报告 <span class="literal">emalloc()</span> 使用的内存。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.memory-get-peak-usage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回内存峰值的字节数。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.memory-get-peak-usage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link memory_get_usage()} - 返回分配给 PHP 的内存量</span></li>    <li><span class="function">{@link memory_reset_peak_usage()} - Reset the peak memory usage</span></li>    <li><a href="https://php.net/manual/zh/ini.core.php#ini.memory-limit" class="link">memory_limit</a></li>   </ul>   </div></div>
 * 
 * Returns the peak of memory allocated by PHP
 * @link https://php.net/manual/zh/function.memory-get-peak-usage.php
 * @param bool $real_usage [optional] <p>
 * Set this to true to get the real size of memory allocated from
 * system. If not set or false only the memory used by
 * emalloc() is reported.
 * </p>
 * @return int the memory peak in bytes.
 */
#[Pure(true)]
function memory_get_peak_usage(bool $real_usage = false): int {}

/**
 * <div id="function.memory-reset-peak-usage" class="refentry"> <div class="refnamediv">  <h1 class="refname">memory_reset_peak_usage</h1>  <p class="verinfo">(PHP 8 &gt;= 8.2.0)</p><p class="refpurpose"><span class="refname">memory_reset_peak_usage</span> — <span class="dc-title">Reset the peak memory usage</span></p> </div> <div class="refsect1 description" id="refsect1-function.memory-reset-peak-usage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>memory_reset_peak_usage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Resets the peak memory usage returned by the   <span class="function">{@link memory_get_peak_usage()}</span> function.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.memory-reset-peak-usage-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.memory-reset-peak-usage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.memory-reset-peak-usage-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-638">    <p><strong>示例 #1 <span class="function"><strong>memory_reset_peak_usage()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">memory_get_peak_usage</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">, </span><span style="color: #9876AA">424242</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">memory_get_peak_usage</span><span style="color: #007700">());<br><br>unset(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">);<br></span><span style="color: #9876AA">memory_reset_peak_usage</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">, </span><span style="color: #9876AA">2424</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">memory_get_peak_usage</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(422440)<br>int(2508672)<br>int(399208)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.memory-reset-peak-usage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link memory_get_peak_usage()} - 返回分配给 PHP 内存的峰值</span></li>   </ul>   </div></div>
 * 
 * @since 8.2
 */
function memory_reset_peak_usage(): void {}

/**
 * <div id="function.register-shutdown-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">register_shutdown_function</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">register_shutdown_function</span> — <span class="dc-title">注册在关闭时执行的函数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.register-shutdown-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>register_shutdown_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   注册一个 <span class="parameter" style="color:#3A95FF">callback</span> ，它会在脚本执行完成或者 <span class="function">{@link exit()}</span> 后被调用。  </p>  <p class="para">   可以多次调用   <span class="function"><strong>register_shutdown_function()</strong></span>，这些被注册的回调会按照他们注册时的顺序被依次调用。如果你在注册的方法内部调用   <span class="function">{@link exit()}</span>，那么所有处理会被中止，并且其他注册的中止回调也不会再被调用。  </p>  <p class="para">   关闭函数也可以调用 <span class="function"><strong>register_shutdown_function()</strong></span> 来将关闭函数添加到队列的末尾。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.register-shutdown-function-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       待注册的中止回调。      </p>      <p class="para">       中止回调是作为请求的一部分被执行的，因此可以在它们中进行输出或者读取输出缓冲区。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">args</span></dt>     <dd>      <p class="para">       可以通过传入额外的参数来将参数传给中止函数。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.register-shutdown-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.register-shutdown-function-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5383">    <p><strong>示例 #1 <span class="function"><strong>register_shutdown_function()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">shutdown</span><span style="color: #007700">()<br>{<br>    </span><span style="color: #FF8000">// 这是关闭函数，在脚本完成前可以进行任何最后的操作。<br><br>    </span><span style="color: #007700">echo </span><span style="color: #DD0000">'Script executed with success'</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">register_shutdown_function</span><span style="color: #007700">(</span><span style="color: #DD0000">'shutdown'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.register-shutdown-function-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在某些 web 服务器（如 Apache）上，可以在中止函数内对脚本的工作目录进行修改。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    如果进程被信号 SIGTERM 或 SIGKILL 杀死，那么中止函数将不会被调用。尽管你无法中断    SIGKILL，但你可以通过 <span class="function">{@link pcntl_signal()}</span> 来捕获    SIGTERM，通过在其中调用 <span class="function">{@link exit()}</span> 来进行一个正常的中止。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    关闭函数与 <a href="https://php.net/manual/zh/info.configuration.php#ini.max-execution-time" class="link">max_execution_time</a>    追踪的时间分开运行。这意味着即使进程因为运行时间过长而终止，仍会调用关闭函数。此外，如果关闭函数运行时正好    <span class="literal">max_execution_time</span> 用完，也会被终止。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.register-shutdown-function-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/ini.core.php#ini.auto-append-file" class="link">auto_append_file</a></li>    <li><span class="function">{@link exit()} - 使用状态 code 或消息终止当前脚本</span></li>    <li><span class="function">{@link fastcgi_finish_request()} - 冲刷(flush)所有响应的数据给客户端</span></li>    <li><a href="https://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a>节</li>   </ul>   </div></div>
 * 
 * Register a function for execution on shutdown
 * @link https://php.net/manual/zh/function.register-shutdown-function.php
 * @param callable $callback <p>
 * The shutdown function to register.
 * </p>
 * <p>
 * The shutdown functions are called as the part of the request so that
 * it's possible to send the output from them. There is currently no way
 * to process the data with output buffering functions in the shutdown
 * function.
 * </p>
 * <p>
 * Shutdown functions are called after closing all opened output buffers
 * thus, for example, its output will not be compressed if zlib.output_compression is
 * enabled.
 * </p>
 * @param mixed ...$args [optional] <p>
 * It is possible to pass parameters to the shutdown function by passing
 * additional parameters.
 * </p>
 * @return bool|null
 */
#[LanguageLevelTypeAware(['8.2' => 'void'], default: 'null|bool')]
function register_shutdown_function(callable $callback, mixed ...$args): ?bool {}

/**
 * <div id="function.register-tick-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">register_tick_function</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">register_tick_function</span> — <span class="dc-title">注册一个函数以便在每个 tick 上执行</span></p> </div> <div class="refsect1 description" id="refsect1-function.register-tick-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>register_tick_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...\$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="simpara">   注册给定的 <span class="parameter" style="color:#3A95FF">callback</span>，以便在   <a href="https://php.net/manual/zh/control-structures.declare.php#control-structures.declare.ticks" class="link">tick</a> 被调用时执行。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.register-tick-function-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       需要注册的函数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">args</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.register-tick-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.register-tick-function-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5384">    <p><strong>示例 #1 <span class="function"><strong>register_tick_function()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">declare(</span><span style="color: #9876AA">ticks</span><span style="color: #007700">=</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br><br>function </span><span style="color: #9876AA">my_tick_function</span><span style="color: #007700">(</span><span style="color: #9876AA">\$param</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Tick callback function called with param: </span><span style="color: #9876AA">\$param</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">register_tick_function</span><span style="color: #007700">(</span><span style="color: #DD0000">'my_tick_function'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.register-tick-function-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/control-structures.declare.php" class="link">declare</a></li>    <li><span class="function">{@link unregister_tick_function()} - 注销每个 tick 上需要执行的函数</span></li>   </ul>   </div></div>
 * 
 * Register a function for execution on each tick
 * @link https://php.net/manual/zh/function.register-tick-function.php
 * @param callable $callback <p>
 * The function name as a string, or an array consisting of an object and
 * a method.
 * </p>
 * @param mixed ...$args [optional] <p>
 * </p>
 * @return bool true on success or false on failure.
 */
function register_tick_function(callable $callback, mixed ...$args): bool {}

/**
 * <div id="function.unregister-tick-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">unregister_tick_function</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">unregister_tick_function</span> — <span class="dc-title">注销每个 tick 上需要执行的函数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.unregister-tick-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>unregister_tick_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callback</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="simpara">   注销函数 <span class="parameter" style="color:#3A95FF">callback</span>，以便在调用 <a href="https://php.net/manual/zh/control-structures.declare.php" class="link">tick</a> 时不再执行。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.unregister-tick-function-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       要注销的函数。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.unregister-tick-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.unregister-tick-function-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link register_tick_function()} - 注册一个函数以便在每个 tick 上执行</span></li>   </ul>   </div></div>
 * 
 * De-register a function for execution on each tick
 * @link https://php.net/manual/zh/function.unregister-tick-function.php
 * @param callable $callback <p>
 * The function name as a string, or an array consisting of an object and
 * a method.
 * </p>
 * @return void
 */
function unregister_tick_function(callable $callback): void {}

/**
 * <div id="function.highlight-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">highlight_file</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">highlight_file</span> — <span class="dc-title">语法高亮一个文件</span></p> </div>  <div class="refsect1 description" id="refsect1-function.highlight-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>highlight_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$return</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   使用 PHP 内置的语法高亮器所定义的颜色，打印输出或者返回   <span class="parameter" style="color:#3A95FF">filename</span> 文件中语法高亮版本的代码。  </p>  <p class="para">   许多服务器配置了自动高亮 <em>phps</em>   扩展的文件。比如，访问 <var class="filename">example.phps</var>    会显示语法高亮后的文件。添加以下一行代码到 <var class="filename">httpd.conf</var> 使此生效：  </p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="descriptioncode"><blockquote style="border:1px gray solid;">AddType&nbsp;application/x-httpd-php-source&nbsp;.phps</blockquote></div>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.highlight-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       欲高亮文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">return</span></dt>     <dd>      <p class="para">       设置该参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 使函数返回高亮后的代码。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.highlight-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     如果 <span class="parameter" style="color:#3A95FF">return</span> 设置为     <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，高亮后的代码不会被打印输出，而是以字符串的形式返回。高亮成功返回     <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.highlight-file-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        由此产生的 HTML 有所改变。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 notes" id="refsect1-function.highlight-file-notes">  <h3 class="title">注释</h3>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    应当注意在使用 <span class="function"><strong>highlight_file()</strong></span>    时，确认没有在不经意间泄漏敏感信息，类似密码或者其他任何具有潜在安全风险的信息。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">当使用了<span class="parameter" style="color:#3A95FF">return</span>参数时，本函数使用其内部输出缓冲，因此不能在<span class="function">{@link ob_start()}</span> 回调函数的内部使用。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.highlight-file-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link highlight_string()} - 字符串的语法高亮</span></li>    <li><a href="https://php.net/manual/zh/misc.configuration.php#ini.syntax-highlighting" class="link">高亮 INI 指令</a></li>   </ul>   </div></div>
 * 
 * Syntax highlighting of a file
 * @link https://php.net/manual/zh/function.highlight-file.php
 * @param string $filename <p>
 * Path to the PHP file to be highlighted.
 * </p>
 * @param bool $return [optional] <p>
 * Set this parameter to true to make this function return the
 * highlighted code.
 * </p>
 * @return string|bool If return is set to true, returns the highlighted
 * code as a string instead of printing it out. Otherwise, it will return
 * true on success, false on failure.
 */
function highlight_file(string $filename, bool $return = false): string|bool {}

/**
 * <div id="function.show-source" class="refentry"> <div class="refnamediv">  <h1 class="refname">show_source</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">show_source</span> — <span class="dc-title">别名 <span class="function">{@link highlight_file()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.show-source-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link highlight_file()}</span>.  </p> </div></div>
 * 
 * Alias:
 * {@see highlight_file}
 * @link https://php.net/manual/zh/function.show-source.php
 * @param string $filename
 * @param bool $return [optional]
 * @return string|bool
 */
function show_source(string $filename, bool $return = false): string|bool {}

/**
 * <div id="function.highlight-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">highlight_string</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">highlight_string</span> — <span class="dc-title">字符串的语法高亮</span></p> </div>  <div class="refsect1 description" id="refsect1-function.highlight-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>highlight_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$return</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></span></div>  <p class="simpara">   使用 PHP 内置的语法高亮器所定义的颜色，打印输出或者返回输出或者返回语法高亮版本的 PHP 代码。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.highlight-string-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       需要高亮的 PHP 代码，应当包含开始标签。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">return</span></dt>     <dd>      <p class="para">       设置该参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 使函数返回高亮后的代码。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.highlight-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">return</span> 设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，不会打印输出高亮后的代码，而是以字符串的形式返回。否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.highlight-string-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        返回类型从 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> 变更为 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></span>。       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        由此产生的 HTML 有所改变。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.highlight-string-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-3724">    <p><strong>示例 #1 <span class="function"><strong>highlight_string()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>highlight_string</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?php phpinfo(); ?&gt;'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"><span><span><br><span>&lt;?php&nbsp;phpinfo</span><span>();&nbsp;</span><span>?&gt;</span><br></span><br></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例在 PHP 8.3 中的输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"><pre><span><span>&lt;?php&nbsp;phpinfo</span><span>();&nbsp;</span><span>?&gt;</span></span></pre></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.highlight-string-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">当使用了<span class="parameter" style="color:#3A95FF">return</span>参数时，本函数使用其内部输出缓冲，因此不能在<span class="function">{@link ob_start()}</span> 回调函数的内部使用。</p></blockquote>  <p class="para">   产生的 HTML 标记可能会有更改。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.highlight-string-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link highlight_file()} - 语法高亮一个文件</span></li>    <li><a href="https://php.net/manual/zh/misc.configuration.php#ini.syntax-highlighting" class="link">高亮 INI 指令</a></li>   </ul>   </div></div>
 * 
 * Syntax highlighting of a string
 * @link https://php.net/manual/zh/function.highlight-string.php
 * @param string $string <p>
 * The PHP code to be highlighted. This should include the opening tag.
 * </p>
 * @param bool $return [optional] <p>
 * Set this parameter to true to make this function return the
 * highlighted code.
 * </p>
 * @return string|bool If return is set to true, returns the highlighted
 * code as a string instead of printing it out. Otherwise, it will return
 * true on success, false on failure.
 */
#[LanguageLevelTypeAware(['8.4' => 'string|true'], default: 'string|bool')]
function highlight_string(string $string, bool $return = false) {}

/**
 * <div id="function.hrtime" class="refentry"> <div class="refnamediv">  <h1 class="refname">hrtime</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3.0, PHP 8)</p><p class="refpurpose"><span class="refname">hrtime</span> — <span class="dc-title">获取系统的高精度时间</span></p> </div> <div class="refsect1 description" id="refsect1-function.hrtime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>hrtime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$as_number</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="simpara">   从任意时间点开始统计，返回系统的高精度时间（high resolution time）。   获取的时间戳为单调时间，无法被用户调整。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.hrtime-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">as_number</span></dt>     <dd>      <p class="para">       以 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 还是数字返回高精度时间。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.hrtime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   参数 <span class="parameter" style="color:#3A95FF">as_number</span> 为 false 时，返回的整型数组格式为   [seconds, nanoseconds]。否则会以 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> （64 位平台）或   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> （32 位平台）返回奈秒（nanoseconds）。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   </p> </div> <div class="refsect1 examples" id="refsect1-function.hrtime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-3725">    <p><strong>示例 #1 <span class="function"><strong>hrtime()</strong></span> 的用法</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">hrtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">hrtime</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">10444739687370679<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;10444739<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;687464812<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.hrtime-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><a href="https://php.net/manual/zh/book.hrtime.php" class="link">高精度记时</a>扩展</li>   <li><span class="function">{@link microtime()} - 返回当前 Unix 时间戳和微秒数</span></li>  </ul> </div></div>
 * 
 * Get the system's high resolution time
 * @link https://secure.php.net/manual/en/function.hrtime.php
 * @param bool $as_number <p>Whether the high resolution time should be returned as array or number.<p>
 * @since 7.3
 * @return int[]|int|float|false Returns an array of integers in the form [seconds, nanoseconds], if the parameter get_as_number is false.
 * Otherwise the nanoseconds are returned as integer (64bit platforms) or float (32bit platforms).
 */
#[Pure(true)]
function hrtime(bool $as_number = false): array|int|float|false {}

/**
 * <div id="function.php-strip-whitespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_strip_whitespace</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_strip_whitespace</span> — <span class="dc-title">返回删除注释和空格后的PHP源码</span></p> </div>  <div class="refsect1 description" id="refsect1-function.php-strip-whitespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>php_strip_whitespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   返回删除注释和空格后 <span class="parameter" style="color:#3A95FF">filename</span> 的PHP源码。这对实际代码数量和注释数量的对比很有用。   此函数与 <a href="https://php.net/manual/zh/features.commandline.php" class="link">命令行</a> 下执行 <strong class="command">php -w</strong> 相似。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.php-strip-whitespace-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       PHP文件的路径。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.php-strip-whitespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   在成功时返回过滤后的代码，或者在失败时返回空字符串。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    此函数遵守 <a href="https://php.net/manual/zh/ini.core.php#ini.short-open-tag" class="link">short_open_tag</a> ini 指令的值。   </p>  </blockquote> </div>  <div class="refsect1 examples" id="refsect1-function.php-strip-whitespace-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-3728">    <p><strong>示例 #1 <span class="function"><strong>php_strip_whitespace()</strong></span> 的例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// PHP comment here<br><br>//<br> * Another PHP comment<br> <br><br></span><span style="color: #007700">echo        </span><span style="color: #9876AA">php_strip_whitespace</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// Newlines are considered whitespace, and are removed too:<br></span><span style="color: #9876AA">do_nothing</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"><?php <br>&nbsp;echo&nbsp;php_strip_whitespace(__FILE__);&nbsp;do_nothing();&nbsp;?&gt;</blockquote></div>    </div>    <div class="example-contents"><p>     可以注意到PHP的注释已不存在，成为第一个echo语句前的换行和空格。    </p></div>   </div>   </div></div>
 * 
 * Return source with stripped comments and whitespace
 * @link https://php.net/manual/zh/function.php-strip-whitespace.php
 * @param string $filename <p>
 * Path to the PHP file.
 * </p>
 * @return string The stripped source code will be returned on success, or an empty string
 * on failure.
 * </p>
 * <p>
 * This function works as described as of PHP 5.0.1. Before this it would
 * only return an empty string. For more information on this bug and its
 * prior behavior, see bug report
 * #29606.
 */
#[Pure(true)]
function php_strip_whitespace(string $filename): string {}

/**
 * <div id="function.ini-get" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_get</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ini_get</span> — <span class="dc-title">获取一个配置选项的值</span></p> </div>  <div class="refsect1 description" id="refsect1-function.ini-get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ini_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   成功时返回配置选项的值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ini-get-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       配置选项名称。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ini-get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功是返回配置选项值的字符串，<span class="literal">null</span> 的值则返回空字符串。如果配置选项不存在，将会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.ini-get-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-631">    <p><strong>示例 #1 一些 <span class="function"><strong>ini_get()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">//<br>我们的 php.ini 包含了以下的设置：<br><br>display_errors = On<br>opcache.enable_cli = Off<br>post_max_size = 8M<br><br><br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'display_errors = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'opcache.enable_cli = ' </span><span style="color: #007700">. (int) </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'opcache.enable_cli'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'post_max_size = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'post_max_size + 1 = ' </span><span style="color: #007700">. (</span><span style="color: #9876AA">rtrim</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">), </span><span style="color: #DD0000">'KMG'</span><span style="color: #007700">) + </span><span style="color: #9876AA">1</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'post_max_size in bytes = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'post_max_size'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">display_errors&nbsp;=&nbsp;1<br>opcache.enable_cli&nbsp;=&nbsp;0<br>post_max_size&nbsp;=&nbsp;8M<br>post_max_size+1&nbsp;=&nbsp;9<br>post_max_size&nbsp;in&nbsp;bytes&nbsp;=&nbsp;8388608</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.ini-get-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>当查询一个 boolean 值</strong><br>   </p><p class="para">    一个 <span class="literal">off</span> 的 boolean ini 值将会以空字符串或者 "0" 返回；<span class="literal">on</span> 的 ini 值会以 "1" 返回。    此函数也会返回 INI 值的文字字符串。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>当查询一个内存尺寸的值</strong><br>   </p><p class="para">    许多内存尺寸的 ini 值，类似 <a href="https://php.net/manual/zh/ini.core.php#ini.upload-max-filesize" class="link">upload_max_filesize</a> 是以简写表示法储存在 <var class="filename">php.ini</var> 文件里。    <span class="function"><strong>ini_get()</strong></span> 会返回 <var class="filename">php.ini</var> 文件中储存的确切字符串，而<em>不是</em>它的等量 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>。    尝试对这些值进行正常的算术运算将不会得到预期的结果。    <span class="function">{@link ini_parse_quantity()}</span> 函数可以用来将简写表示法转换为字节。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>ini_get()</strong></span> 无法读取 "array" 的 ini 选项，    例如 <span class="literal">pdo.dsn.<span class="replaceable">*</span></span>，    在这个示例中会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   </p>  </blockquote> </div>  <div class="refsect1 seealso" id="refsect1-function.ini-get-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link get_cfg_var()} - 获取 PHP 配置选项的值</span></li>    <li><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>    <li><span class="function">{@link ini_parse_quantity()} - Get interpreted size from ini shorthand syntax</span></li>    <li><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>    <li><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>   </ul>   </div></div>
 * 
 * Gets the value of a configuration option
 * @link https://php.net/manual/zh/function.ini-get.php
 * @link https://php.net/manual/zh/ini.list.php
 * @param string $option <p>
 * The configuration option name.
 * </p>
 * @return string|false the value of the configuration option as a string on success, or
 * an empty string on failure or for null values.
 */
#[Pure(true)]
function ini_get(string $option): string|false {}

/**
 * <div id="function.ini-get-all" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_get_all</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ini_get_all</span> — <span class="dc-title">获取所有配置选项</span></p> </div>  <div class="refsect1 description" id="refsect1-function.ini-get-all-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ini_get_all</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$extension</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$details</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   获取所有已注册的配置选项  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ini-get-all-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">extension</span></dt>     <dd>      <p class="para">       可选的扩展名称。如果不是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 或字符串 <span class="literal">core</span>，此函数仅仅返回指定扩展的选项。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">details</span></dt>     <dd>      <p class="para">       获取详细设置或者仅仅是每个设置的当前值。 默认是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>（获取详细信息）。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ini-get-all-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个关联数组，指令名称是数组的键。   如果 <span class="parameter" style="color:#3A95FF">extension</span> 不存在，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 并产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级错误。  </p>  <p class="para">   当 <span class="parameter" style="color:#3A95FF">details</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>（默认），数组会包含 <span class="literal">global_value</span>（<var class="filename">php.ini</var> 中的设置）、<span class="literal">local_value</span>（可能是 <span class="function">{@link ini_set()}</span> 或 <var class="filename">.htaccess</var> 中的设置） 以及 <span class="literal">access</span>（访问级别）。  </p>  <p class="para">   当 <span class="parameter" style="color:#3A95FF">details</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，这个值会是选项的当前值。  </p>  <p class="para">   参见<a href="https://php.net/manual/zh/configuration.changes.modes.php" class="link">手册章节</a>中访问级别含义的信息。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    指令可以有多个访问级别，这也是为什么 <span class="literal">access</span> 会显示适当的位掩码。   </p>  </blockquote> </div> <div class="refsect1 examples" id="refsect1-function.ini-get-all-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-632">    <p><strong>示例 #1 <span class="function"><strong>ini_get_all()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #DD0000">"pcre"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[pcre.backtrack_limit]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[global_value]&nbsp;=&gt;&nbsp;100000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[local_value]&nbsp;=&gt;&nbsp;100000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[access]&nbsp;=&gt;&nbsp;7<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[pcre.recursion_limit]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[global_value]&nbsp;=&gt;&nbsp;100000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[local_value]&nbsp;=&gt;&nbsp;100000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[access]&nbsp;=&gt;&nbsp;7<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[allow_call_time_pass_reference]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[global_value]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[local_value]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[access]&nbsp;=&gt;&nbsp;6<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[allow_url_fopen]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[global_value]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[local_value]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[access]&nbsp;=&gt;&nbsp;4<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;...<br><br>)</blockquote></div>    </div>   </div>   <div class="example" id="example-633">    <p><strong>示例 #2 禁用 <span class="parameter" style="color:#3A95FF">details</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #DD0000">"pcre"</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)); </span><span style="color: #FF8000">// Added in PHP 5.3.0<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get_all</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)); </span><span style="color: #FF8000">// Added in PHP 5.3.0<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[pcre.backtrack_limit]&nbsp;=&gt;&nbsp;100000<br>&nbsp;&nbsp;&nbsp;&nbsp;[pcre.recursion_limit]&nbsp;=&gt;&nbsp;100000<br>)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[allow_call_time_pass_reference]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;[allow_url_fopen]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;...<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.ini-get-all-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>ini_get_all()</strong></span> 忽略 "array" 的 ini 选项，例如    <span class="literal">pdo.dsn.<span class="replaceable">*</span></span>。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.ini-get-all-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/configuration.changes.php" class="xref">怎样修改配置设定</a></li>    <li><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>    <li><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    <li><span class="function">{@link get_loaded_extensions()} - 返回所有编译并加载模块名的 array</span></li>    <li><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionExtension::getINIEntries()} - 获取 ini 配置</span></li>   </ul>   </div></div>
 * 
 * Gets all configuration options
 * @link https://php.net/manual/zh/function.ini-get-all.php
 * @link https://php.net/manual/zh/ini.list.php
 * @param string|null $extension [optional] <p>
 * An optional extension name. If set, the function return only options
 * specific for that extension.
 * </p>
 * @param bool $details [optional] <p>
 * Retrieve details settings or only the current value for each setting.
 * Default is true (retrieve details).
 * </p>
 * @return array|false an associative array with directive name as the array key.
 * <p>
 * When details is true (default) the array will
 * contain global_value (set in
 * "php.ini"), local_value (perhaps set with
 * ini_set or ".htaccess"), and
 * access (the access level).
 * </p>
 * <p>
 * When details is false the value will be the
 * current value of the option.
 * </p>
 * <p>
 * See the manual section
 * for information on what access levels mean.
 * </p>
 * <p>
 * It's possible for a directive to have multiple access levels, which is
 * why access shows the appropriate bitmask values.
 * </p>
 */
#[Pure(true)]
#[ArrayShape(["global_value" => "string", "local_value" => "string", "access" => "int"])]
function ini_get_all(?string $extension, #[PhpStormStubsElementAvailable(from: '7.0')] bool $details = true): array|false {}

/**
 * <div id="function.ini-set" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_set</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ini_set</span> — <span class="dc-title">为一个配置选项设置值</span></p> </div>  <div class="refsect1 description" id="refsect1-function.ini-set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ini_set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ini-set-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">      </p>      <p class="para">       不是所有有效的选项都能够用 <span class="function"><strong>ini_set()</strong></span> 来改变的。       这里有个有效选项的清单<a href="https://php.net/manual/zh/ini.list.php" class="link">附录</a>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       选项新的值。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ini-set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回旧的值，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.ini-set-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">value</span> 现在接受任何标量类型（包含       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>），之前仅接受 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 值。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.ini-set-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-636">    <p><strong>示例 #1 设置一个 ini 选项</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">);<br><br>if (!</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1'</span><span style="color: #007700">);<br>}<br><br>echo </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'display_errors'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.ini-set-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link get_cfg_var()} - 获取 PHP 配置选项的值</span></li>    <li><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>    <li><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>    <li>     <a href="https://php.net/manual/zh/configuration.changes.php" class="link">如何改变配置选项</a>    </li>   </ul>   </div></div>
 * 
 * Sets the value of a configuration option
 * @link https://php.net/manual/zh/function.ini-set.php
 * @link https://php.net/manual/zh/ini.list.php
 * @param string $option <p>
 * </p>
 * <p>
 * Not all the available options can be changed using
 * ini_set. There is a list of all available options
 * in the appendix.
 * </p>
 * @param string $value <p>
 * The new value for the option.
 * </p>
 * @return string|false the old value on success, false on failure.
 */
function ini_set(string $option, #[LanguageLevelTypeAware(['8.1' => 'string|int|float|bool|null'], default: 'string')] $value): string|false {}

/**
 * <div id="function.ini-alter" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_alter</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ini_alter</span> — <span class="dc-title">别名 <span class="function">{@link ini_set()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.ini-alter-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名： <span class="function">{@link ini_set()}</span>.  </p> </div></div>
 * 
 * Alias:
 * {@see ini_set}
 * @link https://php.net/manual/zh/function.ini-alter.php
 * @link https://php.net/manual/zh/ini.list.php
 * @param string $option
 * @param string $value
 * @return string|false
 */
function ini_alter(string $option, #[LanguageLevelTypeAware(['8.1' => 'string|int|float|bool|null'], default: 'string')] $value): string|false {}

/**
 * <div id="function.ini-restore" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_restore</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ini_restore</span> — <span class="dc-title">恢复配置选项的值</span></p> </div>  <div class="refsect1 description" id="refsect1-function.ini-restore-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ini_restore</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   恢复指定的配置选项到它的原始值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ini-restore-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       配置选项名称。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ini-restore-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-function.ini-restore-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-635">    <p><strong>示例 #1 <span class="function"><strong>ini_restore()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$setting </span><span style="color: #007700">= </span><span style="color: #DD0000">'html_errors'</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">'Current value for \'' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$setting </span><span style="color: #007700">. </span><span style="color: #DD0000">'\': ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">, </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">) ? </span><span style="color: #9876AA">0 </span><span style="color: #007700">: </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'New value for \'' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$setting </span><span style="color: #007700">. </span><span style="color: #DD0000">'\': ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">ini_restore</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Original value for \'' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$setting </span><span style="color: #007700">. </span><span style="color: #DD0000">'\': ' </span><span style="color: #007700">. </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$setting</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Current&nbsp;value&nbsp;for&nbsp;'html_errors':&nbsp;1<br>New&nbsp;value&nbsp;for&nbsp;'html_errors':&nbsp;0<br>Original&nbsp;value&nbsp;for&nbsp;'html_errors':&nbsp;1</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.ini-restore-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>    <li><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>   </ul>   </div></div>
 * 
 * Restores the value of a configuration option
 * @link https://php.net/manual/zh/function.ini-restore.php
 * @link https://php.net/manual/zh/ini.list.php
 * @param string $option <p>
 * The configuration option name.
 * </p>
 * @return void
 */
function ini_restore(string $option): void {}

/**
 * <div id="function.ini-parse-quantity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ini_parse_quantity</h1>  <p class="verinfo">(PHP 8 &gt;= 8.2.0)</p><p class="refpurpose"><span class="refname">ini_parse_quantity</span> — <span class="dc-title">Get interpreted size from ini shorthand syntax</span></p> </div> <div class="refsect1 description" id="refsect1-function.ini-parse-quantity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ini_parse_quantity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$shorthand</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the interpreted size in bytes on success from an <a href="https://php.net/manual/zh/faq.using.php#faq.using.shorthandbytes" class="link">ini shorthand</a>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ini-parse-quantity-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">shorthand</span></dt>     <dd>      <p class="para">       Ini shorthand to parse, must be a number followed by an optional multiplier.       The following multipliers are supported: <span class="literal">k</span>/<span class="literal">K</span> (<span class="literal">1024</span>),       <span class="literal">m</span>/<span class="literal">M</span> (<span class="literal">1048576</span>),       <span class="literal">g</span>/<span class="literal">G</span> (<span class="literal">1073741824</span>).       The number can be a decimal, hex (prefixed with <span class="literal">0x</span> or <span class="literal">0X</span>),       octal (prefixed with <span class="literal">0o</span>, <span class="literal">0O</span> or <span class="literal">0</span>) or binary (prefixed with       <span class="literal">0b</span> or <span class="literal">0B</span>)      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ini-parse-quantity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the interpreted size in bytes as an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.ini-parse-quantity-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If the value cannot be parsed, or an invalid multiplier is used, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> is raised.  </p> </div> <div class="refsect1 examples" id="refsect1-function.ini-parse-quantity-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-634">    <p><strong>示例 #1 A few <span class="function"><strong>ini_parse_quantity()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'1024'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'1024M'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'512K'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'0xFFk'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'0b1010k'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'0o1024'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'01024'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'Foobar'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_parse_quantity</span><span style="color: #007700">(</span><span style="color: #DD0000">'10F'</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(1024)<br>int(1073741824)<br>int(524288)<br>int(261120)<br>int(10240)<br>int(532)<br>int(532)<br><br>Warning:&nbsp;Invalid&nbsp;quantity&nbsp;"Foobar":&nbsp;no&nbsp;valid&nbsp;leading&nbsp;digits,&nbsp;interpreting&nbsp;as&nbsp;"0"&nbsp;for&nbsp;backwards&nbsp;compatibility<br>int(0)<br><br>Warning:&nbsp;Invalid&nbsp;quantity&nbsp;"10F":&nbsp;unknown&nbsp;multiplier&nbsp;"F",&nbsp;interpreting&nbsp;as&nbsp;"10"&nbsp;for&nbsp;backwards&nbsp;compatibility<br>int(10)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.ini-parse-quantity-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>  </ul> </div></div>
 * 
 * @param string $shorthand
 * @return int
 * @since 8.2
 */
function ini_parse_quantity(string $shorthand): int {}

/**
 * <div id="function.get-include-path" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_include_path</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_include_path</span> — <span class="dc-title">获取当前的 include_path 配置选项</span></p> </div>  <div class="refsect1 description" id="refsect1-function.get-include-path-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_include_path</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="simpara">   获取当前 <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>   配置选项的值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.get-include-path-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.get-include-path-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串的路径， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.get-include-path-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-619">    <p><strong>示例 #1 <span class="function"><strong>get_include_path()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 或使用 ini_get()<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.get-include-path-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li><span class="function">{@link restore_include_path()} - 还原 include_path 配置选项的值</span></li>    <li><span class="function">{@link set_include_path()} - 设置 include_path 配置选项</span></li>    <li><span class="function">{@link include} - include</span></li>   </ul>   </div></div>
 * 
 * Gets the current include_path configuration option
 * @link https://php.net/manual/zh/function.get-include-path.php
 * @return string|false the path, as a string.
 */
#[Pure(true)]
function get_include_path(): string|false {}

/**
 * <div id="function.set-include-path" class="refentry"> <div class="refnamediv">  <h1 class="refname">set_include_path</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">set_include_path</span> — <span class="dc-title">设置 include_path 配置选项</span></p> </div>  <div class="refsect1 description" id="refsect1-function.set-include-path-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>set_include_path</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$include_path</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   为当前脚本设置 <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>   运行时的配置选项。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.set-include-path-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">include_path</span></dt>     <dd>      <p class="para">       <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 新的值。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.set-include-path-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回旧的 <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.set-include-path-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-652">    <p><strong>示例 #1 <span class="function"><strong>set_include_path()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>set_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 或使用 ini_set<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">, </span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-653">    <p><strong>示例 #2 添加到include path</strong></p>    <div class="example-contents"><p>     利用常量 <strong><span><a href="https://php.net/manual/zh/dir.constants.php#constant.path-separator">PATH_SEPARATOR</a></span></strong> 可跨平台扩展 include path。    </p></div>    <div class="example-contents"><p>     这个示例中我们把 <var class="filename">/usr/lib/pear</var> 添加到了     现有的 <span class="literal">include_path</span> 的尾部。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'/usr/lib/pear'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">set_include_path</span><span style="color: #007700">(</span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">() . </span><span style="color: #9876AA">PATH_SEPARATOR </span><span style="color: #007700">. </span><span style="color: #9876AA">\$path</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.set-include-path-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    <li><span class="function">{@link get_include_path()} - 获取当前的 include_path 配置选项</span></li>    <li><span class="function">{@link restore_include_path()} - 还原 include_path 配置选项的值</span></li>    <li><span class="function">{@link include} - include</span></li>   </ul>   </div></div>
 * 
 * Sets the include_path configuration option
 * @link https://php.net/manual/zh/function.set-include-path.php
 * @param string $include_path <p>
 * The new value for the include_path
 * </p>
 * @return string|false the old include_path on
 * success or false on failure.
 */
function set_include_path(string $include_path): string|false {}

/**
 * <div id="function.restore-include-path" class="refentry"> <div class="refnamediv">  <h1 class="refname">restore_include_path</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">restore_include_path</span> — <span class="dc-title">还原 include_path 配置选项的值</span></p> </div> <div id="function.restore-include-path-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.4.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div> <div class="refsect1 description" id="refsect1-function.restore-include-path-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>restore_include_path</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="simpara">   还原到 <var class="filename">php.ini</var> 中设置的 <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 主值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.restore-include-path-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.restore-include-path-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.restore-include-path-changelog"> <h3 class="title">更新日志</h3> <table class="doctable informaltable">     <thead>    <tr>     <th>版本</th>     <th>说明</th>    </tr>   </thead>   <tbody class="tbody">    <tr>     <td>8.0.0</td>     <td>      此函数已移除。     </td>    </tr>    <tr>     <td>7.4.0</td>     <td>      此函数已废弃。     </td>    </tr>   </tbody>   </table> </div> <div class="refsect1 examples" id="refsect1-function.restore-include-path-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-651">    <p><strong>示例 #1 <span class="function"><strong>restore_include_path()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();  </span><span style="color: #FF8000">// .:/usr/local/lib/php<br><br></span><span style="color: #9876AA">set_include_path</span><span style="color: #007700">(</span><span style="color: #DD0000">'/inc'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();  </span><span style="color: #FF8000">// /inc<br><br></span><span style="color: #9876AA">restore_include_path</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 或使用 ini_restore<br></span><span style="color: #9876AA">ini_restore</span><span style="color: #007700">(</span><span style="color: #DD0000">'include_path'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">get_include_path</span><span style="color: #007700">();  </span><span style="color: #FF8000">// .:/usr/local/lib/php<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.restore-include-path-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ini_restore()} - 恢复配置选项的值</span></li>    <li><span class="function">{@link get_include_path()} - 获取当前的 include_path 配置选项</span></li>    <li><span class="function">{@link set_include_path()} - 设置 include_path 配置选项</span></li>    <li><span class="function">{@link include} - include</span></li>   </ul>   </div></div>
 * 
 * Restores the value of the include_path configuration option
 * @link https://php.net/manual/zh/function.restore-include-path.php
 * @return void
 * @removed 8.0
 */
#[Deprecated(since: '7.4')]
function restore_include_path() {}

/**
 * <div id="function.setcookie" class="refentry"> <div class="refnamediv">  <h1 class="refname">setcookie</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">setcookie</span> — <span class="dc-title">发送 Cookie</span></p> </div>  <div class="refsect1 description" id="refsect1-function.setcookie-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>setcookie</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$expires_or_options</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$path</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名（不支持命名参数）：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>setcookie</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>setcookie()</strong></span> 定义了   Cookie，会和剩下的消息头一起发送给客户端。和其他消息头一样，必须在脚本产生任意输出<em>之前</em>发送   Cookie（由于协议的限制）。请在产生任何输出之前（包括 <span class="literal">&lt;html&gt;</span> 和 <span class="literal">&lt;head&gt;</span> 或者空格）调用本函数。  </p>  <p class="para">   一旦设置 Cookie 后，下次打开页面时可以使用 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.cookies.php" class="classname">\$_COOKIE</a></var>   读取。Cookie 值同样也存在于 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.request.php" class="classname">\$_REQUEST</a></var>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.setcookie-parameters">  <h3 class="title">参数</h3>  <p class="para">   <a href="https://datatracker.ietf.org/doc/html/rfc6265" class="link external">»&nbsp;RFC 6265</a> 提供了 <span class="function"><strong>setcookie()</strong></span> 每个参数的参考标准。   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       Cookie 名称。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       Cookie 值。这个值储存于用户的电脑里，请勿储存敏感信息。比如       <span class="parameter" style="color:#3A95FF">name</span> 是 <span class="literal">'cookiename'</span>，可通过       <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.cookies.php" class="classname">\$_COOKIE['cookiename']</a></var> 获取它的值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">expires_or_options</span></dt>     <dd>      <p class="para">       Cookie 的过期时间。这是 Unix 时间戳，即纪元以来的秒数。一种设置此值的方式是将       cookie 过期前的秒数与调用 <span class="function">{@link time()}</span>       的结果相加。例如，<span class="literal">time()+60*60*24*30</span>       就是设置 Cookie 30 天后过期。还有一种选择就是使用 <span class="function">{@link mktime()}</span>       函数。如果设置为 <span class="literal">0</span> 或者忽略，Cookie 会在会话结束时过期（关掉浏览器时）。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         可能会注意到，<span class="parameter" style="color:#3A95FF">expires_or_options</span> 使用 Unix 时间戳而非 <span class="literal">Wdy, DD-Mon-YYYY         HH:MM:SS GMT</span> 这样的日期格式，是因为 PHP 内部作了转换。        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       Cookie 有效的服务器路径。设置成 <span class="literal">'/'</span> 时，Cookie 对整个域名       <span class="parameter" style="color:#3A95FF">domain</span> 有效。如果设置成 <span class="literal">'/foo/'</span>，Cookie       仅仅对 <span class="parameter" style="color:#3A95FF">domain</span> 中 <span class="literal">/foo/</span>       目录及其子目录有效（比如 <span class="literal">/foo/bar/</span>）。默认值是设置 Cookie 时的当前目录。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       Cookie 的有效域名/子域名。设置成子域名（例如 <span class="literal">'www.example.com'</span>），会使       Cookie 对这个子域名和它的三级域名有效（例如 w2.www.example.com）。要让 Cookie       对整个域名有效（包括它的全部子域名），只要设置成域名就可以了（这个示例里是 <span class="literal">'example.com'</span>）。      </p>      <p class="para">       旧版浏览器仍然在使用废弃的 <a href="https://datatracker.ietf.org/doc/html/rfc2109" class="link external">»&nbsp;RFC 2109</a>，需要一个前置的点       <span class="literal">.</span> 来匹配所有子域名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">secure</span></dt>     <dd>      <p class="para">       设置这个 Cookie 是否仅仅通过安全的 HTTPS 连接传给客户端。设置成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，只有安全连接存在时才会设置       Cookie。如果是在服务器端处理这个需求，程序员需要仅仅在安全连接上发送此类 Cookie（通过       <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.server.php" class="classname">\$_SERVER["HTTPS"]</a></var> 判断）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">httponly</span></dt>     <dd>      <p class="para">       设置成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，Cookie 仅可通过 HTTP 协议访问。这意思就是 Cookie 无法通过类似 JavaScript       这样的脚本语言访问。要有效减少 XSS 攻击时的身份窃取行为，可建议用此设置（虽然不是所有浏览器都支持），不过这个说法经常有争议。       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       关联 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，可能会存在以下键       <span class="literal">expires</span>、<span class="literal">path</span>、<span class="literal">domain</span>、<span class="literal">secure</span>、<span class="literal">httponly</span> 和       <span class="literal">samesite</span>。如果存在其它的键，会生成 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>       级别的错误。这些值的含义跟同名参数的描述相同。<span class="literal">samesite</span> 元素的值应该是       <span class="literal">None</span>、<span class="literal">Lax</span> 或       <span class="literal">Strict</span>。如果没有指定任何允许的选项，它们的默认值与显式参数的默认值相同。如果省略       <span class="literal">samesite</span> 元素，则不设置 SameSite cookie 属性。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         要设置一个包含不在列出的关键字中的属性的 Cookie，使用 <span class="function">{@link header()}</span>。        </p>       </blockquote>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.setcookie-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果在调用本函数以前就产生了输出，<span class="function"><strong>setcookie()</strong></span> 会失败并返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。如果   <span class="function"><strong>setcookie()</strong></span> 成功运行，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。当然，它的意思并非用户是否已接受 Cookie。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.setcookie-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.0</td>       <td>        Cookie 的日期格式现在为 <span class="literal">'D, d M Y H:i:s \G\M\T'</span>；        以前是 <span class="literal">'D, d-M-Y H:i:s T'</span>。       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        新增对替代签名 <span class="parameter" style="color:#3A95FF">options</span> 数组的支持。此签名还支持 SameSite cookie 属性的设置。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.setcookie-examples">  <h3 class="title">示例</h3>  <p class="para">   以下示例展示了一些发送 Cookie 的方法。   </p><div class="example" id="example-4716">    <p><strong>示例 #1 <span class="function"><strong>setcookie()</strong></span> 发送示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$value </span><span style="color: #007700">= </span><span style="color: #DD0000">'something from somewhere'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 1 小时过期  <br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">, </span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   注意：在发送 Cookie 时，值的部分会被自动 urlencode 编码。收到 Cookie 时，会自动解码，并赋值到可变的   Cookie 名称上。如果不想被编码，可以使用 <span class="function">{@link setrawcookie()}</span>   代替。在脚本里查看我们的测试 Cookie 的内容，使用下面的一个示例：  </p>  <p class="para">   </p><div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 打印一个单独的 Cookie<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">];<br><br></span><span style="color: #FF8000">//  debug/test 查看所有 Cookie 的另一种方式<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4717">    <p><strong>示例 #2 <span class="function"><strong>setcookie()</strong></span> 删除示例</strong></p>    <div class="example-contents"><p>     要删除一个 Cookie，应该设置过期时间为过去，以触发浏览器的删除机制。下面的示例展示了如何删除上个示例里的 Cookie：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置过期时间为一个小时前<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">3600</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">3600</span><span style="color: #007700">, </span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4718">    <p><strong>示例 #3 <span class="function"><strong>setcookie()</strong></span> 和数组</strong></p>    <div class="example-contents"><p>     通过带 array 标记的 Cookie 名称，也可以把 Cookie 设置成数组。如果有数组元素，可以把它放进 Cookie     里；脚本接收到时，Cookie 名称里的值会是一个数组：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置 Cookie<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[three]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookiethree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[two]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookietwo"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[one]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookieone"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 网页刷新后，打印出以下内容<br></span><span style="color: #007700">if (isset(</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">])) {<br>    foreach (</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">] as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$name </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">);<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$name</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> &lt;br /&gt;\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">three&nbsp;:&nbsp;cookiethree<br>two&nbsp;:&nbsp;cookietwo<br>one&nbsp;:&nbsp;cookieone</blockquote></div>    </div>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">     使用 <span class="literal">[</span> 和 <span class="literal">]</span> 分隔符作为 cookie 名称的一部分不符合     RFC 6265 第 4 节。但根据 RFC 6265 第 5 节应该由 user agent 支持。    </span>   </p></blockquote>   </div> <div class="refsect1 notes" id="refsect1-function.setcookie-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    要在调用本函数前输出内容，可以使用输出缓冲，让输出的内容在服务器里缓冲起来，直至真正发送给浏览器。可在脚本里调用    <span class="function">{@link ob_start()}</span> 和 <span class="function">{@link ob_end_flush()}</span>，或设置    <span class="literal">output_buffering</span> <var class="filename">php.ini</var> 或服务器配置文件里的配置指令。   </p>  </blockquote>  <p class="para">   注意避坑：   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      在页面（Cookie 可见的页面）下次刷新前，Cookie 不会生效。      测试 Cookie 是否已经成功设置，需要在下次页面加载时、Cookie 过期前检测。      过期时间是通过 <span class="parameter" style="color:#3A95FF">expires_or_options</span> 参数设置的。      直接调用 <span class="literal">print_r(\$_COOKIE);</span> 调试检测 Cookie 是个很好的方式。     </span>    </li>    <li class="listitem">     <span class="simpara">      为同一个参数再次设置 Cookie 前，必须先把它删掉。      如果 <span class="parameter" style="color:#3A95FF">value</span> 的值是空 string，并且其他参数和上次调用 <span class="function"><strong>setcookie()</strong></span> 仍旧一样，      则指定的名称会被远程客户端删除。      内部的实现是：将值设置成 <span class="literal">'deleted'</span>，且过去的过期时间。     </span>    </li>    <li class="listitem">     <span class="simpara">      因为设置值成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 会导致 Cookie 被删除，所以要避免使用布尔值。      代替方式：<em>0</em> 是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，<em>1</em> 是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。     </span>    </li>    <li class="listitem">     <span class="simpara">      Cookie 名称可以设置成数组名称，PHP 脚本里会是数组，      但用户系统里储存的是单独分开的 Cookie。       可以考虑使用 <span class="function">{@link explode()}</span> 为一个 Cookie 设置多个名称和值。      不建议将 <span class="function">{@link serialize()}</span> 用于此处，因为它会导致安全漏洞。     </span>    </li>   </ul>    <p class="simpara">   多次调用 <span class="function"><strong>setcookie()</strong></span> 会按调用顺序执行。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.setcookie-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>    <li><span class="function">{@link setrawcookie()} - 发送未经 URL 编码的 cookie</span></li>    <li><a href="https://php.net/manual/zh/features.cookies.php" class="link">Cookie 章节</a></li>    <li><a href="https://datatracker.ietf.org/doc/html/rfc6265" class="link external">»&nbsp;RFC 6265</a></li>    <li><a href="https://datatracker.ietf.org/doc/html/rfc2109" class="link external">»&nbsp;RFC 2109</a></li>   </ul>   </div></div>
 * 
 * Send a cookie
 * @link https://php.net/manual/zh/function.setcookie.php
 * @param string $name <p>
 * The name of the cookie.
 * </p>
 * @param string $value [optional] <p>
 * The value of the cookie. This value is stored on the clients
 * computer; do not store sensitive information.
 * Assuming the name is 'cookiename', this
 * value is retrieved through $_COOKIE['cookiename']
 * </p>
 * @param int $expires_or_options [optional] <p>
 * The time the cookie expires. This is a Unix timestamp so is
 * in number of seconds since the epoch. In other words, you'll
 * most likely set this with the time function
 * plus the number of seconds before you want it to expire. Or
 * you might use mktime.
 * time()+60*60*24*30 will set the cookie to
 * expire in 30 days. If set to 0, or omitted, the cookie will expire at
 * the end of the session (when the browser closes).
 * </p>
 * <p>
 * <p>
 * You may notice the expire parameter takes on a
 * Unix timestamp, as opposed to the date format Wdy, DD-Mon-YYYY
 * HH:MM:SS GMT, this is because PHP does this conversion
 * internally.
 * </p>
 * <p>
 * expire is compared to the client's time which can
 * differ from server's time.
 * </p>
 * </p>
 * @param string $path [optional] <p>
 * The path on the server in which the cookie will be available on.
 * If set to '/', the cookie will be available
 * within the entire domain. If set to
 * '/foo/', the cookie will only be available
 * within the /foo/ directory and all
 * sub-directories such as /foo/bar/ of
 * domain. The default value is the
 * current directory that the cookie is being set in.
 * </p>
 * @param string $domain [optional] <p>
 * The domain that the cookie is available.
 * To make the cookie available on all subdomains of example.com
 * then you'd set it to '.example.com'. The
 * . is not required but makes it compatible
 * with more browsers. Setting it to www.example.com
 * will make the cookie only available in the www
 * subdomain. Refer to tail matching in the
 * spec for details.
 * </p>
 * @param bool $secure [optional] <p>
 * Indicates that the cookie should only be transmitted over a
 * secure HTTPS connection from the client. When set to true, the
 * cookie will only be set if a secure connection exists.
 * On the server-side, it's on the programmer to send this
 * kind of cookie only on secure connection (e.g. with respect to
 * $_SERVER["HTTPS"]).
 * </p>
 * @param bool $httponly [optional] <p>
 * When true the cookie will be made accessible only through the HTTP
 * protocol. This means that the cookie won't be accessible by
 * scripting languages, such as JavaScript. This setting can effectively
 * help to reduce identity theft through XSS attacks (although it is
 * not supported by all browsers). Added in PHP 5.2.0.
 * true or false
 * </p>
 * @return bool If output exists prior to calling this function,
 * setcookie will fail and return false. If
 * setcookie successfully runs, it will return true.
 * This does not indicate whether the user accepted the cookie.
 */
function setcookie(string $name, string $value = "", int $expires_or_options = 0, string $path = "", string $domain = "", bool $secure = false, bool $httponly = false): bool {}

/**
 * <div id="function.setcookie" class="refentry"> <div class="refnamediv">  <h1 class="refname">setcookie</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">setcookie</span> — <span class="dc-title">发送 Cookie</span></p> </div>  <div class="refsect1 description" id="refsect1-function.setcookie-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>setcookie</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$expires_or_options</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$path</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名（不支持命名参数）：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>setcookie</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>setcookie()</strong></span> 定义了   Cookie，会和剩下的消息头一起发送给客户端。和其他消息头一样，必须在脚本产生任意输出<em>之前</em>发送   Cookie（由于协议的限制）。请在产生任何输出之前（包括 <span class="literal">&lt;html&gt;</span> 和 <span class="literal">&lt;head&gt;</span> 或者空格）调用本函数。  </p>  <p class="para">   一旦设置 Cookie 后，下次打开页面时可以使用 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.cookies.php" class="classname">\$_COOKIE</a></var>   读取。Cookie 值同样也存在于 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.request.php" class="classname">\$_REQUEST</a></var>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.setcookie-parameters">  <h3 class="title">参数</h3>  <p class="para">   <a href="https://datatracker.ietf.org/doc/html/rfc6265" class="link external">»&nbsp;RFC 6265</a> 提供了 <span class="function"><strong>setcookie()</strong></span> 每个参数的参考标准。   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       Cookie 名称。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       Cookie 值。这个值储存于用户的电脑里，请勿储存敏感信息。比如       <span class="parameter" style="color:#3A95FF">name</span> 是 <span class="literal">'cookiename'</span>，可通过       <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.cookies.php" class="classname">\$_COOKIE['cookiename']</a></var> 获取它的值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">expires_or_options</span></dt>     <dd>      <p class="para">       Cookie 的过期时间。这是 Unix 时间戳，即纪元以来的秒数。一种设置此值的方式是将       cookie 过期前的秒数与调用 <span class="function">{@link time()}</span>       的结果相加。例如，<span class="literal">time()+60*60*24*30</span>       就是设置 Cookie 30 天后过期。还有一种选择就是使用 <span class="function">{@link mktime()}</span>       函数。如果设置为 <span class="literal">0</span> 或者忽略，Cookie 会在会话结束时过期（关掉浏览器时）。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         可能会注意到，<span class="parameter" style="color:#3A95FF">expires_or_options</span> 使用 Unix 时间戳而非 <span class="literal">Wdy, DD-Mon-YYYY         HH:MM:SS GMT</span> 这样的日期格式，是因为 PHP 内部作了转换。        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       Cookie 有效的服务器路径。设置成 <span class="literal">'/'</span> 时，Cookie 对整个域名       <span class="parameter" style="color:#3A95FF">domain</span> 有效。如果设置成 <span class="literal">'/foo/'</span>，Cookie       仅仅对 <span class="parameter" style="color:#3A95FF">domain</span> 中 <span class="literal">/foo/</span>       目录及其子目录有效（比如 <span class="literal">/foo/bar/</span>）。默认值是设置 Cookie 时的当前目录。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       Cookie 的有效域名/子域名。设置成子域名（例如 <span class="literal">'www.example.com'</span>），会使       Cookie 对这个子域名和它的三级域名有效（例如 w2.www.example.com）。要让 Cookie       对整个域名有效（包括它的全部子域名），只要设置成域名就可以了（这个示例里是 <span class="literal">'example.com'</span>）。      </p>      <p class="para">       旧版浏览器仍然在使用废弃的 <a href="https://datatracker.ietf.org/doc/html/rfc2109" class="link external">»&nbsp;RFC 2109</a>，需要一个前置的点       <span class="literal">.</span> 来匹配所有子域名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">secure</span></dt>     <dd>      <p class="para">       设置这个 Cookie 是否仅仅通过安全的 HTTPS 连接传给客户端。设置成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，只有安全连接存在时才会设置       Cookie。如果是在服务器端处理这个需求，程序员需要仅仅在安全连接上发送此类 Cookie（通过       <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.server.php" class="classname">\$_SERVER["HTTPS"]</a></var> 判断）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">httponly</span></dt>     <dd>      <p class="para">       设置成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，Cookie 仅可通过 HTTP 协议访问。这意思就是 Cookie 无法通过类似 JavaScript       这样的脚本语言访问。要有效减少 XSS 攻击时的身份窃取行为，可建议用此设置（虽然不是所有浏览器都支持），不过这个说法经常有争议。       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       关联 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，可能会存在以下键       <span class="literal">expires</span>、<span class="literal">path</span>、<span class="literal">domain</span>、<span class="literal">secure</span>、<span class="literal">httponly</span> 和       <span class="literal">samesite</span>。如果存在其它的键，会生成 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>       级别的错误。这些值的含义跟同名参数的描述相同。<span class="literal">samesite</span> 元素的值应该是       <span class="literal">None</span>、<span class="literal">Lax</span> 或       <span class="literal">Strict</span>。如果没有指定任何允许的选项，它们的默认值与显式参数的默认值相同。如果省略       <span class="literal">samesite</span> 元素，则不设置 SameSite cookie 属性。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         要设置一个包含不在列出的关键字中的属性的 Cookie，使用 <span class="function">{@link header()}</span>。        </p>       </blockquote>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.setcookie-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果在调用本函数以前就产生了输出，<span class="function"><strong>setcookie()</strong></span> 会失败并返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。如果   <span class="function"><strong>setcookie()</strong></span> 成功运行，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。当然，它的意思并非用户是否已接受 Cookie。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.setcookie-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.0</td>       <td>        Cookie 的日期格式现在为 <span class="literal">'D, d M Y H:i:s \G\M\T'</span>；        以前是 <span class="literal">'D, d-M-Y H:i:s T'</span>。       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        新增对替代签名 <span class="parameter" style="color:#3A95FF">options</span> 数组的支持。此签名还支持 SameSite cookie 属性的设置。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.setcookie-examples">  <h3 class="title">示例</h3>  <p class="para">   以下示例展示了一些发送 Cookie 的方法。   </p><div class="example" id="example-4716">    <p><strong>示例 #1 <span class="function"><strong>setcookie()</strong></span> 发送示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$value </span><span style="color: #007700">= </span><span style="color: #DD0000">'something from somewhere'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 1 小时过期  <br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">()+</span><span style="color: #9876AA">3600</span><span style="color: #007700">, </span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   注意：在发送 Cookie 时，值的部分会被自动 urlencode 编码。收到 Cookie 时，会自动解码，并赋值到可变的   Cookie 名称上。如果不想被编码，可以使用 <span class="function">{@link setrawcookie()}</span>   代替。在脚本里查看我们的测试 Cookie 的内容，使用下面的一个示例：  </p>  <p class="para">   </p><div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 打印一个单独的 Cookie<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">];<br><br></span><span style="color: #FF8000">//  debug/test 查看所有 Cookie 的另一种方式<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4717">    <p><strong>示例 #2 <span class="function"><strong>setcookie()</strong></span> 删除示例</strong></p>    <div class="example-contents"><p>     要删除一个 Cookie，应该设置过期时间为过去，以触发浏览器的删除机制。下面的示例展示了如何删除上个示例里的 Cookie：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置过期时间为一个小时前<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">3600</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">3600</span><span style="color: #007700">, </span><span style="color: #DD0000">"/~rasmus/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4718">    <p><strong>示例 #3 <span class="function"><strong>setcookie()</strong></span> 和数组</strong></p>    <div class="example-contents"><p>     通过带 array 标记的 Cookie 名称，也可以把 Cookie 设置成数组。如果有数组元素，可以把它放进 Cookie     里；脚本接收到时，Cookie 名称里的值会是一个数组：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置 Cookie<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[three]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookiethree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[two]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookietwo"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">"cookie[one]"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cookieone"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 网页刷新后，打印出以下内容<br></span><span style="color: #007700">if (isset(</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">])) {<br>    foreach (</span><span style="color: #9876AA">\$_COOKIE</span><span style="color: #007700">[</span><span style="color: #DD0000">'cookie'</span><span style="color: #007700">] as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$name </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">);<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$name</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> &lt;br /&gt;\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">three&nbsp;:&nbsp;cookiethree<br>two&nbsp;:&nbsp;cookietwo<br>one&nbsp;:&nbsp;cookieone</blockquote></div>    </div>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">     使用 <span class="literal">[</span> 和 <span class="literal">]</span> 分隔符作为 cookie 名称的一部分不符合     RFC 6265 第 4 节。但根据 RFC 6265 第 5 节应该由 user agent 支持。    </span>   </p></blockquote>   </div> <div class="refsect1 notes" id="refsect1-function.setcookie-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    要在调用本函数前输出内容，可以使用输出缓冲，让输出的内容在服务器里缓冲起来，直至真正发送给浏览器。可在脚本里调用    <span class="function">{@link ob_start()}</span> 和 <span class="function">{@link ob_end_flush()}</span>，或设置    <span class="literal">output_buffering</span> <var class="filename">php.ini</var> 或服务器配置文件里的配置指令。   </p>  </blockquote>  <p class="para">   注意避坑：   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      在页面（Cookie 可见的页面）下次刷新前，Cookie 不会生效。      测试 Cookie 是否已经成功设置，需要在下次页面加载时、Cookie 过期前检测。      过期时间是通过 <span class="parameter" style="color:#3A95FF">expires_or_options</span> 参数设置的。      直接调用 <span class="literal">print_r(\$_COOKIE);</span> 调试检测 Cookie 是个很好的方式。     </span>    </li>    <li class="listitem">     <span class="simpara">      为同一个参数再次设置 Cookie 前，必须先把它删掉。      如果 <span class="parameter" style="color:#3A95FF">value</span> 的值是空 string，并且其他参数和上次调用 <span class="function"><strong>setcookie()</strong></span> 仍旧一样，      则指定的名称会被远程客户端删除。      内部的实现是：将值设置成 <span class="literal">'deleted'</span>，且过去的过期时间。     </span>    </li>    <li class="listitem">     <span class="simpara">      因为设置值成 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 会导致 Cookie 被删除，所以要避免使用布尔值。      代替方式：<em>0</em> 是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，<em>1</em> 是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。     </span>    </li>    <li class="listitem">     <span class="simpara">      Cookie 名称可以设置成数组名称，PHP 脚本里会是数组，      但用户系统里储存的是单独分开的 Cookie。       可以考虑使用 <span class="function">{@link explode()}</span> 为一个 Cookie 设置多个名称和值。      不建议将 <span class="function">{@link serialize()}</span> 用于此处，因为它会导致安全漏洞。     </span>    </li>   </ul>    <p class="simpara">   多次调用 <span class="function"><strong>setcookie()</strong></span> 会按调用顺序执行。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.setcookie-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>    <li><span class="function">{@link setrawcookie()} - 发送未经 URL 编码的 cookie</span></li>    <li><a href="https://php.net/manual/zh/features.cookies.php" class="link">Cookie 章节</a></li>    <li><a href="https://datatracker.ietf.org/doc/html/rfc6265" class="link external">»&nbsp;RFC 6265</a></li>    <li><a href="https://datatracker.ietf.org/doc/html/rfc2109" class="link external">»&nbsp;RFC 2109</a></li>   </ul>   </div></div>
 * 
 * Send a cookie
 *
 * @link  https://php.net/manual/zh/function.setcookie.php
 *
 * @param string $name The name of the cookie.
 * @param string $value [optional] The value of the cookie. This value is stored on the clients
 *                        computer; do not store sensitive information.
 *                        Assuming the name is 'cookiename', this value is retrieved through $_COOKIE['cookiename']
 * @param array $options [optional] An associative array which may have any of the keys expires, path, domain, secure,
 *                        httponly and samesite. The values have the same meaning as described for the parameters with
 *                        the same name. The value of the samesite element should be either Lax or Strict.
 *                        If any of the allowed options are not given, their default values are the same
 *                        as the default values of the explicit parameters. If the samesite element is omitted,
 *                        no SameSite cookie attribute is set.
 *
 * @return bool           If output exists prior to calling this function, setcookie will fail and return false. If
 *                        setcookie successfully runs, it will return true.
 *                        This does not indicate whether the user accepted the cookie.
 * @since 7.3
 */
function setcookie(string $name, string $value = '', array $options = []): bool {}

/**
 * <div id="function.setrawcookie" class="refentry"> <div class="refnamediv">  <h1 class="refname">setrawcookie</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">setrawcookie</span> — <span class="dc-title">发送未经 URL 编码的 cookie</span></p> </div>  <div class="refsect1 description" id="refsect1-function.setrawcookie-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>setrawcookie</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$expires_or_options</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$path</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名（不支持命名参数）：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>setrawcookie</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>setrawcookie()</strong></span> 和 <span class="function">{@link setcookie()}</span>   非常相似，唯一不同之处是发送到浏览器的 cookie 值没有自动经过 URL 编码（urlencode）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.setrawcookie-parameters">  <h3 class="title">参数</h3>  <p class="para">   相关参数的信息参见 <span class="function">{@link setcookie()}</span> 的文档。  </p> </div> <div class="refsect1 returnvalues" id="refsect1-function.setrawcookie-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.setrawcookie-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.3.0</td>       <td>        新增替代签名 <span class="parameter" style="color:#3A95FF">options</span> 的支持。此签名还支持设置        SameSite cookie 属性。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-function.setrawcookie-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link setcookie()} - 发送 Cookie</span></li>   </ul>   </div></div>
 * 
 * Send a cookie without urlencoding the cookie value
 * @link https://php.net/manual/zh/function.setrawcookie.php
 * @param string $name
 * @param string $value [optional]
 * @param int $expires_or_options [optional]
 * @param string $path [optional]
 * @param string $domain [optional]
 * @param bool $secure [optional]
 * @param bool $httponly [optional]
 * @return bool true on success or false on failure.
 */
function setrawcookie(string $name, $value = '', $expires_or_options = 0, $path = "", $domain = "", $secure = false, $httponly = false): bool {}

/**
 * <div id="function.setrawcookie" class="refentry"> <div class="refnamediv">  <h1 class="refname">setrawcookie</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">setrawcookie</span> — <span class="dc-title">发送未经 URL 编码的 cookie</span></p> </div>  <div class="refsect1 description" id="refsect1-function.setrawcookie-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>setrawcookie</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$expires_or_options</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$path</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名（不支持命名参数）：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>setrawcookie</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>setrawcookie()</strong></span> 和 <span class="function">{@link setcookie()}</span>   非常相似，唯一不同之处是发送到浏览器的 cookie 值没有自动经过 URL 编码（urlencode）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.setrawcookie-parameters">  <h3 class="title">参数</h3>  <p class="para">   相关参数的信息参见 <span class="function">{@link setcookie()}</span> 的文档。  </p> </div> <div class="refsect1 returnvalues" id="refsect1-function.setrawcookie-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.setrawcookie-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.3.0</td>       <td>        新增替代签名 <span class="parameter" style="color:#3A95FF">options</span> 的支持。此签名还支持设置        SameSite cookie 属性。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-function.setrawcookie-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link setcookie()} - 发送 Cookie</span></li>   </ul>   </div></div>
 * 
 * Send a cookie without urlencoding the cookie value
 *
 * @link https://php.net/manual/zh/function.setrawcookie.php
 *
 * @param string $name The name of the cookie.
 * @param string $value [optional] The value of the cookie. This value is stored on the clients
 *                        computer; do not store sensitive information.
 *                        Assuming the name is 'cookiename', this value is retrieved through $_COOKIE['cookiename']
 * @param array $options [optional] An associative array which may have any of the keys expires, path, domain, secure,
 *                        httponly and samesite. The values have the same meaning as described for the parameters with
 *                        the same name. The value of the samesite element should be either Lax or Strict.
 *                        If any of the allowed options are not given, their default values are the same
 *                        as the default values of the explicit parameters. If the samesite element is omitted,
 *                        no SameSite cookie attribute is set.
 *
 * @return bool           If output exists prior to calling this function, setcookie will fail and return false. If
 *                        setcookie successfully runs, it will return true.
 *                        This does not indicate whether the user accepted the cookie.
 * @since 7.3
 */
function setrawcookie(string $name, $value = '', array $options = []): bool {}

/**
 * <div id="function.header" class="refentry"> <div class="refnamediv">  <h1 class="refname">header</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">header</span> — <span class="dc-title">发送原生 HTTP 头</span></p> </div>  <div class="refsect1 description" id="refsect1-function.header-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>header</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$replace</span><span class="initializer"> = true</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$response_code</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>header()</strong></span> 用于发送原生的 <span>HTTP</span>   头。关于 <span>HTTP</span> 头的更多信息请参考 <a href="https://datatracker.ietf.org/doc/html/rfc2616" class="link external">»&nbsp;HTTP/1.1 specification</a>。  </p>  <p class="para">   请注意 <span class="function"><strong>header()</strong></span> 必须在任何实际输出之前调用，不管是普通的 HTML 标签，还是文件或 PHP 输出的空行，空格。这是个常见的错误，在通过<span class="function">{@link include}</span>，<span class="function">{@link require}</span>，或者其访问其他文件里面的函数的时候，如果在<span class="function"><strong>header()</strong></span>被调用之前，其中有空格或者空行。   同样的问题也存在于单独的 PHP/HTML 文件中。   </p><div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">&lt;html&gt;<br><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// This will give an error. Note the output<br> * above, which is before the header() call <br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location: http://www.example.com/'</span><span style="color: #007700">);<br>exit;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 parameters" id="refsect1-function.header-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       头字符串。      </p>      <p class="para">       有两种特别的头。第一种以“<span class="literal">HTTP/</span>”开头的 (case is not       significant)，将会被用来计算出将要发送的HTTP状态码。        例如在 Apache 服务器上用 PHP 脚本来处理不存在文件的请求（使用 <span class="literal">ErrorDocument</span> 指令）， 就会希望脚本响应了正确的状态码。      </p>      <p class="para">       </p><div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 本示例演示了 "HTTP/" 的特殊例子，典型用法的最佳实践，包括：<br>// 1. header(\$_SERVER["SERVER_PROTOCOL"] . " 404 Not Found");<br>//    （覆盖 http 状态消息，兼容还在使用 HTTP/1.0 的客户端）<br>// 2. http_response_code(404); （使用默认消息）<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"HTTP/1.1 404 Not Found"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>        </div>       </div>            <p class="para">       第二种特殊情况是“Location:”的头信息。它不仅把报文发送给浏览器，而且还将返回给浏览器一个 <span class="literal">REDIRECT</span>（302）的状态码，除非状态码已经事先被设置为了<span class="literal">201</span>或者<span class="literal">3xx</span>。      </p>      <p class="para">       </p><div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Location: http://www.example.com/"</span><span style="color: #007700">); </span><span style="color: #FF8000">// Redirect browser <br><br>// Make sure that code below does not get executed when we redirect. <br></span><span style="color: #007700">exit;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>        </div>       </div>           </dd>             <dt><span class="parameter" style="color:#3A95FF">replace</span></dt>     <dd>      <p class="para">       可选参数 <span class="parameter" style="color:#3A95FF">replace</span> 表明是否用后面的头替换前面相同类型的头。              默认情况下会替换。如果传入 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，就可以强制使相同的头信息并存。例如：      </p>      <p class="para">       </p><div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">'WWW-Authenticate: Negotiate'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'WWW-Authenticate: NTLM'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>        </div>       </div>           </dd>             <dt><span class="parameter" style="color:#3A95FF">response_code</span></dt>     <dd>      <p class="para">       强制指定 HTTP 响应的值。注意，这个参数只有在报文字符串（<span class="parameter" style="color:#3A95FF">header</span>）不为空的情况下才有效。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.header-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-function.header-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当 header 发送失败时，<span class="function"><strong>header()</strong></span> 会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误  </p> </div> <div class="refsect1 examples" id="refsect1-function.header-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4699">    <p><strong>示例 #1 下载对话框</strong></p>    <div class="example-contents"><p>     如果你想提醒用户去保存你发送的数据，例如保存一个生成的PDF文件。你可以使用<a href="https://datatracker.ietf.org/doc/html/rfc2183" class="link external">»&nbsp;Content-Disposition</a>的报文信息来提供一个推荐的文件名，并且强制浏览器显示一个文件下载的对话框。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 输出 PDF 文件<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: application/pdf'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 名称为 downloaded.pdf<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Disposition: attachment; filename="downloaded.pdf"'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 该 PDF 来源于 original.pdf<br></span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #DD0000">'original.pdf'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4700">    <p><strong>示例 #2 缓存指令</strong></p>    <div class="example-contents"><p>     PHP 脚本经常生成一些动态内容，它不该被客户端、服务器与浏览器之间的代理缓存。     许多代理与客户端都支持这样强制禁用缓存：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Cache-Control: no-cache, must-revalidate"</span><span style="color: #007700">); </span><span style="color: #FF8000">// HTTP/1.1<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Expires: Sat, 26 Jul 1997 05:00:00 GMT"</span><span style="color: #007700">); </span><span style="color: #FF8000">// 过去的日期<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>     </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       也许你会遇到这样的情况，那就是即使你没使用上面这段代码，你的页面也没有被缓存。大多数情况是因为用户可以自己设置他们的浏览器从而改变浏览器默认的缓存行为。一旦发送了上面这段报文信息，那么你就应该重写那些可能用到缓存了的代码。      </p>      <p class="para">       此外，在启用session的情况下，<span class="function">{@link session_cache_limiter()}</span>和<span class="literal">session.cache_limiter</span>的配置可以用来自动地生成正确的缓存相关的头信息。      </p>     </blockquote>    </div>   </div>    <p class="para">   </p><div class="example" id="example-4701">    <p><strong>示例 #3 设置一个 Cookie</strong></p>    <div class="example-contents"><p>     <span class="function">{@link setcookie()}</span> 提供了一个方便的方式来设置 Cookie。     要设置一个包含 <span class="function">{@link setcookie()}</span> 函数不支持的属性的 Cookie，可以使用 <span class="function"><strong>header()</strong></span>。    </p></div>    <div class="example-contents"><p>     例如，以下代码设置了一个包含 <span class="literal">Partitioned</span> 属性的 Cookie。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Set-Cookie: name=value; Secure; Path=/; SameSite=None; Partitioned;'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.header-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para"> 数据头只会在SAPI支持时得到处理和输出。</p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    你所有需要输出到浏览器的数据将会一直缓存在服务器端，直到你发送他们，这将造成比较大的资源开销。你可以是用输出缓冲来避开这个问题。你可以通过在脚本里使用<span class="function">{@link ob_start()}</span>和<span class="function">{@link ob_end_flush()}</span>或者直接在你的<var class="filename">php.ini</var>文件里设置<span class="literal">output_buffering</span>，也可以直接在服务器的配置文件里设置。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    HTTP状态信息的报文永远都是最新被发送到客户端的，而不管<span class="function"><strong>header()</strong></span>是否是在最先发送的。报文状态码可能会被重写，当调用<span class="function"><strong>header()</strong></span>来设定新的状态码，除非HTTP报文已经被发送了。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    绝大多数现代浏览器的 <a href="http://tools.ietf.org/html/rfc7231#section-7.1.2" class="link external">»&nbsp;Location:</a>    都支持相对 <span>URI</span>，但也有一些旧浏览器需要绝对 URI：包含协议、主机名、绝对路径。    一般情况下，可以借助 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.server.php" class="classname">\$_SERVER['HTTP_HOST']</a></var>、<var class="varname"><a href="https://php.net/manual/zh/reserved.variables.server.php" class="classname">\$_SERVER['PHP_SELF']</a></var>、    <span class="function">{@link dirname()}</span> 将相对地址组合成绝对 URI：    </p><div class="informalexample">     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 根据当前请求所在的目录，重定向到不同的页面 <br></span><span style="color: #9876AA">\$host  </span><span style="color: #007700">= </span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'HTTP_HOST'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">\$uri   </span><span style="color: #007700">= </span><span style="color: #9876AA">rtrim</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'PHP_SELF'</span><span style="color: #007700">]), </span><span style="color: #DD0000">'/\\'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$extra </span><span style="color: #007700">= </span><span style="color: #DD0000">'mypage.php'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Location: http://</span><span style="color: #9876AA">\$host\$uri</span><span style="color: #DD0000">/</span><span style="color: #9876AA">\$extra</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br>exit;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>    </div>     </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在执行Location header跳转的时候，Session ID无法通传递的，即使<a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-trans-sid" class="link">session.use_trans_sid</a>是激活状态的。只能通过手动传递using <strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.sid">SID</a></span></strong>的值来实现。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.header-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link headers_sent()} - 检测消息头是否已经发送</span></li>    <li><span class="function">{@link setcookie()} - 发送 Cookie</span></li>    <li><span class="function">{@link http_response_code()} - 获取/设置响应的 HTTP 状态码</span></li>    <li><span class="function">{@link header_remove()} - 删除之前设置的 HTTP 头</span></li>    <li><span class="function">{@link headers_list()} - 返回已发送的 HTTP 响应头（或准备发送的）</span></li>    <li>     The section on <a href="https://php.net/manual/zh/features.http-auth.php" class="link">HTTP     authentication</a>    </li>   </ul>   </div></div>
 * 
 * Send a raw HTTP header
 * @link https://php.net/manual/zh/function.header.php
 * @param string $header <p>
 * The header string.
 * </p>
 * <p>
 * There are two special-case header calls. The first is a header
 * that starts with the string "HTTP/" (case is not
 * significant), which will be used to figure out the HTTP status
 * code to send. For example, if you have configured Apache to
 * use a PHP script to handle requests for missing files (using
 * the ErrorDocument directive), you may want to
 * make sure that your script generates the proper status code.
 * </p>
 * <p>
 * The second special case is the "Location:" header. Not only does
 * it send this header back to the browser, but it also returns a
 * REDIRECT (302) status code to the browser
 * unless the 201 or
 * a 3xx status code has already been set.
 * </p>
 * @param bool $replace [optional] <p>
 * The optional replace parameter indicates
 * whether the header should replace a previous similar header, or
 * add a second header of the same type. By default it will replace,
 * but if you pass in false as the second argument you can force
 * multiple headers of the same type. For example:
 * </p>
 * @param int $response_code <p>
 * Forces the HTTP response code to the specified value.
 * </p>
 * @return void
 */
function header(string $header, bool $replace = true, int $response_code = 0): void {}

/**
 * <div id="function.header-remove" class="refentry"> <div class="refnamediv">  <h1 class="refname">header_remove</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">header_remove</span> — <span class="dc-title">删除之前设置的 HTTP 头</span></p> </div> <div class="refsect1 description" id="refsect1-function.header-remove-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>header_remove</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$name</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   删除之前用 <span class="function">{@link header()}</span> 设置的 HTTP 头。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.header-remove-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       要移除的头名称。当为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，移除之前设置的所有 header。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        参数不分大小写。       </span>      </p></blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.header-remove-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.header-remove-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">name</span> 现在允许为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.header-remove-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4703">    <p><strong>示例 #1 取消指定的头</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo: Bar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Bar: Baz"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">header_remove</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo"</span><span style="color: #007700">); <br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">X-Bar:&nbsp;Baz</blockquote></div>    </div>   </div>   <div class="example" id="example-4704">    <p><strong>示例 #2 取消之前全部指定的头</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Foo: Bar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"X-Bar: Baz"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">header_remove</span><span style="color: #007700">(); <br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.header-remove-notes">  <h3 class="title">注释</h3>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    本函数会删除<em>所有</em> PHP 设置的头，    包括 Cookie、Session 和 <span class="literal">X-Powered-By</span>。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para"> 数据头只会在SAPI支持时得到处理和输出。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.header-remove-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>    <li><span class="function">{@link headers_sent()} - 检测消息头是否已经发送</span></li>   </ul>   </div></div>
 * 
 * Remove previously set headers
 * @link https://php.net/manual/zh/function.header-remove.php
 * @param string|null $name [optional] <p>
 * The header name to be removed.
 * </p>
 * This parameter is case-insensitive.
 * @return void
 */
function header_remove(?string $name = null): void {}

/**
 * <div id="function.headers-sent" class="refentry"> <div class="refnamediv">  <h1 class="refname">headers_sent</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">headers_sent</span> — <span class="dc-title">检测消息头是否已经发送</span></p> </div>  <div class="refsect1 description" id="refsect1-function.headers-sent-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>headers_sent</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$line</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   检测消息头是否已经发送。  </p>  <p class="para">   消息头已经发送时，就无法通过 <span class="function">{@link header()}</span>    添加更多头字段。使用此函数起码可以防止收到跟消息头相关的错误。另一个解决方案是用<a href="https://php.net/manual/zh/ref.outcontrol.php" class="link">输出缓冲</a>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.headers-sent-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       若设置了可选参数 <span class="parameter" style="color:#3A95FF">filename</span> 和       <span class="parameter" style="color:#3A95FF">line</span>，<span class="function"><strong>headers_sent()</strong></span> 会把 PHP 文件名放在       <span class="parameter" style="color:#3A95FF">filename</span> 变量里，输出开始的行号放在 <span class="parameter" style="color:#3A95FF">line</span> 变量里。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        如果在执行 PHP 源文件之前已经开始输出（例如由于启动错误），则 <span class="parameter" style="color:#3A95FF">filename</span> 参数将被设置为空字符串。       </p>      </blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">line</span></dt>     <dd>      <p class="para">       输出开始的行号。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.headers-sent-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   消息头未发送时，<span class="function"><strong>headers_sent()</strong></span> 返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.headers-sent-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4706">    <p><strong>示例 #1 使用 <span class="function"><strong>headers_sent()</strong></span> 的例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// 没有消息头就发送一个<br></span><span style="color: #007700">if (!</span><span style="color: #9876AA">headers_sent</span><span style="color: #007700">()) {<br>    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location: http://www.example.com/'</span><span style="color: #007700">);<br>    exit;<br>}<br><br></span><span style="color: #FF8000">// 使用 file 和 line 参数选项的例子<br>// 注意 \$filename 和 \$linenum 用于下文中使用<br>// 所以不要提前为它们赋值<br></span><span style="color: #007700">if (!</span><span style="color: #9876AA">headers_sent</span><span style="color: #007700">(</span><span style="color: #9876AA">\$filename</span><span style="color: #007700">, </span><span style="color: #9876AA">\$linenum</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Location: http://www.example.com/'</span><span style="color: #007700">);<br>    exit;<br><br></span><span style="color: #FF8000">// 很有可能在这里触发错误<br></span><span style="color: #007700">} else {<br><br>    echo </span><span style="color: #DD0000">"Headers already sent in </span><span style="color: #9876AA">\$filename</span><span style="color: #DD0000"> on line </span><span style="color: #9876AA">\$linenum</span><span style="color: #DD0000">\n" </span><span style="color: #007700">.<br>          </span><span style="color: #DD0000">"Cannot redirect, for now please click this &lt;a " </span><span style="color: #007700">.<br>          </span><span style="color: #DD0000">"href=\"http://www.example.com\"&gt;link&lt;/a&gt; instead\n"</span><span style="color: #007700">;<br>    exit;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 notes" id="refsect1-function.headers-sent-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para"> 数据头只会在SAPI支持时得到处理和输出。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.headers-sent-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>    <li><span class="function">{@link trigger_error()} - 产生一个用户级别的 error/warning/notice 信息</span></li>    <li><span class="function">{@link headers_list()} - 返回已发送的 HTTP 响应头（或准备发送的）</span></li>    <li>     <span class="function">{@link header()} - 发送原生 HTTP 头</span> 中有更多相关细节的讨论。    </li>   </ul>   </div></div>
 * 
 * Checks if or where headers have been sent
 * @link https://php.net/manual/zh/function.headers-sent.php
 * @param string &$filename [optional] <p>
 * If the optional file and
 * line parameters are set,
 * headers_sent will put the PHP source file name
 * and line number where output started in the file
 * and line variables.
 * </p>
 * @param int &$line [optional] <p>
 * The line number where the output started.
 * </p>
 * @return bool headers_sent will return false if no HTTP headers
 * have already been sent or true otherwise.
 */
function headers_sent(&$filename = null, &$line = null): bool {}

/**
 * <div id="function.headers-list" class="refentry"> <div class="refnamediv">  <h1 class="refname">headers_list</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">headers_list</span> — <span class="dc-title">返回已发送的 HTTP 响应头（或准备发送的）</span></p> </div> <div class="refsect1 description" id="refsect1-function.headers-list-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>headers_list</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>headers_list()</strong></span> 会返回准备发送给浏览器/客户端的 HTTP 头列表。   检测这些头是否已经发送，使用 <span class="function">{@link headers_sent()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.headers-list-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.headers-list-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回数字索引的头数组。  </p> </div> <div class="refsect1 examples" id="refsect1-function.headers-list-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4705">    <p><strong>示例 #1 使用 <span class="function"><strong>headers_list()</strong></span> 的例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// setcookie() 会自己添加一个响应头 <br></span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 添加自定义的响应头<br> 大多数客户端会主动忽略 <br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Example-Test: foo"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 响应中指定内容为明文 text <br></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Type: text/plain; charset=UTF-8'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 所以会发送什么头呢？ <br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">headers_list</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(3)&nbsp;{<br>&nbsp;&nbsp;[0]=&gt;<br>&nbsp;&nbsp;string(19)&nbsp;"Set-Cookie:&nbsp;foo=bar"<br>&nbsp;&nbsp;[1]=&gt;<br>&nbsp;&nbsp;string(17)&nbsp;"Example-Test:&nbsp;foo"<br>&nbsp;&nbsp;[2]=&gt;<br>&nbsp;&nbsp;string(39)&nbsp;"Content-Type:&nbsp;text/plain;&nbsp;charset=UTF-8"<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.headers-list-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para"> 数据头只会在SAPI支持时得到处理和输出。</p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.headers-list-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link headers_sent()} - 检测消息头是否已经发送</span></li>    <li><span class="function">{@link header()} - 发送原生 HTTP 头</span></li>    <li><span class="function">{@link setcookie()} - 发送 Cookie</span></li>    <li><span class="function">{@link apache_response_headers()} - 获得全部 HTTP 响应 header</span></li>    <li><span class="function">{@link http_response_code()} - 获取/设置响应的 HTTP 状态码</span></li>   </ul>   </div></div>
 * 
 * Returns a list of response headers sent (or ready to send)
 * @link https://php.net/manual/zh/function.headers-list.php
 * @return array a numerically indexed array of headers.
 */
#[Pure]
function headers_list(): array {}

/**
 * <div id="function.apache-request-headers" class="refentry"> <div class="refnamediv">  <h1 class="refname">apache_request_headers</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">apache_request_headers</span> — <span class="dc-title">获取全部 HTTP 请求 header</span></p> </div> <div class="refsect1 description" id="refsect1-function.apache-request-headers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>apache_request_headers</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取当前请求的所有请求 header。可在 Apache、FastCGI、CLI、FPM 模式下运行。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.apache-request-headers-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.apache-request-headers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   当前请求中所有 HTTP header 的关联数组。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.apache-request-headers-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">       <tr>        <td>7.3.0</td>        <td>         此函数可用于 FPM SAPI 模式。        </td>       </tr>     </tbody>       </table>   </div>  <div class="refsect1 examples" id="refsect1-function.apache-request-headers-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4967">    <p><strong>示例 #1 <span class="function"><strong>apache_request_headers()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$headers </span><span style="color: #007700">= </span><span style="color: #9876AA">apache_request_headers</span><span style="color: #007700">();<br><br>foreach (</span><span style="color: #9876AA">\$headers </span><span style="color: #007700">as </span><span style="color: #9876AA">\$header </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$header</span><span style="color: #DD0000">: </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> &lt;br /&gt;\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Accept:&nbsp;/<br>Accept-Language:&nbsp;en-us<br>Accept-Encoding:&nbsp;gzip,&nbsp;deflate<br>User-Agent:&nbsp;Mozilla/4.0<br>Host:&nbsp;www.example.com<br>Connection:&nbsp;Keep-Alive</blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.apache-request-headers-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    你也可以试图从环境变量中读取普通<span>CGI</span>变量，PHP以<span class="productname">Apache</span>模块方式运行时有可能无法获得。使用<span class="function">{@link phpinfo()}</span>获得可读取的变量列表。    <a href="https://php.net/manual/zh/language.variables.predefined.php" class="link">环境变量</a>.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.apache-request-headers-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link apache_response_headers()} - 获得全部 HTTP 响应 header</span></li>   </ul>   </div></div>
 * 
 * Fetches all HTTP request headers from the current request
 * @link https://php.net/manual/zh/function.apache-request-headers.php
 * @return array|false An associative array of all the HTTP headers in the current request, or <b>FALSE</b> on failure.
 */
#[Pure]
function apache_request_headers(): false|array {}

/**
 * <div id="function.getallheaders" class="refentry"> <div class="refnamediv">  <h1 class="refname">getallheaders</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getallheaders</span> — <span class="dc-title">获取全部 HTTP 请求 header</span></p> </div> <div class="refsect1 description" id="refsect1-function.getallheaders-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getallheaders</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取当前请求的所有请求头信息。  </p>  <p class="para">   此函数是 <span class="function">{@link apache_request_headers()}</span> 的别名。请阅读   <span class="function">{@link apache_request_headers()}</span> 文档获得更多信息。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.getallheaders-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.getallheaders-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   当前请求中所有 HTTP header 的关联数组。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.getallheaders-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.3.0</td>       <td>        该函数可以在 FPM SAPI 中使用。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.getallheaders-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4970">    <p><strong>示例 #1 <span class="function"><strong>getallheaders()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">getallheaders</span><span style="color: #007700">() as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$name</span><span style="color: #DD0000">: </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.getallheaders-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link apache_response_headers()} - 获得全部 HTTP 响应 header</span></li>   </ul>   </div></div>
 * 
 * Fetches all HTTP headers from the current request.
 * This function is an alias for apache_request_headers(). Please read the apache_request_headers() documentation for more information on how this function works.
 * @link https://php.net/manual/zh/function.getallheaders.php
 * @return array|false An associative array of all the HTTP headers in the current request, or <b>FALSE</b> on failure.
 */
#[Pure]
function getallheaders(): false|array {}

/**
 * <div id="function.connection-aborted" class="refentry"> <div class="refnamediv">  <h1 class="refname">connection_aborted</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">connection_aborted</span> — <span class="dc-title">检查客户端是否已经断开</span></p> </div>  <div class="refsect1 description" id="refsect1-function.connection-aborted-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>connection_aborted</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   检查客户端是否已经断开。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.connection-aborted-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.connection-aborted-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果客户端已经断开则返回1，否则返回0。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.connection-aborted-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link connection_status()} - 返回连接的状态位</span></li>    <li><span class="function">{@link ignore_user_abort()} - 设置客户端断开连接时是否中断脚本的执行</span></li>    <li>     查看<a href="https://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a>     了解PHP处理连接的详情。    </li>   </ul>   </div></div>
 * 
 * Check whether client disconnected
 * @link https://php.net/manual/zh/function.connection-aborted.php
 * @return int 1 if client disconnected, 0 otherwise.
 */
#[Pure(true)]
function connection_aborted(): int {}

/**
 * <div id="function.connection-status" class="refentry"> <div class="refnamediv">  <h1 class="refname">connection_status</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">connection_status</span> — <span class="dc-title">返回连接的状态位</span></p> </div>  <div class="refsect1 description" id="refsect1-function.connection-status-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>connection_status</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   获得当前连接的状态位。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.connection-status-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.connection-status-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   获得当前连接的状态位, 可以用于与   <a href="https://php.net/manual/zh/misc.constants.php" class="link"><strong><span><a href="https://php.net/manual/zh/misc.constants.php#constant.connection-aborted">CONNECTION_<span class="replaceable">*</span></a></span></strong></a>   常量来确定连接状态。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.connection-status-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link connection_aborted()} - 检查客户端是否已经断开</span></li>    <li><span class="function">{@link ignore_user_abort()} - 设置客户端断开连接时是否中断脚本的执行</span></li>    <li>     查看<a href="https://php.net/manual/zh/features.connection-handling.php" class="link">连接处理</a>了解PHP处理连接的详情。    </li>   </ul>   </div></div>
 * 
 * Returns connection status bitfield
 * @link https://php.net/manual/zh/function.connection-status.php
 * @return int the connection status bitfield, which can be used against the
 * CONNECTION_XXX constants to determine the connection
 * status.
 */
#[Pure(true)]
function connection_status(): int {}

/**
 * <div id="function.ignore-user-abort" class="refentry"> <div class="refnamediv">  <h1 class="refname">ignore_user_abort</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ignore_user_abort</span> — <span class="dc-title">设置客户端断开连接时是否中断脚本的执行</span></p> </div>  <div class="refsect1 description" id="refsect1-function.ignore-user-abort-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ignore_user_abort</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$enable</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">    设置客户端断开连接时是否中断脚本的执行  </p>  <p class="para">   PHP 以命令行脚本执行时，当脚本终端结束，脚本不会被立即中止，除非设置   <span class="parameter" style="color:#3A95FF">enable</span>为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则脚本输出任意字符时会被中止。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.ignore-user-abort-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">enable</span></dt>     <dd>      <p class="para">       如果设置了该值且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，函数会设置 <a href="https://php.net/manual/zh/misc.configuration.php#ini.ignore-user-abort" class="link">ignore_user_abort</a>       ini 为 <span class="parameter" style="color:#3A95FF">enable</span>。否则，函数不会改变设置，仅会返回之前的设置。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.ignore-user-abort-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以整型返回之前的设置  </p> </div> <div class="refsect1 changelog" id="refsect1-function.ignore-user-abort-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">enable</span> 现在允许为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.ignore-user-abort-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-3726">    <p><strong>示例 #1 <span class="function"><strong>ignore_user_abort()</strong></span>例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 忽略用户中止并允许脚本<br>// 永远运行<br></span><span style="color: #9876AA">ignore_user_abort</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">set_time_limit</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">'Testing connection handling in PHP'</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Run a pointless loop that sometime <br>// hopefully will make us click away from <br>// page or click the "Stop" button.<br></span><span style="color: #007700">while(</span><span style="color: #9876AA">1</span><span style="color: #007700">)<br>{<br>    </span><span style="color: #FF8000">// 连接失败？<br>    </span><span style="color: #007700">if(</span><span style="color: #9876AA">connection_status</span><span style="color: #007700">() != </span><span style="color: #9876AA">CONNECTION_NORMAL</span><span style="color: #007700">)<br>    {<br>        break;<br>    }<br><br>    </span><span style="color: #FF8000">// 睡眠 10 秒<br>    </span><span style="color: #9876AA">sleep</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// If this is reached, then the 'break' <br>// was triggered from inside the while loop<br><br>// So here we can log, or perform any other tasks<br>// we need without actually being dependent on the <br>// browser.<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.ignore-user-abort-notes">  <h3 class="title">注释</h3>  <p class="para">   在PHP尝试发送信息到客户端之前，不会检测到用户是否已中断连接。   仅使用 echo 语句不能确保信息已发送，参见 <span class="function">{@link flush()}</span> 函数。   </p> </div> <div class="refsect1 seealso" id="refsect1-function.ignore-user-abort-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link connection_aborted()} - 检查客户端是否已经断开</span></li>    <li><span class="function">{@link connection_status()} - 返回连接的状态位</span></li>    <li>     <a href="https://php.net/manual/zh/features.connection-handling.php" class="link">Connection Handling</a>     关于PHP连接处理的完整描述。    </li>   </ul>   </div></div>
 * 
 * Set whether a client disconnect should abort script execution
 * @link https://php.net/manual/zh/function.ignore-user-abort.php
 * @param bool|null $enable [optional] <p>
 * If set, this function will set the ignore_user_abort ini setting
 * to the given value. If not, this function will
 * only return the previous setting without changing it.
 * </p>
 * @return int the previous setting, as an integer.
 */
function ignore_user_abort(?bool $enable): int {}

/**
 * <div id="function.parse-ini-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">parse_ini_file</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">parse_ini_file</span> — <span class="dc-title">解析一个配置文件</span></p> </div>  <div class="refsect1 description" id="refsect1-function.parse-ini-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>parse_ini_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$process_sections</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$scanner_mode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-normal">INI_SCANNER_NORMAL</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>parse_ini_file()</strong></span> 载入一个由   <span class="parameter" style="color:#3A95FF">filename</span> 指定的 ini   文件，并将其中的设置作为一个关联数组返回。  </p>  <p class="para">   ini 文件的结构和 <var class="filename">php.ini</var> 的相同。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.parse-ini-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要解析的 ini 文件的文件名。如果使用相对路径，则优先在相对于当前工作目录的目录中查找文件，如果未找到则在       <a href="https://php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 中查找文件进行解析。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">process_sections</span></dt>     <dd>      <p class="para">       如果将 <span class="parameter" style="color:#3A95FF">process_sections</span> 参数设为       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，将得到多维数组，包括了配置文件中的节名和配置。<span class="parameter" style="color:#3A95FF">process_sections</span>       的默认值是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scanner_mode</span></dt>     <dd>      <p class="para">       可以是 <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-normal">INI_SCANNER_NORMAL</a></span></strong>（默认），也可以是       <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-raw">INI_SCANNER_RAW</a></span></strong>。如果提供了       <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-raw">INI_SCANNER_RAW</a></span></strong>，然后将不会解析选项值。      </p>      <p class="para">    As of PHP 5.6.1 can also be specified as <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-typed">INI_SCANNER_TYPED</a></span></strong>.    In this mode boolean, null and integer types are preserved when possible.    String values <span class="literal">"true"</span>, <span class="literal">"on"</span> and <span class="literal">"yes"</span>    are converted to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>. <span class="literal">"false"</span>, <span class="literal">"off"</span>, <span class="literal">"no"</span>    and <span class="literal">"none"</span> are considered <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>. <span class="literal">"null"</span> is converted to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>    in typed mode. Also, all numeric strings are converted to integer type if it is possible.   </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.parse-ini-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时以关联数组 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 返回设置，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.parse-ini-file-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2377">    <p><strong>示例 #1 <var class="filename">sample.ini</var> 的内容</strong></p>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>;&nbsp;This&nbsp;is&nbsp;a&nbsp;sample&nbsp;configuration&nbsp;file<br>;&nbsp;Comments&nbsp;start&nbsp;with&nbsp;';',&nbsp;as&nbsp;in&nbsp;php.ini<br><br>[first_section]<br>one&nbsp;=&nbsp;1<br>five&nbsp;=&nbsp;5<br>animal&nbsp;=&nbsp;BIRD<br><br>[second_section]<br>path&nbsp;=&nbsp;"/usr/local/bin"<br>URL&nbsp;=&nbsp;"http://www.example.com/~username"<br><br>[third_section]<br>phpversion[]&nbsp;=&nbsp;"5.0"<br>phpversion[]&nbsp;=&nbsp;"5.1"<br>phpversion[]&nbsp;=&nbsp;"5.2"<br>phpversion[]&nbsp;=&nbsp;"5.3"<br><br>urls[svn]&nbsp;=&nbsp;"http://svn.php.net"<br>urls[git]&nbsp;=&nbsp;"http://git.php.net"<br></blockquote></div>    </div>   </div>   <div class="example" id="example-2378">    <p><strong>示例 #2 <span class="function"><strong>parse_ini_file()</strong></span> 例子</strong></p>    <div class="example-contents"><p>     <a href="https://php.net/manual/zh/language.constants.php" class="link">常量</a>（并非像     <strong><span><a href="https://php.net/manual/zh/language.constants.magic.php#constant.file">__FILE__</a></span></strong> 之类的“魔术常量”）也可以在 ini     文件中被解析，因此如果在运行 <span class="function"><strong>parse_ini_file()</strong></span>     之前定义了常量作为 ini 的值，将会被集成到结果中去。只有 ini     的值会被求值，且该值必须是常量。例如：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>define</span><span style="color: #007700">(</span><span style="color: #DD0000">'BIRD'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dodo bird'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Parse without sections<br></span><span style="color: #9876AA">\$ini_array </span><span style="color: #007700">= </span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.ini"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ini_array</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Parse with sections<br></span><span style="color: #9876AA">\$ini_array </span><span style="color: #007700">= </span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.ini"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ini_array</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[one]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[five]&nbsp;=&gt;&nbsp;5<br>&nbsp;&nbsp;&nbsp;&nbsp;[animal]&nbsp;=&gt;&nbsp;Dodo&nbsp;bird<br>&nbsp;&nbsp;&nbsp;&nbsp;[path]&nbsp;=&gt;&nbsp;/usr/local/bin<br>&nbsp;&nbsp;&nbsp;&nbsp;[URL]&nbsp;=&gt;&nbsp;http://www.example.com/~username<br>&nbsp;&nbsp;&nbsp;&nbsp;[phpversion]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;5.0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;5.1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;5.2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;5.3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[urls]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[svn]&nbsp;=&gt;&nbsp;http://svn.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[git]&nbsp;=&gt;&nbsp;http://git.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[first_section]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[one]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[five]&nbsp;=&gt;&nbsp;5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[animal]&nbsp;=&gt;&nbsp;Dodo&nbsp;bird<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[second_section]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[path]&nbsp;=&gt;&nbsp;/usr/local/bin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[URL]&nbsp;=&gt;&nbsp;http://www.example.com/~username<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[third_section]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[phpversion]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;5.0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;5.1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;5.2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;5.3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[urls]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[svn]&nbsp;=&gt;&nbsp;http://svn.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[git]&nbsp;=&gt;&nbsp;http://git.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2379">    <p><strong>示例 #3 <span class="function"><strong>parse_ini_file()</strong></span> 格式化 php.ini 文件</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 简单的函数，用于比较下面的结果<br></span><span style="color: #007700">function </span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">\$expression</span><span style="color: #007700">)<br>{<br>    return(</span><span style="color: #9876AA">\$expression </span><span style="color: #007700">? </span><span style="color: #DD0000">'Yes' </span><span style="color: #007700">: </span><span style="color: #DD0000">'No'</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// 使用 php_ini_loaded_file() 函数获取 php.ini 的路径<br></span><span style="color: #9876AA">\$ini_path </span><span style="color: #007700">= </span><span style="color: #9876AA">php_ini_loaded_file</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 解析 php.ini<br></span><span style="color: #9876AA">\$ini </span><span style="color: #007700">= </span><span style="color: #9876AA">parse_ini_file</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ini_path</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Print and compare the values, note that using get_cfg_var()<br>// will give the same results for parsed and loaded here<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'(parsed) magic_quotes_gpc = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ini</span><span style="color: #007700">[</span><span style="color: #DD0000">'magic_quotes_gpc'</span><span style="color: #007700">]) . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'(loaded) magic_quotes_gpc = ' </span><span style="color: #007700">. </span><span style="color: #9876AA">yesno</span><span style="color: #007700">(</span><span style="color: #9876AA">get_cfg_var</span><span style="color: #007700">(</span><span style="color: #DD0000">'magic_quotes_gpc'</span><span style="color: #007700">)) . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">(parsed)&nbsp;magic_quotes_gpc&nbsp;=&nbsp;Yes<br>(loaded)&nbsp;magic_quotes_gpc&nbsp;=&nbsp;Yes</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2380">    <p><strong>示例 #4 内插值</strong></p>    <div class="example-contents"><p>     除了对常量求值之外，某些字符在 ini 值中具有特殊含义。此外，可以使用 <span class="code">\${}</span>     语法读取环境变量和之前定义的配置项（参阅 <span class="function">{@link get_cfg_var()}</span>）。    </p></div>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>;&nbsp;|&nbsp;is&nbsp;used&nbsp;for&nbsp;bitwise&nbsp;OR<br>three&nbsp;=&nbsp;2|3<br><br>;&nbsp;&amp;&nbsp;is&nbsp;used&nbsp;for&nbsp;bitwise&nbsp;AND<br>four&nbsp;=&nbsp;6&amp;5<br><br>;&nbsp;^&nbsp;is&nbsp;used&nbsp;for&nbsp;bitwise&nbsp;XOR<br>five&nbsp;=&nbsp;3^6<br><br>;&nbsp;~&nbsp;is&nbsp;used&nbsp;for&nbsp;bitwise&nbsp;negate<br>negative_two&nbsp;=&nbsp;~1<br><br>;&nbsp;()&nbsp;is&nbsp;used&nbsp;for&nbsp;grouping<br>seven&nbsp;=&nbsp;(8|7)&amp;(6|5)<br><br>;&nbsp;Interpolate&nbsp;the&nbsp;PATH&nbsp;environment&nbsp;variable<br>path&nbsp;=&nbsp;\${PATH}<br><br>;&nbsp;Interpolate&nbsp;the&nbsp;configuration&nbsp;option&nbsp;'memory_limit'<br>configured_memory_limit&nbsp;=&nbsp;\${memory_limit}<br><br></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2381">    <p><strong>示例 #5 转义字符</strong></p>    <div class="example-contents"><p>     Some characters have special meaning in double-quoted strings and must be escaped by the backslash prefix.     First of all, these are the double quote <span class="code">"</span> as the boundary marker, and the backslash <span class="code">\</span> itself     (if followed by one of the special characters):    </p></div>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>quoted&nbsp;=&nbsp;"She&nbsp;said&nbsp;\"Exactly&nbsp;my&nbsp;point\"."&nbsp;;&nbsp;Results&nbsp;in&nbsp;a&nbsp;string&nbsp;with&nbsp;quote&nbsp;marks&nbsp;in&nbsp;it.<br>hint&nbsp;=&nbsp;"Use&nbsp;\\\"&nbsp;to&nbsp;escape&nbsp;double&nbsp;quote"&nbsp;;&nbsp;Results&nbsp;in:&nbsp;Use&nbsp;\"&nbsp;to&nbsp;escape&nbsp;double&nbsp;quote<br></blockquote></div>    </div>    <div class="example-contents"><p>     There is an exception made for Windows-like paths: it's possible to not escape trailing backslash     if the quoted string is directly followed by a linebreak:    </p></div>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>save_path&nbsp;=&nbsp;"C:\Temp\"<br></blockquote></div>    </div>    <div class="example-contents"><p>     If one does need to escape double quote followed by linebreak in a multiline value,     it's possible to use value concatenation in the following way     (there is one double-quoted string directly followed by another one):    </p></div>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>long_text&nbsp;=&nbsp;"Lorem&nbsp;\"ipsum\"""<br>&nbsp;dolor"&nbsp;;&nbsp;Results&nbsp;in:&nbsp;Lorem&nbsp;"ipsum"\n&nbsp;dolor<br></blockquote></div>    </div>    <div class="example-contents"><p>     Another character with special meaning is <span class="code">\$</span> (the dollar sign).     It must be escaped if followed by the open curly brace:    </p></div>    <div class="example-contents"><div class="cdata"><blockquote style="border:1px gray solid;"><br>code&nbsp;=&nbsp;"\\${test}"<br></blockquote></div>    </div>    <div class="example-contents"><p>     <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-raw">INI_SCANNER_RAW</a></span></strong> 模式不支持转义字符（在此模式下，所有字符都会“不做任何处理”）。    </p></div>    <div class="example-contents"><p>     注意 ini 解析器不支持标准转义序列（<span class="code">\n</span>、<span class="code">\t</span> 等）。如有必要，使用     <span class="function">{@link stripcslashes()}</span> 函数对 <span class="function"><strong>parse_ini_file()</strong></span>     后的结果进行后处理。    </p></div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.parse-ini-file-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    本函数和 <var class="filename">php.ini</var>    文件无关，该文件在运行脚本时就已经处理过了。本函数可以用来读取应用程序的配置文件。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    如果 ini 文件中的值包含任何非字母数字的字符，需要将其括在双引号中（"）。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    有些保留字不能作为 ini    文件中的键名，包括：<span class="literal">null</span>、<span class="literal">yes</span>、<span class="literal">no</span>、<span class="literal">true</span>、<span class="literal">false</span>、<span class="literal">on</span>、<span class="literal">off</span>、<span class="literal">none</span>。除非使用    <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-typed">INI_SCANNER_TYPED</a></span></strong> 模式，否则    <span class="literal">null</span>、<span class="literal">off</span>、<span class="literal">no</span> 和    <span class="literal">false</span> 的值等效于    <span class="literal">""</span>，<span class="literal">on</span>、<span class="literal">yes</span> 和 <span class="literal">true</span>    的值等效于 <span class="literal">"1"</span>。字符 <span class="literal">?{}|&amp;~!()^"</span>    也不能用在键名的任何地方，而且这些字符在选项值中有着特殊的意义。   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    不带等号的条目会忽略。例如“foo”会忽略，而“bar =”将会解析并添加空值。例如，会忽略    MySQL 在 <var class="filename">my.cnf</var> 中不带值的“no-auto-rehash”设置。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    ini 文件通常被 Web 服务器视为纯文本，因此在请求时会提供给浏览器。这意味着为了安全起见，必须将 ini    文件保存在 docroot 之外，或者重新配置 Web 服务器，不会提供这些文件。如果不这么做，可能会带来安全风险。   </p>  </blockquote> </div>  <div class="refsect1 seealso" id="refsect1-function.parse-ini-file-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link parse_ini_string()} - 解析配置字符串</span></li>   </ul>   </div></div>
 * 
 * Parse a configuration file
 * @link https://php.net/manual/zh/function.parse-ini-file.php
 * @param string $filename <p>
 * The filename of the ini file being parsed.
 * </p>
 * @param bool $process_sections [optional] <p>
 * By setting the process_sections
 * parameter to true, you get a multidimensional array, with
 * the section names and settings included. The default
 * for process_sections is false
 * </p>
 * @param int $scanner_mode [optional] <p>
 * Can either be INI_SCANNER_NORMAL (default) or
 * INI_SCANNER_RAW. If INI_SCANNER_RAW
 * is supplied, then option values will not be parsed.
 * </p>
 * <p>
 * As of PHP 5.6.1 can also be specified as <strong><code>INI_SCANNER_TYPED</code></strong>.
 * In this mode boolean, null and integer types are preserved when possible.
 * String values <em>"true"</em>, <em>"on"</em> and <em>"yes"</em>
 * are converted to <b>TRUE</b>. <em>"false"</em>, <em>"off"</em>, <em>"no"</em>
 * and <em>"none"</em> are considered <b>FALSE</b>. <em>"null"</em> is converted to <b>NULL</b>
 * in typed mode. Also, all numeric strings are converted to integer type if it is possible.
 * </p>
 * @return array|false The settings are returned as an associative array on success,
 * and false on failure.
 */
#[Pure(true)]
function parse_ini_file(string $filename, bool $process_sections = false, int $scanner_mode = INI_SCANNER_NORMAL): array|false {}

/**
 * <div id="function.parse-ini-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">parse_ini_string</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">parse_ini_string</span> — <span class="dc-title">解析配置字符串</span></p> </div>  <div class="refsect1 description" id="refsect1-function.parse-ini-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>parse_ini_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ini_string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$process_sections</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$scanner_mode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-normal">INI_SCANNER_NORMAL</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>parse_ini_string()</strong></span> 返回 <span class="parameter" style="color:#3A95FF">ini_string</span> 字符串解析后的关联数组。  </p>  <p class="para">   ini 字符串的格式参考 <var class="filename">php.ini</var>  </p> </div> <div class="refsect1 parameters" id="refsect1-function.parse-ini-string-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">ini_string</span></dt>     <dd>      <p class="para">       ini 字符串内容。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">process_sections</span></dt>     <dd>      <p class="para">       设置 <span class="parameter" style="color:#3A95FF">process_sections</span> 参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，得到一个多维数组，包含名称和设置。<span class="parameter" style="color:#3A95FF">process_sections</span> 默认为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scanner_mode</span></dt>     <dd>      <p class="para">       可以是 <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-normal">INI_SCANNER_NORMAL</a></span></strong> (默认)或 <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-raw">INI_SCANNER_RAW</a></span></strong>。如果是 <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-raw">INI_SCANNER_RAW</a></span></strong>，那么选项值不会被解析。      </p>      <p class="para">    As of PHP 5.6.1 can also be specified as <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-typed">INI_SCANNER_TYPED</a></span></strong>.    In this mode boolean, null and integer types are preserved when possible.    String values <span class="literal">"true"</span>, <span class="literal">"on"</span> and <span class="literal">"yes"</span>    are converted to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>. <span class="literal">"false"</span>, <span class="literal">"off"</span>, <span class="literal">"no"</span>    and <span class="literal">"none"</span> are considered <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>. <span class="literal">"null"</span> is converted to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>    in typed mode. Also, all numeric strings are converted to integer type if it is possible.   </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.parse-ini-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   执行成功返回一个关联数组，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 为失败。  </p> </div> <div class="refsect1 notes" id="refsect1-function.parse-ini-string-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    有些保留字不能作为 ini    文件中的键名，包括：<span class="literal">null</span>、<span class="literal">yes</span>、<span class="literal">no</span>、<span class="literal">true</span>、<span class="literal">false</span>、<span class="literal">on</span>、<span class="literal">off</span>、<span class="literal">none</span>。除非使用    <strong><span><a href="https://php.net/manual/zh/filesystem.constants.php#constant.ini-scanner-typed">INI_SCANNER_TYPED</a></span></strong> 模式，否则    <span class="literal">null</span>、<span class="literal">off</span>、<span class="literal">no</span> 和    <span class="literal">false</span> 的值等效于    <span class="literal">""</span>，<span class="literal">on</span>、<span class="literal">yes</span> 和 <span class="literal">true</span>    的值等效于 <span class="literal">"1"</span>。字符 <span class="literal">?{}|&amp;~![()^"</span>    也不能用在键名的任何地方，而且这些字符在选项值中有着特殊的意义。      </span>  </p></blockquote> </div>  <div class="refsect1 seealso" id="refsect1-function.parse-ini-string-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link parse_ini_file()} - 解析一个配置文件</span></li>   </ul>   </div></div>
 * 
 * Parse a configuration string
 * @link https://php.net/manual/zh/function.parse-ini-string.php
 * @param string $ini_string <p>
 * The contents of the ini file being parsed.
 * </p>
 * @param bool $process_sections [optional] <p>
 * By setting the process_sections
 * parameter to true, you get a multidimensional array, with
 * the section names and settings included. The default
 * for process_sections is false
 * </p>
 * @param int $scanner_mode [optional] <p>
 * Can either be INI_SCANNER_NORMAL (default) or
 * INI_SCANNER_RAW. If INI_SCANNER_RAW
 * is supplied, then option values will not be parsed.
 * </p>
 * @return array|false The settings are returned as an associative array on success,
 * and false on failure.
 */
#[Pure]
function parse_ini_string(string $ini_string, bool $process_sections = false, int $scanner_mode = INI_SCANNER_NORMAL): array|false {}

/**
 * <div id="function.is-uploaded-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_uploaded_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_uploaded_file</span> — <span class="dc-title">判断文件是否是通过 HTTP POST 上传的</span></p> </div>  <div class="refsect1 description" id="refsect1-function.is-uploaded-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_uploaded_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    如果 <span class="parameter" style="color:#3A95FF">filename</span> 所给出的文件是通过   HTTP POST 上传的则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。这可以用来确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如   <var class="filename">/etc/passwd</var>。  </p>  <p class="para">   这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。  </p>  <p class="para">   为了能使 <span class="function"><strong>is_uploaded_file()</strong></span> 函数正常工作，必须指定类似于   <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.files.php" class="classname">\$_FILES['userfile']['tmp_name']</a></var> 的变量，而在从客户端上传的文件名   <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.files.php" class="classname">\$_FILES['userfile']['name']</a></var> 不能正常运作。  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.is-uploaded-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要检查的文件名。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.is-uploaded-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.is-uploaded-file-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2367">    <p><strong>示例 #1 <span class="function"><strong>is_uploaded_file()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_uploaded_file</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">])) {<br>   echo </span><span style="color: #DD0000">"File "</span><span style="color: #007700">. </span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'name'</span><span style="color: #007700">] .</span><span style="color: #DD0000">" uploaded successfully.\n"</span><span style="color: #007700">;<br>   echo </span><span style="color: #DD0000">"Displaying contents\n"</span><span style="color: #007700">;<br>   </span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">]);<br>} else {<br>   echo </span><span style="color: #DD0000">"Possible file upload attack: "</span><span style="color: #007700">;<br>   echo </span><span style="color: #DD0000">"filename '"</span><span style="color: #007700">. </span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">'userfile'</span><span style="color: #007700">][</span><span style="color: #DD0000">'tmp_name'</span><span style="color: #007700">] . </span><span style="color: #DD0000">"'."</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.is-uploaded-file-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>    <li><var class="varname"><a href="https://php.net/manual/zh/reserved.variables.files.php" class="classname">\$_FILES</a></var></li>    <li>关于用法的简单例子      <a href="https://php.net/manual/zh/features.file-upload.php" class="link">文件上传处理</a></li>   </ul>   </div> </div>
 * 
 * Tells whether the file was uploaded via HTTP POST
 * @link https://php.net/manual/zh/function.is-uploaded-file.php
 * @param string $filename <p>
 * The filename being checked.
 * </p>
 * @return bool true on success or false on failure.
 */
#[Pure(true)]
function is_uploaded_file(string $filename): bool {}

/**
 * <div id="function.move-uploaded-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">move_uploaded_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">move_uploaded_file</span> — <span class="dc-title">将上传的文件移动到新位置</span></p> </div> <div class="refsect1 description" id="refsect1-function.move-uploaded-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>move_uploaded_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$from</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$to</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   本函数检查并确保由 <span class="parameter" style="color:#3A95FF">from</span>   指定的文件是合法的上传文件（即通过 PHP 的 HTTP POST   上传机制所上传的）。如果文件合法，则将其移动为由   <span class="parameter" style="color:#3A95FF">to</span> 指定的文件。  </p>  <p class="para">   这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.move-uploaded-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">from</span></dt>     <dd>      <p class="para">       上传的文件的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       移动文件到这个位置。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.move-uploaded-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">from</span>   不是合法的上传文件，不会出现任何操作，<span class="function"><strong>move_uploaded_file()</strong></span>   将返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">from</span>   是合法的上传文件，但出于某些原因无法移动，不会出现任何操作，<span class="function"><strong>move_uploaded_file()</strong></span>   将返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。此外还会发出一条警告。  </p> </div> <div class="refsect1 examples" id="refsect1-function.move-uploaded-file-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2376">    <p><strong>示例 #1 Uploading multiple files</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$uploads_dir </span><span style="color: #007700">= </span><span style="color: #DD0000">'/uploads'</span><span style="color: #007700">;<br>foreach (</span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"error"</span><span style="color: #007700">] as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$error</span><span style="color: #007700">) {<br>    if (</span><span style="color: #9876AA">\$error </span><span style="color: #007700">== </span><span style="color: #9876AA">UPLOAD_ERR_OK</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$tmp_name </span><span style="color: #007700">= </span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"tmp_name"</span><span style="color: #007700">][</span><span style="color: #9876AA">\$key</span><span style="color: #007700">];<br>        </span><span style="color: #FF8000">// basename() 可以防止遍历攻击文件系统；<br>        // 进一步验证/清理文件名可能是合适的<br>        </span><span style="color: #9876AA">\$name </span><span style="color: #007700">= </span><span style="color: #9876AA">basename</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_FILES</span><span style="color: #007700">[</span><span style="color: #DD0000">"pictures"</span><span style="color: #007700">][</span><span style="color: #DD0000">"name"</span><span style="color: #007700">][</span><span style="color: #9876AA">\$key</span><span style="color: #007700">]);<br>        </span><span style="color: #9876AA">move_uploaded_file</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tmp_name</span><span style="color: #007700">, </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$uploads_dir</span><span style="color: #DD0000">/</span><span style="color: #9876AA">\$name</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.move-uploaded-file-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>move_uploaded_file()</strong></span> 对    <a href="https://php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a> 是敏感的。不过，限制只针对    <span class="parameter" style="color:#3A95FF">to</span> 路径，因为允许移动上传的文件名    <span class="parameter" style="color:#3A95FF">from</span>    可能会与这些限制产生冲突。<span class="function"><strong>move_uploaded_file()</strong></span>    仅作用于通过 PHP 上传的文件以确保这个操作的安全性。   </p>  </blockquote>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果目标文件已经存在，将会被覆盖。   </p>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.move-uploaded-file-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link is_uploaded_file()} - 判断文件是否是通过 HTTP POST 上传的</span></li>    <li><span class="function">{@link rename()} - 重命名一个文件或目录</span></li>    <li>参见<a href="https://php.net/manual/zh/features.file-upload.php" class="link">文件上传处理</a>一章中的简单使用例子。</li>   </ul>   </div></div>
 * 
 * Moves an uploaded file to a new location
 * @link https://php.net/manual/zh/function.move-uploaded-file.php
 * @param string $from <p>
 * The filename of the uploaded file.
 * </p>
 * @param string $to <p>
 * The destination of the moved file.
 * </p>
 * @return bool If filename is not a valid upload file,
 * then no action will occur, and
 * move_uploaded_file will return
 * false.
 * </p>
 * <p>
 * If filename is a valid upload file, but
 * cannot be moved for some reason, no action will occur, and
 * move_uploaded_file will return
 * false. Additionally, a warning will be issued.
 */
function move_uploaded_file(string $from, string $to): bool {}

/**
 * <div id="function.net-get-interfaces" class="refentry"> <div class="refnamediv">  <h1 class="refname">net_get_interfaces</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3, PHP 8)</p><p class="refpurpose"><span class="refname">net_get_interfaces</span> — <span class="dc-title">获取网络接口</span></p> </div> <div class="refsect1 description" id="refsect1-function.net-get-interfaces-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>net_get_interfaces</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回本地机器上的网络接口（适配器）的列举。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.net-get-interfaces-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.net-get-interfaces-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个关联 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，其中 key 是接口的名称，value 是一个接口属性的关联数组。    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p>  <p class="para">   每个接口关联数组包含：   </p><table class="doctable table">    <caption><strong>接口属性</strong></caption>         <thead>      <tr>       <th>名字</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>描述</td>       <td>        用于描述接口的可选字符串值。        仅限 Windows。       </td>      </tr>      <tr>       <td>mac</td>       <td>        接口的 MAC 地址的可选字符串值。        仅限 Windows。       </td>      </tr>      <tr>       <td>mtu</td>       <td>        接口的最大传输单位（MTU）的整数值。        仅限 Windows。       </td>      </tr>      <tr>       <td>unicast</td>       <td>        关联数组，见下面的单播属性。       </td>      </tr>      <tr>       <td>up</td>       <td>        接口的布尔状态（开/关）。       </td>      </tr>     </tbody>       </table>    <p class="para">   </p><table class="doctable table">    <caption><strong>单播属性</strong></caption>         <thead>      <tr>       <th>名字</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>flags</td>       <td>        整数值。       </td>      </tr>      <tr>       <td>family</td>       <td>        整数值。       </td>      </tr>      <tr>       <td>address</td>       <td>        IPv4 或 IPv6 中的地址的字符串值。       </td>      </tr>      <tr>       <td>netmask</td>       <td>        IPv4 或 IPv6 中的网络掩码的字符串值。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 errors" id="refsect1-function.net-get-interfaces-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   在获取接口信息失败时会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。  </p> </div></div>
 * 
 * @return array|false
 * @since 7.3
 */
#[Pure]
#[ArrayShape(["description" => "string", "mac" => "string", "mtu" => "int", "unicast" => "array", "up" => "bool"])]
function net_get_interfaces(): array|false {}

/**
 * <div id="function.gethostbyaddr" class="refentry"> <div class="refnamediv">  <h1 class="refname">gethostbyaddr</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gethostbyaddr</span> — <span class="dc-title">   获取指定 IP 地址对应的 Internet 主机名  </span></p> </div> <div class="refsect1 description" id="refsect1-function.gethostbyaddr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gethostbyaddr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ip</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回由 <span class="parameter" style="color:#3A95FF">ip</span> 指定的 Internet 主机名。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.gethostbyaddr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">ip</span></dt>     <dd>      <p class="para">       主机 IP 地址。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.gethostbyaddr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回主机名，失败时返回未修改的 <span class="parameter" style="color:#3A95FF">ip</span>，输入错误时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.gethostbyaddr-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4693">    <p><strong>示例 #1 <span class="function"><strong>gethostbyaddr()</strong></span> 的简单例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$hostname </span><span style="color: #007700">= </span><span style="color: #9876AA">gethostbyaddr</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">]);<br><br>echo </span><span style="color: #9876AA">\$hostname</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.gethostbyaddr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>    <li><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>   </ul>   </div></div>
 * 
 * Get the Internet host name corresponding to a given IP address
 * @link https://php.net/manual/zh/function.gethostbyaddr.php
 * @param string $ip <p>
 * The host IP address.
 * </p>
 * @return string|false the host name or the unmodified ip_address
 * on failure.
 */
#[Pure]
function gethostbyaddr(string $ip): string|false {}

/**
 * <div id="function.gethostbyname" class="refentry"> <div class="refnamediv">  <h1 class="refname">gethostbyname</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gethostbyname</span> — <span class="dc-title">   返回主机名对应的 IPv4地址。  </span></p> </div> <div class="refsect1 description" id="refsect1-function.gethostbyname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gethostbyname</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hostname</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   返回主机名 <span class="parameter" style="color:#3A95FF">hostname</span> 对应的 IPv4 互联网地址。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.gethostbyname-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       主机名      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.gethostbyname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 IPv4 地址，失败时原封不动返回 <span class="parameter" style="color:#3A95FF">hostname</span> 字符串。  </p> </div> <div class="refsect1 examples" id="refsect1-function.gethostbyname-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4694">    <p><strong>示例 #1 简单的 <span class="function"><strong>gethostbyname()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$ip </span><span style="color: #007700">= </span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$ip</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.gethostbyname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link gethostbyaddr()} - 获取指定 IP 地址对应的 Internet 主机名</span></li>    <li><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>    <li><span class="function">{@link inet_pton()} - Converts a human readable IP address to its packed in_addr representation</span></li>    <li><span class="function">{@link inet_ntop()} - Converts a packed internet address to a human readable representation</span></li>   </ul>   </div></div>
 * 
 * Get the IPv4 address corresponding to a given Internet host name
 * @link https://php.net/manual/zh/function.gethostbyname.php
 * @param string $hostname <p>
 * The host name.
 * </p>
 * @return string the IPv4 address or a string containing the unmodified
 * hostname on failure.
 */
#[Pure]
function gethostbyname(string $hostname): string {}

/**
 * <div id="function.gethostbynamel" class="refentry"> <div class="refnamediv">  <h1 class="refname">gethostbynamel</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gethostbynamel</span> — <span class="dc-title">   获取互联网主机名对应的 IPv4 地址列表  </span></p> </div> <div class="refsect1 description" id="refsect1-function.gethostbynamel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gethostbynamel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hostname</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回互联网主机名 <span class="parameter" style="color:#3A95FF">hostname</span> 解析出来的 IPv4 地址列表。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.gethostbynamel-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       主机名      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.gethostbynamel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 IPv4 地址数组，或在 <span class="parameter" style="color:#3A95FF">hostname</span>   无法解析时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.gethostbynamel-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4695">    <p><strong>示例 #1 <span class="function"><strong>gethostbynamel()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$hosts </span><span style="color: #007700">= </span><span style="color: #9876AA">gethostbynamel</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$hosts</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;192.0.34.166<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.gethostbynamel-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>    <li><span class="function">{@link gethostbyaddr()} - 获取指定 IP 地址对应的 Internet 主机名</span></li>    <li><span class="function">{@link checkdnsrr()} - 给指定的主机（域名）或者IP地址做DNS通信检查</span></li>    <li><span class="function">{@link getmxrr()} - 获取 Internet 主机名对应的 MX 记录</span></li>    <li><span class="literal">named(8)</span> 手册页</li>   </ul>   </div></div>
 * 
 * Get a list of IPv4 addresses corresponding to a given Internet host
 * name
 * @link https://php.net/manual/zh/function.gethostbynamel.php
 * @param string $hostname <p>
 * The host name.
 * </p>
 * @return array|false an array of IPv4 addresses or false if
 * hostname could not be resolved.
 */
#[Pure]
function gethostbynamel(string $hostname): array|false {}

/**
 * <div id="function.gethostname" class="refentry"> <div class="refnamediv">  <h1 class="refname">gethostname</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gethostname</span> — <span class="dc-title">获取主机名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.gethostname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gethostname</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>gethostname()</strong></span> 可以获取本地机器的标准主机名。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.gethostname-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.gethostname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回主机名称字符串，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.gethostname-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4696">    <p><strong>示例 #1 简单的 <span class="function"><strong>gethostname()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">gethostname</span><span style="color: #007700">(); </span><span style="color: #FF8000">// 可能会输出：sandie<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.gethostname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>    <li><span class="function">{@link gethostbyaddr()} - 获取指定 IP 地址对应的 Internet 主机名</span></li>    <li><span class="function">{@link php_uname()} - 返回运行 PHP 的系统的有关信息</span></li>   </ul>   </div></div>
 * 
 * Gets the host name
 * @link https://php.net/manual/zh/function.gethostname.php
 * @return string|false a string with the hostname on success, otherwise false is
 * returned.
 */
#[Pure]
function gethostname(): string|false {}

/**
 * <div id="function.dns-check-record" class="refentry"> <div class="refnamediv">  <h1 class="refname">dns_check_record</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">dns_check_record</span> — <span class="dc-title">别名 <span class="function">{@link checkdnsrr()}</span></span></p> </div>  <div class="refsect1 description" id="refsect1-function.dns-check-record-description">  <h3 class="title">说明</h3>  <p class="para">   此函数是该函数的别名：   <span class="function">{@link checkdnsrr()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see checkdnsrr}
 * @link https://php.net/manual/zh/function.dns-check-record.php
 * @param string $hostname <p>
 * <b>host</b> may either be the IP address in
 * dotted-quad notation or the host name.
 * </p>
 * @param string $type [optional] <p>
 * <b>type</b> may be any one of: A, MX, NS, SOA,
 * PTR, CNAME, AAAA, A6, SRV, NAPTR, TXT or ANY.
 * </p>
 * @return bool Returns <b>TRUE</b> if any records are found; returns <b>FALSE</b> if no records were found or if an error occurred.
 */
function dns_check_record(string $hostname, string $type = 'MX'): bool {}

/**
 * <div id="function.checkdnsrr" class="refentry"> <div class="refnamediv">  <h1 class="refname">checkdnsrr</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">checkdnsrr</span> — <span class="dc-title">给指定的主机（域名）或者IP地址做DNS通信检查</span></p> </div>  <div class="refsect1 description" id="refsect1-function.checkdnsrr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>checkdnsrr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hostname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = "MX"</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   在 DNS 中搜索与 <span class="parameter" style="color:#3A95FF">hostname</span> 对应的 <span class="parameter" style="color:#3A95FF">type</span> 类型纪录。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.checkdnsrr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">hostname</span> 可以是点分十进制的 IP 地址，也可以是主机名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">type</span> 可能是下面这些类型中的任何一个：A、MX、NS、SOA、PTR、CNAME、AAAA、A6、SRV、NAPTR、TXT 或 ANY。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.checkdnsrr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果记录能找到，就返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；如果查找不到该 DNS 记录或者发生了错误，就返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 notes" id="refsect1-function.checkdnsrr-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    出于对低版本在 Windows 平台上的兼容性，可以试试 <a href="https://pear.php.net/" class="link external">»&nbsp;PEAR</a>    扩展包里面提供的 <a href="https://pear.php.net/package/Net_DNS" class="link external">»&nbsp;Net_DNS</a> 类。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.checkdnsrr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link dns_get_record()} - 获取指定主机名的 DNS 纪录</span></li>    <li><span class="function">{@link getmxrr()} - 获取 Internet 主机名对应的 MX 记录</span></li>    <li><span class="function">{@link gethostbyaddr()} - 获取指定 IP 地址对应的 Internet 主机名</span></li>    <li><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>    <li><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>    <li>the named(8) manual page</li>   </ul>   </div></div>
 * 
 * Check DNS records corresponding to a given Internet host name or IP address
 * @link https://php.net/manual/zh/function.checkdnsrr.php
 * @param string $hostname <p>
 * host may either be the IP address in
 * dotted-quad notation or the host name.
 * </p>
 * @param string $type [optional] <p>
 * type may be any one of: A, MX, NS, SOA,
 * PTR, CNAME, AAAA, A6, SRV, NAPTR, TXT or ANY.
 * </p>
 * @return bool true if any records are found; returns false if no records
 * were found or if an error occurred.
 */
#[Pure]
function checkdnsrr(string $hostname, string $type = 'MX'): bool {}

/**
 * <div id="function.dns-get-mx" class="refentry"> <div class="refnamediv">  <h1 class="refname">dns_get_mx</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">dns_get_mx</span> — <span class="dc-title">别名 <span class="function">{@link getmxrr()}</span></span></p> </div>  <div class="refsect1 description" id="refsect1-function.dns-get-mx-description">  <h3 class="title">说明</h3>  <p class="para">   此函数是该函数的别名：   <span class="function">{@link getmxrr()}</span>。  </p> </div></div>
 * 
 * Alias:
 * {@see getmxrr}
 * @link https://php.net/manual/zh/function.dns-get-mx.php
 * @param string $hostname
 * @param array &$hosts
 * @param array &$weights [optional]
 * @return bool
 */
function dns_get_mx(string $hostname, &$hosts, &$weights): bool {}

/**
 * <div id="function.getmxrr" class="refentry"> <div class="refnamediv">  <h1 class="refname">getmxrr</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getmxrr</span> — <span class="dc-title">获取 Internet 主机名对应的 MX 记录</span></p> </div>  <div class="refsect1 description" id="refsect1-function.getmxrr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getmxrr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hostname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$hosts</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$weights</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   在 DNS 中搜索 <span class="parameter" style="color:#3A95FF">hostname</span> 对应的 MX 记录。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.getmxrr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       Internet 主机名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">hosts</span></dt>     <dd>      <p class="para">       找到的 MX 记录列表存放于 <span class="parameter" style="color:#3A95FF">hosts</span> 数组。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">weights</span></dt>     <dd>      <p class="para">       提供了 <span class="parameter" style="color:#3A95FF">weights</span> 数组后，它会用找到的权重信息填充数组。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.getmxrr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   找到记录返回  <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，没找到或者出错时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 notes" id="refsect1-function.getmxrr-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    本函数不应使用于地址验证。仅在 MX 记录在 DNS 中找到时才会返回，然而根据<a href="https://datatracker.ietf.org/doc/html/rfc2821" class="link external">»&nbsp;RFC 2821</a>，没有 MX    记录时，<span class="parameter" style="color:#3A95FF">hostname</span> 本身就是 MX 主机，优先级为 <span class="literal">0</span>。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    在兼容 Windows 实现之前的版本，可以使用    <a href="https://pear.php.net/" class="link external">»&nbsp;PEAR</a> class 的    <a href="https://pear.php.net/package/Net_DNS" class="link external">»&nbsp;Net_DNS</a>。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.getmxrr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link checkdnsrr()} - 给指定的主机（域名）或者IP地址做DNS通信检查</span></li>    <li><span class="function">{@link dns_get_record()} - 获取指定主机名的 DNS 纪录</span></li>    <li><span class="function">{@link gethostbyname()} - 返回主机名对应的 IPv4地址。</span></li>    <li><span class="function">{@link gethostbynamel()} - 获取互联网主机名对应的 IPv4 地址列表</span></li>    <li><span class="function">{@link gethostbyaddr()} - 获取指定 IP 地址对应的 Internet 主机名</span></li>    <li>Linux 手册页面 <span class="literal">named(8)</span></li>   </ul>   </div></div>
 * 
 * Get MX records corresponding to a given Internet host name
 * @link https://php.net/manual/zh/function.getmxrr.php
 * @param string $hostname <p>
 * The Internet host name.
 * </p>
 * @param array &$hosts <p>
 * A list of the MX records found is placed into the array
 * mxhosts.
 * </p>
 * @param array &$weights [optional] <p>
 * If the weight array is given, it will be filled
 * with the weight information gathered.
 * </p>
 * @return bool true if any records are found; returns false if no records
 * were found or if an error occurred.
 */
function getmxrr(string $hostname, &$hosts, &$weights): bool {}

/**
 * <div id="function.dns-get-record" class="refentry"> <div class="refnamediv">  <h1 class="refname">dns_get_record</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">dns_get_record</span> — <span class="dc-title">获取指定主机名的 DNS 纪录</span></p> </div>  <div class="refsect1 description" id="refsect1-function.dns-get-record-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>dns_get_record</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hostname</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/network.constants.php#constant.dns-any">DNS_ANY</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$authoritative_name_servers</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$additional_records</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$raw</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   获取指定 <span class="parameter" style="color:#3A95FF">hostname</span> 的 DNS 纪录。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.dns-get-record-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">hostname</span> 应该是有效的 DNS 主机名，比如“<span class="literal">www.example.com</span>”。可以使用       <span class="literal">in-addr.arpa</span> 表示法生成反向查找，但大多数情况下更适合用 <span class="function">{@link gethostbyaddr()}</span>。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        根据 DNS 标准，邮件地址以 <span class="literal">user.host</span> 格式给出（例如：<span class="literal">hostmaster.example.com</span>        而不是 <span class="literal">hostmaster@example.com</span>），请务必检查此值并在必要时进行修改，然后将其与        <span class="function">{@link mail()}</span> 等函数一起使用。       </p>      </blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       默认情况下，<span class="function"><strong>dns_get_record()</strong></span> 将会搜索跟 <span class="parameter" style="color:#3A95FF">hostname</span>       关联的任何资源记录。       要限制查询，请使用以下之一的 <strong><span><a href="https://php.net/manual/zh/network.constants.php#constant.dns-any">DNS_<span class="replaceable">*</span></a></span></strong> 常量。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">authoritative_name_servers</span></dt>     <dd>      <p class="para">       引用传递，如果给出，将会填充<em>权威名称服务器</em>的资源记录。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_records</span></dt>     <dd>      <p class="para">       引用传递，如果给出，将会填充任何<em>附加记录</em>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">raw</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">type</span> 将解释为原始 DNS 类型 ID（不能使用 <strong><span><a href="https://php.net/manual/zh/network.constants.php#constant.dns-any">DNS_<span class="replaceable">*</span></a></span></strong>       常量）。返回值包含 <span class="literal">data</span> 键，需要手动解析。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.dns-get-record-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   此函数返回由关联数组组成的数组， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。每个关联数组<em>至少</em>包含以下键：   </p><table class="doctable table">    <caption><strong>基础 DNS 属性</strong></caption>         <thead>      <tr>       <th>属性</th>       <th>含义</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>host</td>       <td>        与其余相关数据引用的 DNS 命名空间中的记录。       </td>      </tr>      <tr>       <td>class</td>       <td>        <span class="function"><strong>dns_get_record()</strong></span> 仅返回内部类记录，因此参数将始终返回 <span class="literal">IN</span>。       </td>      </tr>      <tr>       <td>type</td>       <td>        包含记录类型的字符串。其他属性也包含在结果数组中，具体取决于 type 的值。查看下表。       </td>      </tr>      <tr>       <td>ttl</td>       <td>        与此记录相关的 <span class="literal">"Time To Live"</span>。        这将<em>不会</em>等于记录的原始 ttl，而是等于原始 ttl 减去自权威名称服务器查询以来经过的时间长度。       </td>      </tr>     </tbody>       </table>    <p class="para">   </p><table class="doctable table">    <caption><strong>根据 <span class="parameter" style="color:#3A95FF">type</span> 的不同，出现的关联数组的其它键</strong></caption>         <thead>      <tr>       <th>类型</th>       <th>额外列</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><span class="literal">A</span></td>       <td>        <span class="literal">ip</span>：点分十进制格式的 IPv4。       </td>      </tr>      <tr>       <td><span class="literal">MX</span></td>       <td>        <span class="literal">pri</span>：邮件交换器的有优先级。较低的数字有较高的优先级。<span class="literal">target</span>：邮件服务器的        FQDN（全称域名）。参阅 <span class="function">{@link dns_get_mx()}</span>。       </td>      </tr>      <tr>       <td><span class="literal">CNAME</span></td>       <td>        <span class="literal">target</span>：该记录在 DNS 命名空间中的 FQDN 别名。       </td>      </tr>      <tr>       <td><span class="literal">NS</span></td>       <td>        <span class="literal">target</span>：此主机名的权威名称服务器的 FQDN。       </td>      </tr>      <tr>       <td><span class="literal">PTR</span></td>       <td>        <span class="literal">target</span>：此记录指向的 DNS 命名空间中的位置。       </td>      </tr>       <tr>       <td><span class="literal">TXT</span></td>       <td>        <span class="literal">txt</span>：跟此记录关联的任意字符串数据。       </td>      </tr>      <tr>       <td><span class="literal">HINFO</span></td>       <td>        <span class="literal">cpu</span>：指定此记录引用的机器的 CPU 的 IANA 号。        <span class="literal">os</span>：指定此记录引用的机器的操作系统的 IANA 号。        请参阅 IANA 的 <a href="http://www.iana.org/assignments/operating-system-names" class="link external">»&nbsp;<span class="literal">Operating System Names</span></a>。       </td>      </tr>      <tr>       <td><span class="literal">CAA</span></td>       <td>        <span class="literal">flags</span>：单字节位字段；目前仅定义了第 0        位，意味着“critical”；其他位保留且应该忽略。<span class="literal">tag</span>：CAA        标记名（字母数字的 ASCII 字符串）。<span class="literal">value</span>：CAA        标记值（二进制字符串，可以使用子格式）。更多信息参阅：<a href="https://datatracker.ietf.org/doc/html/rfc6844" class="link external">»&nbsp;RFC 6844</a>。       </td>      </tr>      <tr>       <td><span class="literal">SOA</span></td>       <td>        <span class="literal">mname</span>：资源记录来源的机器的 FQDN。        <span class="literal">rname</span>：此域的管理联系人的电子邮件地址。        <span class="literal">serial</span>：请求域的此修订的序列号。        <span class="literal">refresh</span>：次要名称服务器在更新此域的远程副本时应使用的刷新间隔（秒）。        <span class="literal">retry</span>：在刷新失败后等待的时间长度（秒），然后再进行第二次尝试。        <span class="literal">expire</span>：在成功刷新之前，次要 DNS 服务器应保留远程副本的最长时间（秒）。        <span class="literal">minimum-ttl</span>：客户端可以继续使用 DNS 解析的最短时间（秒），        在此之前应该从服务器请求新的解析。可以被单独的资源记录覆盖。       </td>      </tr>      <tr>       <td><span class="literal">AAAA</span></td>       <td>        <span class="literal">ipv6</span>：IPv6 地址       </td>      </tr>      <tr>       <td><span class="literal">A6</span></td>       <td>        <span class="literal">masklen</span>：从 <span class="parameter" style="color:#3A95FF">chain</span> 指定的目标继承的长度（以位为单位）。        <span class="literal">ipv6</span>：要与 <span class="parameter" style="color:#3A95FF">chain</span> 合并的特定记录的地址。        <span class="literal">chain</span>：要与 <span class="parameter" style="color:#3A95FF">ipv6</span> 数据合并的父记录。       </td>      </tr>      <tr>       <td><span class="literal">SRV</span></td>       <td>        <span class="literal">pri</span>：（优先级）应该首先使用最低优先级。        <span class="literal">weight</span>：用于加权常见优先级的目标应该随机选择。        <span class="literal">target</span> 和 <span class="literal">port</span>：请求服务的主机名和端口。        更多信息参阅：<a href="https://datatracker.ietf.org/doc/html/rfc2782" class="link external">»&nbsp;RFC 2782</a>。       </td>      </tr>      <tr>       <td><span class="literal">NAPTR</span></td>       <td>        <span class="literal">order</span> 和 <span class="literal">pref</span>：等同于上面的 <span class="literal">pri</span> 和 <span class="literal">weight</span>。        <span class="literal">flags</span>、<span class="literal">services</span>、<span class="literal">regex</span> 和 <span class="literal">replacement</span>：        由 <a href="https://datatracker.ietf.org/doc/html/rfc2915" class="link external">»&nbsp;RFC 2915</a> 定义的参数。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 changelog" id="refsect1-function.dns-get-record-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.0.16, 7.1.2</td>       <td>        新增对 CAA 记录的支持。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.dns-get-record-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4689">    <p><strong>示例 #1 使用 <span class="function"><strong>dns_get_record()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">dns_get_record</span><span style="color: #007700">(</span><span style="color: #DD0000">"php.net"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$result</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;MX<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[pri]&nbsp;=&gt;&nbsp;5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;pair2.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;6765<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;64.246.30.37<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;8125<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>   <div class="example" id="example-4690">    <p><strong>示例 #2 使用 <span class="function"><strong>dns_get_record()</strong></span> 和 DNS_ANY</strong></p>    <div class="example-contents"><p>     一旦解析了 MX 记录，通常需要邮件服务器的 IP 地址，因此 <span class="function"><strong>dns_get_record()</strong></span>     还会在 <span class="parameter" style="color:#3A95FF">additional_records</span>     中返回包含关联记录的数组。<span class="parameter" style="color:#3A95FF">authoritative_name_servers</span>     也会返回，包含权威名称服务器列表。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 为 php.net 请求“ANY”记录，并创建 \$authns 和 \$addtl 数组，<br>   包含名称服务器列表和任何附加记录列表 <br></span><span style="color: #9876AA">\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">dns_get_record</span><span style="color: #007700">(</span><span style="color: #DD0000">"php.net"</span><span style="color: #007700">, </span><span style="color: #9876AA">DNS_ANY</span><span style="color: #007700">, </span><span style="color: #9876AA">\$authns</span><span style="color: #007700">, </span><span style="color: #9876AA">\$addtl</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Result = "</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$result</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Auth NS = "</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$authns</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Additional = "</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$addtl</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Result&nbsp;=&nbsp;Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;MX<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[pri]&nbsp;=&gt;&nbsp;5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;pair2.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;6765<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;64.246.30.37<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;8125<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)<br>Auth&nbsp;NS&nbsp;=&nbsp;Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;NS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;remote1.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;10722<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;NS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;remote2.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;10722<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;NS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;ns1.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;10722<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;NS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[target]&nbsp;=&gt;&nbsp;ns2.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;10722<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)<br>Additional&nbsp;=&nbsp;Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;pair2.php.net<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;216.92.131.5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;6766<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;remote1.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;64.39.29.212<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;100384<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;remote2.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;212.100.224.80<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;81241<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;ns1.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;216.220.40.243<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;81241<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[host]&nbsp;=&gt;&nbsp;ns2.easydns.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[type]&nbsp;=&gt;&nbsp;A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ip]&nbsp;=&gt;&nbsp;216.220.40.244<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[class]&nbsp;=&gt;&nbsp;IN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ttl]&nbsp;=&gt;&nbsp;81241<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.dns-get-record-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link dns_get_mx()} - 别名 getmxrr</span></li>    <li><span class="function">{@link dns_check_record()} - 别名 checkdnsrr</span></li>   </ul>   </div></div>
 * 
 * Fetch DNS Resource Records associated with a hostname
 * @link https://php.net/manual/zh/function.dns-get-record.php
 * @param string $hostname <p>
 * hostname should be a valid DNS hostname such
 * as "www.example.com". Reverse lookups can be generated
 * using in-addr.arpa notation, but
 * gethostbyaddr is more suitable for
 * the majority of reverse lookups.
 * </p>
 * <p>
 * Per DNS standards, email addresses are given in user.host format (for
 * example: hostmaster.example.com as opposed to hostmaster@example.com),
 * be sure to check this value and modify if necessary before using it
 * with a functions such as mail.
 * </p>
 * @param int $type [optional] <p>
 * By default, dns_get_record will search for any
 * resource records associated with hostname.
 * To limit the query, specify the optional type
 * parameter. May be any one of the following:
 * DNS_A, DNS_CNAME,
 * DNS_HINFO, DNS_MX,
 * DNS_NS, DNS_PTR,
 * DNS_SOA, DNS_TXT,
 * DNS_AAAA, DNS_SRV,
 * DNS_NAPTR, DNS_A6,
 * DNS_ALL or DNS_ANY.
 * </p>
 * <p>
 * Because of eccentricities in the performance of libresolv
 * between platforms, DNS_ANY will not
 * always return every record, the slower DNS_ALL
 * will collect all records more reliably.
 * </p>
 * @param array &$authoritative_name_servers [optional] <p>
 * Passed by reference and, if given, will be populated with Resource
 * Records for the Authoritative Name Servers.
 * </p>
 * @param array &$additional_records [optional] <p>
 * Passed by reference and, if given, will be populated with any
 * Additional Records.
 * </p>
 * @param bool $raw [optional] <p>
 * In case of raw mode, we query only the requested type
 * instead of looping type by type before going with the additional info stuff.
 * </p>
 * @return array|false This function returns an array of associative arrays. Each associative array contains
 * at minimum the following keys:
 * <table>
 * Basic DNS attributes
 * <tr valign="top">
 * <td>Attribute</td>
 * <td>Meaning</td>
 * </tr>
 * <tr valign="top">
 * <td>host</td>
 * <td>
 * The record in the DNS namespace to which the rest of the associated data refers.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>class</td>
 * <td>
 * dns_get_record only returns Internet class records and as
 * such this parameter will always return IN.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>type</td>
 * <td>
 * String containing the record type. Additional attributes will also be contained
 * in the resulting array dependant on the value of type. See table below.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>ttl</td>
 * <td>
 * "Time To Live" remaining for this record. This will not equal
 * the record's original ttl, but will rather equal the original ttl minus whatever
 * length of time has passed since the authoritative name server was queried.
 * </td>
 * </tr>
 * </table>
 * </p>
 * <p>
 * <table>
 * Other keys in associative arrays dependant on 'type'
 * <tr valign="top">
 * <td>Type</td>
 * <td>Extra Columns</td>
 * </tr>
 * <tr valign="top">
 * <td>A</td>
 * <td>
 * ip: An IPv4 addresses in dotted decimal notation.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>MX</td>
 * <td>
 * pri: Priority of mail exchanger.
 * Lower numbers indicate greater priority.
 * target: FQDN of the mail exchanger.
 * See also dns_get_mx.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>CNAME</td>
 * <td>
 * target: FQDN of location in DNS namespace to which
 * the record is aliased.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>NS</td>
 * <td>
 * target: FQDN of the name server which is authoritative
 * for this hostname.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>PTR</td>
 * <td>
 * target: Location within the DNS namespace to which
 * this record points.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>TXT</td>
 * <td>
 * txt: Arbitrary string data associated with this record.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>HINFO</td>
 * <td>
 * cpu: IANA number designating the CPU of the machine
 * referenced by this record.
 * os: IANA number designating the Operating System on
 * the machine referenced by this record.
 * See IANA's Operating System
 * Names for the meaning of these values.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>SOA</td>
 * <td>
 * mname: FQDN of the machine from which the resource
 * records originated.
 * rname: Email address of the administrative contain
 * for this domain.
 * serial: Serial # of this revision of the requested
 * domain.
 * refresh: Refresh interval (seconds) secondary name
 * servers should use when updating remote copies of this domain.
 * retry: Length of time (seconds) to wait after a
 * failed refresh before making a second attempt.
 * expire: Maximum length of time (seconds) a secondary
 * DNS server should retain remote copies of the zone data without a
 * successful refresh before discarding.
 * minimum-ttl: Minimum length of time (seconds) a
 * client can continue to use a DNS resolution before it should request
 * a new resolution from the server. Can be overridden by individual
 * resource records.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>AAAA</td>
 * <td>
 * ipv6: IPv6 address
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>A6(PHP &gt;= 5.1.0)</td>
 * <td>
 * masklen: Length (in bits) to inherit from the target
 * specified by chain.
 * ipv6: Address for this specific record to merge with
 * chain.
 * chain: Parent record to merge with
 * ipv6 data.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>SRV</td>
 * <td>
 * pri: (Priority) lowest priorities should be used first.
 * weight: Ranking to weight which of commonly prioritized
 * targets should be chosen at random.
 * target and port: hostname and port
 * where the requested service can be found.
 * For additional information see: RFC 2782
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>NAPTR</td>
 * <td>
 * order and pref: Equivalent to
 * pri and weight above.
 * flags, services, regex,
 * and replacement: Parameters as defined by
 * RFC 2915.
 * </td>
 * </tr>
 * </table>
 */
function dns_get_record(string $hostname, int $type = DNS_ANY, &$authoritative_name_servers, &$additional_records, bool $raw = false): array|false {}
