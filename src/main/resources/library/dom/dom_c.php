<?php

//20120405 AG synced to official docs
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Immutable;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Language;

/**
 * <div id="class.domnode" class="reference"> <h1 class="title">The DOMNode class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domnode.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMNode</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-disconnected"><var class="varname">DOCUMENT_POSITION_DISCONNECTED</var></a></var><span class="initializer"> = 0x1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-preceding"><var class="varname">DOCUMENT_POSITION_PRECEDING</var></a></var><span class="initializer"> = 0x2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-following"><var class="varname">DOCUMENT_POSITION_FOLLOWING</var></a></var><span class="initializer"> = 0x4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-contains"><var class="varname">DOCUMENT_POSITION_CONTAINS</var></a></var><span class="initializer"> = 0x8</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-contained-by"><var class="varname">DOCUMENT_POSITION_CONTAINED_BY</var></a></var><span class="initializer"> = 0x10</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.constants.document-position-implementation-specific"><var class="varname">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</var></a></var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.appendchild.php" class="methodname" style="color:#CC7832">appendChild</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.c14n.php" class="methodname" style="color:#CC7832">C14N</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.c14nfile.php" class="methodname" style="color:#CC7832">C14NFile</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.clonenode.php" class="methodname" style="color:#CC7832">cloneNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.comparedocumentposition.php" class="methodname" style="color:#CC7832">compareDocumentPosition</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.contains.php" class="methodname" style="color:#CC7832">contains</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.getlineno.php" class="methodname" style="color:#CC7832">getLineNo</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.getnodepath.php" class="methodname" style="color:#CC7832">getNodePath</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.getrootnode.php" class="methodname" style="color:#CC7832">getRootNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.hasattributes.php" class="methodname" style="color:#CC7832">hasAttributes</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.haschildnodes.php" class="methodname" style="color:#CC7832">hasChildNodes</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.insertbefore.php" class="methodname" style="color:#CC7832">insertBefore</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.isdefaultnamespace.php" class="methodname" style="color:#CC7832">isDefaultNamespace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.isequalnode.php" class="methodname" style="color:#CC7832">isEqualNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.issamenode.php" class="methodname" style="color:#CC7832">isSameNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.issupported.php" class="methodname" style="color:#CC7832">isSupported</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.lookupnamespaceuri.php" class="methodname" style="color:#CC7832">lookupNamespaceURI</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.lookupprefix.php" class="methodname" style="color:#CC7832">lookupPrefix</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.normalize.php" class="methodname" style="color:#CC7832">normalize</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.removechild.php" class="methodname" style="color:#CC7832">removeChild</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.replacechild.php" class="methodname" style="color:#CC7832">replaceChild</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.sleep.php" class="methodname" style="color:#CC7832">__sleep</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnode.wakeup.php" class="methodname" style="color:#CC7832">__wakeup</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>  <div class="section" id="domnode.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="domnode.constants.document-position-disconnected">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the other node and reference node are not in the same tree.      </span>     </dd>             <dt id="domnode.constants.document-position-preceding">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the other node precedes the reference node.      </span>     </dd>             <dt id="domnode.constants.document-position-following">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the other node follows the reference node.      </span>     </dd>             <dt id="domnode.constants.document-position-contains">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the other node is an ancestor of the reference node.      </span>     </dd>             <dt id="domnode.constants.document-position-contained-by">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the other node is a descendant of the reference node.      </span>     </dd>             <dt id="domnode.constants.document-position-implementation-specific">      <strong><span>{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</span></strong>     </dt>     <dd>      <span class="simpara">       Set when the result depends on implementation-specific behaviour and       may not be portable.       This may happen with disconnected nodes or with attribute nodes.      </span>     </dd>       </dl>  </div>  <div class="section" id="domnode.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domnode.props.nodename"><var class="varname">nodeName</var></dt>     <dd>      <p class="para">Returns the most accurate name for the current node type</p>     </dd>             <dt id="domnode.props.nodevalue"><var class="varname">nodeValue</var></dt>     <dd>      <p class="para">       The value of this node, depending on its type.       Contrary to the W3C specification, the node value of       <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> nodes is equal to {@link DOMNode::textContent} instead       of <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domnode.props.nodetype"><var class="varname">nodeType</var></dt>     <dd>      <p class="para">Gets the type of the node. One of the predefined <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.xml-element-node">XML_<span class="replaceable">*</span>_NODE</a></span></strong> constants</p>     </dd>             <dt id="domnode.props.parentnode"><var class="varname">parentNode</var></dt>     <dd>      <p class="para">The parent of this node. If there is no such node, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domnode.props.parentelement"><var class="varname">parentElement</var></dt>     <dd>      <p class="para">The parent element of this element. If there is no such element, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domnode.props.childnodes"><var class="varname">childNodes</var></dt>     <dd>      <p class="para">       A <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> that contains all       children of this node. If there are no children, this is an empty       <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span>.      </p>     </dd>             <dt id="domnode.props.firstchild"><var class="varname">firstChild</var></dt>     <dd>      <p class="para">       The first child of this node. If there is no such node, this       returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domnode.props.lastchild"><var class="varname">lastChild</var></dt>     <dd>      <p class="para">The last child of this node. If there is no such node, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domnode.props.previoussibling"><var class="varname">previousSibling</var></dt>     <dd>      <p class="para">       The node immediately preceding this node. If there is no such       node, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domnode.props.nextsibling"><var class="varname">nextSibling</var></dt>     <dd>      <p class="para">       The node immediately following this node. If there is no such       node, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domnode.props.attributes"><var class="varname">attributes</var></dt>     <dd>      <p class="para">       A <span class="classname"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="classname">DOMNamedNodeMap</a></span> containing the       attributes of this node (if it is a <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span>)       or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> otherwise.      </p>     </dd>             <dt id="domnode.props.isconnected"><var class="varname">isConnected</var></dt>     <dd>      <p class="para">Whether the node is connected to a document</p>     </dd>             <dt id="domnode.props.ownerdocument"><var class="varname">ownerDocument</var></dt>     <dd>      <p class="para">The <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> object associated with this node, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if this node is a <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span></p>     </dd>             <dt id="domnode.props.namespaceuri"><var class="varname">namespaceURI</var></dt>     <dd>      <p class="para">The namespace URI of this node, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if it is unspecified.</p>     </dd>             <dt id="domnode.props.prefix"><var class="varname">prefix</var></dt>     <dd>      <p class="para">The namespace prefix of this node.</p>     </dd>             <dt id="domnode.props.localname"><var class="varname">localName</var></dt>     <dd>      <p class="para">Returns the local part of the qualified name of this node.</p>     </dd>             <dt id="domnode.props.baseuri"><var class="varname">baseURI</var></dt>     <dd>      <p class="para">       The absolute base URI of this node or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if the implementation       wasn't able to obtain an absolute URI.      </p>     </dd>             <dt id="domnode.props.textcontent"><var class="varname">textContent</var></dt>     <dd>      <p class="para">The text content of this node and its descendants.</p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Method <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition()}</span> has        been added.       </td>      </tr>      <tr>       <td>8.4.0</td>       <td>        Constants <strong><span>{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</span></strong>,        <strong><span>{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</span></strong>,        <strong><span>{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</span></strong>,        <strong><span>{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</span></strong>,        <strong><span>{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</span></strong>,         and        <strong><span>{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</span></strong>        have been added.       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        Methods <span class="methodname" style="color:#CC7832">{@link DOMNode::contains()}</span>, and        <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode()}</span> have been added.       </td>      </tr>      <tr>       <td>8.3.0</td>       <td>        Properties <span class="property">{@link DOMNode::\$parentElement}</span>, and        <span class="property">{@link DOMNode::\$isConnected}</span> have been added.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        The unimplemented methods <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition()}</span>,        <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode()}</span>,        <span class="methodname" style="color:#CC7832"><strong>DOMNode::getFeature()</strong></span>,        <span class="methodname" style="color:#CC7832"><strong>DOMNode::setUserData()</strong></span> and        <span class="methodname" style="color:#CC7832"><strong>DOMNode::getUserData()</strong></span> have been removed.       </td>      </tr>     </tbody>       </table>  </div>  <div class="section">   <h2 class="title">注释</h2>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">此 DOM 扩展采用 UTF-8 编码。使用 <span class="function">{@link mb_convert_encoding()}</span>、<span class="methodname" style="color:#CC7832">{@link UConverter::transcode()}</span> 或 <span class="function">{@link iconv()}</span> 来处理其它编码。</p></blockquote>  </div>  <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1950641247" class="link external">»&nbsp;W3C specification of Node</a></li>    </ul>     </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMNode::appendChild} — Adds new child at the end of the children</li><li>{@link DOMNode::C14N} — Canonicalize nodes to a string</li><li>{@link DOMNode::C14NFile} — Canonicalize nodes to a file</li><li>{@link DOMNode::cloneNode} — Clones a node</li><li>{@link DOMNode::compareDocumentPosition} — Compares the position of two nodes</li><li>{@link DOMNode::contains} — Checks if node contains other node</li><li>{@link DOMNode::getLineNo} — Get line number for a node</li><li>{@link DOMNode::getNodePath} — Get an XPath for a node</li><li>{@link DOMNode::getRootNode} — Get root node</li><li>{@link DOMNode::hasAttributes} — Checks if node has attributes</li><li>{@link DOMNode::hasChildNodes} — Checks if node has children</li><li>{@link DOMNode::insertBefore} — Adds a new child before a reference node</li><li>{@link DOMNode::isDefaultNamespace} — Checks if the specified namespaceURI is the default namespace or not</li><li>{@link DOMNode::isEqualNode} — Checks that both nodes are equal</li><li>{@link DOMNode::isSameNode} — Indicates if two nodes are the same node</li><li>{@link DOMNode::isSupported} — Checks if feature is supported for specified version</li><li>{@link DOMNode::lookupNamespaceURI} — Gets the namespace URI of the node based on the prefix</li><li>{@link DOMNode::lookupPrefix} — Gets the namespace prefix of the node based on the namespace URI</li><li>{@link DOMNode::normalize} — Normalizes the node</li><li>{@link DOMNode::removeChild} — Removes child from list of children</li><li>{@link DOMNode::replaceChild} — Replaces a child</li><li>{@link DOMNode::__sleep} — Forbids serialization unless serialization methods are implemented in a subclass</li><li>{@link DOMNode::__wakeup} — Forbids unserialization unless unserialization methods are implemented in a subclass</li></ul></div>
 * 
 * The DOMNode class
 * @link https://php.net/manual/zh/class.domnode.php
 */
class DOMNode
{
    /**
     * @since 8.4
     */
    public const DOCUMENT_POSITION_DISCONNECTED = 1, DOCUMENT_POSITION_PRECEDING = 2, DOCUMENT_POSITION_FOLLOWING = 4;

    /**
     * @since 8.4
     */
    public const DOCUMENT_POSITION_CONTAINS = 8, DOCUMENT_POSITION_CONTAINED_BY = 16, DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;

    /**
     * @var string
     * Returns the most accurate name for the current node type
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.nodename
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $nodeName;

    /**
     * @var string|null
     * The value of this node, depending on its type
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.nodevalue
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $nodeValue;

    /**
     * @var int
     * Gets the type of the node. One of the predefined
     * <a href="https://secure.php.net/manual/en/dom.constants.php">XML_xxx_NODE</a> constants
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.nodetype
     */
    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $nodeType;

    /**
     * @var DOMNode|null
     * The parent of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.parentnode
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $parentNode;

    /**
     * @var DOMNodeList<DOMNode>
     * A <classname>DOMNodeList</classname> that contains all children of this node. If there are no children, this is an empty <classname>DOMNodeList</classname>.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.childnodes
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNodeList'], default: '')]
    public $childNodes;

    /**
     * @var DOMNode|null
     * The first child of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.firstchild
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $firstChild;

    /**
     * @var DOMNode|null
     * The last child of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.lastchild
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $lastChild;

    /**
     * @var DOMNode|null
     * The node immediately preceding this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.previoussibling
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $previousSibling;

    /**
     * @var DOMNode|null
     * The node immediately following this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.nextsibling
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $nextSibling;

    /**
     * @var DOMNamedNodeMap<DOMAttr>|null
     * A <classname>DOMNamedNodeMap</classname> containing the attributes of this node (if it is a <classname>DOMElement</classname>) or NULL otherwise.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.attributes
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNamedNodeMap|null'], default: '')]
    public $attributes;

    /**
     * @var DOMDocument|null
     * The <classname>DOMDocument</classname> object associated with this node, or NULL if this node is a <classname>DOMDocument</classname>.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.ownerdocument
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMDocument|null'], default: '')]
    public $ownerDocument;

    /**
     * @var string|null
     * The namespace URI of this node, or NULL if it is unspecified.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.namespaceuri
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $namespaceURI;

    /**
     * @var string|null
     * The namespace prefix of this node, or NULL if it is unspecified.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.prefix
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $prefix;

    /**
     * @var string|null
     * Returns the local part of the qualified name of this node.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.localname
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $localName;

    /**
     * @var string|null
     * The absolute base URI of this node or NULL if the implementation wasn't able to obtain an absolute URI.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.baseuri
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $baseURI;

    /**
     * @var string
     * This attribute returns the text content of this node and its descendants.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.textcontent
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $textContent;

    #[PhpStormStubsElementAvailable(from: '8.3')]
    public bool $isConnected;

    #[PhpStormStubsElementAvailable(from: '8.3')]
    public ?DOMElement $parentElement;

    /**
 * <div id="domnode.insertbefore" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::insertBefore</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::insertBefore</span> — <span class="dc-title">   Adds a new child before a reference node  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.insertbefore-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::insertBefore</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function inserts a new node right before the reference node.   If you plan to do further modifications on the appended child you must use   the returned node.  </p>  <p class="para">   When using an existing node it will be moved.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.insertbefore-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       The new node.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">child</span></dt>     <dd>      <p class="para">       The reference node. If not supplied, <span class="parameter" style="color:#3A95FF">node</span> is       appended to the children.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.insertbefore-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The inserted node or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-domnode.insertbefore-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is readonly or if the previous parent of the node       being inserted is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is of a type that does not allow children of the       type of the <span class="parameter" style="color:#3A95FF">node</span> node, or if the node to       append is one of this node's ancestors or this node itself.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">node</span> was created from a different       document than the one that created this node.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">child</span> is not a child of this node.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domnode.insertbefore-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>   </ul>   </div></div>
 * 
     * Adds a new child before a reference node
     * @link https://php.net/manual/zh/domnode.insertbefore.php
     * @param DOMNode $node <p>
     * The new node.
     * </p>
     * @param null|DOMNode $child [optional] <p>
     * The reference node. If not supplied, newnode is
     * appended to the children.
     * </p>
     * @return DOMNode The inserted node.
     */
    public function insertBefore(
        DOMNode $node,
        #[LanguageLevelTypeAware(['8.0' => 'DOMNode|null'], default: 'DOMNode')] $child = null
    ) {}

    /**
 * <div id="domnode.replacechild" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::replaceChild</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::replaceChild</span> — <span class="dc-title">   Replaces a child  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.replacechild-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::replaceChild</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function replaces the child <span class="parameter" style="color:#3A95FF">child</span>    with the passed new node. If the <span class="parameter" style="color:#3A95FF">node</span> is already a child it    will not be added a second time. If the replacement succeeds the    old node is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.replacechild-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       The new node. It must be a member of the target document, i.e.       created by one of the DOMDocument-&gt;createXXX() methods or imported in       the document by {@link DOMDocument::importNode}.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">child</span></dt>     <dd>      <p class="para">       The old node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.replacechild-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The old node or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occur.  </p> </div> <div class="refsect1 errors" id="refsect1-domnode.replacechild-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is readonly or if the previous parent of the node       being inserted is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is of a type that does not allow children of the        type of the <span class="parameter" style="color:#3A95FF">node</span> node, or if the node to        put in is one of this node's ancestors or this node itself.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">node</span> was created from a different        document than the one that created this node.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">child</span> is not a child of this node.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domnode.replacechild-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::replaceWith()} - Replaces the node with new nodes</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild()} - Removes child from list of children</span></li>   </ul>   </div></div>
 * 
     * Replaces a child
     * @link https://php.net/manual/zh/domnode.replacechild.php
     * @param DOMNode $node <p>
     * The new node. It must be a member of the target document, i.e.
     * created by one of the DOMDocument->createXXX() methods or imported in
     * the document by .
     * </p>
     * @param DOMNode $child <p>
     * The old node.
     * </p>
     * @return DOMNode|false The old node or false if an error occur.
     */
    public function replaceChild(DOMNode $node, DOMNode $child) {}

    /**
 * <div id="domnode.removechild" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::removeChild</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::removeChild</span> — <span class="dc-title">   Removes child from list of children  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.removechild-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::removeChild</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This functions removes a child from a list of children.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.removechild-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">child</span></dt>     <dd>      <p class="para">       The removed child.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.removechild-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   If the child could be removed the function returns the old child or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-domnode.removechild-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">child</span> is not a child of this node.      </p>     </dd>       </dl>   </div> <div class="refsect1 examples" id="refsect1-domnode.removechild-examples">  <h3 class="title">示例</h3>  <p class="para">   The following example will delete the <span class="literal">chapter</span> element of our XML document.   </p><div class="example" id="example-5795">    <p><strong>示例 #1 Removing a child</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$book </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// we retrieve the chapter and remove it from the book<br></span><span style="color: #9876AA">\$chapter </span><span style="color: #007700">= </span><span style="color: #9876AA">\$book</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'chapter'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$oldchapter </span><span style="color: #007700">= </span><span style="color: #9876AA">\$book</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">removeChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$chapter</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="utf-8"?><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"&gt;<br><book><br>&nbsp;<title>My&nbsp;lists</title><br>&nbsp;<br></book></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domnode.removechild-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::remove()} - Removes the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild()} - Replaces a child</span></li>   </ul>   </div></div>
 * 
     * Removes child from list of children
     * @link https://php.net/manual/zh/domnode.removechild.php
     * @param DOMNode $child <p>
     * The removed child.
     * </p>
     * @return DOMNode If the child could be removed the functions returns the old child.
     */
    public function removeChild(DOMNode $child) {}

    /**
 * <div id="domnode.appendchild" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::appendChild</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::appendChild</span> — <span class="dc-title">   Adds new child at the end of the children  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.appendchild-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::appendChild</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function appends a child to an existing list of children or creates   a new list of children. The child can be created with e.g.    <span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()}</span>,   <span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()}</span> etc. or simply by using   any other node.  </p>  <p class="para">   When using an existing node it will be moved.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.appendchild-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       The appended child.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.appendchild-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The node added or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-domnode.appendchild-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is readonly or if the previous parent of the node       being inserted is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if this node is of a type that does not allow children of the        type of the <span class="parameter" style="color:#3A95FF">node</span> node, or if the node to        append is one of this node's ancestors or this node itself.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">node</span> was created from a different        document than the one that created this node.      </p>     </dd>       </dl>   </div>  <div class="refsect1 examples" id="refsect1-domnode.appendchild-examples">  <h3 class="title">示例</h3>  <p class="para">   The following example will add a new element node to a fresh document.   </p><div class="example" id="example-5786">    <p><strong>示例 #1 Adding a child</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$node </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"para"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newnode </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>      <p class="para">   </p><div class="example" id="example-5787">    <p><strong>示例 #2 Nested children</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$headNode </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"head"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$headNode</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$titleNode </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"title"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$headNode</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$titleNode</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-domnode.appendchild-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::after()} - Adds nodes after the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore()} - Adds a new child before a reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild()} - Removes child from list of children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild()} - Replaces a child</span></li>   </ul>   </div></div>
 * 
     * Adds new child at the end of the children
     * @link https://php.net/manual/zh/domnode.appendchild.php
     * @param DOMNode $node <p>
     * The appended child.
     * </p>
     * @return DOMNode The node added.
     */
    public function appendChild(DOMNode $node) {}

    /**
 * <div id="domnode.haschildnodes" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::hasChildNodes</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::hasChildNodes</span> — <span class="dc-title">   Checks if node has children  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.haschildnodes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::hasChildNodes</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function checks if the node has children.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.haschildnodes-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domnode.haschildnodes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.haschildnodes-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes()} - Checks if node has attributes</span></li>   </ul>   </div></div>
 * 
     * Checks if node has children
     * @link https://php.net/manual/zh/domnode.haschildnodes.php
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function hasChildNodes(): bool {}

    /**
 * <div id="domnode.clonenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::cloneNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::cloneNode</span> — <span class="dc-title">   Clones a node  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.clonenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::cloneNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates a copy of the node.   </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.clonenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">deep</span></dt>     <dd>      <p class="para">       Indicates whether to copy all descendant nodes. This parameter is        defaulted to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.clonenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The cloned node.  </p> </div></div>
 * 
     * Clones a node
     * @link https://php.net/manual/zh/domnode.clonenode.php
     * @param bool $deep <p>
     * Indicates whether to copy all descendant nodes. This parameter is
     * defaulted to false.
     * </p>
     * @return static The cloned node.
     */
    public function cloneNode(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $deep,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $deep = false
    ) {}

    /**
 * <div id="domnode.normalize" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::normalize</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::normalize</span> — <span class="dc-title">   Normalizes the node  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.normalize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::normalize</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Remove empty text nodes and merge adjacent text nodes in this node and all   its children.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.normalize-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domnode.normalize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.normalize-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-normalize" class="link external">»&nbsp;The DOM Specification</a>    </li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::normalizeDocument()} - Normalizes the document</span></li>   </ul>   </div></div>
 * 
     * Normalizes the node
     * @link https://php.net/manual/zh/domnode.normalize.php
     * @return void
     */
    #[TentativeType]
    public function normalize(): void {}

    /**
 * <div id="domnode.issupported" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::isSupported</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::isSupported</span> — <span class="dc-title">   Checks if feature is supported for specified version  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.issupported-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::isSupported</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks if the asked <span class="parameter" style="color:#3A95FF">feature</span> is supported for the    specified <span class="parameter" style="color:#3A95FF">version</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.issupported-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">feature</span></dt>     <dd>      <p class="para">       The feature to test. See the example of        <span class="methodname" style="color:#CC7832">{@link DOMImplementation::hasFeature()}</span> for a       list of features.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">version</span></dt>     <dd>      <p class="para">       The version number of the <span class="parameter" style="color:#3A95FF">feature</span> to test.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.issupported-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.issupported-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMImplementation::hasFeature()} - Test if the DOM implementation implements a specific feature</span></li>   </ul>   </div></div>
 * 
     * Checks if feature is supported for specified version
     * @link https://php.net/manual/zh/domnode.issupported.php
     * @param string $feature <p>
     * The feature to test. See the example of
     * DOMImplementation::hasFeature for a
     * list of features.
     * </p>
     * @param string $version <p>
     * The version number of the feature to test.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function isSupported(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $feature,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $version
    ): bool {}

    /**
 * <div id="domnode.hasattributes" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::hasAttributes</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::hasAttributes</span> — <span class="dc-title">   Checks if node has attributes  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.hasattributes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::hasAttributes</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This method checks if the node has attributes. The tested node has to be   an <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.xml-element-node">XML_ELEMENT_NODE</a></span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.hasattributes-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domnode.hasattributes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.hasattributes-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes()} - Checks if node has children</span></li>   </ul>   </div></div>
 * 
     * Checks if node has attributes
     * @link https://php.net/manual/zh/domnode.hasattributes.php
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function hasAttributes(): bool {}

    /**
 * <div id="domnode.comparedocumentposition" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::compareDocumentPosition</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">DOMNode::compareDocumentPosition</span> — <span class="dc-title">Compares the position of two nodes</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.comparedocumentposition-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::compareDocumentPosition</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="simpara">   Compares the position of the other node relative to this node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.comparedocumentposition-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">      The node for which the position should be compared for, relative to this node.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-domnode.comparedocumentposition-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   A bitmask of the <strong><span>{@link DOMNode::DOCUMENT_POSITION_*}</span></strong>   constants.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.comparedocumentposition-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5789">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::compareDocumentPosition()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt;XML<br></span><span style="color: #DD0000">&lt;root&gt;<br>    &lt;child1/&gt;<br>    &lt;child2/&gt;<br>&lt;/root&gt;<br></span><span style="color: #007700">XML;<br><br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$child1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstElementChild</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$child2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$child1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextElementSibling</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compareDocumentPosition</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compareDocumentPosition</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">int(20)&nbsp;//&nbsp;This&nbsp;is&nbsp;DOMNode::DOCUMENT_POSITION_CONTAINED_BY&nbsp;|&nbsp;DOMNode::DOCUMENT_POSITION_FOLLOWING<br>int(2)&nbsp;&nbsp;//&nbsp;This&nbsp;is&nbsp;DOMNode::DOCUMENT_POSITION_PRECEDING</blockquote></div>   </div>  </div> </div></div>
 * 
     * @return int
     */
    #[LanguageLevelTypeAware(['8.4' => 'int'], default: '')]
    public function compareDocumentPosition(DOMNode $other) {}

    /**
 * <div id="domnode.issamenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::isSameNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::isSameNode</span> — <span class="dc-title">   Indicates if two nodes are the same node  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.issamenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::isSameNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function indicates if two nodes are the same node.   The comparison is <em>not</em> based on content  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.issamenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">otherNode</span></dt>     <dd>      <p class="para">       The compared node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.issamenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
     * Indicates if two nodes are the same node
     * @link https://php.net/manual/zh/domnode.issamenode.php
     * @param DOMNode $otherNode <p>
     * The compared node.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function isSameNode(DOMNode $otherNode): bool {}

    /**
 * <div id="domnode.lookupprefix" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::lookupPrefix</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::lookupPrefix</span> — <span class="dc-title">   Gets the namespace prefix of the node based on the namespace URI  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.lookupprefix-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::lookupPrefix</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the namespace prefix of the node based on the namespace URI.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.lookupprefix-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.lookupprefix-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The prefix of the namespace or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on error.  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.lookupprefix-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceUri()} - Gets the namespace URI of the node based on the prefix</span></li>   </ul>   </div></div>
 * 
     * Gets the namespace prefix of the node based on the namespace URI
     * @link https://php.net/manual/zh/domnode.lookupprefix.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @return string The prefix of the namespace.
     */
    #[TentativeType]
    public function lookupPrefix(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace): ?string {}

    /**
 * <div id="domnode.isdefaultnamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::isDefaultNamespace</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::isDefaultNamespace</span> — <span class="dc-title">Checks if the specified namespaceURI is the default namespace or not</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.isdefaultnamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::isDefaultNamespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <p class="para rdfs-comment">   Tells whether <span class="parameter" style="color:#3A95FF">namespace</span> is the default namespace.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.isdefaultnamespace-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI to look for.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.isdefaultnamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if <span class="parameter" style="color:#3A95FF">namespace</span> is the default   namespace, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div></div>
 * 
     * Checks if the specified namespaceURI is the default namespace or not
     * @link https://php.net/manual/zh/domnode.isdefaultnamespace.php
     * @param string $namespace <p>
     * The namespace URI to look for.
     * </p>
     * @return bool Return true if namespaceURI is the default
     * namespace, false otherwise.
     */
    #[TentativeType]
    public function isDefaultNamespace(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace): bool {}

    /**
 * <div id="domnode.lookupnamespaceuri" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::lookupNamespaceURI</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::lookupNamespaceURI</span> — <span class="dc-title">   Gets the namespace URI of the node based on the prefix  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.lookupnamespaceuri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::lookupNamespaceURI</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the namespace URI of the node based on the    <span class="parameter" style="color:#3A95FF">prefix</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.lookupnamespaceuri-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       The prefix to look for. If this parameter is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, the method will return the default namespace URI, if any.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.lookupnamespaceuri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the associated namespace URI or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if none is found.  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.lookupnamespaceuri-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix()} - Gets the namespace prefix of the node based on the namespace URI</span></li>   </ul>   </div></div>
 * 
     * Gets the namespace URI of the node based on the prefix
     * @link https://php.net/manual/zh/domnode.lookupnamespaceuri.php
     * @param string|null $prefix <p>
     * The prefix of the namespace.
     * </p>
     * @return string|null The namespace URI of the node.
     */
    #[PhpStormStubsElementAvailable(from: '8.0')]
    #[TentativeType]
    public function lookupNamespaceURI(?string $prefix): ?string {}

    /**
 * <div id="domnode.lookupnamespaceuri" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::lookupNamespaceURI</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::lookupNamespaceURI</span> — <span class="dc-title">   Gets the namespace URI of the node based on the prefix  </span></p> </div> <div class="refsect1 description" id="refsect1-domnode.lookupnamespaceuri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::lookupNamespaceURI</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the namespace URI of the node based on the    <span class="parameter" style="color:#3A95FF">prefix</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.lookupnamespaceuri-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       The prefix to look for. If this parameter is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, the method will return the default namespace URI, if any.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.lookupnamespaceuri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the associated namespace URI or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if none is found.  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.lookupnamespaceuri-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix()} - Gets the namespace prefix of the node based on the namespace URI</span></li>   </ul>   </div></div>
 * 
     * Gets the namespace URI of the node based on the prefix
     * @link https://php.net/manual/zh/domnode.lookupnamespaceuri.php
     * @param string|null $prefix <p>
     * The prefix of the namespace.
     * </p>
     * @return string|null The namespace URI of the node.
     */
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')]
    public function lookupNamespaceUri($prefix) {}

    /**
 * <div id="domnode.isequalnode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::isEqualNode</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMNode::isEqualNode</span> — <span class="dc-title">Checks that both nodes are equal</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.isequalnode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::isEqualNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks that both nodes are equal.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.isequalnode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">otherNode</span></dt>     <dd>      <p class="para">       The node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.isequalnode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if both nodes are equal, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.isequalnode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5794">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::isEqualNode()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom1 </span><span style="color: #007700">= (new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">())-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'h1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Hello World!'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dom2 </span><span style="color: #007700">= (new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">())-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'h1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Hello World!'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isEqualNode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>   </div>  </div> </div></div>
 * 
     * @param DOMNode|null $arg
     * @return bool
     */
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: '')]
    public function isEqualNode(#[LanguageLevelTypeAware(['8.3' => 'DOMNode|null'], default: 'DOMNode')] $otherNode) {}

    /**
     * @removed 8.0
     */
    public function getFeature($feature, $version) {}

    /**
     * @removed 8.0
     */
    public function setUserData($key, $data, $handler) {}

    /**
     * @removed 8.0
     */
    public function getUserData($key) {}

    /**
 * <div id="domnode.getnodepath" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::getNodePath</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::getNodePath</span> — <span class="dc-title">Get an XPath for a node</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.getnodepath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::getNodePath</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets an XPath location path for the node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.getnodepath-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnode.getnodepath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> containing the XPath, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> in case of an error.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.getnodepath-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5792">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::getNodePath()</strong></span> example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Create a new DOMDocument instance<br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Load the XML<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'<br>&lt;fruits&gt;<br> &lt;apples&gt;<br>  &lt;apple&gt;braeburn&lt;/apple&gt;<br>  &lt;apple&gt;granny smith&lt;/apple&gt;<br> &lt;/apples&gt;<br> &lt;pears&gt;<br>  &lt;pear&gt;conference&lt;/pear&gt;<br> &lt;/pears&gt;<br>&lt;/fruits&gt;<br>'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Print XPath for each element<br></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'*'</span><span style="color: #007700">) as </span><span style="color: #9876AA">\$node</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNodePath</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">/fruits<br>/fruits/apples<br>/fruits/apples/apple[1]<br>/fruits/apples/apple[2]<br>/fruits/pears<br>/fruits/pears/pear</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domnode.getnodepath-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="classname"><a href="https://php.net/manual/zh/class.domxpath.php" class="classname">DOMXPath</a></span></li>   </ul>   </div></div>
 * 
     * Gets an XPath location path for the node
     * @return string|null the XPath, or NULL in case of an error.
     * @link https://secure.php.net/manual/en/domnode.getnodepath.php
     */
    #[TentativeType]
    public function getNodePath(): ?string {}

    /**
 * <div id="domnode.getlineno" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::getLineNo</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::getLineNo</span> — <span class="dc-title">Get line number for a node</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.getlineno-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::getLineNo</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets line number for where the node was defined at parse time.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.getlineno-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnode.getlineno-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the line number where the node was defined at parse time.   If the node was created manually, the return value will be <span class="literal">0</span>.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.getlineno-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5791">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::getLineNo()</strong></span> example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// XML dump for below example<br></span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= &lt;&lt;&lt;XML<br></span><span style="color: #DD0000">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br>&lt;root&gt;<br>    &lt;node /&gt;<br>&lt;/root&gt;<br></span><span style="color: #007700">XML;<br><br></span><span style="color: #FF8000">// Create a new DOMDocument instance<br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Load the XML<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Print where the line where the 'node' element was defined in<br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">'The &lt;node&gt; tag is defined on line %d'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'node'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getLineNo</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">The&nbsp;<node>&nbsp;tag&nbsp;is&nbsp;defined&nbsp;in&nbsp;line&nbsp;3</node></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Get line number for a node
     * @link https://php.net/manual/zh/domnode.getlineno.php
     * @return int Always returns the line number where the node was defined in.
     */
    #[TentativeType]
    public function getLineNo(): int {}

    /**
 * <div id="domnode.c14n" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::C14N</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::C14N</span> — <span class="dc-title">Canonicalize nodes to a string</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.c14n-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::C14N</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Canonicalize nodes to a string  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.c14n-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">exclusive</span></dt>    <dd>     <p class="para">      Enable exclusive parsing of only the nodes matched by the provided      xpath or namespace prefixes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">withComments</span></dt>    <dd>     <p class="para">      Retain comments in output.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">xpath</span></dt>    <dd>  <p class="para">   An array of XPaths to filter the nodes by.   Each entry in this array is an associative array with:   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      A required <span class="literal">query</span> key containing the XPath expression as a string.     </span>    </li>    <li class="listitem">     <span class="simpara">      An optional <span class="literal">namespaces</span> key containing an array that maps namespace prefixes (keys) to namespace URIs (values).     </span>    </li>   </ul>   </dd>          <dt><span class="parameter" style="color:#3A95FF">nsPrefixes</span></dt>    <dd>     <p class="para">      An array of namespace prefixes to filter the nodes by.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-domnode.c14n-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns canonicalized nodes as a string 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.c14n-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5788">    <p><strong>示例 #1 Example with XPath query</strong></p>    <div class="example-contents"><p>     This example demonstrates advanced usage canonicalizing and filtering the nodes by an XPath query.    </p></div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(&lt;&lt;&lt;XML<br></span><span style="color: #DD0000">&lt;root xmlns:food="urn:food"&gt;<br>    &lt;!-- redundant namespace declaration will be canonicalized --&gt;<br>    &lt;food:fruit xmlns:food="urn:food"&gt;Apple&lt;/food:fruit&gt;<br>    &lt;food:fruit&gt;Orange&lt;/food:fruit&gt;<br>    &lt;food:fruit&gt;Pear&lt;/food:fruit&gt;<br>    &lt;!-- vegetables here --&gt;<br>    &lt;food:vegetable&gt;Lettuce&lt;/food:vegetable&gt;<br>&lt;/root&gt;<br></span><span style="color: #007700">XML);<br><br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">C14N</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, [<br>    </span><span style="color: #DD0000">"query" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">".//f:fruit|.//f:fruit/text()"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"namespaces" </span><span style="color: #007700">=&gt; [</span><span style="color: #DD0000">"f" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"urn:food"</span><span style="color: #007700">],<br>]);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><fruit>Apple</fruit><fruit>Orange</fruit><fruit>Pear</fruit></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domnode.c14n-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile()} - Canonicalize nodes to a file</span></li>   </ul>   </div></div>
 * 
     * Canonicalize nodes to a string
     * @param bool $exclusive [optional] Enable exclusive parsing of only the nodes matched by the provided xpath or namespace prefixes.
     * @param bool $withComments [optional] Retain comments in output.
     * @param null|array $xpath [optional] An array of xpaths to filter the nodes by.
     * @param null|array $nsPrefixes [optional] An array of namespace prefixes to filter the nodes by.
     * @return string|false Canonicalized nodes as a string or FALSE on failure
     */
    #[TentativeType]
    public function C14N(
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $exclusive = false,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $withComments = false,
        #[LanguageLevelTypeAware(['8.0' => 'array|null'], default: 'array')] $xpath = null,
        #[LanguageLevelTypeAware(['8.0' => 'array|null'], default: 'array')] $nsPrefixes = null
    ): string|false {}

    /**
 * <div id="domnode.c14nfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::C14NFile</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNode::C14NFile</span> — <span class="dc-title">Canonicalize nodes to a file</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.c14nfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::C14NFile</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Canonicalize nodes to a file.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.c14nfile-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>    <dd>     <p class="para">      Path to write the output to.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">exclusive</span></dt>    <dd>     <p class="para">      Enable exclusive parsing of only the nodes matched by the provided      xpath or namespace prefixes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">withComments</span></dt>    <dd>     <p class="para">      Retain comments in output.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">xpath</span></dt>    <dd>  <p class="para">   An array of XPaths to filter the nodes by.   Each entry in this array is an associative array with:   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      A required <span class="literal">query</span> key containing the XPath expression as a string.     </span>    </li>    <li class="listitem">     <span class="simpara">      An optional <span class="literal">namespaces</span> key containing an array that maps namespace prefixes (keys) to namespace URIs (values).     </span>    </li>   </ul>   </dd>          <dt><span class="parameter" style="color:#3A95FF">nsPrefixes</span></dt>    <dd>     <p class="para">      An array of namespace prefixes to filter the nodes by.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-domnode.c14nfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Number of bytes written 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 seealso" id="refsect1-domnode.c14nfile-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::C14N()} - Canonicalize nodes to a string</span></li>   </ul>   </div></div>
 * 
     * Canonicalize nodes to a file.
     * @link https://www.php.net/manual/en/domnode.c14nfile
     * @param string $uri Number of bytes written or FALSE on failure
     * @param bool $exclusive [optional] Enable exclusive parsing of only the nodes matched by the provided xpath or namespace prefixes.
     * @param bool $withComments [optional]  Retain comments in output.
     * @param null|array $xpath [optional] An array of xpaths to filter the nodes by.
     * @param null|array $nsPrefixes [optional] An array of namespace prefixes to filter the nodes by.
     * @return int|false Number of bytes written or FALSE on failure
     */
    #[TentativeType]
    public function C14NFile(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $uri,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $exclusive = false,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $withComments = false,
        #[LanguageLevelTypeAware(['8.0' => 'array|null'], default: 'array')] $xpath = null,
        #[LanguageLevelTypeAware(['8.0' => 'array|null'], default: 'array')] $nsPrefixes = null
    ): int|false {}

    /**
 * <div id="domnode.contains" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::contains</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMNode::contains</span> — <span class="dc-title">Checks if node contains other node</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.contains-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::contains</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks if node contains <span class="parameter" style="color:#3A95FF">other</span> node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.contains-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">other</span></dt>     <dd>      <p class="para">       Node to be checked.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.contains-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if node contains <span class="parameter" style="color:#3A95FF">other</span> node, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.contains-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5790">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::contains()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(&lt;&lt;&lt;XML<br></span><span style="color: #DD0000">&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>   &lt;body&gt;<br>       &lt;main&gt;<br>           &lt;p&gt;Hello, world!&lt;/p&gt;<br>       &lt;/main&gt;<br>   &lt;/body&gt;<br>&lt;/html&gt;<br></span><span style="color: #007700">XML);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$main </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"//main"</span><span style="color: #007700">)[</span><span style="color: #9876AA">0</span><span style="color: #007700">];<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contains</span><span style="color: #007700">(</span><span style="color: #9876AA">\$main</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>   </div>  </div> </div></div>
 * 
     * @since 8.3
     */
    public function contains(DOMNode|DOMNameSpaceNode|null $other): bool {}

    /**
 * <div id="domnode.getrootnode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNode::getRootNode</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMNode::getRootNode</span> — <span class="dc-title">Get root node</span></p> </div> <div class="refsect1 description" id="refsect1-domnode.getrootnode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNode::getRootNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div>  <p class="para rdfs-comment">   Get root node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnode.getrootnode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       This parameter has no effect yet.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnode.getrootnode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the root node.  </p> </div> <div class="refsect1 examples" id="refsect1-domnode.getrootnode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5793">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMNode::getRootNode()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?xml version="1.0"?&gt;&lt;html&gt;&lt;body/&gt;&lt;/html&gt;'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstElementChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRootNode</span><span style="color: #007700">() === </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>   </div>  </div> </div></div>
 * 
     * @since 8.3
     */
    public function getRootNode(?array $options = null): DOMNode {}

    /**
     * @since 8.1
     */
    public function __sleep(): array {}

    /**
     * @since 8.1
     */
    public function __wakeup(): void {}
}

/**
 * <div id="class.domexception" class="reference"> <h1 class="title">The DOMException / Dom\Exception class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domexception.intro">   <h2 class="title">简介</h2>   <p class="simpara">    DOM operations raise exceptions under particular circumstances, i.e.,    when an operation is impossible to perform for logical reasons.   </p>   <p class="simpara">    This class is aliased as <span class="classname"><strong class="classname">Dom\Exception</strong></span> in the    Dom namespace.   </p>   <p class="para">    See also <a href="https://php.net/manual/zh/language.exceptions.php" class="xref">异常</a>.   </p>  </div>   <div class="section" id="domexception.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DOMException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domexception.php#domexception.props.code">\$<var class="varname">code</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domexception.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domexception.props.code"><var class="varname">code</var></dt>     <dd>      <p class="para">An integer indicating the type of error generated</p>     </dd>       </dl>  </div>    </div> </div>
 * 
 * DOM operations raise exceptions under particular circumstances, i.e.,
 * when an operation is impossible to perform for logical reasons.
 * @link https://php.net/manual/zh/class.domexception.php
 */
final class DOMException extends Exception
{
    /**
     * @link https://php.net/manual/en/class.domexception.php#domexception.props.code
     * @var int An integer indicating the type of error generated
     */
    public $code;
}


class DOMStringList
{
    /**
     * @param $index
     * @return mixed
     */
    public function item($index) {}
}

/**
 * @link https://php.net/manual/en/ref.dom.php
 * @removed 8.0
 */
class DOMNameList
{
    /**
     * @param $index
     * @return mixed
     */
    public function getName($index) {}

    /**
     * @param $index
     * @return mixed
     */
    public function getNamespaceURI($index) {}
}

/**
 * @removed 8.0
 */
class DOMImplementationList
{
    /**
     * @param $index
     * @return mixed
     */
    public function item($index) {}
}

/**
 * @removed 8.0
 */
class DOMImplementationSource
{
    /**
     * @param $features
     * @return mixed
     */
    public function getDomimplementation($features) {}

    /**
     * @param $features
     * @return mixed
     */
    public function getDomimplementations($features) {}
}

/**
 * <div id="class.domimplementation" class="reference"> <h1 class="title">The DOMImplementation class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domimplementation.intro">   <h2 class="title">简介</h2>   <p class="simpara" id="domimplementation.intro.brief">    This class provides a number    of methods for performing operations that are independent of any     particular instance of the document object model.   </p>  </div>   <div class="section" id="domimplementation.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMImplementation</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domimplementation.createdocument.php" class="methodname" style="color:#CC7832">createDocument</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="type DOMDocumentType" style="color:#EAB766">DOMDocumentType</a></span></span> <span class="parameter" style="color:#3A95FF">\$doctype</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domimplementation.createdocumenttype.php" class="methodname" style="color:#CC7832">createDocumentType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$publicId</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$systemId</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="type DOMDocumentType" style="color:#EAB766">DOMDocumentType</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domimplementation.hasfeature.php" class="methodname" style="color:#CC7832">hasFeature</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>   </div>     </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMImplementation::__construct} — Creates a new DOMImplementation object</li><li>{@link DOMImplementation::createDocument} — Creates a DOMDocument object of the specified type with its document element</li><li>{@link DOMImplementation::createDocumentType} — Creates an empty DOMDocumentType object</li><li>{@link DOMImplementation::hasFeature} — Test if the DOM implementation implements a specific feature</li></ul></div>
 * 
 * The DOMImplementation interface provides a number
 * of methods for performing operations that are independent of any
 * particular instance of the document object model.
 * @link https://php.net/manual/zh/class.domimplementation.php
 */
class DOMImplementation
{
    /**
     * @param string $feature
     * @param string $version
     * @return mixed
     * @removed 8.4
     */
    #[TentativeType]
    public function getFeature(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $feature,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $version
    ): never {}

    /**
 * <div id="domimplementation.hasfeature" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMImplementation::hasFeature</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMImplementation::hasFeature</span> — <span class="dc-title">   Test if the DOM implementation implements a specific feature  </span></p> </div> <div class="refsect1 description" id="refsect1-domimplementation.hasfeature-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMImplementation::hasFeature</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Test if the DOM implementation implements a specific    <span class="parameter" style="color:#3A95FF">feature</span>.  </p>  <p class="para">   You can find a list of all features in the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/introduction.html#ID-Conformance" class="link external">»&nbsp;Conformance</a> section of the DOM   specification.  </p> </div> <div class="refsect1 parameters" id="refsect1-domimplementation.hasfeature-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">feature</span></dt>     <dd>      <p class="para">       The feature to test.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">version</span></dt>     <dd>      <p class="para">       The version number of the <span class="parameter" style="color:#3A95FF">feature</span> to test. In        level 2, this can be either <span class="literal">2.0</span> or       <span class="literal">1.0</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domimplementation.hasfeature-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-domimplementation.hasfeature-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        Calling this function statically will        now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.        Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-domimplementation.hasfeature-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5783">   <p><strong>示例 #1 Testing your DOM Implementation</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$features </span><span style="color: #007700">= array(<br>  </span><span style="color: #DD0000">'Core'           </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Core module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'XML'            </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'XML module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'HTML'           </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'HTML module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'Views'          </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Views module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'Stylesheets'    </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Style Sheets module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'CSS'            </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CSS module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'CSS2'           </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CSS2 module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'Events'         </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Events module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'UIEvents'       </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'User interface Events module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'MouseEvents'    </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Mouse Events module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'MutationEvents' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Mutation Events module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'HTMLEvents'     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'HTML Events module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'Range'          </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Range module'</span><span style="color: #007700">,<br>  </span><span style="color: #DD0000">'Traversal'      </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Traversal module'<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$implementation </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMImplementation</span><span style="color: #007700">;<br><br>foreach (</span><span style="color: #9876AA">\$features </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$name</span><span style="color: #007700">) {<br>  if (</span><span style="color: #9876AA">\$implementation</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">hasFeature</span><span style="color: #007700">(</span><span style="color: #9876AA">\$key</span><span style="color: #007700">, </span><span style="color: #DD0000">'2.0'</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"Has feature </span><span style="color: #9876AA">\$name</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>  } else {<br>    echo </span><span style="color: #DD0000">"Missing feature </span><span style="color: #9876AA">\$name</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>  }<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domimplementation.hasfeature-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported()} - Checks if feature is supported for specified version</span></li>   </ul>   </div></div>
 * 
     * Test if the DOM implementation implements a specific feature
     * @link https://php.net/manual/zh/domimplementation.hasfeature.php
     * @param string $feature <p>
     * The feature to test.
     * </p>
     * @param string $version <p>
     * The version number of the feature to test. In
     * level 2, this can be either 2.0 or 1.0.
     * </p>
     * @return bool true on success or false on failure.
     */
    public function hasFeature($feature, $version) {}

    /**
 * <div id="domimplementation.createdocumenttype" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMImplementation::createDocumentType</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMImplementation::createDocumentType</span> — <span class="dc-title">   Creates an empty DOMDocumentType object  </span></p> </div> <div class="refsect1 description" id="refsect1-domimplementation.createdocumenttype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMImplementation::createDocumentType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$publicId</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$systemId</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="type DOMDocumentType" style="color:#EAB766">DOMDocumentType</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates an empty <span class="classname"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="classname">DOMDocumentType</a></span> object. Entity    declarations and notations are not made available. Entity reference    expansions and default attribute additions do not occur.  </p> </div> <div class="refsect1 parameters" id="refsect1-domimplementation.createdocumenttype-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The qualified name of the document type to create.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">publicId</span></dt>     <dd>      <p class="para">       The external subset public identifier.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">systemId</span></dt>     <dd>      <p class="para">       The external subset system identifier.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domimplementation.createdocumenttype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A new <span class="classname"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="classname">DOMDocumentType</a></span> node with its    <span class="literal">ownerDocument</span> set to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-domimplementation.createdocumenttype-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if there is an error with the namespace, as determined by        <span class="parameter" style="color:#3A95FF">qualifiedName</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 changelog" id="refsect1-domimplementation.createdocumenttype-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        Calling this function statically will        now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.        Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-domimplementation.createdocumenttype-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5782">    <p><strong>示例 #1 Creating a document with an attached DTD</strong></p>    <div class="example-contents"> <div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// Creates an instance of the DOMImplementation class<br></span><span style="color: #9876AA">\$imp </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMImplementation</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Creates a DOMDocumentType instance<br></span><span style="color: #9876AA">\$dtd </span><span style="color: #007700">= </span><span style="color: #9876AA">\$imp</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocumentType</span><span style="color: #007700">(</span><span style="color: #DD0000">'graph'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #DD0000">'graph.dtd'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Creates a DOMDocument instance<br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= </span><span style="color: #9876AA">\$imp</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dtd</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Set other properties<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">encoding </span><span style="color: #007700">= </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">standalone </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Create an empty element<br></span><span style="color: #9876AA">\$element </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'graph'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Append the element<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$element</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Retrieve and print the document<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="UTF-8"&nbsp;standalone="no"?><br><br><graph></graph></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domimplementation.createdocumenttype-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMImplementation::createDocument()} - Creates a DOMDocument object of the specified type with its document element</span></li>   </ul>   </div></div>
 * 
     * Creates an empty DOMDocumentType object
     * @link https://php.net/manual/zh/domimplementation.createdocumenttype.php
     * @param string $qualifiedName <p>
     * The qualified name of the document type to create.
     * </p>
     * @param string $publicId <p>
     * The external subset public identifier.
     * </p>
     * @param string $systemId <p>
     * The external subset system identifier.
     * </p>
     * @return DOMDocumentType|false A new DOMDocumentType node with its
     * ownerDocument set to null.
     * @throws DOMException If there is an error with the namespace
     */
    public function createDocumentType(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $publicId,
        #[PhpStormStubsElementAvailable(from: '8.0')] string $publicId = '',
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $systemId,
        #[PhpStormStubsElementAvailable(from: '8.0')] string $systemId = ''
    ) {}

    /**
 * <div id="domimplementation.createdocument" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMImplementation::createDocument</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMImplementation::createDocument</span> — <span class="dc-title">   Creates a DOMDocument object of the specified type with its document element  </span></p> </div> <div class="refsect1 description" id="refsect1-domimplementation.createdocument-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMImplementation::createDocument</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="type DOMDocumentType" style="color:#EAB766">DOMDocumentType</a></span></span> <span class="parameter" style="color:#3A95FF">\$doctype</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span></div>  <p class="para rdfs-comment">   Creates a <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> object of the specified type   with its document element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domimplementation.createdocument-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the document element to create.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The qualified name of the document element to create.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">doctype</span></dt>     <dd>      <p class="para">       The type of document to create or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domimplementation.createdocument-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A new <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> object. If   <span class="parameter" style="color:#3A95FF">namespace</span>, <span class="parameter" style="color:#3A95FF">qualifiedName</span>,   and <span class="parameter" style="color:#3A95FF">doctype</span> are null, the returned   <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> is empty with no document element.  </p> </div> <div class="refsect1 errors" id="refsect1-domimplementation.createdocument-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">doctype</span> has already been used with a       different document or was created from a different implementation.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if there is an error with the namespace, as determined by       <span class="parameter" style="color:#3A95FF">namespace</span> and <span class="parameter" style="color:#3A95FF">qualifiedName</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 changelog" id="refsect1-domimplementation.createdocument-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The function now has the tentative return type <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span>.       </td>      </tr>      <tr>       <td>8.0.3</td>       <td>        <span class="parameter" style="color:#3A95FF">namespace</span> is now nullable.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">doctype</span> is now nullable.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        Calling this function statically will        now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.        Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-domimplementation.createdocument-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::__construct()} - Creates a new DOMDocument object</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMImplementation::createDocumentType()} - Creates an empty DOMDocumentType object</span></li>   </ul>   </div></div>
 * 
     * Creates a DOMDocument object of the specified type with its document element
     * @link https://php.net/manual/zh/domimplementation.createdocument.php
     * @param string|null $namespace <p>
     * The namespace URI of the document element to create.
     * </p>
     * @param string $qualifiedName <p>
     * The qualified name of the document element to create.
     * </p>
     * @param DOMDocumentType|null $doctype <p>
     * The type of document to create or null.
     * </p>
     * @return DOMDocument|false A new DOMDocument object. If
     * namespaceURI, qualifiedName, and doctype are null, the
     * returned DOMDocument is empty with no document element.
     * @throws DOMException If $doctype has already been used
     * with adifferent document or was created from a different
     * implementation. If there is an error with the namespace,
     * as determined by $namespace and $qualifiedName.
     */
    #[LanguageLevelTypeAware(['8.4' => 'DOMDocument'], default: 'DOMDocument|false')]
    #[TentativeType]
    public function createDocument(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $namespace,
        #[PhpStormStubsElementAvailable(from: '8.0')] ?string $namespace = null,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $qualifiedName,
        #[PhpStormStubsElementAvailable(from: '8.0')] string $qualifiedName = '',
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.3')] DOMDocumentType $doctype,
        #[PhpStormStubsElementAvailable(from: '7.4')] #[LanguageLevelTypeAware(['8.0' => 'DOMDocumentType|null'], default: 'DOMDocumentType')] $doctype = null
    ) {}
}

/**
 * <div id="class.domnamespacenode" class="reference"> <h1 class="title">The DOMNameSpaceNode class</h1>  <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>  <div class="section" id="domnamespacenode.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMNameSpaceNode</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.localname">\$<var class="varname">localName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamespacenode.php#domnamespacenode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamespacenode.sleep.php" class="methodname" style="color:#CC7832">__sleep</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamespacenode.wakeup.php" class="methodname" style="color:#CC7832">__wakeup</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section" id="domnamespacenode.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domnamespacenode.props.nodename"><var class="varname">nodeName</var></dt>     <dd>      <p class="para">       The qualified name of this node.      </p>     </dd>             <dt id="domnamespacenode.props.nodevalue"><var class="varname">nodeValue</var></dt>     <dd>      <p class="para">       The namespace URI declared by this node, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if the empty namespace.      </p>     </dd>             <dt id="domnamespacenode.props.nodetype"><var class="varname">nodeType</var></dt>     <dd>      <p class="para">       The type of the node. In this case it returns       <a href="https://php.net/manual/zh/dom.constants.php" class="link">        <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.xml-namespace-decl-node">XML_NAMESPACE_DECL_NODE</a></span></strong>       </a>.      </p>     </dd>             <dt id="domnamespacenode.props.prefix"><var class="varname">prefix</var></dt>     <dd>      <p class="para">       The namespace prefix declared by this node.      </p>     </dd>             <dt id="domnamespacenode.props.localname"><var class="varname">localName</var></dt>     <dd>      <p class="para">       The local part of the qualified name of this node.      </p>     </dd>             <dt id="domnamespacenode.props.namespaceuri"><var class="varname">namespaceURI</var></dt>     <dd>      <p class="para">       The namespace URI declared by this node, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if it is unspecified.      </p>     </dd>             <dt id="domnamespacenode.props.isconnected"><var class="varname">isConnected</var></dt>     <dd>      <p class="para">       Whether the node is connected to a document.      </p>     </dd>             <dt id="domnamespacenode.props.ownerdocument"><var class="varname">ownerDocument</var></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> object associated with this node,       or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if this node is a <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>      </p>     </dd>             <dt id="domnamespacenode.props.parentnode"><var class="varname">parentNode</var></dt>     <dd>      <p class="para">       The parent of this node.       If there is no such node, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domnamespacenode.props.parentelement"><var class="varname">parentElement</var></dt>     <dd>      <p class="para">       The parent element of this node.       If there is no such element, this returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        Properties <span class="property">{@link DOMNameSpaceNode::\$parentElement}</span>, and        <span class="property">{@link DOMNameSpaceNode::\$isConnected}</span> have been added.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMNameSpaceNode::__sleep} — Forbids serialization unless serialization methods are implemented in a subclass</li><li>{@link DOMNameSpaceNode::__wakeup} — Forbids unserialization unless unserialization methods are implemented in a subclass</li></ul></div>
 */
class DOMNameSpaceNode
{
    #[LanguageLevelTypeAware(['8.1' => 'DOMNode|null'], default: '')]
    public $parentNode;

    #[LanguageLevelTypeAware(['8.1' => 'DOMDocument|null'], default: '')]
    public $ownerDocument;

    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $namespaceURI;

    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $localName;

    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $prefix;

    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $nodeType;

    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $nodeValue;

    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $nodeName;
    public ?DOMElement $parentElement;
    public bool $isConnected;

    /**
     * @since 8.1
     */
    public function __sleep(): array {}

    /**
     * @since 8.1
     */
    public function __wakeup(): void {}
}

/**
 * <div id="class.domdocumentfragment" class="reference"> <h1 class="title">The DOMDocumentFragment class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domdocumentfragment.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMDocumentFragment</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumentfragment.php#domdocumentfragment.props.firstelementchild">\$<var class="varname">firstElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumentfragment.php#domdocumentfragment.props.lastelementchild">\$<var class="varname">lastElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumentfragment.php#domdocumentfragment.props.childelementcount">\$<var class="varname">childElementCount</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocumentfragment.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocumentfragment.append.php" class="methodname" style="color:#CC7832">append</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocumentfragment.appendxml.php" class="methodname" style="color:#CC7832">appendXML</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocumentfragment.prepend.php" class="methodname" style="color:#CC7832">prepend</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocumentfragment.replacechildren.php" class="methodname" style="color:#CC7832">replaceChildren</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section" id="domdocumentfragment.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domdocumentfragment.props.childelementcount"><var class="varname">childElementCount</var></dt>     <dd>      <p class="para">The number of child elements.</p>     </dd>             <dt id="domdocumentfragment.props.firstelementchild"><var class="varname">firstElementChild</var></dt>     <dd>      <p class="para">First child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domdocumentfragment.props.lastelementchild"><var class="varname">lastElementChild</var></dt>     <dd>      <p class="para">Last child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The <var class="varname">firstElementChild</var>, <var class="varname">lastElementChild</var>,        and <var class="varname">childElementCount</var> properties have been added.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">DOMDocumentFragment</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a></span> now.       </td>      </tr>     </tbody>       </table>  </div>    </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMDocumentFragment::append} — Appends nodes after the last child node</li><li>{@link DOMDocumentFragment::appendXML} — Append raw XML data</li><li>{@link DOMDocumentFragment::__construct} — Constructs a DOMDocumentFragment object</li><li>{@link DOMDocumentFragment::prepend} — Prepends nodes before the first child node</li><li>{@link DOMDocumentFragment::replaceChildren} — Replace children in fragment</li></ul></div>
 * 
 * The DOMDocumentFragment class
 * @link https://php.net/manual/zh/class.domdocumentfragment.php
 */
class DOMDocumentFragment extends DOMNode implements DOMParentNode
{
    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $childElementCount;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $lastElementChild;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $firstElementChild;


    public function __construct() {}

    /**
 * <div id="domdocumentfragment.appendxml" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocumentFragment::appendXML</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocumentFragment::appendXML</span> — <span class="dc-title">Append raw XML data</span></p> </div> <div class="refsect1 description" id="refsect1-domdocumentfragment.appendxml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::appendXML</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Appends raw XML data to a DOMDocumentFragment.   </p>  <p class="para">   This method is not part of the DOM standard. It was created as a simpler   approach for appending an XML DocumentFragment in a DOMDocument.  </p>  <p class="para">   If you want to stick to the standards, you will have to create a temporary   DOMDocument with a dummy root and then loop through the child nodes of the   root of your XML data to append them.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocumentfragment.appendxml-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       XML to append.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocumentfragment.appendxml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-domdocumentfragment.appendxml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5765">    <p><strong>示例 #1 Appending XML data to your document</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root/&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$f </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocumentFragment</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$f</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;foo&gt;text&lt;/foo&gt;&lt;bar&gt;text2&lt;/bar&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$f</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(); <br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><root><foo>text</foo><bar>text2</bar></root></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Append raw XML data
     * @link https://php.net/manual/zh/domdocumentfragment.appendxml.php
     * @param string $data <p>
     * XML to append.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function appendXML(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data): bool {}

    /**
 * <div id="domdocumentfragment.append" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocumentFragment::append</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocumentFragment::append</span> — <span class="dc-title">Appends nodes after the last child node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocumentfragment.append-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::append</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Appends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children after the last child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocumentfragment.append-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to append.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocumentfragment.append-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocumentfragment.append-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocumentfragment.append-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocumentfragment.append-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocumentfragment.append.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::append()</strong></span> example</strong></p>   <div class="example-contents"><p>    Appends nodes in the fragment.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fragment </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocumentFragment</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">append</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><hello></hello>beautiful<world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocumentfragment.append-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::append()} - Appends nodes after the last child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocumentFragment::prepend()} - Prepends nodes before the first child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function append(...$nodes): void {}

    /**
 * <div id="domdocumentfragment.prepend" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocumentFragment::prepend</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocumentFragment::prepend</span> — <span class="dc-title">Prepends nodes before the first child node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocumentfragment.prepend-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::prepend</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Prepends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children before the first child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocumentfragment.prepend-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to prepend.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocumentfragment.prepend-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocumentfragment.prepend-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocumentfragment.prepend-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocumentfragment.prepend-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocumentfragment.prepend.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::prepend()</strong></span> example</strong></p>   <div class="example-contents"><p>    Prepends nodes before the fragment root.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fragment </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocumentFragment</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepend</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">), </span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><hello></hello>beautiful<world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocumentfragment.prepend-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::prepend()} - Prepends nodes before the first child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocumentFragment::append()} - Appends nodes after the last child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function prepend(...$nodes): void {}

    /**
 * <div id="domdocumentfragment.replacechildren" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocumentFragment::replaceChildren</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMDocumentFragment::replaceChildren</span> — <span class="dc-title">Replace children in fragment</span></p> </div> <div class="refsect1 description" id="refsect1-domdocumentfragment.replacechildren-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::replaceChildren</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Replaces the children in the document fragment with new <span class="parameter" style="color:#3A95FF">nodes</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocumentfragment.replacechildren-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes replacing the children.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocumentfragment.replacechildren-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocumentfragment.replacechildren-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocumentfragment.replacechildren-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocumentfragment.replacechildren-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocumentfragment.replacechildren.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocumentFragment::replaceChildren()</strong></span> example</strong></p>   <div class="example-contents"><p>    Replaces the children with new nodes.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fragment </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createDocumentFragment</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">append</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">replaceChildren</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fragment</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocumentfragment.replacechildren-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::replaceChildren()} - Replace children in node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocumentFragment::append()} - Appends nodes after the last child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocumentFragment::prepend()} - Prepends nodes before the first child node</span></li>  </ul> </div></div>
 * 
     * @since 8.3
     * {@inheritDoc}
     */
    public function replaceChildren(...$nodes): void {}
}

/**
 * <div id="class.domdocument" class="reference"> <h1 class="title">The DOMDocument class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domdocument.intro">   <h2 class="title">简介</h2>   <p class="para">    Represents an entire HTML or XML document; serves as the root of the    document tree.   </p>  </div>   <div class="section" id="domdocument.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMDocument</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumenttype.php" class="type DOMDocumentType" style="color:#EAB766">DOMDocumentType</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.doctype">\$<var class="varname">doctype</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domimplementation.php" class="type DOMImplementation" style="color:#EAB766">DOMImplementation</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.implementation">\$<var class="varname">implementation</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.documentelement">\$<var class="varname">documentElement</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.actualencoding">\$<var class="varname">actualEncoding</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.encoding">\$<var class="varname">encoding</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.xmlencoding">\$<var class="varname">xmlEncoding</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.standalone">\$<var class="varname">standalone</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.xmlstandalone">\$<var class="varname">xmlStandalone</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.version">\$<var class="varname">version</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.xmlversion">\$<var class="varname">xmlVersion</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.stricterrorchecking">\$<var class="varname">strictErrorChecking</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.documenturi">\$<var class="varname">documentURI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.config">\$<var class="varname">config</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.formatoutput">\$<var class="varname">formatOutput</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.validateonparse">\$<var class="varname">validateOnParse</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.resolveexternals">\$<var class="varname">resolveExternals</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.preservewhitespace">\$<var class="varname">preserveWhiteSpace</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.recover">\$<var class="varname">recover</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.substituteentities">\$<var class="varname">substituteEntities</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.firstelementchild">\$<var class="varname">firstElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.lastelementchild">\$<var class="varname">lastElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocument.php#domdocument.props.childelementcount">\$<var class="varname">childElementCount</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span><span class="initializer"> = "1.0"</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$encoding</span><span class="initializer"> = ""</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.adoptnode.php" class="methodname" style="color:#CC7832">adoptNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.append.php" class="methodname" style="color:#CC7832">append</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createattribute.php" class="methodname" style="color:#CC7832">createAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createattributens.php" class="methodname" style="color:#CC7832">createAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createcdatasection.php" class="methodname" style="color:#CC7832">createCDATASection</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domcdatasection.php" class="type DOMCdataSection" style="color:#EAB766">DOMCdataSection</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createcomment.php" class="methodname" style="color:#CC7832">createComment</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domcomment.php" class="type DOMComment" style="color:#EAB766">DOMComment</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createdocumentfragment.php" class="methodname" style="color:#CC7832">createDocumentFragment</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumentfragment.php" class="type DOMDocumentFragment" style="color:#EAB766">DOMDocumentFragment</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createelement.php" class="methodname" style="color:#CC7832">createElement</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createelementns.php" class="methodname" style="color:#CC7832">createElementNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createentityreference.php" class="methodname" style="color:#CC7832">createEntityReference</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domentityreference.php" class="type DOMEntityReference" style="color:#EAB766">DOMEntityReference</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createprocessinginstruction.php" class="methodname" style="color:#CC7832">createProcessingInstruction</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$target</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php" class="type DOMProcessingInstruction" style="color:#EAB766">DOMProcessingInstruction</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.createtextnode.php" class="methodname" style="color:#CC7832">createTextNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domtext.php" class="type DOMText" style="color:#EAB766">DOMText</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.getelementbyid.php" class="methodname" style="color:#CC7832">getElementById</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$elementId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.getelementsbytagname.php" class="methodname" style="color:#CC7832">getElementsByTagName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.getelementsbytagnamens.php" class="methodname" style="color:#CC7832">getElementsByTagNameNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.importnode.php" class="methodname" style="color:#CC7832">importNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.load.php" class="methodname" style="color:#CC7832">load</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.loadhtml.php" class="methodname" style="color:#CC7832">loadHTML</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.loadhtmlfile.php" class="methodname" style="color:#CC7832">loadHTMLFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.loadxml.php" class="methodname" style="color:#CC7832">loadXML</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.normalizedocument.php" class="methodname" style="color:#CC7832">normalizeDocument</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.prepend.php" class="methodname" style="color:#CC7832">prepend</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.registernodeclass.php" class="methodname" style="color:#CC7832">registerNodeClass</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$baseClass</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$extendedClass</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.relaxngvalidate.php" class="methodname" style="color:#CC7832">relaxNGValidate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.relaxngvalidatesource.php" class="methodname" style="color:#CC7832">relaxNGValidateSource</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.replacechildren.php" class="methodname" style="color:#CC7832">replaceChildren</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.save.php" class="methodname" style="color:#CC7832">save</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.savehtml.php" class="methodname" style="color:#CC7832">saveHTML</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$node</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.savehtmlfile.php" class="methodname" style="color:#CC7832">saveHTMLFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.savexml.php" class="methodname" style="color:#CC7832">saveXML</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$node</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.schemavalidate.php" class="methodname" style="color:#CC7832">schemaValidate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.schemavalidatesource.php" class="methodname" style="color:#CC7832">schemaValidateSource</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.validate.php" class="methodname" style="color:#CC7832">validate</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domdocument.xinclude.php" class="methodname" style="color:#CC7832">xinclude</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domdocument.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domdocument.props.actualencoding"><var class="varname">actualEncoding</var></dt>     <dd>      <p class="para">       <em>Deprecated as of PHP 8.4.0</em>.       Actual encoding of the document, is a readonly equivalent to       <var class="varname">encoding</var>.      </p>     </dd>             <dt id="domdocument.props.childelementcount"><var class="varname">childElementCount</var></dt>     <dd>      <p class="para">The number of child elements.</p>     </dd>             <dt id="domdocument.props.config"><var class="varname">config</var></dt>     <dd>      <p class="para">       <em>Deprecated as of PHP 8.4.0</em>.       Configuration used when       <span class="function">{@link DOMDocument::normalizeDocument()}</span> is       invoked.      </p>     </dd>             <dt id="domdocument.props.doctype"><var class="varname">doctype</var></dt>     <dd>      <p class="para">The Document Type Declaration associated with this document.</p>     </dd>             <dt id="domdocument.props.documentelement"><var class="varname">documentElement</var></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> object that is the first       document element. If not found, this evaluates to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domdocument.props.documenturi"><var class="varname">documentURI</var></dt>     <dd>      <p class="para">The location of the document or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if undefined.</p>     </dd>             <dt id="domdocument.props.encoding"><var class="varname">encoding</var></dt>     <dd>      <p class="para">       Encoding of the document, as specified by the XML declaration. This       attribute is not present in the final DOM Level 3 specification, but       is the only way of manipulating XML document encoding in this       implementation.      </p>     </dd>             <dt id="domdocument.props.firstelementchild"><var class="varname">firstElementChild</var></dt>     <dd>      <p class="para">First child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domdocument.props.formatoutput"><var class="varname">formatOutput</var></dt>     <dd>      <p class="para">       Nicely formats output with indentation and extra space.       This has no effect if the document was loaded with       <var class="varname">preserveWhitespace</var> enabled.      </p>     </dd>             <dt id="domdocument.props.implementation"><var class="varname">implementation</var></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.domimplementation.php" class="classname">DOMImplementation</a></span> object that handles        this document.      </p>     </dd>             <dt id="domdocument.props.lastelementchild"><var class="varname">lastElementChild</var></dt>     <dd>      <p class="para">Last child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domdocument.props.preservewhitespace"><var class="varname">preserveWhiteSpace</var></dt>     <dd>      <p class="para">       Do not remove redundant white space. Default to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.       Setting this to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> has the same effect as passing <strong><span><a href="https://php.net/manual/zh/libxml.constants.php#constant.libxml-noblanks">LIBXML_NOBLANKS</a></span></strong>       as <span class="parameter" style="color:#3A95FF">option</span> to <span class="methodname" style="color:#CC7832">{@link DOMDocument::load()}</span> etc.      </p>     </dd>             <dt id="domdocument.props.recover"><var class="varname">recover</var></dt>     <dd>      <p class="para">       <em>Proprietary</em>. Enables recovery mode, i.e. trying       to parse non-well formed documents. This attribute is not part of       the DOM specification and is specific to libxml.      </p>     </dd>             <dt id="domdocument.props.resolveexternals"><var class="varname">resolveExternals</var></dt>     <dd>      <p class="para">       Set it to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> to load external entities from a doctype        declaration. This is useful for including character entities in       your XML document.      </p>     </dd>             <dt id="domdocument.props.standalone"><var class="varname">standalone</var></dt>     <dd>      <p class="para">       <em>Deprecated</em>. Whether or not the document is       standalone, as specified by the XML declaration, corresponds to       <var class="varname">xmlStandalone</var>.      </p>     </dd>             <dt id="domdocument.props.stricterrorchecking"><var class="varname">strictErrorChecking</var></dt>     <dd>      <p class="para">Throws <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> on errors. Default to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.</p>     </dd>             <dt id="domdocument.props.substituteentities"><var class="varname">substituteEntities</var></dt>     <dd>      <p class="para">       <em>Proprietary</em>. Whether or not to substitute       entities. This attribute is not part of       the DOM specification and is specific to libxml. Default to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        Enabling entity substitution may facilitate XML External Entity (XXE) attacks.       </p>      </div>     </dd>             <dt id="domdocument.props.validateonparse"><var class="varname">validateOnParse</var></dt>     <dd>      <p class="para">Loads and validates against the DTD. Default to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.</p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        Enabling validating the DTD may facilitate XML External Entity (XXE) attacks.       </p>      </div>     </dd>             <dt id="domdocument.props.version"><var class="varname">version</var></dt>     <dd>      <p class="para">       <em>Deprecated</em>. Version of XML, corresponds to       <var class="varname">xmlVersion</var>.      </p>     </dd>             <dt id="domdocument.props.xmlencoding"><var class="varname">xmlEncoding</var></dt>     <dd>      <p class="para">       An attribute specifying, as part of the XML declaration, the       encoding of this document. This is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> when unspecified or when it       is not known, such as when the Document was created in memory.      </p>     </dd>             <dt id="domdocument.props.xmlstandalone"><var class="varname">xmlStandalone</var></dt>     <dd>      <p class="para">       An attribute specifying, as part of the XML declaration, whether       this document is standalone.       This is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> when unspecified.       A standalone document is one where there are no external markup declarations.       An example of such a markup declaration is when the DTD declares an attribute with a default value.      </p>     </dd>             <dt id="domdocument.props.xmlversion"><var class="varname">xmlVersion</var></dt>     <dd>      <p class="para">       An attribute specifying, as part of the XML declaration, the       version number of this document. If there is no declaration and if       this document supports the "XML" feature, the value is "1.0".      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        <var class="varname">actualEncoding</var> and        <var class="varname">config</var> are formally deprecated now.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">DOMDocument</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a></span> now.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        The unimplemented method <span class="methodname" style="color:#CC7832"><strong>DOMDocument::renameNode()</strong></span>        has been removed.       </td>      </tr>     </tbody>       </table>  </div>  <div class="section">   <h2 class="title">注释</h2>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">此 DOM 扩展采用 UTF-8 编码。使用 <span class="function">{@link mb_convert_encoding()}</span>、<span class="methodname" style="color:#CC7832">{@link UConverter::transcode()}</span> 或 <span class="function">{@link iconv()}</span> 来处理其它编码。</p></blockquote>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">When using <span class="function">{@link json_encode()}</span> on a <span class="classname"><strong class="classname">DOMDocument</strong></span> object the result will be that of encoding an empty object.</p></blockquote>  </div>    <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-i-Document" class="link external">»&nbsp;W3C specification for Document</a></li>    </ul>     </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMDocument::adoptNode} — Transfer a node from another document</li><li>{@link DOMDocument::append} — Appends nodes after the last child node</li><li>{@link DOMDocument::__construct} — Creates a new DOMDocument object</li><li>{@link DOMDocument::createAttribute} — Create new attribute</li><li>{@link DOMDocument::createAttributeNS} — Create new attribute node with an associated namespace</li><li>{@link DOMDocument::createCDATASection} — Create new cdata node</li><li>{@link DOMDocument::createComment} — Create new comment node</li><li>{@link DOMDocument::createDocumentFragment} — Create new document fragment</li><li>{@link DOMDocument::createElement} — Create new element node</li><li>{@link DOMDocument::createElementNS} — Create new element node with an associated namespace</li><li>{@link DOMDocument::createEntityReference} — Create new entity reference node</li><li>{@link DOMDocument::createProcessingInstruction} — Creates new PI node</li><li>{@link DOMDocument::createTextNode} — Create new text node</li><li>{@link DOMDocument::getElementById} — Searches for an element with a certain id</li><li>{@link DOMDocument::getElementsByTagName} — Searches for all elements with given local tag name</li><li>{@link DOMDocument::getElementsByTagNameNS} — Searches for all elements with given tag name in specified namespace</li><li>{@link DOMDocument::importNode} — Import node into current document</li><li>{@link DOMDocument::load} — Load XML from a file</li><li>{@link DOMDocument::loadHTML} — Load HTML from a string</li><li>{@link DOMDocument::loadHTMLFile} — Load HTML from a file</li><li>{@link DOMDocument::loadXML} — Load XML from a string</li><li>{@link DOMDocument::normalizeDocument} — Normalizes the document</li><li>{@link DOMDocument::prepend} — Prepends nodes before the first child node</li><li>{@link DOMDocument::registerNodeClass} — Register extended class used to create base node type</li><li>{@link DOMDocument::relaxNGValidate} — Performs relaxNG validation on the document</li><li>{@link DOMDocument::relaxNGValidateSource} — Performs relaxNG validation on the document</li><li>{@link DOMDocument::replaceChildren} — Replace children in document</li><li>{@link DOMDocument::save} — Dumps the internal XML tree back into a file</li><li>{@link DOMDocument::saveHTML} — Dumps the internal document into a string using HTML formatting</li><li>{@link DOMDocument::saveHTMLFile} — Dumps the internal document into a file using HTML formatting</li><li>{@link DOMDocument::saveXML} — Dumps the internal XML tree back into a string</li><li>{@link DOMDocument::schemaValidate} — Validates a document based on a schema. Only XML Schema 1.0 is supported.</li><li>{@link DOMDocument::schemaValidateSource} — Validates a document based on a schema</li><li>{@link DOMDocument::validate} — Validates the document based on its DTD</li><li>{@link DOMDocument::xinclude} — Substitutes XIncludes in a DOMDocument Object</li></ul></div>
 * 
 * The DOMDocument class represents an entire HTML or XML
 * document; serves as the root of the document tree.
 * @link https://php.net/manual/zh/class.domdocument.php
 */
class DOMDocument extends DOMNode implements DOMParentNode
{
    /**
     * @var string|null
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.actualencoding
     */
    #[Deprecated("The property is deprecated", since: "8.4")]
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $actualEncoding;

    /**
     * @var DOMConfiguration
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.config
     * @see DOMDocument::normalizeDocument()
     */
    #[Deprecated("The property is deprecated", since: "8.4")]
    #[LanguageLevelTypeAware(['8.1' => 'mixed'], default: '')]
    public $config;

    /**
     * @var DOMDocumentType
     * The Document Type Declaration associated with this document.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.doctype
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMDocumentType|null'], default: '')]
    public $doctype;

    /**
     * @var DOMElement
     * This is a convenience attribute that allows direct access to the child node
     * that is the document element of the document.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.documentelement
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $documentElement;

    /**
     * @var string|null
     * The location of the document or NULL if undefined.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.documenturi
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $documentURI;

    /**
     * @var string|null
     * Encoding of the document, as specified by the XML declaration. This attribute is not present
     * in the final DOM Level 3 specification, but is the only way of manipulating XML document
     * encoding in this implementation.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.encoding
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $encoding;

    /**
     * @var bool
     * Nicely formats output with indentation and extra space.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.formatoutput
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $formatOutput;

    /**
     * @var DOMImplementation
     * The <classname>DOMImplementation</classname> object that handles this document.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.implementation
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMImplementation'], default: '')]
    public $implementation;

    /**
     * @var bool
     * Do not remove redundant white space. Default to TRUE.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.preservewhitespace
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $preserveWhiteSpace = true;

    /**
     * @var bool
     * Proprietary. Enables recovery mode, i.e. trying to parse non-well formed documents.
     * This attribute is not part of the DOM specification and is specific to libxml.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.recover
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $recover;

    /**
     * @var bool
     * Set it to TRUE to load external entities from a doctype declaration. This is useful for
     * including character entities in your XML document.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.resolveexternals
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $resolveExternals;

    /**
     * @var bool
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.standalone
     */
    #[Deprecated("Whether or not the document is standalone, as specified by the XML declaration, corresponds to xmlStandalone.")]
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $standalone;

    /**
     * @var bool
     * Throws <classname>DOMException</classname> on errors. Default to TRUE.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.stricterrorchecking
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $strictErrorChecking = true;

    /**
     * @var bool
     * Proprietary. Whether or not to substitute entities. This attribute is not part of the DOM
     * specification and is specific to libxml.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.substituteentities
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $substituteEntities;

    /**
     * @var bool
     * Loads and validates against the DTD. Default to FALSE.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.validateonparse
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $validateOnParse = false;

    /**
     * @var string
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.version
     */
    #[Deprecated('Version of XML, corresponds to xmlVersion')]
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $version;

    /**
     * @var string|null
     * An attribute specifying, as part of the XML declaration, the encoding of this document. This is NULL when
     * unspecified or when it is not known, such as when the Document was created in memory.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.xmlencoding
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $xmlEncoding;

    /**
     * @var bool
     * An attribute specifying, as part of the XML declaration, whether this document is standalone.
     * This is FALSE when unspecified.
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.xmlstandalone
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $xmlStandalone;

    /**
     * @var string|null
     * An attribute specifying, as part of the XML declaration, the version number of this document. If there is no
     * declaration and if this document supports the "XML" feature, the value is "1.0".
     * @link https://php.net/manual/en/class.domdocument.php#domdocument.props.xmlversion
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $xmlVersion;

    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $childElementCount;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $lastElementChild;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $firstElementChild;

    /**
 * <div id="domdocument.createelement" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createElement</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createElement</span> — <span class="dc-title">Create new element node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createelement-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createElement</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createelement-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The tag name of the element.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value of the element. By default, an empty element will be created.       The value can also be set later with {@link DOMElement::\$nodeValue}.      </p>      <p class="para">       The value is used verbatim except that the &lt; and &gt; entity       references will escaped. Note that &amp; has to be manually escaped;       otherwise it is regarded as starting an entity reference. Also " won't be       escaped.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createelement-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new instance of class <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>   if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createelement-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">localName</span> contains an invalid character.      </p>     </dd>       </dl>   </div> <div class="refsect1 examples" id="refsect1-domdocument.createelement-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5740">    <p><strong>示例 #1 Creating a new element and inserting it as root</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">, </span><span style="color: #DD0000">'utf-8'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$element </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">, </span><span style="color: #DD0000">'This is the root element!'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// We insert the new element as root (child of the document)<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$element</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="utf-8"?><br><test>This&nbsp;is&nbsp;the&nbsp;root&nbsp;element!</test></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5741">    <p><strong>示例 #2 Passing text containing an unescaped &amp; as <span class="parameter" style="color:#3A95FF">value</span></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">, </span><span style="color: #DD0000">'utf-8'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$element </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'me &amp; you'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$element</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Warning:&nbsp;DOMDocument::createElement():&nbsp;unterminated&nbsp;entity&nbsp;reference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;you&nbsp;in&nbsp;/in/BjTCg&nbsp;on&nbsp;line&nbsp;4<br><?xml &nbsp;version="1.0"&nbsp;encoding="utf-8"?><br><foo></foo></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-domdocument.createelement-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    The <span class="parameter" style="color:#3A95FF">value</span> will <em>not</em> be escaped.    Use <span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()}</span> to create a    text node with <em>escaping support</em>.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createelement-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new element node
     * @link https://php.net/manual/zh/domdocument.createelement.php
     * @param string $localName <p>
     * The tag name of the element.
     * </p>
     * @param string $value [optional] <p>
     * The value of the element. By default, an empty element will be created.
     * You can also set the value later with DOMElement->nodeValue.
     * </p>
     * @return DOMElement|false A new instance of class DOMElement or false
     * if an error occurred.
     * @throws DOMException If invalid $localName
     */
    public function createElement(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value = ''
    ) {}

    /**
 * <div id="domdocument.createdocumentfragment" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createDocumentFragment</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createDocumentFragment</span> — <span class="dc-title">Create new document fragment</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createdocumentfragment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createDocumentFragment</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocumentfragment.php" class="type DOMDocumentFragment" style="color:#EAB766">DOMDocumentFragment</a></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class    <span class="classname"><a href="https://php.net/manual/zh/class.domdocumentfragment.php" class="classname">DOMDocumentFragment</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createdocumentfragment-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domdocument.createdocumentfragment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domdocumentfragment.php" class="classname">DOMDocumentFragment</a></span>.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.createdocumentfragment-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       In case of an error, a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DomException</a></span> is thrown now.       Previously, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> was returned.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createdocumentfragment-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new document fragment
     * @link https://php.net/manual/zh/domdocument.createdocumentfragment.php
     * @return DOMDocumentFragment|false The new DOMDocumentFragment or false if an error occurred.
     */
    #[TentativeType]
    public function createDocumentFragment(): DOMDocumentFragment {}

    /**
 * <div id="domdocument.createtextnode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createTextNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createTextNode</span> — <span class="dc-title">Create new text node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createtextnode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createTextNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domtext.php" class="type DOMText" style="color:#EAB766">DOMText</a></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domtext.php" class="classname">DOMText</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createtextnode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The content of the text.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createtextnode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domtext.php" class="classname">DOMText</a></span>.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.createtextnode-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       In case of an error, a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DomException</a></span> is thrown now.       Previously, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> was returned.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createtextnode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>   </ul>   </div></div>
 * 
     * Create new text node
     * @link https://php.net/manual/zh/domdocument.createtextnode.php
     * @param string $data <p>
     * The content of the text.
     * </p>
     * @return DOMText|false The new DOMText or false if an error occurred.
     */
    #[TentativeType]
    public function createTextNode(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data): DOMText {}

    /**
 * <div id="domdocument.createcomment" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createComment</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createComment</span> — <span class="dc-title">Create new comment node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createcomment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createComment</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domcomment.php" class="type DOMComment" style="color:#EAB766">DOMComment</a></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domcomment.php" class="classname">DOMComment</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createcomment-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The content of the comment.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createcomment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domcomment.php" class="classname">DOMComment</a></span>.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.createcomment-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       In case of an error, a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DomException</a></span> is thrown now.       Previously, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> was returned.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createcomment-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new comment node
     * @link https://php.net/manual/zh/domdocument.createcomment.php
     * @param string $data <p>
     * The content of the comment.
     * </p>
     * @return DOMComment|false The new DOMComment or false if an error occurred.
     */
    #[TentativeType]
    public function createComment(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data): DOMComment {}

    /**
 * <div id="domdocument.createcdatasection" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createCDATASection</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createCDATASection</span> — <span class="dc-title">Create new cdata node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createcdatasection-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createCDATASection</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domcdatasection.php" class="type DOMCdataSection" style="color:#EAB766">DOMCdataSection</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domcdatasection.php" class="classname">DOMCDATASection</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createcdatasection-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The content of the cdata.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createcdatasection-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domcdatasection.php" class="classname">DOMCDATASection</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createcdatasection-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new cdata node
     * @link https://php.net/manual/zh/domdocument.createcdatasection.php
     * @param string $data <p>
     * The content of the cdata.
     * </p>
     * @return DOMCDATASection|false The new DOMCDATASection or false if an error occurred.
     */
    public function createCDATASection(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data) {}

    /**
 * <div id="domdocument.createprocessinginstruction" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createProcessingInstruction</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createProcessingInstruction</span> — <span class="dc-title">Creates new PI node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createprocessinginstruction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createProcessingInstruction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$target</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php" class="type DOMProcessingInstruction" style="color:#EAB766">DOMProcessingInstruction</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php" class="classname">DOMProcessingInstruction</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createprocessinginstruction-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">       The target of the processing instruction.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The content of the processing instruction.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createprocessinginstruction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php" class="classname">DOMProcessingInstruction</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createprocessinginstruction-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">target</span> contains an invalid character.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.createprocessinginstruction-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Creates new PI node
     * @link https://php.net/manual/zh/domdocument.createprocessinginstruction.php
     * @param string $target <p>
     * The target of the processing instruction.
     * </p>
     * @param string $data <p>
     * The content of the processing instruction.
     * </p>
     * @return DOMProcessingInstruction|false The new DOMProcessingInstruction or false if an error occurred.
     */
    public function createProcessingInstruction(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $target,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.3')] $data,
        #[PhpStormStubsElementAvailable(from: '7.4')] #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data = ''
    ) {}

    /**
 * <div id="domdocument.createattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createAttribute</span> — <span class="dc-title">Create new attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span>.    此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createattribute-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">localName</span> contains an invalid character.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.createattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new attribute
     * @link https://php.net/manual/zh/domdocument.createattribute.php
     * @param string $localName <p>
     * The name of the attribute.
     * </p>
     * @return DOMAttr|false The new DOMAttr or false if an error occurred.
     * @throws DOMException If invalid $localName
     */
    public function createAttribute(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName) {}

    /**
 * <div id="domdocument.createentityreference" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createEntityReference</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createEntityReference</span> — <span class="dc-title">Create new entity reference node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createentityreference-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createEntityReference</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domentityreference.php" class="type DOMEntityReference" style="color:#EAB766">DOMEntityReference</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domentityreference.php" class="classname">DOMEntityReference</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createentityreference-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The content of the entity reference, e.g. the entity reference minus       the leading <span class="literal">&amp;</span> and the trailing       <span class="literal">;</span> characters.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createentityreference-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domentityreference.php" class="classname">DOMEntityReference</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error   occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createentityreference-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">name</span> contains an invalid character.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.createentityreference-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new entity reference node
     * @link https://php.net/manual/zh/domdocument.createentityreference.php
     * @param string $name <p>
     * The content of the entity reference, e.g. the entity reference minus
     * the leading &amp; and the trailing
     * ; characters.
     * </p>
     * @return DOMEntityReference|false The new DOMEntityReference or false if an error
     * occurred.
     */
    public function createEntityReference(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name) {}

    /**
 * <div id="domdocument.getelementsbytagname" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::getElementsByTagName</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::getElementsByTagName</span> — <span class="dc-title">Searches for all elements with given local tag name</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.getelementsbytagname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::getElementsByTagName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div>  <p class="para rdfs-comment">   This function returns a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> containing all the elements with a given   local tag name.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.getelementsbytagname-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The local name (without namespace) of the tag to match on. The special value <span class="literal">*</span>       matches all tags.       </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.getelementsbytagname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A new <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> object containing all the matched    elements.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.getelementsbytagname-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="domdocument.getelementsbytagname.example.basic">    <p><strong>示例 #1 Basic Usage Example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt; XML<br></span><span style="color: #DD0000">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br>&lt;books&gt;<br> &lt;book&gt;Patterns of Enterprise Application Architecture&lt;/book&gt;<br> &lt;book&gt;Design Patterns: Elements of Reusable Software Design&lt;/book&gt;<br> &lt;book&gt;Clean Code&lt;/book&gt;<br>&lt;/books&gt;<br></span><span style="color: #007700">XML;<br><br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$books </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'book'</span><span style="color: #007700">);<br>foreach (</span><span style="color: #9876AA">\$books </span><span style="color: #007700">as </span><span style="color: #9876AA">\$book</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$book</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Patterns&nbsp;of&nbsp;Enterprise&nbsp;Application&nbsp;Architecture<br>Design&nbsp;Patterns:&nbsp;Elements&nbsp;of&nbsp;Reusable&nbsp;Software&nbsp;Design<br>Clean&nbsp;Code</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.getelementsbytagname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementsByTagNameNS()} - Searches for all elements with given tag name in specified namespace</span></li>   </ul>   </div></div>
 * 
     * Searches for all elements with given tag name
     * @link https://php.net/manual/zh/domdocument.getelementsbytagname.php
     * @param string $qualifiedName <p>
     * The name of the tag to match on. The special value *
     * matches all tags.
     * </p>
     * @return DOMNodeList<DOMElement> A new DOMNodeList object containing all the matched
     * elements.
     */
    #[TentativeType]
    public function getElementsByTagName(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): DOMNodeList {}

    /**
 * <div id="domdocument.importnode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::importNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::importNode</span> — <span class="dc-title">Import node into current document</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.importnode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::importNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function returns a copy of the node to import and associates it with    the current document.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.importnode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       The node to import.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">deep</span></dt>     <dd>      <p class="para">       If set to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, this method will recursively import the subtree under       the <span class="parameter" style="color:#3A95FF">node</span>.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        To copy the nodes attributes <span class="parameter" style="color:#3A95FF">deep</span> needs to be set to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>       </p>      </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.importnode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The copied node or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, if it cannot be copied.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.importnode-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> is thrown if node cannot be imported.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.importnode-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5747">    <p><strong>示例 #1 <span class="function"><strong>DOMDocument::importNode()</strong></span> example</strong></p>    <div class="example-contents"><p>      Copying nodes between documents.    </p></div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$orgdoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$orgdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root&gt;&lt;element&gt;&lt;child&gt;text in child&lt;/child&gt;&lt;/element&gt;&lt;/root&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// The node we want to import to a new document<br></span><span style="color: #9876AA">\$node </span><span style="color: #007700">= </span><span style="color: #9876AA">\$orgdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"element"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br><br></span><span style="color: #FF8000">// Create a new document<br></span><span style="color: #9876AA">\$newdoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Add some markup<br></span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root&gt;&lt;someelement&gt;text in some element&lt;/someelement&gt;&lt;/root&gt;"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"The 'new document' before copying nodes into it:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Import the node, and all its children, to the document<br></span><span style="color: #9876AA">\$node </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importNode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// And then append it to the "&lt;root&gt;" node<br></span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"\nThe 'new document' after copying the nodes into it:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">The&nbsp;'new&nbsp;document'&nbsp;before&nbsp;copying&nbsp;nodes&nbsp;into&nbsp;it:<br><?xml &nbsp;version="1.0"?><br><root><br>&nbsp;&nbsp;<someelement>text&nbsp;in&nbsp;some&nbsp;element</someelement><br></root><br><br>The&nbsp;'new&nbsp;document'&nbsp;after&nbsp;copying&nbsp;the&nbsp;nodes&nbsp;into&nbsp;it:<br><?xml &nbsp;version="1.0"?><br><root><br>&nbsp;&nbsp;<someelement>text&nbsp;in&nbsp;some&nbsp;element</someelement><br>&nbsp;&nbsp;<element><br>&nbsp;&nbsp;&nbsp;&nbsp;<child>text&nbsp;in&nbsp;child</child><br>&nbsp;&nbsp;</element><br></root></blockquote></div>    </div>   </div>   </div> </div>
 * 
     * Import node into current document
     * @link https://php.net/manual/zh/domdocument.importnode.php
     * @param DOMNode $node <p>
     * The node to import.
     * </p>
     * @param bool $deep <p>
     * If set to true, this method will recursively import the subtree under
     * the importedNode.
     * </p>
     * <p>
     * To copy the nodes attributes deep needs to be set to true
     * </p>
     * @return DOMNode|false The copied node or false, if it cannot be copied.
     */
    public function importNode(
        DOMNode $node,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.3')] $deep,
        #[PhpStormStubsElementAvailable(from: '7.4')] #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $deep = false
    ) {}

    /**
 * <div id="domdocument.createelementns" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createElementNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createElementNS</span> — <span class="dc-title">   Create new element node with an associated namespace  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createelementns-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createElementNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new element node with an associated namespace.   此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createelementns-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The URI of the namespace.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The qualified name of the element, as <span class="literal">prefix:tagname</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value of the element. By default, an empty element will be created.       You can also set the value later with {@link DOMElement::\$nodeValue}.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createelementns-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createelementns-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> contains an invalid character.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> is a malformed qualified       name.      </p>     </dd>       </dl>   </div> <div class="refsect1 examples" id="refsect1-domdocument.createelementns-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5742">    <p><strong>示例 #1 Creating a new element and inserting it as root</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">, </span><span style="color: #DD0000">'utf-8'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$element </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElementNS</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/XFoo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'xfoo:test'</span><span style="color: #007700">, </span><span style="color: #DD0000">'This is the root element!'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// We insert the new element as root (child of the document)<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$element</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="utf-8"?><br><test>This&nbsp;is&nbsp;the&nbsp;root&nbsp;element!</test></blockquote></div>    </div>   </div>   <div class="example" id="example-5743">    <p><strong>示例 #2 A namespace prefix example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc  </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">, </span><span style="color: #DD0000">'utf-8'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElementNS</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.w3.org/2005/Atom'</span><span style="color: #007700">, </span><span style="color: #DD0000">'element'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttributeNS</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.w3.org/2000/xmlns/' </span><span style="color: #007700">,</span><span style="color: #DD0000">'xmlns:g'</span><span style="color: #007700">, </span><span style="color: #DD0000">'http://base.google.com/ns/1.0'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$item </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElementNS</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://base.google.com/ns/1.0'</span><span style="color: #007700">, </span><span style="color: #DD0000">'g:item_type'</span><span style="color: #007700">, </span><span style="color: #DD0000">'house'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$item</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">\$item</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">namespaceURI</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// Outputs: http://base.google.com/ns/1.0<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$item</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prefix</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;       </span><span style="color: #FF8000">// Outputs: g<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$item</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">localName</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;    </span><span style="color: #FF8000">// Outputs: item_type<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="utf-8"?><br><element><br>&nbsp;&nbsp;<item_type>house</item_type><br></element><br><br>http://base.google.com/ns/1.0<br>g<br>item_type</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.createelementns-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttributeNS()} - Create new attribute node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new element node with an associated namespace
     * @link https://php.net/manual/zh/domdocument.createelementns.php
     * @param string|null $namespace <p>
     * The URI of the namespace.
     * </p>
     * @param string $qualifiedName <p>
     * The qualified name of the element, as prefix:tagname.
     * </p>
     * @param string $value [optional] <p>
     * The value of the element. By default, an empty element will be created.
     * You can also set the value later with DOMElement->nodeValue.
     * </p>
     * @return DOMElement|false The new DOMElement or false if an error occurred.
     * @throws DOMException If invalid $namespace or $qualifiedName
     */
    public function createElementNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value = ''
    ) {}

    /**
 * <div id="domdocument.createattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::createAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::createAttributeNS</span> — <span class="dc-title">   Create new attribute node with an associated namespace  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.createattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::createAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This function creates a new instance of class   <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span>. 此节点出现在文档中，除非是用诸如<span class="function"><strong>DOMNode-&gt;appendChild()</strong></span> 等函数来将其插入。  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.createattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The URI of the namespace.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The tag name and prefix of the attribute, as <span class="literal">prefix:tagname</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.createattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.createattributens-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-invalid-character-err">DOM_INVALID_CHARACTER_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> contains an invalid character.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> is a malformed qualified       name, or if <span class="parameter" style="color:#3A95FF">qualifiedName</span> has a prefix and        <span class="parameter" style="color:#3A95FF">namespace</span> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 changelog" id="refsect1-domdocument.createattributens-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method without specifying a prefix will now choose a prefix instead of assuming the default namespace.       Previously this would create an attribute without a prefix and incorrectly apply the namespace       to the owner element because default namespaces don't apply on attributes.      </td>     </tr>     <tr>      <td>8.3.0</td>      <td>       Calling this method using a prefix that was already declared on the owner element with a different namespace URI       will now change the new prefix to avoid creating namespace conflicts. This aligns the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domdocument.createattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild()} - Adds new child at the end of the children</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createAttribute()} - Create new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createCDATASection()} - Create new cdata node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createComment()} - Create new comment node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createDocumentFragment()} - Create new document fragment</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElement()} - Create new element node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createElementNS()} - Create new element node with an associated namespace</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createEntityReference()} - Create new entity reference node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createProcessingInstruction()} - Creates new PI node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::createTextNode()} - Create new text node</span></li>   </ul>   </div></div>
 * 
     * Create new attribute node with an associated namespace
     * @link https://php.net/manual/zh/domdocument.createattributens.php
     * @param string|null $namespace <p>
     * The URI of the namespace.
     * </p>
     * @param string $qualifiedName <p>
     * The tag name and prefix of the attribute, as prefix:tagname.
     * </p>
     * @return DOMAttr|false The new DOMAttr or false if an error occurred.
     * @throws DOMException If invalid $namespace or $qualifiedName
     */
    public function createAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName
    ) {}

    /**
 * <div id="domdocument.getelementsbytagnamens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::getElementsByTagNameNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::getElementsByTagNameNS</span> — <span class="dc-title">   Searches for all elements with given tag name in specified namespace  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.getelementsbytagnamens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::getElementsByTagNameNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div>  <p class="para rdfs-comment">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> of all elements with a given    local name and a namespace URI.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.getelementsbytagnamens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the elements to match on.       The special value <span class="literal">"*"</span> matches all namespaces.       Passing <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> matches the empty namespace.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name of the elements to match on.       The special value <span class="literal">"*"</span> matches all local names.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.getelementsbytagnamens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A new <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> object containing all the matched    elements.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.getelementsbytagnamens-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.3</td>      <td>       <span class="parameter" style="color:#3A95FF">namespace</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.getelementsbytagnamens-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5746">    <p><strong>示例 #1 Get all the XInclude elements</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000">&lt;?xml version="1.0" ?&gt;<br>&lt;chapter xmlns:xi="http://www.w3.org/2001/XInclude"&gt;<br>&lt;title&gt;Books of the other guy..&lt;/title&gt;<br>&lt;para&gt;<br> &lt;xi:include href="book.xml"&gt;<br>  &lt;xi:fallback&gt;<br>   &lt;error&gt;xinclude: book.xml not found&lt;/error&gt;<br>  &lt;/xi:fallback&gt;<br> &lt;/xi:include&gt;<br> &lt;include&gt;<br>  This is another namespace<br> &lt;/include&gt;<br>&lt;/para&gt;<br>&lt;/chapter&gt;<br></span><span style="color: #007700">EOD;<br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// load the XML string defined above<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagNameNS</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.w3.org/2001/XInclude'</span><span style="color: #007700">, </span><span style="color: #DD0000">'*'</span><span style="color: #007700">) as </span><span style="color: #9876AA">\$element</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">'local name: '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$element</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">localName</span><span style="color: #007700">, </span><span style="color: #DD0000">', prefix: '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$element</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prefix</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">local&nbsp;name:&nbsp;include,&nbsp;prefix:&nbsp;xi<br>local&nbsp;name:&nbsp;fallback,&nbsp;prefix:&nbsp;xi</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.getelementsbytagnamens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementsByTagName()} - Searches for all elements with given local tag name</span></li>   </ul>   </div></div>
 * 
     * Searches for all elements with given tag name in specified namespace
     * @link https://php.net/manual/zh/domdocument.getelementsbytagnamens.php
     * @param string $namespace <p>
     * The namespace URI of the elements to match on.
     * The special value * matches all namespaces.
     * </p>
     * @param string $localName <p>
     * The local name of the elements to match on.
     * The special value * matches all local names.
     * </p>
     * @return DOMNodeList<DOMElement> A new DOMNodeList object containing all the matched
     * elements.
     */
    #[TentativeType]
    public function getElementsByTagNameNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ): DOMNodeList {}

    /**
 * <div id="domdocument.getelementbyid" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::getElementById</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::getElementById</span> — <span class="dc-title">Searches for an element with a certain id</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.getelementbyid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::getElementById</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$elementId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span></span></div>  <p class="para rdfs-comment">   This function is similar to   {@link DOMDocument::getElementsByTagName} but    searches for an element with a given id.  </p>  <p class="para">   For this function to work, you will need either to set some ID attributes   with {@link DOMElement::setIdAttribute}   or a DTD which defines an attribute to be of type ID.    In the later case, you will need to validate your document with   {@link DOMDocument::validate}    or {@link DOMDocument::\$validateOnParse} before using this function.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.getelementbyid-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">elementId</span></dt>     <dd>      <p class="para">       The unique id value for an element.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.getelementbyid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if the element is   not found.   </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.getelementbyid-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5744">   <p><strong>示例 #1 DOMDocument::getElementById() Example</strong></p>   <div class="example-contents"><p>以下示例使用了 <var class="filename">book.xml</var>，其内容如下：</p></div><div class="example-contents"> <div class="annotation-interactive xmlcode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="UTF-8"?><br>&nbsp;&nbsp;&lt;!ELEMENT&nbsp;books&nbsp;&nbsp;&nbsp;(book+)&gt;<br>&nbsp;&nbsp;&lt;!ELEMENT&nbsp;book&nbsp;&nbsp;&nbsp;&nbsp;(title,&nbsp;author+,&nbsp;xhtml:blurb?)&gt;<br>&nbsp;&nbsp;&lt;!ELEMENT&nbsp;title&nbsp;&nbsp;&nbsp;(#PCDATA)&gt;<br>&nbsp;&nbsp;&lt;!ELEMENT&nbsp;blurb&nbsp;&nbsp;&nbsp;(#PCDATA)&gt;<br>&nbsp;&nbsp;&lt;!ELEMENT&nbsp;author&nbsp;&nbsp;(#PCDATA)&gt;<br>&nbsp;&nbsp;&lt;!ATTLIST&nbsp;books&nbsp;&nbsp;&nbsp;xmlns&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CDATA&nbsp;&nbsp;#IMPLIED&gt;<br>&nbsp;&nbsp;&lt;!ATTLIST&nbsp;books&nbsp;&nbsp;&nbsp;xmlns:xhtml&nbsp;&nbsp;CDATA&nbsp;&nbsp;#IMPLIED&gt;<br>&nbsp;&nbsp;&lt;!ATTLIST&nbsp;book&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#IMPLIED&gt;<br>&nbsp;&nbsp;&lt;!ATTLIST&nbsp;author&nbsp;&nbsp;email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CDATA&nbsp;&nbsp;#IMPLIED&gt;<br>]&gt;<br><?xml-stylesheet &nbsp;type="text/xsl"&nbsp;href="style.xsl"?><br><books><br>&nbsp;&nbsp;<book><br>&nbsp;&nbsp;&nbsp;&nbsp;<title>PHP&nbsp;Basics</title><br>&nbsp;&nbsp;&nbsp;&nbsp;<author>Jim&nbsp;Smith</author><br>&nbsp;&nbsp;&nbsp;&nbsp;<author>Jane&nbsp;Smith</author><br>&nbsp;&nbsp;&nbsp;&nbsp;<blurb>&lt;![CDATA[<br><p><em>PHP&nbsp;Basics</em>&nbsp;provides&nbsp;an&nbsp;introduction&nbsp;to&nbsp;PHP.</p><br>]]&gt;</blurb><br>&nbsp;&nbsp;</book><br>&nbsp;&nbsp;<book><br>&nbsp;&nbsp;&nbsp;&nbsp;<title>PHP&nbsp;Advanced&nbsp;Programming</title><br>&nbsp;&nbsp;&nbsp;&nbsp;<author>Jon&nbsp;Doe</author><br>&nbsp;&nbsp;</book><br></books></blockquote></div></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DomDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// We need to validate our document before referring to the id<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">validateOnParse </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"The element whose id is 'php-basics' is: " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementById</span><span style="color: #007700">(</span><span style="color: #DD0000">'php-basics'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">tagName </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">The&nbsp;element&nbsp;whose&nbsp;id&nbsp;is&nbsp;'php-basics'&nbsp;is:&nbsp;book</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocument.getelementbyid-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementsByTagName()} - Searches for all elements with given local tag name</span></li>   </ul>   </div></div>
 * 
     * Searches for an element with a certain id
     * @link https://php.net/manual/zh/domdocument.getelementbyid.php
     * @param string $elementId <p>
     * The unique id value for an element.
     * </p>
     * @return DOMElement|null The DOMElement or null if the element is
     * not found.
     */
    #[TentativeType]
    public function getElementById(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $elementId): ?DOMElement {}

/**
 * <div id="domdocument.adoptnode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::adoptNode</h1>  <p class="verinfo">(PHP &gt;= 8.3)</p><p class="refpurpose"><span class="refname">DOMDocument::adoptNode</span> — <span class="dc-title">Transfer a node from another document</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.adoptnode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::adoptNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Transfer a node from another document into the current document.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.adoptnode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       The node to transfer.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.adoptnode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The node that was transfered, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.adoptnode-errors">   <h3 class="title">错误／异常</h3>   <dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-supported-err">DOM_NOT_SUPPORTED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node type is not supported for document transfers.      </p>     </dd>       </dl>  </div> <div class="refsect1 examples" id="refsect1-domdocument.adoptnode-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocument.adoptnode.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocument::adoptNode()</strong></span> example</strong></p>   <div class="example-contents"><p>    Transfers the hello element from the first document to the second one.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello&gt;&lt;world/&gt;&lt;/hello&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$hello </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$doc2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root/&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adoptNode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$hello</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">() . </span><span style="color: #9876AA">PHP_EOL </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$doc2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container></container><br><br><?xml &nbsp;version="1.0"?><br><root><hello><world></world></hello></root></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocument.adoptnode-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::importNode()} - Import node into current document</span></li>  </ul> </div></div>
 */
    public function adoptNode(DOMNode $node) {}

    /**
 * <div id="domdocument.append" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::append</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::append</span> — <span class="dc-title">Appends nodes after the last child node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.append-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::append</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Appends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children after the last child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.append-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to append.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.append-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.append-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocument.append-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.append-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocument.append.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocument::append()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes after the document root.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;hello/&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">append</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><hello></hello><br>beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocument.append-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::append()} - Appends nodes after the last child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::prepend()} - Prepends nodes before the first child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function append(...$nodes): void {}

    /**
 * <div id="domdocument.prepend" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::prepend</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::prepend</span> — <span class="dc-title">Prepends nodes before the first child node</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.prepend-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::prepend</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Prepends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children before the first child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.prepend-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to prepend.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.prepend-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.prepend-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocument.prepend-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.prepend-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocument.prepend.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocument::prepend()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes before the document root.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;world/&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepend</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">), </span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><hello></hello><br>beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocument.prepend-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::prepend()} - Prepends nodes before the first child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::append()} - Appends nodes after the last child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function prepend(...$nodes): void {}

    /**
 * <div id="domdocument.replacechildren" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::replaceChildren</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMDocument::replaceChildren</span> — <span class="dc-title">Replace children in document</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.replacechildren-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::replaceChildren</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Replaces the children in the document with new <span class="parameter" style="color:#3A95FF">nodes</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.replacechildren-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes replacing the children.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.replacechildren-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.replacechildren-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domdocument.replacechildren-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.replacechildren-examples">  <h3 class="title">示例</h3>  <div class="example" id="domdocument.replacechildren.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMDocument::replaceChildren()</strong></span> example</strong></p>   <div class="example-contents"><p>    Replaces the children with new nodes.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">replaceChildren</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br>beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domdocument.replacechildren-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::replaceChildren()} - Replace children in node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::append()} - Appends nodes after the last child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::prepend()} - Prepends nodes before the first child node</span></li>  </ul> </div></div>
 * 
     * @since 8.3
     * {@inheritDoc}
     */
    public function replaceChildren(...$nodes): void {}

    /**
 * <div id="domdocument.normalizedocument" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::normalizeDocument</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::normalizeDocument</span> — <span class="dc-title">Normalizes the document</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.normalizedocument-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::normalizeDocument</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   This method acts as if you saved and then loaded the document, putting the   document in a "normal" form.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.normalizedocument-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domdocument.normalizedocument-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.normalizedocument-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Document3-normalizeDocument" class="link external">»&nbsp;The DOM Specification</a>    </li>    <li><span class="methodname" style="color:#CC7832">{@link DOMNode::normalize()} - Normalizes the node</span></li>   </ul>   </div></div>
 * 
     * Normalizes the document
     * @link https://php.net/manual/zh/domdocument.normalizedocument.php
     * @return void
     */
    #[TentativeType]
    public function normalizeDocument(): void {}

    /**
     * @param DOMNode $node
     * @param $namespace
     * @param $qualifiedName
     */
    public function renameNode(DOMNode $node, $namespace, $qualifiedName) {}

    /**
 * <div id="domdocument.load" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::load</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::load</span> — <span class="dc-title">   Load XML from a file  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.load-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::load</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Loads an XML document from a file.   </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    Unix style paths with forward slashes can cause significant performance    degradation on Windows systems; be sure to call <span class="function">{@link realpath()}</span>    in such a case.   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-domdocument.load-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The path to the XML document.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       <a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">Bitwise <span class="literal">OR</span></a>       of the <a href="https://php.net/manual/zh/libxml.constants.php" class="link">libxml option constants</a>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.load-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.load-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If an empty string is passed as the <span class="parameter" style="color:#3A95FF">filename</span>   or an empty file is named, a warning will be generated. This warning   is not generated by libxml and cannot be handled using libxml's error   handling functions.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.load-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       This function now has a tentative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> return type.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Calling this function statically will       now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.       Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.load-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5748">    <p><strong>示例 #1 Creating a Document</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.load-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadXML()} - Load XML from a string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::save()} - Dumps the internal XML tree back into a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveXML()} - Dumps the internal XML tree back into a string</span></li>   </ul>   </div></div>
 * 
     * Load XML from a file
     * @link https://php.net/manual/zh/domdocument.load.php
     * @param string $filename <p>
     * The path to the XML document.
     * </p>
     * @param int $options [optional] <p>
     * Bitwise OR
     * of the libxml option constants.
     * </p>
     * @return DOMDocument|bool true on success or false on failure. Prior to PHP 8.3 if called statically, returns a
     * DOMDocument and issues E_STRICT
     * warning.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: 'DOMDocument|bool')]
    public function load(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0
    ) {}

    /**
 * <div id="domdocument.save" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::save</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::save</span> — <span class="dc-title">    Dumps the internal XML tree back into a file  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.save-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::save</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates an XML document from the DOM representation. This function is usually    called after building a new dom document from scratch as in the example below.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.save-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The path to the saved XML document.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       Additional Options. Currently only <a href="https://php.net/manual/zh/libxml.constants.php" class="link">LIBXML_NOEMPTYTAG</a> is supported.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.save-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of bytes written or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.save-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5758">    <p><strong>示例 #1 Saving a DOM tree into a file</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// we want a nice output<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'book'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$title</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createTextNode</span><span style="color: #007700">(</span><span style="color: #DD0000">'This is the title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$title</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$text</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">'Wrote: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">save</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/test.xml"</span><span style="color: #007700">) . </span><span style="color: #DD0000">' bytes'</span><span style="color: #007700">; </span><span style="color: #FF8000">// Wrote: 72 bytes<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.save-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveXML()} - Dumps the internal XML tree back into a string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::load()} - Load XML from a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadXML()} - Load XML from a string</span></li>   </ul>   </div></div>
 * 
     * Dumps the internal XML tree back into a file
     * @link https://php.net/manual/zh/domdocument.save.php
     * @param string $filename <p>
     * The path to the saved XML document.
     * </p>
     * @param int $options [optional] <p>
     * Additional Options. Currently only LIBXML_NOEMPTYTAG is supported.
     * </p>
     * @return int|false the number of bytes written or false if an error occurred.
     */
    public function save($filename, $options = null) {}

    /**
 * <div id="domdocument.loadxml" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::loadXML</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::loadXML</span> — <span class="dc-title">   Load XML from a string  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.loadxml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::loadXML</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Loads an XML document from a string.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.loadxml-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">source</span></dt>     <dd>      <p class="para">       The string containing the XML.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       <a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">Bitwise <span class="literal">OR</span></a>       of the <a href="https://php.net/manual/zh/libxml.constants.php" class="link">libxml option constants</a>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.loadxml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.loadxml-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If an empty string is passed as the <span class="parameter" style="color:#3A95FF">source</span>,   a warning will be generated. This warning is not generated by libxml   and cannot be handled using libxml's error handling functions.  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.loadxml-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       This function now has a tentative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> return type.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Calling this function statically will       now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.       Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.loadxml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5751">    <p><strong>示例 #1 Creating a Document</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;root&gt;&lt;node/&gt;&lt;/root&gt;'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.loadxml-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::load()} - Load XML from a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::save()} - Dumps the internal XML tree back into a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveXML()} - Dumps the internal XML tree back into a string</span></li>   </ul>   </div></div>
 * 
     * Load XML from a string
     * @link https://php.net/manual/zh/domdocument.loadxml.php
     * @param string $source <p>
     * The string containing the XML.
     * </p>
     * @param int $options [optional] <p>
     * Bitwise OR
     * of the libxml option constants.
     * </p>
     * @return DOMDocument|bool true on success or false on failure. Prior to PHP 8.3 if called statically, returns a
     * DOMDocument and issues E_STRICT
     * warning.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: 'DOMDocument|bool')]
    public function loadXML(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $source,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0
    ) {}

    /**
 * <div id="domdocument.savexml" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::saveXML</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::saveXML</span> — <span class="dc-title">   Dumps the internal XML tree back into a string  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.savexml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::saveXML</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$node</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates an XML document from the DOM representation. This function is usually    called after building a new dom document from scratch as in the example below.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.savexml-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       Use this parameter to output only a specific node without XML declaration       rather than the entire document.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <span class="simpara"> Additional Options. The <strong><span><a href="https://php.net/manual/zh/libxml.constants.php#constant.libxml-noemptytag">LIBXML_NOEMPTYTAG</a></span></strong> and <strong><span><a href="https://php.net/manual/zh/libxml.constants.php#constant.libxml-noxmldecl">LIBXML_NOXMLDECL</a></span></strong> options are supported. Prior to PHP 8.3.0, only the <strong><span><a href="https://php.net/manual/zh/libxml.constants.php#constant.libxml-noemptytag">LIBXML_NOEMPTYTAG</a></span></strong> option is supported.</span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.savexml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the XML, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.savexml-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">node</span> is from another document.      </p>     </dd>       </dl>   </div> <div class="refsect1 changelog" id="refsect1-domdocument.savexml-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       <a href="https://php.net/manual/zh/libxml.constants.php" class="link">LIBXML_NOXMLDECL</a> is now supported.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.savexml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5761">    <p><strong>示例 #1 Saving a DOM tree into a string</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// we want a nice output<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'book'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$title</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createTextNode</span><span style="color: #007700">(</span><span style="color: #DD0000">'This is the title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$title</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$text</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Saving all the document:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"Saving only the title part:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$title</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Saving&nbsp;all&nbsp;the&nbsp;document:<br><?xml &nbsp;version="1.0"?><br><book><br>&nbsp;&nbsp;<title>This&nbsp;is&nbsp;the&nbsp;title</title><br></book><br><br>Saving&nbsp;only&nbsp;the&nbsp;title&nbsp;part:<br><title>This&nbsp;is&nbsp;the&nbsp;title</title></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.savexml-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::save()} - Dumps the internal XML tree back into a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::load()} - Load XML from a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadXML()} - Load XML from a string</span></li>   </ul>   </div></div>
 * 
     * Dumps the internal XML tree back into a string
     * @link https://php.net/manual/zh/domdocument.savexml.php
     * @param null|DOMNode $node [optional] <p>
     * Use this parameter to output only a specific node without XML declaration
     * rather than the entire document.
     * </p>
     * @param int $options [optional] <p>
     * Additional Options. Currently only LIBXML_NOEMPTYTAG is supported.
     * </p>
     * @return string|false the XML, or false if an error occurred.
     */
    #[TentativeType]
    public function saveXML(
        #[LanguageLevelTypeAware(['7.1' => 'DOMNode|null'], default: '')] $node = null,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0
    ): string|false {}

    /**
     * Creates a new DOMDocument object
     * @link https://php.net/manual/en/domdocument.construct.php
     * @param string $version [optional] The version number of the document as part of the XML declaration.
     * @param string $encoding [optional] The encoding of the document as part of the XML declaration.
     */
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $version = '1.0',
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $encoding = ''
    ) {}

    /**
 * <div id="domdocument.validate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::validate</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::validate</span> — <span class="dc-title">   Validates the document based on its DTD  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.validate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::validate</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Validates the document based on its DTD.   </p>  <p class="para">   You can also use the <span class="literal">validateOnParse</span> property of    <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> to make a DTD validation.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.validate-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domdocument.validate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   If the document has no DTD attached, this method will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.validate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5762">    <p><strong>示例 #1 Example of DTD validation</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">validate</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">"This document is valid!\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>     You can also validate your XML file while loading it:    </p></div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">validateOnParse </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.validate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidate()} - Validates a document based on a schema. Only XML Schema 1.0 is supported.</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidateSource()} - Validates a document based on a schema</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidate()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidateSource()} - Performs relaxNG validation on the document</span></li>   </ul>   </div></div>
 * 
     * Validates the document based on its DTD
     * @link https://php.net/manual/zh/domdocument.validate.php
     * @return bool true on success or false on failure.
     * If the document have no DTD attached, this method will return false.
     */
    #[TentativeType]
    public function validate(): bool {}

    /**
 * <div id="domdocument.xinclude" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::xinclude</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::xinclude</span> — <span class="dc-title">   Substitutes XIncludes in a DOMDocument Object  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.xinclude-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::xinclude</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   This method substitutes <a href="http://www.w3.org/TR/xinclude/" class="link external">»&nbsp;XIncludes</a> in a DOMDocument object.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Due to libxml2 automatically resolving entities, this method will produce    unexpected results if the included XML file have an attached DTD.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-domdocument.xinclude-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">  <a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">Bitwise <span class="literal">OR</span></a>  of the <a href="https://php.net/manual/zh/libxml.constants.php" class="link">libxml option constants</a>.</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.xinclude-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of XIncludes in the document, -1 if some processing failed,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if there were no substitutions.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.xinclude-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5763">    <p><strong>示例 #1 DOMDocument::xinclude() example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000">&lt;?xml version="1.0" ?&gt;<br>&lt;chapter xmlns:xi="http://www.w3.org/2001/XInclude"&gt;<br> &lt;title&gt;Books of the other guy..&lt;/title&gt;<br> &lt;para&gt;<br>  &lt;xi:include href="examples/book.xml"&gt;<br>   &lt;xi:fallback&gt;<br>    &lt;error&gt;xinclude: book.xml not found&lt;/error&gt;<br>   &lt;/xi:fallback&gt;<br>  &lt;/xi:include&gt;<br> &lt;/para&gt;<br>&lt;/chapter&gt;<br></span><span style="color: #007700">EOD;<br><br></span><span style="color: #9876AA">\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// let's have a nice output<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">preserveWhiteSpace </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// load the XML string defined above<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// substitute xincludes<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">xinclude</span><span style="color: #007700">();<br><br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><chapter><br>&nbsp;&nbsp;<title>Books&nbsp;of&nbsp;the&nbsp;other&nbsp;guy..</title><br>&nbsp;&nbsp;<para><br>&nbsp;&nbsp;&nbsp;&nbsp;<row><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>The&nbsp;Grapes&nbsp;of&nbsp;Wrath</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>John&nbsp;Steinbeck</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>en</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>0140186409</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</row><br>&nbsp;&nbsp;&nbsp;&nbsp;<row><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>The&nbsp;Pearl</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>John&nbsp;Steinbeck</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>en</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>014017737X</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</row><br>&nbsp;&nbsp;&nbsp;&nbsp;<row><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>Samarcande</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>Amine&nbsp;Maalouf</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>fr</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<entry>2253051209</entry><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</row><br>&nbsp;&nbsp;</para><br></chapter></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Substitutes XIncludes in a DOMDocument Object
     * @link https://php.net/manual/zh/domdocument.xinclude.php
     * @param int $options [optional] <p>
     * libxml parameters. Available
     * since PHP 5.1.0 and Libxml 2.6.7.
     * </p>
     * @return int|false the number of XIncludes in the document.
     */
    #[TentativeType]
    public function xinclude(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0): int|false {}

    /**
 * <div id="domdocument.loadhtml" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::loadHTML</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::loadHTML</span> — <span class="dc-title">   Load HTML from a string  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.loadhtml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::loadHTML</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The function parses the HTML contained in the string <span class="parameter" style="color:#3A95FF">source</span>.   Unlike loading XML, HTML does not have to be well-formed to load.  </p>  <div class="warning"><strong class="warning">警告</strong> <p class="simpara">  使用 <span class="classname"><a href="https://php.net/manual/zh/class.dom-htmldocument.php" class="classname">Dom\HTMLDocument</a></span> 来解析和处理现代 HTML  而不是 <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>。 </p> <p class="simpara">  此函数使用 HTML 4 解析器解析输入。这跟现代 Web 浏览器使用的 HTML 5 的解析规则有所不同。根据输入，这可能会导致不同的  DOM 结构。因此，此函数不能安全地用于清理 HTML。 </p> <p class="simpara">  解析 HTML 时的行为取决于所使用的 <span class="literal">libxml</span> 版本，尤其是边缘条件和错误处理方面。对于符合  HTML5 规范的解析，请使用 PHP 8.4 中添加的 <span class="methodname" style="color:#CC7832">{@link Dom\HTMLDocument::createFromString()}</span>  或 <span class="methodname" style="color:#CC7832">{@link Dom\HTMLDocument::createFromFile()}</span>。 </p> <p class="simpara">  例如，某些 HTML 元素在遇到父元素时会默默关闭。HTML 4 和 HTML 5 中自动关闭父元素的规则不同，因此 <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>  看到的最终 DOM 结构可能与 Web 浏览器看到的 DOM 结构不同，这可能使攻击者能够破坏最终的 HTML。 </p></div> </div> <div class="refsect1 parameters" id="refsect1-domdocument.loadhtml-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">source</span></dt>     <dd>      <p class="para">       The HTML string.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">  <a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">Bitwise <span class="literal">OR</span></a>  of the <a href="https://php.net/manual/zh/libxml.constants.php" class="link">libxml option constants</a>.</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.loadhtml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.loadhtml-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If an empty string is passed as the <span class="parameter" style="color:#3A95FF">source</span>,   a warning will be generated. This warning is not generated by libxml   and cannot be handled using libxml's error handling functions.  </p>  <p class="para">尽管非正确格式化的 HTML 仍应该被成功调入，但此函数会在遇到错误标记时产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 错误。{@link libxml 错误处理函数}可以用来处理这类错误。</p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.loadhtml-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       This function now has a tentative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> return type.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Calling this function statically will       now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.       Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.loadhtml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5749">    <p><strong>示例 #1 Creating a Document</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadHTML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;html&gt;&lt;body&gt;Test&lt;br&gt;&lt;/body&gt;&lt;/html&gt;"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveHTML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.loadhtml-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTMLFile()} - Load HTML from a file</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTML()} - Dumps the internal document into a string using HTML formatting</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTMLFile()} - Dumps the internal document into a file using HTML formatting</span></li>   </ul>   </div></div>
 * 
     * Load HTML from a string
     * @link https://php.net/manual/zh/domdocument.loadhtml.php
     * @param string $source <p>
     * The HTML string.
     * </p>
     * @param int $options [optional] <p>
     * Since PHP 5.4.0 and Libxml 2.6.0, you may also
     * use the options parameter to specify additional Libxml parameters.
     * </p>
     * @return DOMDocument|bool true on success or false on failure. Prior to PHP 8.3 if called statically, returns a
     * DOMDocument and issues E_STRICT
     * warning.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: 'DOMDocument|bool')]
    public function loadHTML(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $source,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0
    ) {}

    /**
 * <div id="domdocument.loadhtmlfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::loadHTMLFile</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::loadHTMLFile</span> — <span class="dc-title">   Load HTML from a file  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.loadhtmlfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::loadHTMLFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The function parses the HTML document in the file named   <span class="parameter" style="color:#3A95FF">filename</span>. Unlike loading XML, HTML does not have   to be well-formed to load.  </p>  <div class="warning"><strong class="warning">警告</strong> <p class="simpara">  使用 <span class="classname"><a href="https://php.net/manual/zh/class.dom-htmldocument.php" class="classname">Dom\HTMLDocument</a></span> 来解析和处理现代 HTML  而不是 <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>。 </p> <p class="simpara">  此函数使用 HTML 4 解析器解析输入。这跟现代 Web 浏览器使用的 HTML 5 的解析规则有所不同。根据输入，这可能会导致不同的  DOM 结构。因此，此函数不能安全地用于清理 HTML。 </p> <p class="simpara">  解析 HTML 时的行为取决于所使用的 <span class="literal">libxml</span> 版本，尤其是边缘条件和错误处理方面。对于符合  HTML5 规范的解析，请使用 PHP 8.4 中添加的 <span class="methodname" style="color:#CC7832">{@link Dom\HTMLDocument::createFromString()}</span>  或 <span class="methodname" style="color:#CC7832">{@link Dom\HTMLDocument::createFromFile()}</span>。 </p> <p class="simpara">  例如，某些 HTML 元素在遇到父元素时会默默关闭。HTML 4 和 HTML 5 中自动关闭父元素的规则不同，因此 <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>  看到的最终 DOM 结构可能与 Web 浏览器看到的 DOM 结构不同，这可能使攻击者能够破坏最终的 HTML。 </p></div> </div> <div class="refsect1 parameters" id="refsect1-domdocument.loadhtmlfile-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The path to the HTML file.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">  <a href="https://php.net/manual/zh/language.operators.bitwise.php" class="link">Bitwise <span class="literal">OR</span></a>  of the <a href="https://php.net/manual/zh/libxml.constants.php" class="link">libxml option constants</a>.</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.loadhtmlfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domdocument.loadhtmlfile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If an empty string is passed as the <span class="parameter" style="color:#3A95FF">filename</span>   or an empty file is named, a warning will be generated. This warning   is not generated by libxml and cannot be handled using {@link libxml's error handling   functions}.  </p>  <p class="para">尽管非正确格式化的 HTML 仍应该被成功调入，但此函数会在遇到错误标记时产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 错误。{@link libxml 错误处理函数}可以用来处理这类错误。</p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.loadhtmlfile-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       This function now has a tentative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> return type.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Calling this function statically will       now throw an <span class="classname"><a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a></span>.       Previously, an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></span></strong> was raised.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.loadhtmlfile-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5750">    <p><strong>示例 #1 Creating a Document</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadHTMLFile</span><span style="color: #007700">(</span><span style="color: #DD0000">"filename.html"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveHTML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.loadhtmlfile-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTML()} - Load HTML from a string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTML()} - Dumps the internal document into a string using HTML formatting</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTMLFile()} - Dumps the internal document into a file using HTML formatting</span></li>   </ul>   </div></div>
 * 
     * Load HTML from a file
     * @link https://php.net/manual/zh/domdocument.loadhtmlfile.php
     * @param string $filename <p>
     * The path to the HTML file.
     * </p>
     * @param int $options [optional] <p>
     * Since PHP 5.4.0 and Libxml 2.6.0, you may also
     * use the options parameter to specify additional Libxml parameters.
     * </p>
     * @return DOMDocument|bool true on success or false on failure. Prior to PHP 8.3 if called statically, returns a
     * DOMDocument and issues E_STRICT
     * warning.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: 'DOMDocument|bool')]
    public function loadHTMLFile(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = 0
    ) {}

    /**
 * <div id="domdocument.savehtml" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::saveHTML</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::saveHTML</span> — <span class="dc-title">   Dumps the internal document into a string using HTML formatting  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.savehtml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::saveHTML</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$node</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates an HTML document from the DOM representation. This function is usually    called after building a new dom document from scratch as in the example below.   </p> </div>  <div class="refsect1 parameters" id="refsect1-domdocument.savehtml-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">node</span></dt>     <dd>      <p class="para">       Optional parameter to output a subset of the document.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-domdocument.savehtml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the HTML, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div>  <div class="refsect1 examples" id="refsect1-domdocument.savehtml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5759">    <p><strong>示例 #1 Saving a HTML tree into a string</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'html'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$head </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'head'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$head </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$head</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$head</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$title</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createTextNode</span><span style="color: #007700">(</span><span style="color: #DD0000">'This is the title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$title</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$text</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveHTML</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.savehtml-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTMLFile()} - Dumps the internal document into a file using HTML formatting</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTML()} - Load HTML from a string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTMLFile()} - Load HTML from a file</span></li>   </ul>   </div></div>
 * 
     * Dumps the internal document into a string using HTML formatting
     * @link https://php.net/manual/zh/domdocument.savehtml.php
     * @param null|DOMNode $node [optional] parameter to output a subset of the document.
     * @return string|false The HTML, or false if an error occurred.
     */
    public function saveHTML(DOMNode $node = null) {}

    /**
 * <div id="domdocument.savehtmlfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::saveHTMLFile</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::saveHTMLFile</span> — <span class="dc-title">   Dumps the internal document into a file using HTML formatting  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.savehtmlfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::saveHTMLFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Creates an HTML document from the DOM representation. This function is usually    called after building a new dom document from scratch as in the example below.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.savehtmlfile-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The path to the saved HTML document.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.savehtmlfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of bytes written or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 examples" id="refsect1-domdocument.savehtmlfile-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5760">    <p><strong>示例 #1 Saving a HTML tree into a file</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.0'</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// we want a nice output<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatOutput </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'html'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$root</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$head </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'head'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$head </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$head</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$title </span><span style="color: #007700">= </span><span style="color: #9876AA">\$head</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$title</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createTextNode</span><span style="color: #007700">(</span><span style="color: #DD0000">'This is the title'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$text </span><span style="color: #007700">= </span><span style="color: #9876AA">\$title</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$text</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">'Wrote: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveHTMLFile</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/test.html"</span><span style="color: #007700">) . </span><span style="color: #DD0000">' bytes'</span><span style="color: #007700">; </span><span style="color: #FF8000">// Wrote: 129 bytes<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domdocument.savehtmlfile-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::saveHTML()} - Dumps the internal document into a string using HTML formatting</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTML()} - Load HTML from a string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::loadHTMLFile()} - Load HTML from a file</span></li>   </ul>   </div></div>
 * 
     * Dumps the internal document into a file using HTML formatting
     * @link https://php.net/manual/zh/domdocument.savehtmlfile.php
     * @param string $filename <p>
     * The path to the saved HTML document.
     * </p>
     * @return int|false the number of bytes written or false if an error occurred.
     */
    #[TentativeType]
    public function saveHTMLFile(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename): int|false {}

    /**
 * <div id="domdocument.schemavalidate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::schemaValidate</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::schemaValidate</span> — <span class="dc-title">   Validates a document based on a schema. Only XML Schema 1.0 is supported.  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.schemavalidate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::schemaValidate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Validates a document based on the given schema file.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.schemavalidate-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The path to the schema.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       A bitmask of Libxml schema validation flags. Currently the only supported value is <a href="https://php.net/manual/zh/libxml.constants.php" class="link">LIBXML_SCHEMA_CREATE</a>. Available since Libxml 2.6.14.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.schemavalidate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.schemavalidate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidateSource()} - Validates a document based on a schema</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidate()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidateSource()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::validate()} - Validates the document based on its DTD</span></li>   </ul>   </div></div>
 * 
     * Validates a document based on a schema
     * @link https://php.net/manual/zh/domdocument.schemavalidate.php
     * @param string $filename <p>
     * The path to the schema.
     * </p>
     * @param int $options [optional] <p>
     * Bitwise OR
     * of the libxml option constants.
     * </p>
     * @return bool true on success or false on failure.
     */
    public function schemaValidate($filename, $options = null) {}

    /**
 * <div id="domdocument.schemavalidatesource" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::schemaValidateSource</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::schemaValidateSource</span> — <span class="dc-title">   Validates a document based on a schema  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.schemavalidatesource-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::schemaValidateSource</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Validates a document based on a schema defined in the given string.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.schemavalidatesource-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">source</span></dt>     <dd>      <p class="para">       A string containing the schema.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       A bitmask of Libxml schema validation flags. Currently the only supported value is <a href="https://php.net/manual/zh/libxml.constants.php" class="link">LIBXML_SCHEMA_CREATE</a>. Available since Libxml 2.6.14.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.schemavalidatesource-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.schemavalidatesource-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidate()} - Validates a document based on a schema. Only XML Schema 1.0 is supported.</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidate()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidateSource()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::validate()} - Validates the document based on its DTD</span></li>   </ul>   </div></div>
 * 
     * Validates a document based on a schema
     * @link https://php.net/manual/zh/domdocument.schemavalidatesource.php
     * @param string $source <p>
     * A string containing the schema.
     * </p>
     * @param int $flags [optional] <p>A bitmask of Libxml schema validation flags. Currently the only supported value is <b>LIBXML_SCHEMA_CREATE</b>.
     * Available since PHP 5.5.2 and Libxml 2.6.14.</p>
     * @return bool true on success or false on failure.
     */
    public function schemaValidateSource($source, $flags) {}

    /**
 * <div id="domdocument.relaxngvalidate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::relaxNGValidate</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::relaxNGValidate</span> — <span class="dc-title">   Performs relaxNG validation on the document  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.relaxngvalidate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::relaxNGValidate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Performs <a href="http://www.relaxng.org/" class="link external">»&nbsp;relaxNG</a> validation on the document   based on the given RNG schema.   </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.relaxngvalidate-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The RNG file.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.relaxngvalidate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.relaxngvalidate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidateSource()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidate()} - Validates a document based on a schema. Only XML Schema 1.0 is supported.</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidateSource()} - Validates a document based on a schema</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::validate()} - Validates the document based on its DTD</span></li>   </ul>   </div></div>
 * 
     * Performs relaxNG validation on the document
     * @link https://php.net/manual/zh/domdocument.relaxngvalidate.php
     * @param string $filename <p>
     * The RNG file.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function relaxNGValidate(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename): bool {}

    /**
 * <div id="domdocument.relaxngvalidatesource" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::relaxNGValidateSource</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::relaxNGValidateSource</span> — <span class="dc-title">   Performs relaxNG validation on the document  </span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.relaxngvalidatesource-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::relaxNGValidateSource</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Performs <a href="http://www.relaxng.org/" class="link external">»&nbsp;relaxNG</a> validation on the document   based on the given RNG source.  </p> </div> <div class="refsect1 parameters" id="refsect1-domdocument.relaxngvalidatesource-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">source</span></dt>     <dd>      <p class="para">       A string containing the RNG schema.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.relaxngvalidatesource-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domdocument.relaxngvalidatesource-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::relaxNGValidate()} - Performs relaxNG validation on the document</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidate()} - Validates a document based on a schema. Only XML Schema 1.0 is supported.</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::schemaValidateSource()} - Validates a document based on a schema</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::validate()} - Validates the document based on its DTD</span></li>   </ul>   </div></div>
 * 
     * Performs relaxNG validation on the document
     * @link https://php.net/manual/zh/domdocument.relaxngvalidatesource.php
     * @param string $source <p>
     * A string containing the RNG schema.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function relaxNGValidateSource(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $source): bool {}

    /**
 * <div id="domdocument.registernodeclass" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMDocument::registerNodeClass</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMDocument::registerNodeClass</span> — <span class="dc-title">Register extended class used to create base node type</span></p> </div> <div class="refsect1 description" id="refsect1-domdocument.registernodeclass-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMDocument::registerNodeClass</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$baseClass</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$extendedClass</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   This method allows you to register your own extended DOM class to be used   afterward by the PHP DOM extension.  </p>  <p class="para">   This method is not part of the DOM standard.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="simpara">    The constructor of the objects of the registered node classes is not called.   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-domdocument.registernodeclass-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">baseClass</span></dt>     <dd>      <p class="para">       The DOM class that you want to extend. You can find a list of these        classes in the <a href="https://php.net/manual/zh/book.dom.php" class="link">chapter introduction</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">extendedClass</span></dt>     <dd>      <p class="para">       Your extended class name. If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> is provided, any previously        registered class extending <span class="parameter" style="color:#3A95FF">baseClass</span> will       be removed.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domdocument.registernodeclass-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-domdocument.registernodeclass-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="methodname" style="color:#CC7832"><strong>DOMDocument::registerNodeClass()</strong></span>       now has a tentative return of <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domdocument.registernodeclass-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5753">    <p><strong>示例 #1 Adding a new method to DOMElement to ease our code</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">myElement </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMElement </span><span style="color: #007700">{<br>   function </span><span style="color: #9876AA">appendElement</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">) { <br>      return </span><span style="color: #9876AA">\$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(new </span><span style="color: #9876AA">myElement</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">));<br>   }<br>}<br><br>class </span><span style="color: #9876AA">myDocument </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMDocument </span><span style="color: #007700">{<br>   function </span><span style="color: #9876AA">setRoot</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">) { <br>      return </span><span style="color: #9876AA">\$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(new </span><span style="color: #9876AA">myElement</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">));<br>   }<br>}<br><br></span><span style="color: #9876AA">\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">myDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNodeClass</span><span style="color: #007700">(</span><span style="color: #DD0000">'DOMElement'</span><span style="color: #007700">, </span><span style="color: #DD0000">'myElement'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// From now on, adding an element to another costs only one method call ! <br></span><span style="color: #9876AA">\$root </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRoot</span><span style="color: #007700">(</span><span style="color: #DD0000">'root'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$child </span><span style="color: #007700">= </span><span style="color: #9876AA">\$root</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'child'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$child</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttribute</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><root><child></child></root></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5754">    <p><strong>示例 #2 Retrieving elements as custom class</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">myElement </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMElement </span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">__toString</span><span style="color: #007700">() {<br>        return </span><span style="color: #9876AA">\$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root&gt;&lt;element&gt;&lt;child&gt;text in child&lt;/child&gt;&lt;/element&gt;&lt;/root&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNodeClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"DOMElement"</span><span style="color: #007700">, </span><span style="color: #DD0000">"myElement"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$element </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"child"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$element</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// And take advantage of the __toString method..<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$element</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">string(9)&nbsp;"myElement"<br>text&nbsp;in&nbsp;child</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5755">    <p><strong>示例 #3 Retrieving owner document</strong></p>    <div class="example-contents"><p>     When instantiating a custom <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> the     <var class="varname">ownerDocument</var> property will refer to the instantiated     class. However, if all references to that class are removed, it     will be destroyed and new <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> will be     created instead. For that reason you might use     <span class="function"><strong>DOMDocument::registerNodeClass()</strong></span> with     <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>    </p></div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">MyDOMDocument </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMDocument </span><span style="color: #007700">{<br>}<br><br>class </span><span style="color: #9876AA">MyOtherDOMDocument </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMDocument </span><span style="color: #007700">{<br>}<br><br></span><span style="color: #FF8000">// Create MyDOMDocument with some XML<br></span><span style="color: #9876AA">\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">MyDOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root&gt;&lt;element&gt;&lt;child&gt;text in child&lt;/child&gt;&lt;/element&gt;&lt;/root&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$child </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"child"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// The current owner of the node is MyDOMDocument<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ownerDocument</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// MyDOMDocument is destroyed<br></span><span style="color: #007700">unset(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// And new DOMDocument instance is created<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ownerDocument</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Import a node from MyDOMDocument<br></span><span style="color: #9876AA">\$newdoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">MyOtherDOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$child </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importNode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register custom DOMDocument<br></span><span style="color: #9876AA">\$newdoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNodeClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"DOMDocument"</span><span style="color: #007700">, </span><span style="color: #DD0000">"MyOtherDOMDocument"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ownerDocument</span><span style="color: #007700">));<br>unset(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// New MyOtherDOMDocument is created<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$child</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ownerDocument</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">string(13)&nbsp;"MyDOMDocument"<br>string(11)&nbsp;"DOMDocument"<br>string(18)&nbsp;"MyOtherDOMDocument"<br>string(18)&nbsp;"MyOtherDOMDocument"</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="domdocument.registernodeclass.example.transient">    <p><strong>示例 #4 Custom objects are transient</strong></p>    <div class="caution"><strong class="caution">警告</strong>     <p class="simpara">      Objects of the registered node classes are transient, i.e. they are      destroyed when they are no longer referenced from PHP code, and recreated      when being retrieved again. That implies that custom property values will be      lost after recreation.     </p>    </div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">MyDOMElement </span><span style="color: #007700">extends </span><span style="color: #9876AA">DOMElement<br></span><span style="color: #007700">{<br>    public </span><span style="color: #9876AA">\$myProp </span><span style="color: #007700">= </span><span style="color: #DD0000">'default value'</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNodeClass</span><span style="color: #007700">(</span><span style="color: #DD0000">'DOMElement'</span><span style="color: #007700">, </span><span style="color: #DD0000">'MyDOMElement'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$node </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'a'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">myProp </span><span style="color: #007700">= </span><span style="color: #DD0000">'modified value'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">childNodes</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">myProp</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>unset(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">childNodes</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">myProp</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">modified&nbsp;value<br>default&nbsp;value</blockquote></div>    </div>   </div>   </div></div>
 * 
     * Register extended class used to create base node type
     * @link https://php.net/manual/zh/domdocument.registernodeclass.php
     * @param string $baseClass <p>
     * The DOM class that you want to extend. You can find a list of these
     * classes in the chapter introduction.
     * </p>
     * @param string $extendedClass <p>
     * Your extended class name. If null is provided, any previously
     * registered class extending baseclass will
     * be removed.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'true'], default: 'bool')]
    public function registerNodeClass(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $baseClass,
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $extendedClass
    ) {}
}

/**
 * <div id="class.domnodelist" class="reference"> <h1 class="title">The DOMNodeList class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domnodelist.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Represents a live list of nodes.   </p>  </div>   <div class="section" id="domnodelist.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMNodeList</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a>,     <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnodelist.php#domnodelist.props.length">\$<var class="varname">length</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnodelist.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnodelist.getiterator.php" class="methodname" style="color:#CC7832">getIterator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnodelist.item.php" class="methodname" style="color:#CC7832">item</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>   }</div>   </div>   <div class="section" id="domnodelist.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domnodelist.props.length"><var class="varname">length</var></dt>     <dd>      <p class="para">       The number of nodes in the list. The range of valid child node        indices is 0 to <span class="literal">length - 1</span> inclusive.      </p>     </dd>       </dl>  </div>  <div class="section" id="domnodelist.changelog">   <h2 class="title">更新日志</h2>   <p class="para">    </p><table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.0.0</td>        <td>         <span class="classname"><strong class="classname">DOMNodeList</strong></span> implements         <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span> now.         Previously, <span class="interfacename"><a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span> was implemented instead.        </td>       </tr>       <tr>        <td>7.2.0</td>        <td>         The <span class="classname"><a href="https://php.net/manual/zh/class.countable.php" class="classname">Countable</a></span> interface is implemented and          returns the value of the <a href="https://php.net/manual/zh/class.domnodelist.php#domnodelist.props.length" class="link">length</a> property.        </td>       </tr>      </tbody>         </table>     </div>  <div class="section">   <h2 class="title">注释</h2>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">      Nodes in the list can be accessed by array syntax.    </span>   </p></blockquote>  </div>   <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-536297177" class="link external">»&nbsp;W3C specification of NodeList</a></li>    </ul>     </div>   </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMNodeList::count} — Get number of nodes in the list</li><li>{@link DOMNodeList::getIterator} — Retrieve an external iterator</li><li>{@link DOMNodeList::item} — Retrieves a node specified by index</li></ul></div>
 * 
 * The DOMNodeList class
 * @link https://php.net/manual/zh/class.domnodelist.php
 *
 * @template-covariant TNode of DOMNode|DOMNameSpaceNode
 * @implements IteratorAggregate<int, TNode>
 */
class DOMNodeList implements IteratorAggregate, Countable
{
    /**
     * @var int
     * The number of nodes in the list. The range of valid child node indices is 0 to length - 1 inclusive.
     * @link https://php.net/manual/en/class.domnodelist.php#domnodelist.props.length
     */
    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    #[Immutable]
    public $length;

    /**
 * <div id="domnodelist.item" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNodeList::item</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNodeList::item</span> — <span class="dc-title">   Retrieves a node specified by index  </span></p> </div> <div class="refsect1 description" id="refsect1-domnodelist.item-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNodeList::item</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Retrieves a node specified by <span class="parameter" style="color:#3A95FF">index</span> within the    <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> object.  </p>  <div class="tip"><strong class="tip">小技巧</strong>   <p class="para">    If you need to know the number of nodes in the collection, use     the <span class="literal">length</span> property of the     <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> object.   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-domnodelist.item-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       Index of the node into the collection.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnodelist.item-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The node at the <span class="parameter" style="color:#3A95FF">index</span>th position in the    <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if that is not a valid   index.  </p> </div> <div class="refsect1 examples" id="refsect1-domnodelist.item-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5796">    <p><strong>示例 #1 Traversing all the entries of the table</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$items </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'entry'</span><span style="color: #007700">);<br><br>for (</span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$items</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">length</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i</span><span style="color: #007700">++) {<br>    echo </span><span style="color: #9876AA">\$items</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">\$i</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-5797">    <p><strong>示例 #2 Accessing item with array syntax</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$items </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'entry'</span><span style="color: #007700">);<br><br>for (</span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$items</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">length</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i</span><span style="color: #007700">++) {<br>    echo </span><span style="color: #9876AA">\$items</span><span style="color: #007700">[</span><span style="color: #9876AA">\$i</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">nodeValue </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-5798">    <p><strong>示例 #3 Traversing items with <a href="https://php.net/manual/zh/control-structures.foreach.php" class="link"><span class="literal">foreach</span></a></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$items </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'entry'</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$items </span><span style="color: #007700">as </span><span style="color: #9876AA">\$item</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$item</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Title<br>Author<br>Language<br>ISBN<br>The&nbsp;Grapes&nbsp;of&nbsp;Wrath<br>John&nbsp;Steinbeck<br>en<br>0140186409<br>The&nbsp;Pearl<br>John&nbsp;Steinbeck<br>en<br>014017737X<br>Samarcande<br>Amine&nbsp;Maalouf<br>fr<br>2253051209</blockquote></div>    </div>   </div>   </div></div>
 * 
     * Retrieves a node specified by index
     * @link https://php.net/manual/zh/domnodelist.item.php
     * @param int $index <p>
     * Index of the node into the collection.
     * The range of valid child node indices is 0 to length - 1 inclusive.
     * </p>
     * @return TNode|null The node at the indexth position in the
     * DOMNodeList, or null if that is not a valid
     * index.
     */
    public function item(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $index) {}

    /**
 * <div id="domnodelist.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNodeList::count</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNodeList::count</span> — <span class="dc-title">Get number of nodes in the list</span></p> </div> <div class="refsect1 description" id="refsect1-domnodelist.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNodeList::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the number of nodes in the list.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnodelist.count-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnodelist.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of nodes in the list, which is identical to the   <a href="https://php.net/manual/zh/class.domnodelist.php#domnodelist.props.length" class="link">length</a> property.  </p> </div> </div>
 * 
     * @return int<0, max>
     * @since 7.2
     */
    #[TentativeType]
    public function count(): int {}

    /**
 * <div id="domnodelist.getiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNodeList::getIterator</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMNodeList::getIterator</span> — <span class="dc-title">Retrieve an external iterator</span></p> </div> <div class="refsect1 description" id="refsect1-domnodelist.getiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNodeList::getIterator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span></div>  <p class="para rdfs-comment">   Returns an external iterator for the node list.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnodelist.getiterator-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnodelist.getiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   实现了 <span class="classname"><a href="https://php.net/manual/zh/class.iterator.php" class="classname">Iterator</a></span> 或 <span class="classname"><a href="https://php.net/manual/zh/class.traversable.php" class="classname">Traversable</a></span> 接口的类的一个实例。  </p> </div> <div class="refsect1 errors" id="refsect1-domnodelist.getiterator-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   失败时抛出 <span class="classname"><a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a></span>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnodelist.getiterator-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link IteratorAggregate::getIterator()} - 获取一个外部迭代器或可遍历对象</span></li>  </ul> </div></div>
 * 
     * @return Iterator<int, TNode>
     * @since 8.0
     */
    public function getIterator(): Iterator {}
}

/**
 * <div id="class.domnamednodemap" class="reference"> <h1 class="title">The DOMNamedNodeMap class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domnamednodemap.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMNamedNodeMap</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a>,     <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnamednodemap.php#domnamednodemap.props.length">\$<var class="varname">length</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamednodemap.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamednodemap.getiterator.php" class="methodname" style="color:#CC7832">getIterator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamednodemap.getnameditem.php" class="methodname" style="color:#CC7832">getNamedItem</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamednodemap.getnameditemns.php" class="methodname" style="color:#CC7832">getNamedItemNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domnamednodemap.item.php" class="methodname" style="color:#CC7832">item</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div>   }</div>   </div>   <div class="section" id="domnamednodemap.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domnamednodemap.props.length"><var class="varname">length</var></dt>     <dd>      <p class="para">       The number of nodes in the map. The range of valid child node        indices is <span class="literal">0</span> to <span class="literal">length - 1</span> inclusive.      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The unimplemented methods <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::setNamedItem()</strong></span>,        <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::removeNamedItem()</strong></span>,        <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::setNamedItemNS()</strong></span> and        <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::removeNamedItem()</strong></span> have been removed.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">DOMNamedNodeMap</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span> now.        Previously, <span class="interfacename"><a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span> was implemented instead.       </td>      </tr>     </tbody>       </table>  </div>  <div class="section">   <h2 class="title">注释</h2>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">      Nodes in the map can be accessed by array syntax.    </span>   </p></blockquote>  </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMNamedNodeMap::count} — Get number of nodes in the map</li><li>{@link DOMNamedNodeMap::getIterator} — Retrieve an external iterator</li><li>{@link DOMNamedNodeMap::getNamedItem} — Retrieves a node specified by name</li><li>{@link DOMNamedNodeMap::getNamedItemNS} — Retrieves a node specified by local name and namespace URI</li><li>{@link DOMNamedNodeMap::item} — Retrieves a node specified by index</li></ul></div>
 * 
 * The DOMNamedNodeMap class
 * @link https://php.net/manual/zh/class.domnamednodemap.php
 * @property-read int $length The number of nodes in the map. The range of valid child node indices is 0 to length - 1 inclusive.
 *
 * @template-covariant TNode of DOMNode
 * @implements IteratorAggregate<string, TNode>
 */
class DOMNamedNodeMap implements IteratorAggregate, Countable
{
    /**
 * <div id="domnamednodemap.getnameditem" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNamedNodeMap::getNamedItem</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNamedNodeMap::getNamedItem</span> — <span class="dc-title">   Retrieves a node specified by name  </span></p> </div> <div class="refsect1 description" id="refsect1-domnamednodemap.getnameditem-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::getNamedItem</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div>  <p class="para rdfs-comment">   Retrieves a node specified by its <span class="literal">nodeName</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnamednodemap.getnameditem-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The <span class="literal">nodeName</span> of the node to retrieve.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnamednodemap.getnameditem-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A node (of any type) with the specified <span class="literal">nodeName</span>, or    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if no node is found.  </p> </div> <div class="refsect1 examples" id="refsect1-domnamednodemap.getnameditem-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5784">   <p><strong>示例 #1 Getting an attribute on a node</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$id </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attributes</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNamedItem</span><span style="color: #007700">(</span><span style="color: #DD0000">'id'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-5785">   <p><strong>示例 #2 Accessing attribute with array syntax</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book.xml'</span><span style="color: #007700">);<br><br><br></span><span style="color: #9876AA">\$id </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nextSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">attributes</span><span style="color: #007700">[</span><span style="color: #DD0000">'id'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domnamednodemap.getnameditem-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMNamedNodeMap::getNamedItemNS()} - Retrieves a node specified by local name and namespace URI</span></li>  </ul> </div></div>
 * 
     * Retrieves a node specified by name
     * @link https://php.net/manual/zh/domnamednodemap.getnameditem.php
     * @param string $qualifiedName <p>
     * The nodeName of the node to retrieve.
     * </p>
     * @return TNode|null A node (of any type) with the specified nodeName, or
     * null if no node is found.
     */
    #[TentativeType]
    public function getNamedItem(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): ?DOMNode {}

    /**
     * @removed 8.0
     * @param DOMNode $arg
     * @return void
     */
    public function setNamedItem(DOMNode $arg) {}

    /**
     * @removed 8.0
     * @param $name [optional]
     */
    public function removeNamedItem($name) {}

    /**
 * <div id="domnamednodemap.item" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNamedNodeMap::item</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNamedNodeMap::item</span> — <span class="dc-title">Retrieves a node specified by index</span></p> </div> <div class="refsect1 description" id="refsect1-domnamednodemap.item-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::item</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div>  <p class="para rdfs-comment">   Retrieves a node specified by <span class="parameter" style="color:#3A95FF">index</span> within the    <span class="classname"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="classname">DOMNamedNodeMap</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnamednodemap.item-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       Index into this map.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnamednodemap.item-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The node at the <span class="parameter" style="color:#3A95FF">index</span>th position in the map, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>   if that is not a valid index (greater than or equal to the number of nodes    in this map).  </p> </div></div>
 * 
     * Retrieves a node specified by index
     * @link https://php.net/manual/zh/domnamednodemap.item.php
     * @param int $index <p>
     * Index into this map.
     * </p>
     * @return DOMNode|null The node at the indexth position in the map, or null
     * if that is not a valid index (greater than or equal to the number of nodes
     * in this map).
     */
    #[TentativeType]
    public function item(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] $index = 0,
        #[PhpStormStubsElementAvailable(from: '7.1')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $index
    ): ?DOMNode {}

    /**
 * <div id="domnamednodemap.getnameditemns" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNamedNodeMap::getNamedItemNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNamedNodeMap::getNamedItemNS</span> — <span class="dc-title">   Retrieves a node specified by local name and namespace URI  </span></p> </div> <div class="refsect1 description" id="refsect1-domnamednodemap.getnameditemns-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::getNamedItemNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span></div>  <p class="para rdfs-comment">   Retrieves a node specified by <span class="parameter" style="color:#3A95FF">localName</span> and    <span class="parameter" style="color:#3A95FF">namespace</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnamednodemap.getnameditemns-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the node to retrieve.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name of the node to retrieve.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domnamednodemap.getnameditemns-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A node (of any type) with the specified local name and namespace URI, or    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if no node is found.  </p> </div> <div class="refsect1 seealso" id="refsect1-domnamednodemap.getnameditemns-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMNamedNodeMap::getNamedItem()} - Retrieves a node specified by name</span></li>   </ul>   </div></div>
 * 
     * Retrieves a node specified by local name and namespace URI
     * @link https://php.net/manual/zh/domnamednodemap.getnameditemns.php
     * @param string $namespace <p>
     * The namespace URI of the node to retrieve.
     * </p>
     * @param string $localName <p>
     * The local name of the node to retrieve.
     * </p>
     * @return TNode|null A node (of any type) with the specified local name and namespace URI, or
     * null if no node is found.
     */
    #[TentativeType]
    public function getNamedItemNS(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $namespaceURI = '',
        #[PhpStormStubsElementAvailable(from: '8.0')] ?string $namespace,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $localName = '',
        #[PhpStormStubsElementAvailable(from: '8.0')] string $localName
    ): ?DOMNode {}

    /**
     * @removed 8.0
     * @param DOMNode $arg [optional]
     */
    public function setNamedItemNS(DOMNode $arg) {}

    /**
     * @removed 8.0
     * @param $namespace [optional]
     * @param $localName [optional]
     */
    public function removeNamedItemNS($namespace, $localName) {}

    /**
 * <div id="domnamednodemap.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNamedNodeMap::count</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">DOMNamedNodeMap::count</span> — <span class="dc-title">Get number of nodes in the map</span></p> </div> <div class="refsect1 description" id="refsect1-domnamednodemap.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the number of nodes in the map.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnamednodemap.count-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnamednodemap.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of nodes in the map, which is identical to the   <a href="https://php.net/manual/zh/class.domnamednodemap.php#domnamednodemap.props.length" class="link">length</a> property.  </p> </div></div>
 * 
     * @return int<0,max>
     * @since 7.2
     */
    #[TentativeType]
    public function count(): int {}

    /**
 * <div id="domnamednodemap.getiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMNamedNodeMap::getIterator</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMNamedNodeMap::getIterator</span> — <span class="dc-title">Retrieve an external iterator</span></p> </div> <div class="refsect1 description" id="refsect1-domnamednodemap.getiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMNamedNodeMap::getIterator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.iterator.php" class="type Iterator" style="color:#EAB766">Iterator</a></span></div>  <p class="para rdfs-comment">   Returns an external iterator for the named node map.  </p> </div> <div class="refsect1 parameters" id="refsect1-domnamednodemap.getiterator-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domnamednodemap.getiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   实现了 <span class="classname"><a href="https://php.net/manual/zh/class.iterator.php" class="classname">Iterator</a></span> 或 <span class="classname"><a href="https://php.net/manual/zh/class.traversable.php" class="classname">Traversable</a></span> 接口的类的一个实例。  </p> </div> <div class="refsect1 errors" id="refsect1-domnamednodemap.getiterator-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   失败时抛出 <span class="classname"><a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a></span>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domnamednodemap.getiterator-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link IteratorAggregate::getIterator()} - 获取一个外部迭代器或可遍历对象</span></li>  </ul> </div></div>
 * 
     * @return Iterator<string, TNode>
     * @since 8.0
     */
    public function getIterator(): Iterator {}
}

/**
 * <div id="class.domcharacterdata" class="reference"> <h1 class="title">The DOMCharacterData class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domcharacterdata.intro">   <h2 class="title">简介</h2>   <p class="para">    Represents nodes with character data. No nodes directly correspond to    this class, but other nodes do inherit from it.   </p>  </div>   <div class="section" id="domcharacterdata.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMCharacterData</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.domchildnode.php" class="interfacename">DOMChildNode</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.data">\$<var class="varname">data</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.length">\$<var class="varname">length</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.previouselementsibling">\$<var class="varname">previousElementSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.nextelementsibling">\$<var class="varname">nextElementSibling</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.after.php" class="methodname" style="color:#CC7832">after</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.appenddata.php" class="methodname" style="color:#CC7832">appendData</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.before.php" class="methodname" style="color:#CC7832">before</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.deletedata.php" class="methodname" style="color:#CC7832">deleteData</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.insertdata.php" class="methodname" style="color:#CC7832">insertData</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.remove.php" class="methodname" style="color:#CC7832">remove</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.replacedata.php" class="methodname" style="color:#CC7832">replaceData</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.replacewith.php" class="methodname" style="color:#CC7832">replaceWith</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcharacterdata.substringdata.php" class="methodname" style="color:#CC7832">substringData</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domcharacterdata.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domcharacterdata.props.data"><var class="varname">data</var></dt>     <dd>      <p class="para">The contents of the node.</p>     </dd>             <dt id="domcharacterdata.props.length"><var class="varname">length</var></dt>     <dd>      <p class="para">The length of the contents.</p>     </dd>             <dt id="domcharacterdata.props.nextelementsibling"><var class="varname">nextElementSibling</var></dt>     <dd>      <p class="para">The next sibling element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domcharacterdata.props.previouselementsibling"><var class="varname">previousElementSibling</var></dt>     <dd>      <p class="para">The previous sibling element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The <var class="varname">nextElementSibling</var> and        <var class="varname">previousElementSibling</var> properties have been added.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">DOMCharacterData</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.domchildnode.php" class="interfacename">DOMChildNode</a></span> now.       </td>      </tr>     </tbody>       </table>  </div>  <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-FF21A306" class="link external">»&nbsp;W3C specification of CharacterData</a></li>    </ul>     </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMCharacterData::after} — Adds nodes after the character data</li><li>{@link DOMCharacterData::appendData} — Append the string to the end of the character data of the node</li><li>{@link DOMCharacterData::before} — Adds nodes before the character data</li><li>{@link DOMCharacterData::deleteData} — Remove a range of characters from the character data</li><li>{@link DOMCharacterData::insertData} — Insert a string at the specified UTF-8 codepoint offset</li><li>{@link DOMCharacterData::remove} — Removes the character data node</li><li>{@link DOMCharacterData::replaceData} — Replace a substring within the character data</li><li>{@link DOMCharacterData::replaceWith} — Replaces the character data with new nodes</li><li>{@link DOMCharacterData::substringData} — Extracts a range of data from the character data</li></ul></div>
 * 
 * The DOMCharacterData class represents nodes with character data.
 * No nodes directly correspond to this class, but other nodes do inherit from it.
 * @link https://php.net/manual/zh/class.domcharacterdata.php
 */
class DOMCharacterData extends DOMNode implements DOMChildNode
{
    /**
     * @var string
     * The contents of the node.
     * @link https://php.net/manual/en/class.domcharacterdata.php#domcharacterdata.props.data
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $data;

    /**
     * @var int
     * The length of the contents.
     * @link https://php.net/manual/en/class.domcharacterdata.php#domcharacterdata.props.length
     */
    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $length;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $nextElementSibling;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $previousElementSibling;

    /**
 * <div id="domcharacterdata.substringdata" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::substringData</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::substringData</span> — <span class="dc-title">   Extracts a range of data from the character data  </span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.substringdata-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::substringData</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the specified substring.   </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.substringdata-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Start offset of substring to extract.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">count</span></dt>     <dd>      <p class="para">       The number of characters to extract.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.substringdata-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The specified substring. If the sum of <span class="parameter" style="color:#3A95FF">offset</span>    and <span class="parameter" style="color:#3A95FF">count</span> exceeds the length, then all UTF-8 codepoints   to the end of the data are returned.  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.substringdata-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-index-size-err">DOM_INDEX_SIZE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">offset</span> is negative or greater than the       number of UTF-8 codepoints in data, or if <span class="parameter" style="color:#3A95FF">count</span> is       negative.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.substringdata-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData()} - Append the string to the end of the character data of the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData()} - Remove a range of characters from the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData()} - Insert a string at the specified UTF-8 codepoint offset</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData()} - Replace a substring within the character data</span></li>   </ul>   </div></div>
 * 
     * Extracts a range of data from the node
     * @link https://php.net/manual/zh/domcharacterdata.substringdata.php
     * @param int $offset <p>
     * Start offset of substring to extract.
     * </p>
     * @param int $count <p>
     * The number of characters to extract.
     * </p>
     * @return string The specified substring. If the sum of offset
     * and count exceeds the length, then all 16-bit units
     * to the end of the data are returned.
     */
    public function substringData(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $offset,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $count
    ) {}

    /**
 * <div id="domcharacterdata.appenddata" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::appendData</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::appendData</span> — <span class="dc-title">   Append the string to the end of the character data of the node  </span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.appenddata-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::appendData</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Append the string <span class="parameter" style="color:#3A95FF">data</span> to the end of the character data of the node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.appenddata-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The string to append.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.appenddata-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-domcharacterdata.appenddata-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       This function now has a tentative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span> return type.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.appenddata-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData()} - Remove a range of characters from the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData()} - Insert a string at the specified UTF-8 codepoint offset</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData()} - Replace a substring within the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData()} - Extracts a range of data from the character data</span></li>   </ul>   </div></div>
 * 
     * Append the string to the end of the character data of the node
     * @link https://php.net/manual/zh/domcharacterdata.appenddata.php
     * @param string $data <p>
     * The string to append.
     * </p>
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'true'], default: 'bool')]
    public function appendData(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data) {}

    /**
 * <div id="domcharacterdata.insertdata" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::insertData</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::insertData</span> — <span class="dc-title">   Insert a string at the specified UTF-8 codepoint offset  </span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.insertdata-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::insertData</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Inserts string <span class="parameter" style="color:#3A95FF">data</span> at position <span class="parameter" style="color:#3A95FF">offset</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.insertdata-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The character offset at which to insert.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The string to insert.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.insertdata-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.insertdata-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-index-size-err">DOM_INDEX_SIZE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">offset</span> is negative or greater than the       number of UTF-8 codepoints in data.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.insertdata-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData()} - Append the string to the end of the character data of the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData()} - Remove a range of characters from the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData()} - Replace a substring within the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData()} - Extracts a range of data from the character data</span></li>   </ul>   </div></div>
 * 
     * Insert a string at the specified 16-bit unit offset
     * @link https://php.net/manual/zh/domcharacterdata.insertdata.php
     * @param int $offset <p>
     * The character offset at which to insert.
     * </p>
     * @param string $data <p>
     * The string to insert.
     * </p>
     * @return bool
     */
    #[TentativeType]
    public function insertData(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $offset,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data
    ): bool {}

    /**
 * <div id="domcharacterdata.deletedata" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::deleteData</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::deleteData</span> — <span class="dc-title">   Remove a range of characters from the character data  </span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.deletedata-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::deleteData</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Deletes <span class="parameter" style="color:#3A95FF">count</span> characters starting from position   <span class="parameter" style="color:#3A95FF">offset</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.deletedata-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The offset from which to start removing.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">count</span></dt>     <dd>      <p class="para">       The number of characters to delete. If the sum of       <span class="parameter" style="color:#3A95FF">offset</span> and <span class="parameter" style="color:#3A95FF">count</span> exceeds       the length, then all characters to the end of the data are deleted.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.deletedata-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.deletedata-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-index-size-err">DOM_INDEX_SIZE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">offset</span> is negative or greater than the       number of UTF-8 codepoints in data, or if <span class="parameter" style="color:#3A95FF">count</span> is       negative.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.deletedata-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData()} - Append the string to the end of the character data of the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData()} - Insert a string at the specified UTF-8 codepoint offset</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData()} - Replace a substring within the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData()} - Extracts a range of data from the character data</span></li>   </ul>   </div></div>
 * 
     * Remove a range of characters from the node
     * @link https://php.net/manual/zh/domcharacterdata.deletedata.php
     * @param int $offset <p>
     * The offset from which to start removing.
     * </p>
     * @param int $count <p>
     * The number of characters to delete. If the sum of
     * offset and count exceeds
     * the length, then all characters to the end of the data are deleted.
     * </p>
     * @return void
     */
    #[TentativeType]
    public function deleteData(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $offset,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $count
    ): bool {}

    /**
 * <div id="domcharacterdata.replacedata" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::replaceData</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::replaceData</span> — <span class="dc-title">   Replace a substring within the character data  </span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.replacedata-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::replaceData</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Replace <span class="parameter" style="color:#3A95FF">count</span> characters starting from position   <span class="parameter" style="color:#3A95FF">offset</span> with <span class="parameter" style="color:#3A95FF">data</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.replacedata-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The offset from which to start replacing.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">count</span></dt>     <dd>      <p class="para">       The number of characters to replace. If the sum of       <span class="parameter" style="color:#3A95FF">offset</span> and <span class="parameter" style="color:#3A95FF">count</span> exceeds       the length, then all characters to the end of the data are replaced.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The string with which the range must be replaced.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.replacedata-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.replacedata-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-index-size-err">DOM_INDEX_SIZE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">offset</span> is negative or greater than the       number of UTF-8 codepoints in data, or if <span class="parameter" style="color:#3A95FF">count</span> is       negative.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.replacedata-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData()} - Append the string to the end of the character data of the node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData()} - Remove a range of characters from the character data</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData()} - Insert a string at the specified UTF-8 codepoint offset</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData()} - Extracts a range of data from the character data</span></li>   </ul>   </div></div>
 * 
     * Replace a substring within the DOMCharacterData node
     * @link https://php.net/manual/zh/domcharacterdata.replacedata.php
     * @param int $offset <p>
     * The offset from which to start replacing.
     * </p>
     * @param int $count <p>
     * The number of characters to replace. If the sum of
     * offset and count exceeds
     * the length, then all characters to the end of the data are replaced.
     * </p>
     * @param string $data <p>
     * The string with which the range must be replaced.
     * </p>
     * @return bool
     */
    #[TentativeType]
    public function replaceData(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $offset,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $count,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data
    ): bool {}

    /**
 * <div id="domcharacterdata.remove" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::remove</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::remove</span> — <span class="dc-title">Removes the character data node</span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.remove-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::remove</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Removes the character data node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.remove-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.remove-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-domcharacterdata.remove-examples">  <h3 class="title">示例</h3>  <div class="example" id="domcharacterdata.remove.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::remove()</strong></span> example</strong></p>   <div class="example-contents"><p>    Removes the character data.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;![CDATA[hello]]&gt;&lt;world/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cdata </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cdata</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">remove</span><span style="color: #007700">();<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container><world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.remove-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::remove()} - Removes the node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after()} - Adds nodes after the character data</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before()} - Adds nodes before the character data</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceWith()} - Replaces the character data with new nodes</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild()} - Removes child from list of children</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function remove(): void {}

    /**
 * <div id="domcharacterdata.before" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::before</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::before</span> — <span class="dc-title">Adds nodes before the character data</span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.before-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::before</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Adds the passed <span class="parameter" style="color:#3A95FF">nodes</span> before the character data.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.before-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       Nodes to be added before the node.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.before-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.before-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domcharacterdata.before-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domcharacterdata.before-examples">  <h3 class="title">示例</h3>  <div class="example" id="domcharacterdata.before.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::before()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes before the character data.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;![CDATA[world]]&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cdata </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cdata</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">before</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container>hello<beautiful></beautiful>&lt;![CDATA[world]]&gt;</container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.before-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::before()} - Adds nodes before the node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after()} - Adds nodes after the character data</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function before(...$nodes): void {}

    /**
 * <div id="domcharacterdata.after" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::after</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::after</span> — <span class="dc-title">Adds nodes after the character data</span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.after-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::after</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Adds the passed <span class="parameter" style="color:#3A95FF">nodes</span> after the character data.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.after-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       Nodes to be added after the node.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.after-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.after-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domcharacterdata.after-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domcharacterdata.after-examples">  <h3 class="title">示例</h3>  <div class="example" id="domcharacterdata.after.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::after()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes after the character data.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;![CDATA[hello]]&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cdata </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cdata</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container>&lt;![CDATA[hello]]&gt;beautiful<world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.after-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::after()} - Adds nodes after the node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before()} - Adds nodes before the character data</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function after(...$nodes): void {}

    /**
 * <div id="domcharacterdata.replacewith" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMCharacterData::replaceWith</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMCharacterData::replaceWith</span> — <span class="dc-title">Replaces the character data with new nodes</span></p> </div> <div class="refsect1 description" id="refsect1-domcharacterdata.replacewith-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::replaceWith</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Replaces the character data with new <span class="parameter" style="color:#3A95FF">nodes</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domcharacterdata.replacewith-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The replacement nodes.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domcharacterdata.replacewith-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domcharacterdata.replacewith-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domcharacterdata.replacewith-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domcharacterdata.replacewith-examples">  <h3 class="title">示例</h3>  <div class="example" id="domcharacterdata.replacewith.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMCharacterData::replaceWith()</strong></span> example</strong></p>   <div class="example-contents"><p>    Replaces the character data with new nodes.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;![CDATA[hello]]&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cdata </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cdata</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">replaceWith</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container>beautiful<world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domcharacterdata.replacewith-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::replaceWith()} - Replaces the node with new nodes</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after()} - Adds nodes after the character data</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before()} - Adds nodes before the character data</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMCharacterData::remove()} - Removes the character data node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function replaceWith(...$nodes): void {}
}

/**
 * <div id="class.domattr" class="reference"> <h1 class="title">The <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span> class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domattr.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">DOMAttr</strong></span> represents an attribute in the     <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> object.   </p>  </div>   <div class="section" id="domattr.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMAttr</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domattr.php#domattr.props.name">\$<var class="varname">name</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domattr.php#domattr.props.specified">\$<var class="varname">specified</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domattr.php#domattr.props.value">\$<var class="varname">value</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domattr.php#domattr.props.ownerelement">\$<var class="varname">ownerElement</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domattr.php#domattr.props.schematypeinfo">\$<var class="varname">schemaTypeInfo</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domattr.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domattr.isid.php" class="methodname" style="color:#CC7832">isId</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domattr.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domattr.props.name"><var class="varname">name</var></dt>     <dd>      <p class="para">The name of the attribute.</p>     </dd>             <dt id="domattr.props.ownerelement"><var class="varname">ownerElement</var></dt>     <dd>      <p class="para">The element which contains the attribute or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domattr.props.schematypeinfo"><var class="varname">schemaTypeInfo</var></dt>     <dd>      <p class="para">Not implemented yet, always is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domattr.props.specified"><var class="varname">specified</var></dt>     <dd>      <p class="para">Not implemented yet, always is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.</p>     </dd>             <dt id="domattr.props.value"><var class="varname">value</var></dt>     <dd>      <p class="para">The value of the attribute.</p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        Note, XML entities are expanded upon setting a value.        Thus the <span class="literal">&amp;</span> character has a special meaning.        Setting <var class="varname">value</var> to itself will fail when <var class="varname">value</var> contains an <span class="literal">&amp;</span>.        To avoid entity expansion, use <span class="methodname" style="color:#CC7832">{@link DOMElement::setAttribute()}</span> instead.       </p>      </blockquote>     </dd>       </dl>  </div>   <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-637646024" class="link external">»&nbsp;W3C specification of Attr</a></li>    </ul>     </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMAttr::__construct} — Creates a new DOMAttr object</li><li>{@link DOMAttr::isId} — Checks if attribute is a defined ID</li></ul></div>
 * 
 * The DOMAttr interface represents an attribute in an DOMElement object.
 * @link https://php.net/manual/zh/class.domattr.php
 */
class DOMAttr extends DOMNode
{
    /**
     * @var string
     * (PHP5)<br/>
     * The name of the attribute
     * @link https://php.net/manual/en/class.domattr.php#domattr.props.name
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $name;

    /**
     * @var DOMElement
     * (PHP5)<br/>
     * The element which contains the attribute
     * @link https://php.net/manual/en/class.domattr.php#domattr.props.ownerelement
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $ownerElement;

    /**
     * @var bool
     * (PHP5)<br/>
     * Not implemented yet, always is NULL
     * @link https://php.net/manual/en/class.domattr.php#domattr.props.schematypeinfo
     */
    #[LanguageLevelTypeAware(['8.1' => 'mixed'], default: '')]
    public $schemaTypeInfo;

    /**
     * @var bool
     * (PHP5)<br/>
     * Not implemented yet, always is NULL
     * @link https://php.net/manual/en/class.domattr.php#domattr.props.specified
     */
    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $specified;

    /**
     * @var string
     * (PHP5)<br/>
     * The value of the attribute
     * @link https://php.net/manual/en/class.domattr.php#domattr.props.value
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $value;

    /**
 * <div id="domattr.isid" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMAttr::isId</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMAttr::isId</span> — <span class="dc-title">   Checks if attribute is a defined ID  </span></p> </div> <div class="refsect1 description" id="refsect1-domattr.isid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMAttr::isId</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function checks if the attribute is a defined ID.  </p>  <p class="para">   According to the DOM standard this requires a DTD which defines the    attribute ID to be of type ID. You need to validate your document with   {@link DOMDocument::validate}   or <span class="property">{@link DOMDocument::\$validateOnParse}</span> before using this function.  </p> </div> <div class="refsect1 parameters" id="refsect1-domattr.isid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domattr.isid-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if this attribute is a defined ID, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-domattr.isid-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5730">    <p><strong>示例 #1 DOMAttr::isId() Example</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// We need to validate our document before referring to the id<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">validateOnParse </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// We retrieve the attribute named id of the chapter element<br></span><span style="color: #9876AA">\$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'chapter'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getAttributeNode</span><span style="color: #007700">(</span><span style="color: #DD0000">'id'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$attr</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isId</span><span style="color: #007700">()); </span><span style="color: #FF8000">// bool(true)<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Checks if attribute is a defined ID
     * @link https://php.net/manual/zh/domattr.isid.php
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function isId(): bool {}

    /**
     * Creates a new {@see DOMAttr} object
     * @link https://php.net/manual/en/domattr.construct.php
     * @param string $name <p>The tag name of the attribute.</p>
     * @param string $value [optional] <p>The value of the attribute.</p>
     * @throws DOMException If invalid $name
     */
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value = ''
    ) {}
}

/**
 * <div id="class.domelement" class="reference"> <h1 class="title">The DOMElement class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domelement.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMElement</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a>,     <a href="https://php.net/manual/zh/class.domchildnode.php" class="interfacename">DOMChildNode</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.tagname">\$<var class="varname">tagName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.classname">\$<var class="varname">className</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.id">\$<var class="varname">id</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.schematypeinfo">\$<var class="varname">schemaTypeInfo</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.firstelementchild">\$<var class="varname">firstElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.lastelementchild">\$<var class="varname">lastElementChild</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.childelementcount">\$<var class="varname">childElementCount</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.previouselementsibling">\$<var class="varname">previousElementSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domelement.php#domelement.props.nextelementsibling">\$<var class="varname">nextElementSibling</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span><span class="initializer"> = ""</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.after.php" class="methodname" style="color:#CC7832">after</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.append.php" class="methodname" style="color:#CC7832">append</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.before.php" class="methodname" style="color:#CC7832">before</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getattribute.php" class="methodname" style="color:#CC7832">getAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getattributenames.php" class="methodname" style="color:#CC7832">getAttributeNames</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getattributenode.php" class="methodname" style="color:#CC7832">getAttributeNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getattributenodens.php" class="methodname" style="color:#CC7832">getAttributeNodeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getattributens.php" class="methodname" style="color:#CC7832">getAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getelementsbytagname.php" class="methodname" style="color:#CC7832">getElementsByTagName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.getelementsbytagnamens.php" class="methodname" style="color:#CC7832">getElementsByTagNameNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.hasattribute.php" class="methodname" style="color:#CC7832">hasAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.hasattributens.php" class="methodname" style="color:#CC7832">hasAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.insertadjacentelement.php" class="methodname" style="color:#CC7832">insertAdjacentElement</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$where</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span> <span class="parameter" style="color:#3A95FF">\$element</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.insertadjacenttext.php" class="methodname" style="color:#CC7832">insertAdjacentText</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$where</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.prepend.php" class="methodname" style="color:#CC7832">prepend</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.remove.php" class="methodname" style="color:#CC7832">remove</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.removeattribute.php" class="methodname" style="color:#CC7832">removeAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.removeattributenode.php" class="methodname" style="color:#CC7832">removeAttributeNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.removeattributens.php" class="methodname" style="color:#CC7832">removeAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.replacechildren.php" class="methodname" style="color:#CC7832">replaceChildren</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.replacewith.php" class="methodname" style="color:#CC7832">replaceWith</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setattribute.php" class="methodname" style="color:#CC7832">setAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setattributenode.php" class="methodname" style="color:#CC7832">setAttributeNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setattributenodens.php" class="methodname" style="color:#CC7832">setAttributeNodeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setattributens.php" class="methodname" style="color:#CC7832">setAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setidattribute.php" class="methodname" style="color:#CC7832">setIdAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setidattributenode.php" class="methodname" style="color:#CC7832">setIdAttributeNode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.setidattributens.php" class="methodname" style="color:#CC7832">setIdAttributeNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domelement.toggleattribute.php" class="methodname" style="color:#CC7832">toggleAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$force</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domelement.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domelement.props.childelementcount"><var class="varname">childElementCount</var></dt>     <dd>      <p class="para">The number of child elements.</p>     </dd>             <dt id="domelement.props.firstelementchild"><var class="varname">firstElementChild</var></dt>     <dd>      <p class="para">First child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domelement.props.lastelementchild"><var class="varname">lastElementChild</var></dt>     <dd>      <p class="para">Last child element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domelement.props.nextelementsibling"><var class="varname">nextElementSibling</var></dt>     <dd>      <p class="para">The next sibling element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domelement.props.previouselementsibling"><var class="varname">previousElementSibling</var></dt>     <dd>      <p class="para">The previous sibling element or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.</p>     </dd>             <dt id="domelement.props.schematypeinfo"><var class="varname">schemaTypeInfo</var></dt>     <dd>      <p class="para">Not implemented yet, always return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></p>     </dd>             <dt id="domelement.props.tagname"><var class="varname">tagName</var></dt>     <dd>      <p class="para">The element name</p>     </dd>             <dt id="domelement.props.classname"><var class="varname">className</var></dt>     <dd>      <p class="para">A string representing the classes of the element separated by spaces.</p>     </dd>             <dt id="domelement.props.id"><var class="varname">id</var></dt>     <dd>      <p class="para">Reflects the element ID through the <span class="literal">"id"</span> attribute.</p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        The <var class="varname">className</var> and <var class="varname">id</var> properties and        the <span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNames()}</span>,        <span class="methodname" style="color:#CC7832">{@link DOMElement::insertAdjacentElement()}</span>,        <span class="methodname" style="color:#CC7832">{@link DOMElement::insertAdjacentText()}</span>, and        <span class="methodname" style="color:#CC7832">{@link DOMElement::toggleAttribute()}</span> methods have been added.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        The <var class="varname">firstElementChild</var>, <var class="varname">lastElementChild</var>,        <var class="varname">childElementCount</var>, <var class="varname">previousElementSibling</var>,        and <var class="varname">nextElementSibling</var> properties have been added.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">DOMElement</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.domparentnode.php" class="interfacename">DOMParentNode</a></span> and        <span class="interfacename"><a href="https://php.net/manual/zh/class.domchildnode.php" class="interfacename">DOMChildNode</a></span> now.       </td>      </tr>     </tbody>       </table>  </div>  <div class="section">   <h2 class="title">注释</h2>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: </p><p class="para">此 DOM 扩展采用 UTF-8 编码。使用 <span class="function">{@link mb_convert_encoding()}</span>、<span class="methodname" style="color:#CC7832">{@link UConverter::transcode()}</span> 或 <span class="function">{@link iconv()}</span> 来处理其它编码。</p></blockquote>  </div>    </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMElement::after} — Adds nodes after the element</li><li>{@link DOMElement::append} — Appends nodes after the last child node</li><li>{@link DOMElement::before} — Adds nodes before the element</li><li>{@link DOMElement::__construct} — Creates a new DOMElement object</li><li>{@link DOMElement::getAttribute} — Returns value of attribute</li><li>{@link DOMElement::getAttributeNames} — Get attribute names</li><li>{@link DOMElement::getAttributeNode} — Returns attribute node</li><li>{@link DOMElement::getAttributeNodeNS} — Returns attribute node</li><li>{@link DOMElement::getAttributeNS} — Returns value of attribute</li><li>{@link DOMElement::getElementsByTagName} — Gets elements by tagname</li><li>{@link DOMElement::getElementsByTagNameNS} — Get elements by namespaceURI and localName</li><li>{@link DOMElement::hasAttribute} — Checks to see if attribute exists</li><li>{@link DOMElement::hasAttributeNS} — Checks to see if attribute exists</li><li>{@link DOMElement::insertAdjacentElement} — Insert adjacent element</li><li>{@link DOMElement::insertAdjacentText} — Insert adjacent text</li><li>{@link DOMElement::prepend} — Prepends nodes before the first child node</li><li>{@link DOMElement::remove} — Removes the element</li><li>{@link DOMElement::removeAttribute} — Removes attribute</li><li>{@link DOMElement::removeAttributeNode} — Removes attribute</li><li>{@link DOMElement::removeAttributeNS} — Removes attribute</li><li>{@link DOMElement::replaceChildren} — Replace children in element</li><li>{@link DOMElement::replaceWith} — Replaces the element with new nodes</li><li>{@link DOMElement::setAttribute} — Adds new or modifies existing attribute</li><li>{@link DOMElement::setAttributeNode} — Adds new attribute node to element</li><li>{@link DOMElement::setAttributeNodeNS} — Adds new attribute node to element</li><li>{@link DOMElement::setAttributeNS} — Adds new attribute</li><li>{@link DOMElement::setIdAttribute} — Declares the attribute specified by name to be of type ID</li><li>{@link DOMElement::setIdAttributeNode} — Declares the attribute specified by node to be of type ID</li><li>{@link DOMElement::setIdAttributeNS} — Declares the attribute specified by local name and namespace URI to be of type ID</li><li>{@link DOMElement::toggleAttribute} — Toggle attribute</li></ul></div>
 * 
 * The DOMElement class
 * @link https://php.net/manual/zh/class.domelement.php
 */
class DOMElement extends DOMNode implements DOMParentNode, DOMChildNode
{
    /**
     * @var DOMNode|null
     * The parent of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.parentnode
     */
    public $parentNode;

    /**
     * @var DOMNode|null
     * The first child of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.firstchild
     */
    public $firstChild;

    /**
     * @var DOMNode|null
     * The last child of this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.lastchild
     */
    public $lastChild;

    /**
     * @var DOMNode|null
     * The node immediately preceding this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.previoussibling
     */
    public $previousSibling;

    /**
     * @var DOMNode|null
     * The node immediately following this node. If there is no such node, this returns NULL.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.nextsibling
     */
    public $nextSibling;

    /**
     * @var DOMNamedNodeMap<DOMAttr>
     * A <classname>DOMNamedNodeMap</classname> containing the attributes of this node (if it is a <classname>DOMElement</classname>) or NULL otherwise.
     * @link https://php.net/manual/en/class.domnode.php#domnode.props.attributes
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNamedNodeMap'], default: '')]
    public $attributes;

    /**
     * @var bool
     * Not implemented yet, always return NULL
     * @link https://php.net/manual/en/class.domelement.php#domelement.props.schematypeinfo
     */
    #[LanguageLevelTypeAware(['8.1' => 'mixed'], default: '')]
    public $schemaTypeInfo;

    /**
     * @var string
     * The element name
     * @link https://php.net/manual/en/class.domelement.php#domelement.props.tagname
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $tagName;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $firstElementChild;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $lastElementChild;

    #[LanguageLevelTypeAware(['8.1' => 'int'], default: '')]
    public $childElementCount;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $previousElementSibling;

    #[LanguageLevelTypeAware(['8.1' => 'DOMElement|null'], default: '')]
    public $nextElementSibling;
    public string $id;
    public string $className;

    /**
 * <div id="domelement.getattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getAttribute</span> — <span class="dc-title">Returns value of attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Gets the value of the attribute with name <span class="parameter" style="color:#3A95FF">qualifiedName</span>    for the current node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the attribute, or an empty string if no attribute with the   given <span class="parameter" style="color:#3A95FF">qualifiedName</span> is found.  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.getattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttribute()} - Adds new or modifies existing attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttribute()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Returns value of attribute
     * @link https://php.net/manual/zh/domelement.getattribute.php
     * @param string $qualifiedName <p>
     * The name of the attribute.
     * </p>
     * @return string The value of the attribute, or an empty string if no attribute with the
     * given name is found.
     */
    #[TentativeType]
    public function getAttribute(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): string {}

    /**
 * <div id="domelement.setattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setAttribute</span> — <span class="dc-title">Adds new or modifies existing attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Sets an attribute with name <span class="parameter" style="color:#3A95FF">qualifiedName</span> to the given   value. If the attribute does not exist, it will be created.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.setattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The created or modified <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.setattribute-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>       </dl>   </div> <div class="refsect1 examples" id="refsect1-domelement.setattribute-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5779">    <p><strong>示例 #1 Setting an attribute</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">(</span><span style="color: #DD0000">"1.0"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$node </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"para"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newnode </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendChild</span><span style="color: #007700">(</span><span style="color: #9876AA">\$node</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newnode</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttribute</span><span style="color: #007700">(</span><span style="color: #DD0000">"align"</span><span style="color: #007700">, </span><span style="color: #DD0000">"left"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domelement.setattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttribute()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttribute()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Adds new attribute
     * @link https://php.net/manual/zh/domelement.setattribute.php
     * @param string $qualifiedName <p>
     * The name of the attribute.
     * </p>
     * @param string $value <p>
     * The value of the attribute.
     * </p>
     * @return DOMAttr|false The new DOMAttr or false if an error occurred.
     */
    public function setAttribute(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value
    ) {}

    /**
 * <div id="domelement.removeattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::removeAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::removeAttribute</span> — <span class="dc-title">Removes attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.removeattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::removeAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Removes attribute named <span class="parameter" style="color:#3A95FF">qualifiedName</span> from the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.removeattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.removeattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.removeattribute-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.removeattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttribute()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttribute()} - Adds new or modifies existing attribute</span></li>   </ul>   </div></div>
 * 
     * Removes attribute
     * @link https://php.net/manual/zh/domelement.removeattribute.php
     * @param string $qualifiedName <p>
     * The name of the attribute.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function removeAttribute(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): bool {}

    /**
 * <div id="domelement.getattributenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getAttributeNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getAttributeNode</span> — <span class="dc-title">Returns attribute node</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getattributenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttributeNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the attribute node with name <span class="parameter" style="color:#3A95FF">qualifiedName</span> for the   current element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getattributenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getattributenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The attribute node. Note that for XML namespace declarations   (<span class="literal">xmlns</span> and <span class="literal">xmlns:*</span> attributes) an    instance of <span class="classname"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="classname">DOMNameSpaceNode</a></span> is returned instead of a   <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.getattributenode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNode()} - Adds new attribute node to element</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNode()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Returns attribute node
     * @link https://php.net/manual/zh/domelement.getattributenode.php
     * @param string $qualifiedName <p>
     * The name of the attribute.
     * </p>
     * @return DOMAttr The attribute node.
     */
    public function getAttributeNode(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName) {}

    /**
 * <div id="domelement.setattributenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setAttributeNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setAttributeNode</span> — <span class="dc-title">Adds new attribute node to element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setattributenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setAttributeNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Adds new attribute node <span class="parameter" style="color:#3A95FF">attr</span> to element.    If an attribute with the same name already exists on the element, that attribute is replaced by <span class="parameter" style="color:#3A95FF">attr</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setattributenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>     <dd>      <p class="para">       The attribute node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.setattributenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the old attribute if it has been replaced or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there was no old attribute.   If a <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong> error is raised, and <var class="varname">strictErrorChecking</var> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.setattributenode-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">attr</span> belongs to a different document than the element.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.setattributenode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNode()} - Returns attribute node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNode()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Adds new attribute node to element
     * @link https://php.net/manual/zh/domelement.setattributenode.php
     * @param DOMAttr $attr <p>
     * The attribute node.
     * </p>
     * @return DOMAttr|null Old node if the attribute has been replaced or null.
     */
    public function setAttributeNode(DOMAttr $attr) {}

    /**
 * <div id="domelement.removeattributenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::removeAttributeNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::removeAttributeNode</span> — <span class="dc-title">Removes attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.removeattributenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::removeAttributeNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Removes attribute <span class="parameter" style="color:#3A95FF">attr</span> from the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.removeattributenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>     <dd>      <p class="para">       The attribute node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.removeattributenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.removeattributenode-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">attr</span> is not an attribute of the element.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.removeattributenode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNode()} - Returns attribute node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNode()} - Adds new attribute node to element</span></li>   </ul>   </div></div>
 * 
     * Removes attribute
     * @link https://php.net/manual/zh/domelement.removeattributenode.php
     * @param DOMAttr $attr <p>
     * The attribute node.
     * </p>
     * @return bool true on success or false on failure.
     */
    public function removeAttributeNode(DOMAttr $attr) {}

    /**
 * <div id="domelement.getelementsbytagname" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getElementsByTagName</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getElementsByTagName</span> — <span class="dc-title">Gets elements by tagname</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getelementsbytagname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getElementsByTagName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div>  <p class="para rdfs-comment">   This function returns a new instance of the class   <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> of all descendant elements with a   given tag <span class="parameter" style="color:#3A95FF">qualifiedName</span>, in the order in which they are   encountered in a preorder traversal of this element tree.   </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getelementsbytagname-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The tag name. Use <span class="literal">*</span> to return all elements within        the element tree.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getelementsbytagname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   This function returns a new instance of the class   <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> of all matched elements.  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.getelementsbytagname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getElementsByTagNameNS()} - Get elements by namespaceURI and localName</span></li>   </ul>   </div></div>
 * 
     * Gets elements by tagname
     * @link https://php.net/manual/zh/domelement.getelementsbytagname.php
     * @param string $qualifiedName <p>
     * The tag name. Use * to return all elements within
     * the element tree.
     * </p>
     * @return DOMNodeList<DOMElement> This function returns a new instance of the class
     * DOMNodeList of all matched elements.
     */
    #[TentativeType]
    public function getElementsByTagName(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): DOMNodeList {}

    /**
 * <div id="domelement.getattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getAttributeNS</span> — <span class="dc-title">Returns value of attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Gets the value of the attribute in namespace <span class="parameter" style="color:#3A95FF">namespace</span>    with local name <span class="parameter" style="color:#3A95FF">localName</span> for the current node.   </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the attribute, or an empty string if no attribute with the   given <span class="parameter" style="color:#3A95FF">localName</span> and <span class="parameter" style="color:#3A95FF">namespace</span>    is found.  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.getattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNS()} - Adds new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNS()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Returns value of attribute
     * @link https://php.net/manual/zh/domelement.getattributens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $localName <p>
     * The local name.
     * </p>
     * @return string The value of the attribute, or an empty string if no attribute with the
     * given localName and namespaceURI
     * is found.
     */
    #[TentativeType]
    public function getAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ): string {}

    /**
 * <div id="domelement.setattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setAttributeNS</span> — <span class="dc-title">Adds new attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Sets an attribute with namespace <span class="parameter" style="color:#3A95FF">namespace</span> and    name <span class="parameter" style="color:#3A95FF">qualifiedName</span> to the given value. If the attribute   does not exist, it will be created.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The qualified name of the attribute, as <span class="literal">prefix:tagname</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value of the attribute.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.setattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.setattributens-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-namespace-err">DOM_NAMESPACE_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> is a malformed qualified       name, or if <span class="parameter" style="color:#3A95FF">qualifiedName</span> has a prefix and        <span class="parameter" style="color:#3A95FF">namespace</span> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.setattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNS()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNS()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Adds new attribute
     * @link https://php.net/manual/zh/domelement.setattributens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $qualifiedName <p>
     * The qualified name of the attribute, as prefix:tagname.
     * </p>
     * @param string $value <p>
     * The value of the attribute.
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value
    ): void {}

    /**
 * <div id="domelement.removeattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::removeAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::removeAttributeNS</span> — <span class="dc-title">Removes attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.removeattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::removeAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Removes attribute <span class="parameter" style="color:#3A95FF">localName</span> in namespace <span class="parameter" style="color:#3A95FF">namespace</span> from the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.removeattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.removeattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.removeattributens-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.removeattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNS()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNS()} - Adds new attribute</span></li>   </ul>   </div></div>
 * 
     * Removes attribute
     * @link https://php.net/manual/zh/domelement.removeattributens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $localName <p>
     * The local name.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function removeAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ): void {}

    /**
 * <div id="domelement.getattributenodens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getAttributeNodeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getAttributeNodeNS</span> — <span class="dc-title">   Returns attribute node  </span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getattributenodens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttributeNodeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Returns the attribute node in namespace <span class="parameter" style="color:#3A95FF">namespace</span>    with local name <span class="parameter" style="color:#3A95FF">localName</span> for the current node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getattributenodens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getattributenodens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The attribute node. Note that for XML namespace declarations   (<span class="literal">xmlns</span> and <span class="literal">xmlns:*</span> attributes) an    instance of <span class="classname"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="classname">DOMNameSpaceNode</a></span> is returned instead of a   <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span> object.  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.getattributenodens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNodeNS()} - Adds new attribute node to element</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNode()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Returns attribute node
     * @link https://php.net/manual/zh/domelement.getattributenodens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $localName <p>
     * The local name.
     * </p>
     * @return DOMAttr The attribute node.
     */
    public function getAttributeNodeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ) {}

    /**
 * <div id="domelement.setattributenodens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setAttributeNodeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setAttributeNodeNS</span> — <span class="dc-title">Adds new attribute node to element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setattributenodens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setAttributeNodeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Adds new attribute node <span class="parameter" style="color:#3A95FF">attr</span> to element, keeping the namespace into account.   If an attribute with the same name already exists on the element, that attribute is replaced by <span class="parameter" style="color:#3A95FF">attr</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setattributenodens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>     <dd>      <p class="para">       The attribute node.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.setattributenodens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the old attribute if it has been replaced or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there was no old attribute.   If a <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong> error is raised, and <var class="varname">strictErrorChecking</var> is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.setattributenodens-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">attr</span> belongs to a different document than the element.      </p>     </dd>       </dl>   </div> <div class="refsect1 seealso" id="refsect1-domelement.setattributenodens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNodeNS()} - Returns attribute node</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNode()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Adds new attribute node to element
     * @link https://php.net/manual/zh/domelement.setattributenodens.php
     * @param DOMAttr $attr
     * @return DOMAttr the old node if the attribute has been replaced.
     */
    public function setAttributeNodeNS(DOMAttr $attr) {}

    /**
 * <div id="domelement.getelementsbytagnamens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getElementsByTagNameNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::getElementsByTagNameNS</span> — <span class="dc-title">Get elements by namespaceURI and localName</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getelementsbytagnamens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getElementsByTagNameNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span></div>  <p class="para rdfs-comment">   This function fetch all the descendant elements with a given    <span class="parameter" style="color:#3A95FF">localName</span> and <span class="parameter" style="color:#3A95FF">namespace</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getelementsbytagnamens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the elements to match on.       The special value <span class="literal">"*"</span> matches all namespaces.       Passing <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> matches the empty namespace.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name of the elements to match on.       The special value <span class="literal">"*"</span> matches all local names.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getelementsbytagnamens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   This function returns a new instance of the class   <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> of all matched elements in the order in   which they are encountered in a preorder traversal of this element tree.  </p> </div> <div class="refsect1 changelog" id="refsect1-domelement.getelementsbytagnamens-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.3</td>      <td>       <span class="parameter" style="color:#3A95FF">namespace</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-domelement.getelementsbytagnamens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getElementsByTagName()} - Gets elements by tagname</span></li>   </ul>   </div></div>
 * 
     * Get elements by namespaceURI and localName
     * @link https://php.net/manual/zh/domelement.getelementsbytagnamens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $localName <p>
     * The local name. Use * to return all elements within
     * the element tree.
     * </p>
     * @return DOMNodeList<DOMElement> This function returns a new instance of the class
     * DOMNodeList of all matched elements in the order in
     * which they are encountered in a preorder traversal of this element tree.
     */
    #[TentativeType]
    public function getElementsByTagNameNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ): DOMNodeList {}

    /**
 * <div id="domelement.hasattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::hasAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::hasAttribute</span> — <span class="dc-title">Checks to see if attribute exists</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.hasattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::hasAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Indicates whether attribute named <span class="parameter" style="color:#3A95FF">qualifiedName</span>    exists as a member of the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.hasattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The attribute name.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.hasattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.hasattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttributeNS()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttribute()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttribute()} - Adds new or modifies existing attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttribute()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Checks to see if attribute exists
     * @link https://php.net/manual/zh/domelement.hasattribute.php
     * @param string $qualifiedName <p>
     * The attribute name.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function hasAttribute(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName): bool {}

    /**
 * <div id="domelement.hasattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::hasAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::hasAttributeNS</span> — <span class="dc-title">   Checks to see if attribute exists  </span></p> </div> <div class="refsect1 description" id="refsect1-domelement.hasattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::hasAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$localName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Indicates whether attribute in namespace <span class="parameter" style="color:#3A95FF">namespace</span>    named <span class="parameter" style="color:#3A95FF">localName</span> exists as a member of the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.hasattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">localName</span></dt>     <dd>      <p class="para">       The local name.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.hasattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-domelement.hasattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::hasAttribute()} - Checks to see if attribute exists</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::getAttributeNS()} - Returns value of attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setAttributeNS()} - Adds new attribute</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::removeAttributeNS()} - Removes attribute</span></li>   </ul>   </div></div>
 * 
     * Checks to see if attribute exists
     * @link https://php.net/manual/zh/domelement.hasattributens.php
     * @param string $namespace <p>
     * The namespace URI.
     * </p>
     * @param string $localName <p>
     * The local name.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function hasAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $localName
    ): bool {}

    /**
 * <div id="domelement.setidattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setIdAttribute</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setIdAttribute</span> — <span class="dc-title">Declares the attribute specified by name to be of type ID</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setidattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setIdAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Declares the attribute <span class="parameter" style="color:#3A95FF">qualifiedName</span> to be of type ID.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setidattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The name of the attribute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">isId</span></dt>     <dd>      <p class="para">       Set it to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if you want <span class="parameter" style="color:#3A95FF">qualifiedName</span> to be of type       ID, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-domelement.setidattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div>  <div class="refsect1 errors" id="refsect1-domelement.setidattribute-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">qualifiedName</span> is not an attribute of this element.      </p>     </dd>       </dl>   </div>  <div class="refsect1 seealso" id="refsect1-domelement.setidattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementById()} - Searches for an element with a certain id</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttributeNode()} - Declares the attribute specified by node to be of type ID</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttributeNS()} - Declares the attribute specified by local name and namespace URI to be of type ID</span></li>   </ul>   </div></div>
 * 
     * Declares the attribute specified by name to be of type ID
     * @link https://php.net/manual/zh/domelement.setidattribute.php
     * @param string $qualifiedName <p>
     * The name of the attribute.
     * </p>
     * @param bool $isId <p>
     * Set it to true if you want name to be of type
     * ID, false otherwise.
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setIdAttribute(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $isId
    ): void {}

    /**
 * <div id="domelement.setidattributens" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setIdAttributeNS</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setIdAttributeNS</span> — <span class="dc-title">Declares the attribute specified by local name and namespace URI to be of type ID</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setidattributens-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setIdAttributeNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Declares the attribute specified by <span class="parameter" style="color:#3A95FF">qualifiedName</span> and    <span class="parameter" style="color:#3A95FF">namespace</span> to be of type ID.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setidattributens-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the attribute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The local name of the attribute, as <span class="literal">prefix:tagname</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">isId</span></dt>     <dd>      <p class="para">       Set it to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if you want <span class="parameter" style="color:#3A95FF">name</span> to be of type       ID, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-domelement.setidattributens-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div>  <div class="refsect1 errors" id="refsect1-domelement.setidattributens-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">name</span> is not an attribute of this element.      </p>     </dd>       </dl>   </div>  <div class="refsect1 seealso" id="refsect1-domelement.setidattributens-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementById()} - Searches for an element with a certain id</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttribute()} - Declares the attribute specified by name to be of type ID</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttributeNode()} - Declares the attribute specified by node to be of type ID</span></li>   </ul>   </div></div>
 * 
     * Declares the attribute specified by local name and namespace URI to be of type ID
     * @link https://php.net/manual/zh/domelement.setidattributens.php
     * @param string $namespace <p>
     * The namespace URI of the attribute.
     * </p>
     * @param string $qualifiedName <p>
     * The local name of the attribute, as prefix:tagname.
     * </p>
     * @param bool $isId <p>
     * Set it to true if you want name to be of type
     * ID, false otherwise.
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setIdAttributeNS(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $isId
    ): void {}

    /**
 * <div id="domelement.setidattributenode" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::setIdAttributeNode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::setIdAttributeNode</span> — <span class="dc-title">Declares the attribute specified by node to be of type ID</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.setidattributenode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::setIdAttributeNode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domattr.php" class="type DOMAttr" style="color:#EAB766">DOMAttr</a></span> <span class="parameter" style="color:#3A95FF">\$attr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$isId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Declares the attribute specified by <span class="parameter" style="color:#3A95FF">attr</span> to be of   type ID.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.setidattributenode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>     <dd>      <p class="para">       The attribute node.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">isId</span></dt>     <dd>      <p class="para">       Set it to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if you want <span class="parameter" style="color:#3A95FF">name</span> to be of type       ID, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-domelement.setidattributenode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div>  <div class="refsect1 errors" id="refsect1-domelement.setidattributenode-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   </p><dl>         <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-no-modification-allowed-err">DOM_NO_MODIFICATION_ALLOWED_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if the node is readonly.      </p>     </dd>             <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-not-found-err">DOM_NOT_FOUND_ERR</a></span></strong></dt>     <dd>      <p class="para">       Raised if <span class="parameter" style="color:#3A95FF">name</span> is not an attribute of this element.      </p>     </dd>       </dl>   </div>  <div class="refsect1 seealso" id="refsect1-domelement.setidattributenode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMDocument::getElementById()} - Searches for an element with a certain id</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttribute()} - Declares the attribute specified by name to be of type ID</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::setIdAttributeNS()} - Declares the attribute specified by local name and namespace URI to be of type ID</span></li>   </ul>   </div></div>
 * 
     * Declares the attribute specified by node to be of type ID
     * @link https://php.net/manual/zh/domelement.setidattributenode.php
     * @param DOMAttr $attr <p>
     * The attribute node.
     * </p>
     * @param bool $isId <p>
     * Set it to true if you want name to be of type
     * ID, false otherwise.
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setIdAttributeNode(DOMAttr $attr, #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $isId): void {}

    /**
 * <div id="domelement.remove" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::remove</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::remove</span> — <span class="dc-title">Removes the element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.remove-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::remove</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Removes the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.remove-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domelement.remove-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-domelement.remove-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.remove.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::remove()</strong></span> example</strong></p>   <div class="example-contents"><p>    Removes the element.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello/&gt;&lt;world/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$hello </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$hello</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">remove</span><span style="color: #007700">();<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container><world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.remove-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::after()} - Adds nodes after the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::before()} - Adds nodes before the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::replaceWith()} - Replaces the element with new nodes</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild()} - Removes child from list of children</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function remove(): void {}

    /**
 * <div id="domelement.before" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::before</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::before</span> — <span class="dc-title">Adds nodes before the element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.before-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::before</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Adds the passed <span class="parameter" style="color:#3A95FF">nodes</span> before the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.before-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       Nodes to be added before the node.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.before-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.before-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.before-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.before-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.before.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::before()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes before the hello element.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;world/&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$world </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$world</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">before</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">hello<br><beautiful></beautiful><br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.before-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::before()} - Adds nodes before the node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::after()} - Adds nodes after the element</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function before(...$nodes): void {}

    /**
 * <div id="domelement.after" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::after</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::after</span> — <span class="dc-title">Adds nodes after the element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.after-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::after</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Adds the passed <span class="parameter" style="color:#3A95FF">nodes</span> after the element.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.after-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       Nodes to be added after the node.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.after-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.after-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.after-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.after-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.after.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::after()</strong></span> example</strong></p>   <div class="example-contents"><p>    Adds nodes after the hello element.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;hello/&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$container </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$container</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><hello></hello><br>beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.after-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::after()} - Adds nodes after the node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::before()} - Adds nodes before the element</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function after(...$nodes): void {}

    /**
 * <div id="domelement.replacewith" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::replaceWith</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::replaceWith</span> — <span class="dc-title">Replaces the element with new nodes</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.replacewith-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::replaceWith</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Replaces the element with new <span class="parameter" style="color:#3A95FF">nodes</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.replacewith-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The replacement nodes.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.replacewith-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.replacewith-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if the parent is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.replacewith-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without a parent is now a no-op to align the behaviour with the DOM specification.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.replacewith-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.replacewith.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::replaceWith()</strong></span> example</strong></p>   <div class="example-contents"><p>    Replaces the element with new nodes.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cdata </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cdata</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">replaceWith</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container>beautiful<world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.replacewith-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMChildNode::replaceWith()} - Replaces the node with new nodes</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::replaceChildren()} - Replace children in element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::after()} - Adds nodes after the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::before()} - Adds nodes before the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::remove()} - Removes the element</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function replaceWith(...$nodes): void {}

    /**
 * <div id="domelement.append" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::append</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::append</span> — <span class="dc-title">Appends nodes after the last child node</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.append-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::append</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Appends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children after the last child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.append-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to append.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.append-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.append-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.append-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.append-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.append.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::append()</strong></span> example</strong></p>   <div class="example-contents"><p>    Appends nodes in the container element.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;hello &lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$world </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$world</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">append</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container>hello&nbsp;beautiful<world></world></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.append-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::append()} - Appends nodes after the last child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::prepend()} - Prepends nodes before the first child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function append(...$nodes): void {}

    /**
 * <div id="domelement.prepend" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::prepend</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DOMElement::prepend</span> — <span class="dc-title">Prepends nodes before the first child node</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.prepend-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::prepend</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Prepends one or many <span class="parameter" style="color:#3A95FF">nodes</span> to the list of children before the first child node.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.prepend-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes to prepend.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.prepend-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.prepend-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.prepend-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.prepend-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.prepend.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::prepend()</strong></span> example</strong></p>   <div class="example-contents"><p>    Prepends nodes in the container element.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt; world&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$world </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$world</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepend</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"hello"</span><span style="color: #007700">), </span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container><hello></hello>beautiful&nbsp;world</container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.prepend-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::prepend()} - Prepends nodes before the first child node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::append()} - Appends nodes after the last child node</span></li>  </ul> </div></div>
 * 
     * {@inheritDoc}
     */
    public function prepend(...$nodes): void {}

    /**
 * <div id="domelement.replacechildren" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::replaceChildren</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMElement::replaceChildren</span> — <span class="dc-title">Replace children in element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.replacechildren-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::replaceChildren</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Replaces the children in the element with new <span class="parameter" style="color:#3A95FF">nodes</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.replacechildren-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">nodes</span></dt>     <dd>      <p class="para">       The nodes replacing the children.       Strings are automatically converted to text nodes.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.replacechildren-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domelement.replacechildren-errors">  <h3 class="title">错误／异常</h3>  <dl>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if this node is of a type that does not allow children of the    type of one of the passed <span class="parameter" style="color:#3A95FF">nodes</span>, or if the node to    put in is one of this node's ancestors or this node itself.  </p> </dd>    <dt><strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-wrong-document-err">DOM_WRONG_DOCUMENT_ERR</a></span></strong></dt>  <dd>  <p class="para">    Raised if one of the passed <span class="parameter" style="color:#3A95FF">nodes</span> was created from a different    document than the one that created this node.  </p> </dd>  </dl> </div> <div class="refsect1 changelog" id="refsect1-domelement.replacechildren-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Calling this method on a node without an owner document now works.       Previously this threw a <span class="classname"><a href="https://php.net/manual/zh/class.domexception.php" class="classname">DOMException</a></span> with code <strong><span><a href="https://php.net/manual/zh/dom.constants.php#constant.dom-hierarchy-request-err">DOM_HIERARCHY_REQUEST_ERR</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domelement.replacechildren-examples">  <h3 class="title">示例</h3>  <div class="example" id="domelement.replacechildren.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::replaceChildren()</strong></span> example</strong></p>   <div class="example-contents"><p>    Replaces the children with new nodes.   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;container&gt;&lt;hello/&gt;&lt;/container&gt;"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$container </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$container</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">replaceWith</span><span style="color: #007700">(</span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">"world"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br>beautiful<br><world></world></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.replacechildren-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMParentNode::replaceChildren()} - Replace children in node</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::replaceWith()} - Replaces the element with new nodes</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::after()} - Adds nodes after the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::before()} - Adds nodes before the element</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMElement::remove()} - Removes the element</span></li>  </ul> </div></div>
 * 
     * @since 8.3
     * {@inheritDoc}
     */
    public function replaceChildren(...$nodes): void {}

    /**
     * Creates a new DOMElement object
     * @link https://php.net/manual/en/domelement.construct.php
     * @param string $qualifiedName The tag name of the element. When also passing in namespaceURI, the element name may take a prefix to be associated with the URI.
     * @param string|null $value [optional] The value of the element.
     * @param string $namespace [optional] A namespace URI to create the element within a specific namespace.
     * @throws DOMException If invalid $qualifiedName
     */
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $qualifiedName,
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $value = null,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace = ''
    ) {}

    /**
 * <div id="domelement.getattributenames" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::getAttributeNames</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMElement::getAttributeNames</span> — <span class="dc-title">Get attribute names</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.getattributenames-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttributeNames</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Get attribute names.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.getattributenames-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domelement.getattributenames-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return attribute names.  </p> </div> <div class="refsect1 examples" id="refsect1-domelement.getattributenames-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5772">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::getAttributeNames()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;html xmlns:some="some:ns" some:test="a" test2="b"/&gt;'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttributeNames</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">array(3)&nbsp;{<br>&nbsp;[0]=&gt;<br>&nbsp;string(10)&nbsp;"xmlns:some"<br>&nbsp;[1]=&gt;<br>&nbsp;string(9)&nbsp;"some:test"<br>&nbsp;[2]=&gt;<br>&nbsp;string(5)&nbsp;"test2"<br>}</blockquote></div>   </div>  </div> </div></div>
 * 
     * @since 8.3
     */
    public function getAttributeNames(): array {}

    /**
 * <div id="domelement.toggleattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::toggleAttribute</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMElement::toggleAttribute</span> — <span class="dc-title">Toggle attribute</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.toggleattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::toggleAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$qualifiedName</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$force</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Toggle the attribute.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.toggleattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">qualifiedName</span></dt>     <dd>      <p class="para">       The qualified name of the attribute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">force</span></dt>     <dd>      <p class="para">       </p><ul class="simplelist">        <li>if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, the function will toggle the attribute.</li>        <li>if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, the function adds the attribute.</li>        <li>if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, the function removes the attribute.</li>       </ul>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.toggleattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the attribute is present after finishing the call, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-domelement.toggleattribute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5780">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::toggleAttribute()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;?xml version='1.0'?&gt;&lt;container selected=\"\"/&gt;"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toggleAttribute</span><span style="color: #007700">(</span><span style="color: #DD0000">'selected'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">() . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toggleAttribute</span><span style="color: #007700">(</span><span style="color: #DD0000">'selected'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">bool(false)<br><?xml &nbsp;version="1.0"?><br><container></container><br><br>bool(true)<br><?xml &nbsp;version="1.0"?><br><container></container></blockquote></div>   </div>  </div> </div></div>
 * 
     * @since 8.3
     */
    public function toggleAttribute(string $qualifiedName, ?bool $force = null): bool {}

    /**
 * <div id="domelement.insertadjacentelement" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::insertAdjacentElement</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMElement::insertAdjacentElement</span> — <span class="dc-title">Insert adjacent element</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.insertadjacentelement-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::insertAdjacentElement</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$where</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span> <span class="parameter" style="color:#3A95FF">\$element</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span></span></div>  <p class="para rdfs-comment">   Inserts an element at a relative position given by <span class="parameter" style="color:#3A95FF">where</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.insertadjacentelement-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">where</span></dt>     <dd>      <p class="para">       </p><ul class="simplelist">        <li><span class="literal">beforebegin</span> - Insert before the target element.</li>        <li><span class="literal">afterbegin</span> - Insert as the first child of the target element.</li>        <li><span class="literal">beforeend</span> - Insert as the last child of the target element.</li>        <li><span class="literal">afterend</span> - Insert after the target element.</li>       </ul>           </dd>             <dt><span class="parameter" style="color:#3A95FF">element</span></dt>     <dd>      <p class="para">       The element to insert.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.insertadjacentelement-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-domelement.insertadjacentelement-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5773">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::insertAdjacentElement()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?xml version="1.0"?&gt;&lt;container&gt;&lt;p&gt;foo&lt;/p&gt;&lt;/container&gt;'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$container </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$p </span><span style="color: #007700">= </span><span style="color: #9876AA">\$container</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstElementChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$p</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insertAdjacentElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'beforebegin'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createElement</span><span style="color: #007700">(</span><span style="color: #DD0000">'A'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container><a></a><p>foo</p></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.insertadjacentelement-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::insertAdjacentText()} - Insert adjacent text</span></li>   </ul>   </div></div>
 * 
     * @since 8.3
     */
    public function insertAdjacentElement(string $where, DOMElement $element): ?DOMElement {}

    /**
 * <div id="domelement.insertadjacenttext" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMElement::insertAdjacentText</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DOMElement::insertAdjacentText</span> — <span class="dc-title">Insert adjacent text</span></p> </div> <div class="refsect1 description" id="refsect1-domelement.insertadjacenttext-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMElement::insertAdjacentText</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$where</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Inserts text at a relative position given by <span class="parameter" style="color:#3A95FF">where</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domelement.insertadjacenttext-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">where</span></dt>     <dd>      <p class="para">       </p><ul class="simplelist">        <li><span class="literal">beforebegin</span> - Insert before the target element.</li>        <li><span class="literal">afterbegin</span> - Insert as the first child of the target element.</li>        <li><span class="literal">beforeend</span> - Insert as the last child of the target element.</li>        <li><span class="literal">afterend</span> - Insert after the target element.</li>       </ul>           </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The string to insert.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domelement.insertadjacenttext-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-domelement.insertadjacenttext-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5774">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DOMElement::insertAdjacentText()</strong></span> example</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$dom </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?xml version="1.0"?&gt;&lt;container&gt;&lt;p&gt;H&lt;/p&gt;&lt;/container&gt;'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$container </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">documentElement</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$p </span><span style="color: #007700">= </span><span style="color: #9876AA">\$container</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">firstElementChild</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$p</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insertAdjacentText</span><span style="color: #007700">(</span><span style="color: #DD0000">"afterbegin"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$p</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">insertAdjacentText</span><span style="color: #007700">(</span><span style="color: #DD0000">"beforeend"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">\$dom</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">saveXML</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"?><br><container><p>PHP</p></container></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domelement.insertadjacenttext-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMElement::insertAdjacentElement()} - Insert adjacent element</span></li>   </ul>   </div></div>
 * 
     * @since 8.3
     */
    public function insertAdjacentText(string $where, string $data): void {}
}

/**
 * <div id="class.domtext" class="reference"> <h1 class="title">The DOMText class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domtext.intro">   <h2 class="title">简介</h2>   <p class="para">    The <span class="classname"><strong class="classname">DOMText</strong></span> class inherits from     <span class="classname"><a href="https://php.net/manual/zh/class.domcharacterdata.php" class="classname">DOMCharacterData</a></span> and represents the textual    content of a <span class="classname"><a href="https://php.net/manual/zh/class.domelement.php" class="classname">DOMElement</a></span> or     <span class="classname"><a href="https://php.net/manual/zh/class.domattr.php" class="classname">DOMAttr</a></span>.   </p>  </div>   <div class="section" id="domtext.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMText</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domcharacterdata.php" class="classname">DOMCharacterData</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domtext.php#domtext.props.wholetext">\$<var class="varname">wholeText</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.data">\$<var class="varname">data</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.length">\$<var class="varname">length</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.previouselementsibling">\$<var class="varname">previousElementSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.nextelementsibling">\$<var class="varname">nextElementSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domtext.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span><span class="initializer"> = ""</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domtext.iselementcontentwhitespace.php" class="methodname" style="color:#CC7832">isElementContentWhitespace</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domtext.iswhitespaceinelementcontent.php" class="methodname" style="color:#CC7832">isWhitespaceInElementContent</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domtext.splittext.php" class="methodname" style="color:#CC7832">splitText</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domtext.php" class="type DOMText" style="color:#EAB766">DOMText</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::remove}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceWith}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domtext.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domtext.props.wholetext"><var class="varname">wholeText</var></dt>     <dd>      <p class="para">       Holds all the text of logically-adjacent (not separated by Element,        Comment or Processing Instruction) Text nodes.      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The unimplemented method <span class="methodname" style="color:#CC7832"><strong>DOMText::replaceWholeText()</strong></span>        has been removed.       </td>      </tr>     </tbody>       </table>  </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMText::__construct} — Creates a new DOMText object</li><li>{@link DOMText::isElementContentWhitespace} — Returns whether this text node contains whitespace in element content</li><li>{@link DOMText::isWhitespaceInElementContent} — Indicates whether this text node contains whitespace</li><li>{@link DOMText::splitText} — Breaks this node into two nodes at the specified offset</li></ul></div>
 * 
 * The DOMText class inherits from <classname>DOMCharacterData</classname> and represents the textual content of
 * a <classname>DOMElement</classname> or <classname>DOMAttr</classname>.
 * @link https://php.net/manual/zh/class.domtext.php
 */
class DOMText extends DOMCharacterData
{
    /**
     * Holds all the text of logically-adjacent (not separated by Element, Comment or Processing Instruction) Text nodes.
     * @link https://php.net/manual/en/class.domtext.php#domtext.props.wholeText
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $wholeText;

    /**
 * <div id="domtext.splittext" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMText::splitText</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMText::splitText</span> — <span class="dc-title">   Breaks this node into two nodes at the specified offset  </span></p> </div> <div class="refsect1 description" id="refsect1-domtext.splittext-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMText::splitText</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domtext.php" class="type DOMText" style="color:#EAB766">DOMText</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Breaks this node into two nodes at the specified <span class="parameter" style="color:#3A95FF">offset</span>,    keeping both in the tree as siblings.   </p>  <p class="para">   After being split, this node will contain all the content up to the    <span class="parameter" style="color:#3A95FF">offset</span>. If the original node had a parent node,    the new node is inserted as the next sibling of the original node.    When the <span class="parameter" style="color:#3A95FF">offset</span> is equal to the length of this node,   the new node has no data.  </p> </div> <div class="refsect1 parameters" id="refsect1-domtext.splittext-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The offset at which to split, starting from 0.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domtext.splittext-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new node of the same type, which contains all the content at and after the    <span class="parameter" style="color:#3A95FF">offset</span>.  </p> </div></div>
 * 
     * Breaks this node into two nodes at the specified offset
     * @link https://php.net/manual/zh/domtext.splittext.php
     * @param int $offset <p>
     * The offset at which to split, starting from 0.
     * </p>
     * @return DOMText The new node of the same type, which contains all the content at and after the
     * offset.
     */
    public function splitText(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $offset) {}

    /**
 * <div id="domtext.iswhitespaceinelementcontent" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMText::isWhitespaceInElementContent</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMText::isWhitespaceInElementContent</span> — <span class="dc-title">   Indicates whether this text node contains whitespace  </span></p> </div> <div class="refsect1 description" id="refsect1-domtext.iswhitespaceinelementcontent-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMText::isWhitespaceInElementContent</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Indicates whether this text node contains only whitespace or it is empty.   The text node is determined to contain whitespace in element content during   the load of the document.  </p> </div> <div class="refsect1 parameters" id="refsect1-domtext.iswhitespaceinelementcontent-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-domtext.iswhitespaceinelementcontent-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if node contains zero or more whitespace characters and   nothing else. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div></div>
 * 
     * Indicates whether this text node contains whitespace
     * @link https://php.net/manual/zh/domtext.iswhitespaceinelementcontent.php
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function isWhitespaceInElementContent(): bool {}

/**
 * <div id="domtext.iselementcontentwhitespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMText::isElementContentWhitespace</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">DOMText::isElementContentWhitespace</span> — <span class="dc-title">Returns whether this text node contains whitespace in element content</span></p> </div> <div class="refsect1 description" id="refsect1-domtext.iselementcontentwhitespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMText::isElementContentWhitespace</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-domtext.iselementcontentwhitespace-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-domtext.iselementcontentwhitespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 */
    public function isElementContentWhitespace(): bool {}

    /**
     * @param $content
     */
    public function replaceWholeText($content) {}

    /**
     * Creates a new <classname>DOMText</classname> object
     * @link https://php.net/manual/en/domtext.construct.php
     * @param string $data [optional] The value of the text node. If not supplied an empty text node is created.
     */
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data = '') {}
}

/**
 * <div id="class.domcomment" class="reference"> <h1 class="title">The DOMComment class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domcomment.intro">   <h2 class="title">简介</h2>   <p class="para">    Represents comment nodes, characters delimited by <span class="code">&lt;!--</span>    and <span class="code">--&gt;</span>.   </p>  </div>   <div class="section" id="domcomment.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMComment</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domcharacterdata.php" class="classname">DOMCharacterData</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.data">\$<var class="varname">data</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.length">\$<var class="varname">length</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.previouselementsibling">\$<var class="varname">previousElementSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.nextelementsibling">\$<var class="varname">nextElementSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcomment.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span><span class="initializer"> = ""</span></span>)</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::remove}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceWith}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>    <div class="section">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li><a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1728279322" class="link external">»&nbsp;W3C specification of Comment</a></li>    </ul>     </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMComment::__construct} — Creates a new DOMComment object</li></ul></div>
 * 
 * The DOMComment class represents comment nodes,
 * characters delimited by lt;!-- and --&gt;.
 * @link https://php.net/manual/zh/class.domcomment.php
 */
class DOMComment extends DOMCharacterData
{
    /**
     * Creates a new DOMComment object
     * @link https://php.net/manual/en/domcomment.construct.php
     * @param string $data [optional] The value of the comment
     */
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data = '') {}
}

/**
 * @removed 8.0
 */
class DOMTypeinfo {}

/**
 * @removed 8.0
 */
class DOMUserDataHandler
{

    public function handle() {}
}

/**
 * @removed 8.0
 */
class DOMDomError {}

/**
 * @removed 8.0
 */
class DOMErrorHandler
{
    /**
     * @param DOMDomError $error
     */
    public function handleError(DOMDomError $error) {}
}

/**
 * @removed 8.0
 */
class DOMLocator {}

/**
 * @removed 8.0
 */
class DOMConfiguration
{
    /**
     * @param $name
     * @param $value
     */
    public function setParameter($name, $value) {}

    /**
     * @param $name [optional]
     */
    public function getParameter($name) {}

    /**
     * @param $name [optional]
     * @param $value [optional]
     */
    public function canSetParameter($name, $value) {}
}

/**
 * <div id="class.domcdatasection" class="reference"> <h1 class="title">The DOMCdataSection class</h1>  <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>  <div class="section" id="domcdatasection.intro">   <h2 class="title">简介</h2>   <p class="para">    The <span class="classname"><strong class="classname">DOMCdataSection</strong></span> class inherits from    <span class="classname"><a href="https://php.net/manual/zh/class.domtext.php" class="classname">DOMText</a></span> for textual representation    of CData constructs.   </p>  </div>  <div class="section" id="domcdatasection.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMCdataSection</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domtext.php" class="classname">DOMText</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domtext.php#domtext.props.wholetext">\$<var class="varname">wholeText</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.data">\$<var class="varname">data</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.length">\$<var class="varname">length</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.previouselementsibling">\$<var class="varname">previousElementSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domcharacterdata.php#domcharacterdata.props.nextelementsibling">\$<var class="varname">nextElementSibling</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domcdatasection.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>)</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMText::isElementContentWhitespace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMText::isWhitespaceInElementContent}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMText::splitText}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domtext.php" class="type DOMText" style="color:#EAB766">DOMText</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::after}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::appendData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::before}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::deleteData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::insertData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::remove}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::replaceWith}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">...\$nodes</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMCharacterData::substringData}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$count</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMCdataSection::__construct} — Constructs a new DOMCdataSection object</li></ul></div>
 * 
 * The DOMCdataSection inherits from DOMText for textural representation of CData constructs.
 * @link https://secure.php.net/manual/en/class.domcdatasection.php
 */
class DOMCdataSection extends DOMText
{
    /**
     * The value of the CDATA node. If not supplied, an empty CDATA node is created.
     * @param string $data The value of the CDATA node. If not supplied, an empty CDATA node is created.
     * @link https://secure.php.net/manual/en/domcdatasection.construct.php
     */
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data) {}
}

/**
 * <div id="class.domdocumenttype" class="reference"> <h1 class="title">The DOMDocumentType class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domdocumenttype.intro">   <h2 class="title">简介</h2>   <p class="para">    Each <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> has a <span class="literal">doctype</span>    attribute whose value is either <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> or a <span class="classname"><strong class="classname">DOMDocumentType</strong></span> object.   </p>  </div>   <div class="section" id="domdocumenttype.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMDocumentType</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.name">\$<var class="varname">name</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.entities">\$<var class="varname">entities</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.notations">\$<var class="varname">notations</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.publicid">\$<var class="varname">publicId</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.systemid">\$<var class="varname">systemId</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domdocumenttype.php#domdocumenttype.props.internalsubset">\$<var class="varname">internalSubset</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domdocumenttype.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domdocumenttype.props.publicid"><var class="varname">publicId</var></dt>     <dd>      <p class="para">The public identifier of the external subset.</p>     </dd>             <dt id="domdocumenttype.props.systemid"><var class="varname">systemId</var></dt>     <dd>      <p class="para">       The system identifier of the external subset. This may be an       absolute <span>URI</span> or not.      </p>     </dd>             <dt id="domdocumenttype.props.name"><var class="varname">name</var></dt>     <dd>      <p class="para">       The name of <span>DTD</span>; i.e., the name immediately following the       <span class="literal">DOCTYPE</span> keyword.      </p>     </dd>             <dt id="domdocumenttype.props.entities"><var class="varname">entities</var></dt>     <dd>      <p class="para">       A <span class="classname"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="classname">DOMNamedNodeMap</a></span> containing the general        entities, both external and internal, declared in the <span>DTD</span>.      </p>     </dd>             <dt id="domdocumenttype.props.notations"><var class="varname">notations</var></dt>     <dd>      <p class="para">       A <span class="classname"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="classname">DOMNamedNodeMap</a></span> containing the notations       declared in the <span>DTD</span>.      </p>     </dd>             <dt id="domdocumenttype.props.internalsubset"><var class="varname">internalSubset</var></dt>     <dd>      <p class="para">       The internal subset as a string, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there is none. This       does not contain the delimiting square brackets.      </p>     </dd>       </dl>  </div>    </div> </div>
 * 
 * The DOMDocumentType class
 * @link https://php.net/manual/zh/class.domdocumenttype.php
 */
class DOMDocumentType extends DOMNode
{
    /**
     * @var string
     * The public identifier of the external subset.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.publicid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $publicId;

    /**
     * @var string
     * The system identifier of the external subset. This may be an absolute URI or not.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.systemid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $systemId;

    /**
     * @var string
     * The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.name
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $name;

    /**
     * @var DOMNamedNodeMap<DOMEntity>
     * A <classname>DOMNamedNodeMap</classname> containing the general entities, both external and internal, declared in the DTD.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.entities
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNamedNodeMap'], default: '')]
    public $entities;

    /**
     * @var DOMNamedNodeMap<DOMNotation>
     * A <clasname>DOMNamedNodeMap</classname> containing the notations declared in the DTD.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.notations
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMNamedNodeMap'], default: '')]
    public $notations;

    /**
     * @var string|null
     * The internal subset as a string, or null if there is none. This is does not contain the delimiting square brackets.
     * @link https://php.net/manual/en/class.domdocumenttype.php#domdocumenttype.props.internalsubset
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $internalSubset;
}

/**
 * <div id="class.domnotation" class="reference"> <h1 class="title">The DOMNotation class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domnotation.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMNotation</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnotation.php#domnotation.props.publicid">\$<var class="varname">publicId</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnotation.php#domnotation.props.systemid">\$<var class="varname">systemId</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domnotation.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domnotation.props.publicid"><var class="varname">publicId</var></dt>     <dd>      <span class="simpara">The public identifier associated with the notation.</span>     </dd>             <dt id="domnotation.props.systemid"><var class="varname">systemId</var></dt>     <dd>      <span class="simpara">The system identifier associated with the notation.</span>     </dd>       </dl>  </div>    </div> </div>
 * 
 * The DOMNotation class
 * @link https://php.net/manual/zh/class.domnotation.php
 */
class DOMNotation extends DOMNode
{
    /**
     * @var string
     *
     * @link https://php.net/manual/en/class.domnotation.php#domnotation.props.publicid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $publicId;

    /**
     * @var string
     *
     * @link https://php.net/manual/en/class.domnotation.php#domnotation.props.systemid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $systemId;
}

/**
 * <div id="class.domentity" class="reference"> <h1 class="title">The DOMEntity class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domentity.intro">   <h2 class="title">简介</h2>   <p class="para">    This interface represents a known entity, either parsed or unparsed, in an XML document.   </p>  </div>   <div class="section" id="domentity.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMEntity</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.publicid">\$<var class="varname">publicId</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.systemid">\$<var class="varname">systemId</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.notationname">\$<var class="varname">notationName</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.actualencoding">\$<var class="varname">actualEncoding</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.encoding">\$<var class="varname">encoding</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domentity.php#domentity.props.version">\$<var class="varname">version</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domentity.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domentity.props.publicid"><var class="varname">publicId</var></dt>     <dd>      <p class="para">       The public identifier associated with the entity if specified, and       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> otherwise.      </p>     </dd>             <dt id="domentity.props.systemid"><var class="varname">systemId</var></dt>     <dd>      <p class="para">       The system identifier associated with the entity if specified, and       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> otherwise. This may be an absolute URI or not.      </p>     </dd>             <dt id="domentity.props.notationname"><var class="varname">notationName</var></dt>     <dd>      <p class="para">       For unparsed entities, the name of the notation for the entity. For       parsed entities, this is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domentity.props.actualencoding"><var class="varname">actualEncoding</var></dt>     <dd>      <p class="para">       <em>Deprecated as of PHP 8.4.0</em>.       This has always been equal to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domentity.props.encoding"><var class="varname">encoding</var></dt>     <dd>      <p class="para">       <em>Deprecated as of PHP 8.4.0</em>.       This has always been equal to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>             <dt id="domentity.props.version"><var class="varname">version</var></dt>     <dd>      <p class="para">       <em>Deprecated as of PHP 8.4.0</em>.       This has always been equal to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </p>     </dd>       </dl>  </div> <div class="section">  <h2 class="title">更新日志</h2>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <var class="varname">actualEncoding</var>,       <var class="varname">encoding</var>, and       <var class="varname">version</var> are formally deprecated now because they have       always been equal to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div>  </div>  </div>
 * 
 * The DOMEntity class represents a known entity, either parsed or unparsed, in an XML document.
 * @link https://php.net/manual/zh/class.domentity.php
 */
class DOMEntity extends DOMNode
{
    /**
     * @var string|null
     * The public identifier associated with the entity if specified, and NULL otherwise.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.publicid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $publicId;

    /**
     * @var string|null
     * The system identifier associated with the entity if specified, and NULL otherwise. This may be an
     * absolute URI or not.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.systemid
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $systemId;

    /**
     * @var string|null
     * For unparsed entities, the name of the notation for the entity. For parsed entities, this is NULL.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.notationname
     */
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $notationName;

    /**
     * @var string|null
     * An attribute specifying the encoding used for this entity at the time of parsing, when it is an external
     * parsed entity. This is NULL if it an entity from the internal subset or if it is not known.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.actualencoding
     */
    #[Deprecated("The property is deprecated", since: "8.4")]
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $actualEncoding;

    /**
     * @var string|null
     * An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external
     * parsed entity. This is NULL otherwise.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.encoding
     */
    #[Deprecated("The property is deprecated", since: "8.4")]
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $encoding;

    /**
     * @var string|null
     * An attribute specifying, as part of the text declaration, the version number of this entity, when it is an
     * external parsed entity. This is NULL otherwise.
     * @link https://php.net/manual/en/class.domentity.php#domentity.props.version
     */
    #[Deprecated("The property is deprecated", since: "8.4")]
    #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: '')]
    public $version;
}

/**
 * <div id="class.domentityreference" class="reference"> <h1 class="title">The DOMEntityReference class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>    <div class="section" id="domentityreference.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMEntityReference</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domentityreference.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>)</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>     </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMEntityReference::__construct} — Creates a new DOMEntityReference object</li></ul></div>
 * 
 * Extends DOMNode.
 * @link https://php.net/manual/zh/class.domentityreference.php
 */
class DOMEntityReference extends DOMNode
{
    /**
     * Creates a new DOMEntityReference object
     * @link https://php.net/manual/en/domentityreference.construct.php
     * @param string $name The name of the entity reference.
     */
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name) {}
}

/**
 * <div id="class.domprocessinginstruction" class="reference"> <h1 class="title">The DOMProcessingInstruction class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domprocessinginstruction.intro">   <h2 class="title">简介</h2>   <p class="simpara">    This represents a processing instruction (PI) node.    These are meant to indicate data areas meant for processing by specific applications.   </p>  </div>   <div class="section" id="domprocessinginstruction.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMProcessingInstruction</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.domnode.php" class="classname">DOMNode</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_DISCONNECTED}</var><span class="initializer"> = 0x1</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_PRECEDING}</var><span class="initializer"> = 0x2</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_FOLLOWING}</var><span class="initializer"> = 0x4</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINS}</var><span class="initializer"> = 0x8</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_CONTAINED_BY}</var><span class="initializer"> = 0x10</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link DOMNode::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC}</var><span class="initializer"> = 0x20</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php#domprocessinginstruction.props.target">\$<var class="varname">target</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domprocessinginstruction.php#domprocessinginstruction.props.data">\$<var class="varname">data</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodename">\$<var class="varname">nodeName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodevalue">\$<var class="varname">nodeValue</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nodetype">\$<var class="varname">nodeType</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentnode">\$<var class="varname">parentNode</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domelement.php" class="type DOMElement" style="color:#EAB766">DOMElement</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.parentelement">\$<var class="varname">parentElement</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnodelist.php" class="type DOMNodeList" style="color:#EAB766">DOMNodeList</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.childnodes">\$<var class="varname">childNodes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.firstchild">\$<var class="varname">firstChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.lastchild">\$<var class="varname">lastChild</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.previoussibling">\$<var class="varname">previousSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.nextsibling">\$<var class="varname">nextSibling</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamednodemap.php" class="type DOMNamedNodeMap" style="color:#EAB766">DOMNamedNodeMap</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.attributes">\$<var class="varname">attributes</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.isconnected">\$<var class="varname">isConnected</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.ownerdocument">\$<var class="varname">ownerDocument</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.namespaceuri">\$<var class="varname">namespaceURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.prefix">\$<var class="varname">prefix</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.localname">\$<var class="varname">localName</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.baseuri">\$<var class="varname">baseURI</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domnode.php#domnode.props.textcontent">\$<var class="varname">textContent</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domprocessinginstruction.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span><span class="initializer"> = ""</span></span>)</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::appendChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14N}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::C14NFile}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$exclusive</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$withComments</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$xpath</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$nsPrefixes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::cloneNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$deep</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::compareDocumentPosition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::contains}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnamespacenode.php" class="type DOMNameSpaceNode" style="color:#EAB766">DOMNameSpaceNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getLineNo}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getNodePath}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::getRootNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasAttributes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::hasChildNodes}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::insertBefore}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$child</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isDefaultNamespace}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isEqualNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSameNode}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$otherNode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::isSupported}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$feature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$version</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupNamespaceURI}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::lookupPrefix}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::normalize}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::removeChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::replaceChild}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$node</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span> <span class="parameter" style="color:#3A95FF">\$child</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__sleep}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link DOMNode::__wakeup}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domprocessinginstruction.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domprocessinginstruction.props.target"><var class="varname">target</var></dt>     <dd>      <span class="simpara">A string representing to what application the data is intended for.</span>     </dd>             <dt id="domprocessinginstruction.props.data"><var class="varname">data</var></dt>     <dd>      <span class="simpara">Application-specific data.</span>     </dd>       </dl>  </div>    </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMProcessingInstruction::__construct} — Creates a new DOMProcessingInstruction object</li></ul></div>
 * 
 * The DOMProcessingInstruction class
 * @link https://php.net/manual/zh/class.domprocessinginstruction.php
 */
class DOMProcessingInstruction extends DOMNode
{
    /**
     * @link https://php.net/manual/en/class.domprocessinginstruction.php#domprocessinginstruction.props.target
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $target;

    /**
     * @link https://php.net/manual/en/class.domprocessinginstruction.php#domprocessinginstruction.props.data
     */
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $data;

    /**
     * Creates a new <classname>DOMProcessingInstruction</classname> object
     * @link https://php.net/manual/en/domprocessinginstruction.construct.php
     * @param string $name The tag name of the processing instruction.
     * @param string $value [optional] The value of the processing instruction.
     */
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $value = ''
    ) {}
}


class DOMStringExtend
{
    /**
     * @param $offset32
     */
    public function findOffset16($offset32) {}

    /**
     * @param $offset16
     */
    public function findOffset32($offset16) {}
}

/**
 * <div id="class.domxpath" class="reference"> <h1 class="title">The DOMXPath class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="domxpath.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Allows to use XPath 1.0 queries on HTML or XML documents.   </p>  </div>   <div class="section" id="domxpath.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DOMXPath</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domxpath.php#domxpath.props.document">\$<var class="varname">document</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.domxpath.php#domxpath.props.registernodenamespaces">\$<var class="varname">registerNodeNamespaces</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domdocument.php" class="type DOMDocument" style="color:#EAB766">DOMDocument</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$registerNodeNS</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.evaluate.php" class="methodname" style="color:#CC7832">evaluate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$contextNode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$registerNodeNS</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.query.php" class="methodname" style="color:#CC7832">query</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$contextNode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$registerNodeNS</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.quote.php" class="methodname" style="color:#CC7832">quote</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.registernamespace.php" class="methodname" style="color:#CC7832">registerNamespace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.registerphpfunctionns.php" class="methodname" style="color:#CC7832">registerPhpFunctionNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespaceURI</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callable</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/domxpath.registerphpfunctions.php" class="methodname" style="color:#CC7832">registerPhpFunctions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$restrict</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>   </div>   <div class="section" id="domxpath.props">   <h2 class="title">属性</h2>   <dl>         <dt id="domxpath.props.document"><var class="varname">document</var></dt>     <dd>      <span class="simpara">The document that is linked to this object.</span>     </dd>             <dt id="domxpath.props.registernodenamespaces"><var class="varname">registerNodeNamespaces</var></dt>     <dd>      <span class="simpara">When set to <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, namespaces in the node are registered.</span>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        It is no longer possible to clone a <span class="classname"><strong class="classname">DOMXPath</strong></span>        object. Doing so will result in an exception being thrown.        Prior to PHP 8.4.0 this resulted in an unusable object.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        The <var class="varname">registerNodeNamespaces</var> property has been added.       </td>      </tr>     </tbody>       </table>  </div>    </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DOMXPath::__construct} — Creates a new DOMXPath object</li><li>{@link DOMXPath::evaluate} — Evaluates the given XPath expression and returns a typed result if possible</li><li>{@link DOMXPath::query} — Evaluates the given XPath expression</li><li>{@link DOMXPath::quote} — Quotes a string for use in an XPath expression</li><li>{@link DOMXPath::registerNamespace} — Registers the namespace with the DOMXPath object</li><li>{@link DOMXPath::registerPhpFunctionNS} — Register a PHP functions as namespaced XPath function</li><li>{@link DOMXPath::registerPhpFunctions} — Register PHP functions as XPath functions</li></ul></div>
 * 
 * The DOMXPath class (supports XPath 1.0)
 * @link https://php.net/manual/zh/class.domxpath.php
 */
class DOMXPath
{
    /**
     * @var DOMDocument
     *
     * @link https://php.net/manual/en/class.domxpath.php#domxpath.props.document
     */
    #[LanguageLevelTypeAware(['8.1' => 'DOMDocument'], default: '')]
    public $document;

    #[LanguageLevelTypeAware(['8.1' => 'bool'], default: '')]
    public $registerNodeNamespaces;

    /**
     * Creates a new <classname>DOMXPath</classname> object
     * @link https://php.net/manual/en/domxpath.construct.php
     * @param DOMDocument $document The <classname>DOMDocument</classname> associated with the <classname>DOMXPath</classname>.
     * @param bool $registerNodeNS [optional] allow global flag to configure query() or evaluate() calls. Since 8.0.
     */
    public function __construct(DOMDocument $document, #[PhpStormStubsElementAvailable(from: '8.0')] bool $registerNodeNS = true) {}

    /**
 * <div id="domxpath.registernamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::registerNamespace</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMXPath::registerNamespace</span> — <span class="dc-title">   Registers the namespace with the <span class="classname"><a href="https://php.net/manual/zh/class.domxpath.php" class="classname">DOMXPath</a></span> object  </span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.registernamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerNamespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$prefix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Registers the <span class="parameter" style="color:#3A95FF">namespace</span> and    <span class="parameter" style="color:#3A95FF">prefix</span> with the DOMXPath object.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.registernamespace-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       The prefix.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The URI of the namespace.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.registernamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
     * Registers the namespace with the <classname>DOMXPath</classname> object
     * @link https://php.net/manual/zh/domxpath.registernamespace.php
     * @param string $prefix <p>
     * The prefix.
     * </p>
     * @param string $namespace <p>
     * The URI of the namespace.
     * </p>
     * @return bool true on success or false on failure.
     */
    #[TentativeType]
    public function registerNamespace(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $prefix,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace
    ): bool {}

    /**
 * <div id="domxpath.query" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::query</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMXPath::query</span> — <span class="dc-title">   Evaluates the given XPath expression   </span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.query-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::query</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$contextNode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$registerNodeNS</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   Executes the given XPath <span class="parameter" style="color:#3A95FF">expression</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.query-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">expression</span></dt>     <dd>      <p class="para">       The XPath expression to execute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">contextNode</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">contextNode</span> can be specified for       doing relative XPath queries. By default, the queries are relative to        the root element.      </p>     </dd>         <dt><span class="parameter" style="color:#3A95FF">registerNodeNS</span></dt> <dd>  <p class="para">   Whether to automatically register the in-scope namespace prefixes of the context node to the <span class="classname"><a href="https://php.net/manual/zh/class.domxpath.php" class="classname">DOMXPath</a></span> object.   This can be used to avoid needing to call <span class="methodname" style="color:#CC7832">{@link DOMXPath::registerNamespace()}</span> manually for each in-scope namespaces.   When a namespace prefix conflict exists, only the nearest descendant namespace prefix is registered.  </p> </dd>   </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.query-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span> containing all nodes matching   the given XPath <span class="parameter" style="color:#3A95FF">expression</span>. Any expression which   does not return nodes will return an empty   <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span>.  </p>  <p class="para">   If the <span class="parameter" style="color:#3A95FF">expression</span> is malformed or the   <span class="parameter" style="color:#3A95FF">contextNode</span> is invalid,   <span class="methodname" style="color:#CC7832"><strong>DOMXPath::query()</strong></span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-domxpath.query-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   The following errors are possible when using an expression that invokes   PHP callbacks.  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a PHP callback is invoked but there were no callbacks registered,     or if the named callback was not registered.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     the <span class="literal">php:function</span> syntax is used and the handler     name is not a string.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a non-DOM object was returned from a callback.    </span>   </li>  </ul> </div> <div class="refsect1 examples" id="refsect1-domxpath.query-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5803">    <p><strong>示例 #1 Getting all the english books</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// We don't want to bother with white spaces<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">preserveWhiteSpace </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// We start from the root element<br></span><span style="color: #9876AA">\$query </span><span style="color: #007700">= </span><span style="color: #DD0000">'//book/chapter/para/informaltable/tgroup/tbody/row/entry[. = "en"]'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #9876AA">\$query</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$entries </span><span style="color: #007700">as </span><span style="color: #9876AA">\$entry</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Found </span><span style="color: #007700">{</span><span style="color: #9876AA">\$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">}</span><span style="color: #DD0000">," </span><span style="color: #007700">.<br>         </span><span style="color: #DD0000">" by </span><span style="color: #007700">{</span><span style="color: #9876AA">\$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">}</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Found&nbsp;The&nbsp;Grapes&nbsp;of&nbsp;Wrath,&nbsp;by&nbsp;John&nbsp;Steinbeck<br>Found&nbsp;The&nbsp;Pearl,&nbsp;by&nbsp;John&nbsp;Steinbeck</blockquote></div>    </div>    <div class="example-contents"><p>     We can also use the <span class="parameter" style="color:#3A95FF">contextNode</span> parameter to shorten     our expression:    </p></div>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">preserveWhiteSpace </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-docbook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$tbody </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'tbody'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// our query is relative to the tbody node<br></span><span style="color: #9876AA">\$query </span><span style="color: #007700">= </span><span style="color: #DD0000">'row/entry[. = "en"]'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #9876AA">\$query</span><span style="color: #007700">, </span><span style="color: #9876AA">\$tbody</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$entries </span><span style="color: #007700">as </span><span style="color: #9876AA">\$entry</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Found </span><span style="color: #007700">{</span><span style="color: #9876AA">\$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">}</span><span style="color: #DD0000">," </span><span style="color: #007700">.<br>         </span><span style="color: #DD0000">" by </span><span style="color: #007700">{</span><span style="color: #9876AA">\$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">previousSibling</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">}</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domxpath.query-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::evaluate()} - Evaluates the given XPath expression and returns a typed result if possible</span></li>   </ul>   </div></div>
 * 
     * Evaluates the given XPath expression
     * @link https://php.net/manual/zh/domxpath.query.php
     * @param string $expression <p>
     * The XPath expression to execute.
     * </p>
     * @param DOMNode $contextNode [optional] <p>
     * The optional contextnode can be specified for
     * doing relative XPath queries. By default, the queries are relative to
     * the root element.
     * </p>
     * @param bool $registerNodeNS [optional] <p>The optional registerNodeNS can be specified to
     * disable automatic registration of the context node.</p>
     * @return DOMNodeList<DOMNode|DOMNameSpaceNode>|false a DOMNodeList containing all nodes matching
     * the given XPath expression. Any expression which does not return nodes
     * will return an empty DOMNodeList. The return is false if the expression
     * is malformed or the contextnode is invalid.
     */
    #[TentativeType]
    public function query(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] #[Language('XPath')] $expression,
        #[LanguageLevelTypeAware(['8.0' => 'DOMNode|null'], default: '')] $contextNode = null,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $registerNodeNS = true
    ): mixed {}

    /**
 * <div id="domxpath.evaluate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::evaluate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMXPath::evaluate</span> — <span class="dc-title">   Evaluates the given XPath expression and returns a typed result if possible  </span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.evaluate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::evaluate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.domnode.php" class="type DOMNode" style="color:#EAB766">DOMNode</a></span></span> <span class="parameter" style="color:#3A95FF">\$contextNode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$registerNodeNS</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   Executes the given XPath <span class="parameter" style="color:#3A95FF">expression</span> and returns   a typed result if possible.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.evaluate-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">expression</span></dt>     <dd>      <p class="para">       The XPath expression to execute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">contextNode</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">contextNode</span> can be specified for       doing relative XPath queries. By default, the queries are relative to        the root element.      </p>     </dd>         <dt><span class="parameter" style="color:#3A95FF">registerNodeNS</span></dt> <dd>  <p class="para">   Whether to automatically register the in-scope namespace prefixes of the context node to the <span class="classname"><a href="https://php.net/manual/zh/class.domxpath.php" class="classname">DOMXPath</a></span> object.   This can be used to avoid needing to call <span class="methodname" style="color:#CC7832">{@link DOMXPath::registerNamespace()}</span> manually for each in-scope namespaces.   When a namespace prefix conflict exists, only the nearest descendant namespace prefix is registered.  </p> </dd>   </dl>   </div> <div class="refsect1 errors" id="domxpath.query..errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   The following errors are possible when using an expression that invokes   PHP callbacks.  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a PHP callback is invoked but there were no callbacks registered,     or if the named callback was not registered.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     the <span class="literal">php:function</span> syntax is used and the handler     name is not a string.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a non-DOM object was returned from a callback.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.evaluate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a typed result if possible or a <span class="classname"><a href="https://php.net/manual/zh/class.domnodelist.php" class="classname">DOMNodeList</a></span>    containing all nodes matching the given XPath <span class="parameter" style="color:#3A95FF">expression</span>.   </p>  <p class="para">   If the <span class="parameter" style="color:#3A95FF">expression</span> is malformed or the   <span class="parameter" style="color:#3A95FF">contextNode</span> is invalid,   <span class="methodname" style="color:#CC7832"><strong>DOMXPath::evaluate()</strong></span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-domxpath.evaluate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5802">    <p><strong>示例 #1 Getting the count of all the english books</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-dcobook.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$tbody </span><span style="color: #007700">= </span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">'tbody'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// our query is relative to the tbody node<br></span><span style="color: #9876AA">\$query </span><span style="color: #007700">= </span><span style="color: #DD0000">'count(row/entry[. = "en"])'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">evaluate</span><span style="color: #007700">(</span><span style="color: #9876AA">\$query</span><span style="color: #007700">, </span><span style="color: #9876AA">\$tbody</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"There are </span><span style="color: #9876AA">\$entries</span><span style="color: #DD0000"> english books\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">There&nbsp;are&nbsp;2&nbsp;english&nbsp;books</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domxpath.evaluate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::query()} - Evaluates the given XPath expression</span></li>   </ul>   </div></div>
 * 
     * Evaluates the given XPath expression and returns a typed result if possible.
     * @link https://php.net/manual/zh/domxpath.evaluate.php
     * @param string $expression <p>
     * The XPath expression to execute.
     * </p>
     * @param DOMNode $contextNode [optional] <p>
     * The optional contextnode can be specified for
     * doing relative XPath queries. By default, the queries are relative to
     * the root element.
     * </p>
     * @param bool $registerNodeNS [optional]
     * <p>
     * The optional registerNodeNS can be specified to disable automatic registration of the context node.
     * </p>
     * @return mixed a typed result if possible or a DOMNodeList<DOMNode|DOMNameSpaceNode>|false
     * containing all nodes matching the given XPath expression.
     */
    #[TentativeType]
    public function evaluate(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] #[Language('XPath')] $expression,
        #[LanguageLevelTypeAware(['8.0' => 'DOMNode|null'], default: '')] $contextNode = null,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $registerNodeNS = true
    ): mixed {}

    /**
 * <div id="domxpath.registerphpfunctions" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::registerPhpFunctions</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DOMXPath::registerPhpFunctions</span> — <span class="dc-title">Register PHP functions as XPath functions</span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.registerphpfunctions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerPhpFunctions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$restrict</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   This method enables the ability to use PHP functions within XPath expressions.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.registerphpfunctions-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">restrict</span></dt>     <dd>      <p class="para">       Use this parameter to only allow certain functions to be called from XPath.      </p>      <p class="para">       This parameter can be one of the following:       a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (a function name),       an indexed <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of function names,       or an associative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with keys being the function name       and the associated value being the <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.registerphpfunctions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-domxpath.registerphpfunctions-errors">  <h3 class="title">错误／异常</h3>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if     a callback name is not valid.    </span>   </li>   <li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">options</span> contains an invalid option. </span></li><li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">overrideEncoding</span> is an unknown encoding. </span></li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     a given callback is not callable.    </span>   </li>  </ul> </div> <div class="refsect1 changelog" id="refsect1-domxpath.registerphpfunctions-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr id="domxpath.registerphpfunctions..changelog.errors">      <td>8.4.0</td>      <td>       Invalid callback names now throws a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>.       Passing a non-callable entry now throws a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span>.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       It is now possible to use <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>s for callbacks       when using <span class="parameter" style="color:#3A95FF">restrict</span> with <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>       entries.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-domxpath.registerphpfunctions-examples">  <h3 class="title">示例</h3>  <p class="para">   The following examples use <var class="filename">book.xml</var> which contains the following:  </p>  <p class="para">   </p><div class="example" id="example-5806">    <p><strong>示例 #1 book.xml</strong></p>    <div class="example-contents"><div class="annotation-interactive xmlcode"><blockquote style="border:1px gray solid;"><?xml &nbsp;version="1.0"&nbsp;encoding="UTF-8"?><br><books><br>&nbsp;<book><br>&nbsp;&nbsp;<title>PHP&nbsp;Basics</title><br>&nbsp;&nbsp;<author>Jim&nbsp;Smith</author><br>&nbsp;&nbsp;<author>Jane&nbsp;Smith</author><br>&nbsp;</book><br>&nbsp;<book><br>&nbsp;&nbsp;<title>PHP&nbsp;Secrets</title><br>&nbsp;&nbsp;<author>Jenny&nbsp;Smythe</author><br>&nbsp;</book><br>&nbsp;<book><br>&nbsp;&nbsp;<title>XML&nbsp;basics</title><br>&nbsp;&nbsp;<author>Joe&nbsp;Black</author><br>&nbsp;</book><br></books></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5807">    <p><strong>示例 #2 <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerPhpFunctions()</strong></span> with <span class="literal">php:functionString</span></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-simple.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register the php: namespace (required)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"http://php.net/xpath"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register PHP functions (no restrictions)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPhpFunctions</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Call substr function on the book title<br></span><span style="color: #9876AA">\$nodes </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'//book[php:functionString("substr", title, 0, 3) = "PHP"]'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found </span><span style="color: #007700">{</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">length</span><span style="color: #007700">}</span><span style="color: #DD0000"> books starting with 'PHP':\n"</span><span style="color: #007700">;<br>foreach (</span><span style="color: #9876AA">\$nodes </span><span style="color: #007700">as </span><span style="color: #9876AA">\$node</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">\$title  </span><span style="color: #007700">= </span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"title"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">\$author </span><span style="color: #007700">= </span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"author"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">;<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$title</span><span style="color: #DD0000"> by </span><span style="color: #9876AA">\$author</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Found&nbsp;2&nbsp;books&nbsp;starting&nbsp;with&nbsp;'PHP':<br>PHP&nbsp;Basics&nbsp;by&nbsp;Jim&nbsp;Smith<br>PHP&nbsp;Secrets&nbsp;by&nbsp;Jenny&nbsp;Smythe</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5808">    <p><strong>示例 #3 <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerPhpFunctions()</strong></span> with <span class="literal">php:function</span></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-simple.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register the php: namespace (required)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"http://php.net/xpath"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register PHP functions (has_multiple only)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPhpFunctions</span><span style="color: #007700">(</span><span style="color: #DD0000">"has_multiple"</span><span style="color: #007700">);<br> <br>function </span><span style="color: #9876AA">has_multiple</span><span style="color: #007700">(</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// Return true if more than one author<br>    </span><span style="color: #007700">return </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">) &gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>}<br></span><span style="color: #FF8000">// Filter books with multiple authors<br></span><span style="color: #9876AA">\$books </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'//book[php:function("has_multiple", author)]'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Books with multiple authors:\n"</span><span style="color: #007700">;<br>foreach (</span><span style="color: #9876AA">\$books </span><span style="color: #007700">as </span><span style="color: #9876AA">\$book</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$book</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"title"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Books&nbsp;with&nbsp;multiple&nbsp;authors:<br>PHP&nbsp;Basics</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-5809">    <p><strong>示例 #4 <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerPhpFunctions()</strong></span> with a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span></strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples/book-simple.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register the php: namespace (required)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"http://php.net/xpath"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register PHP functions (has_multiple only)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPhpFunctions</span><span style="color: #007700">([</span><span style="color: #DD0000">"has_multiple" </span><span style="color: #007700">=&gt; fn (</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">) =&gt; </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">) &gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br><br></span><span style="color: #FF8000">// Filter books with multiple authors<br></span><span style="color: #9876AA">\$books </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'//book[php:function("has_multiple", author)]'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Books with multiple authors:\n"</span><span style="color: #007700">;<br>foreach (</span><span style="color: #9876AA">\$books </span><span style="color: #007700">as </span><span style="color: #9876AA">\$book</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$book</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"title"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Books&nbsp;with&nbsp;multiple&nbsp;authors:<br>PHP&nbsp;Basics</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-domxpath.registerphpfunctions-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::registerNamespace()} - Registers the namespace with the DOMXPath object</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::query()} - Evaluates the given XPath expression</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::evaluate()} - Evaluates the given XPath expression and returns a typed result if possible</span></li>    <li><span class="methodname" style="color:#CC7832">{@link XSLTProcessor::registerPHPFunctions()} - Enables the ability to use PHP functions as XSLT functions</span></li>   </ul>   </div></div>
 * 
     * Register PHP functions as XPath functions
     * @link https://php.net/manual/zh/domxpath.registerphpfunctions.php
     * @param string|string[] $restrict [optional] <p>
     * Use this parameter to only allow certain functions to be called from XPath.
     * </p>
     * <p>
     * This parameter can be either a string (a function name) or
     * an array of function names.
     * </p>
     * @return void
     */
    public function registerPhpFunctions($restrict = null) {}

    /**
 * <div id="domxpath.registerphpfunctionns" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::registerPhpFunctionNS</h1>  <p class="verinfo">(PHP &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">DOMXPath::registerPhpFunctionNS</span> — <span class="dc-title">Register a PHP functions as namespaced XPath function</span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.registerphpfunctionns-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::registerPhpFunctionNS</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespaceURI</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callable</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="simpara">   This method enables the ability to use a PHP function as a namespaced XPath function   inside XPath expressions.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.registerphpfunctionns-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">namespaceURI</span></dt>    <dd>     <span class="simpara">      The URI of the namespace.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <span class="simpara">      The local function name inside the namespace.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">callable</span></dt>    <dd>     <span class="simpara">      The PHP function to call when the XPath function gets called within the XPath expression.      When a node list is passed as parameter to the callback,      they are arrays containing the matched DOM nodes.     </span>    </dd>     </dl> </div> <div class="refsect1 errors" id="domxpath.registerphpfunctions..errors">  <h3 class="title">错误／异常</h3>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if     a callback name is not valid.    </span>   </li>   <li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">options</span> contains an invalid option. </span></li><li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">overrideEncoding</span> is an unknown encoding. </span></li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     a given callback is not callable.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.registerphpfunctionns-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-domxpath.registerphpfunctionns-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5805">   <p><strong>示例 #1 Register a namespaced XPath function and call it from the XPath expression</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt;EOB<br></span><span style="color: #DD0000">&lt;books&gt;<br>&lt;book&gt;<br> &lt;title&gt;PHP Basics&lt;/title&gt;<br> &lt;author&gt;Jim Smith&lt;/author&gt;<br> &lt;author&gt;Jane Smith&lt;/author&gt;<br>&lt;/book&gt;<br>&lt;book&gt;<br> &lt;title&gt;PHP Secrets&lt;/title&gt;<br> &lt;author&gt;Jenny Smythe&lt;/author&gt;<br>&lt;/book&gt;<br>&lt;book&gt;<br> &lt;title&gt;XML basics&lt;/title&gt;<br> &lt;author&gt;Joe Black&lt;/author&gt;<br>&lt;/book&gt;<br>&lt;/books&gt;<br></span><span style="color: #007700">EOB;<br><br></span><span style="color: #9876AA">\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register the my: namespace (required)<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"my"</span><span style="color: #007700">, </span><span style="color: #DD0000">"urn:my.ns"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Register PHP function<br></span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPHPFunctionNS</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'urn:my.ns'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'substring'</span><span style="color: #007700">,<br>    fn (array </span><span style="color: #9876AA">\$arg1</span><span style="color: #007700">, </span><span style="color: #9876AA">int \$start</span><span style="color: #007700">, </span><span style="color: #9876AA">int \$length</span><span style="color: #007700">) =&gt; </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arg1</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">textContent</span><span style="color: #007700">, </span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$length</span><span style="color: #007700">)<br>);<br><br></span><span style="color: #FF8000">// Call substr function on the book title<br></span><span style="color: #9876AA">\$nodes </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'//book[my:substring(title, 0, 3) = "PHP"]'</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found </span><span style="color: #007700">{</span><span style="color: #9876AA">\$nodes</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">length</span><span style="color: #007700">}</span><span style="color: #DD0000"> books starting with 'PHP':\n"</span><span style="color: #007700">;<br>foreach (</span><span style="color: #9876AA">\$nodes </span><span style="color: #007700">as </span><span style="color: #9876AA">\$node</span><span style="color: #007700">) {<br>   </span><span style="color: #9876AA">\$title  </span><span style="color: #007700">= </span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"title"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">;<br>   </span><span style="color: #9876AA">\$author </span><span style="color: #007700">= </span><span style="color: #9876AA">\$node</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getElementsByTagName</span><span style="color: #007700">(</span><span style="color: #DD0000">"author"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">item</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">nodeValue</span><span style="color: #007700">;<br>   echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$title</span><span style="color: #DD0000"> by </span><span style="color: #9876AA">\$author</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">Found&nbsp;2&nbsp;books&nbsp;starting&nbsp;with&nbsp;'PHP':<br>PHP&nbsp;Basics&nbsp;by&nbsp;Jim&nbsp;Smith<br>PHP&nbsp;Secrets&nbsp;by&nbsp;Jenny&nbsp;Smythe</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domxpath.registerphpfunctionns-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::registerNamespace()} - Registers the namespace with the DOMXPath object</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::query()} - Evaluates the given XPath expression</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::evaluate()} - Evaluates the given XPath expression and returns a typed result if possible</span></li>   <li><span class="methodname" style="color:#CC7832">{@link XSLTProcessor::registerPHPFunctions()} - Enables the ability to use PHP functions as XSLT functions</span></li>   <li><span class="methodname" style="color:#CC7832">{@link XSLTProcessor::registerPHPFunctionNS()} - Register a PHP function as namespaced XSLT function</span></li>  </ul> </div></div>
 * 
     * @since 8.4
     */
    public function registerPhpFunctionNS(string $namespaceURI, string $name, callable $callable): void {}

    /**
 * <div id="domxpath.quote" class="refentry"> <div class="refnamediv">  <h1 class="refname">DOMXPath::quote</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">DOMXPath::quote</span> — <span class="dc-title">   Quotes a string for use in an XPath expression  </span></p> </div> <div class="refsect1 description" id="refsect1-domxpath.quote-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DOMXPath::quote</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   Quotes <span class="parameter" style="color:#3A95FF">str</span> for use in an XPath expression.  </p> </div> <div class="refsect1 parameters" id="refsect1-domxpath.quote-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">str</span></dt>     <dd>      <span class="simpara">       The string to quote.      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-domxpath.quote-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns a quoted string to be used in an XPath expression.  </p> </div> <div class="refsect1 examples" id="refsect1-domxpath.quote-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5804">   <p><strong>示例 #1 Matching attribute value with quotes</strong></p>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(&lt;&lt;&lt;XML<br></span><span style="color: #DD0000">&lt;books&gt;<br>    &lt;book name="'quoted' name"&gt;Book title&lt;/book&gt;<br>&lt;/books&gt;<br></span><span style="color: #007700">XML);<br><br></span><span style="color: #9876AA">\$xpath </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">(</span><span style="color: #9876AA">\$doc</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$query </span><span style="color: #007700">= </span><span style="color: #DD0000">"//book[@name=" </span><span style="color: #007700">. </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">::</span><span style="color: #9876AA">quote</span><span style="color: #007700">(</span><span style="color: #DD0000">"'quoted' name"</span><span style="color: #007700">) . </span><span style="color: #DD0000">"]"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$query</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">\$xpath</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #9876AA">\$query</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">\$entries </span><span style="color: #007700">as </span><span style="color: #9876AA">\$entry</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Found "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">textContent</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">//book[@name="'quoted'&nbsp;name"]<br>Found&nbsp;Book&nbsp;title</blockquote></div>   </div>   <div class="example-contents"><p>    Mixed quote types are also supported:   </p></div>   <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">DOMXPath</span><span style="color: #007700">::</span><span style="color: #9876AA">quote</span><span style="color: #007700">(</span><span style="color: #DD0000">"'different' \"quote\" styles"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">concat("'different'&nbsp;",'"quote"&nbsp;styles')</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-domxpath.quote-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::evaluate()} - Evaluates the given XPath expression and returns a typed result if possible</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::query()} - Evaluates the given XPath expression</span></li>   </ul>   </div></div>
 * 
     * @since 8.4
     */
    public static function quote(string $str): string {}
}

/**
 * @property-read DOMElement|null $firstElementChild
 * @property-read DOMElement|null $lastElementChild
 * @property-read int $childElementCount
 *
 * @since 8.0
 */
interface DOMParentNode
{
    /**
     * Appends one or many nodes to the list of children behind the last
     * child node.
     *
     * @param DOMNode|string|null ...$nodes
     * @return void
     * @since 8.0
     */
    public function append(...$nodes): void;

    /**
     * Prepends one or many nodes to the list of children before the first
     * child node.
     *
     * @param DOMNode|string|null ...$nodes
     * @return void
     * @since 8.0
     */
    public function prepend(...$nodes): void;

    /**
     * @since 8.3
     */
    public function replaceChildren(...$nodes): void;
}

/**
 * @property-read DOMElement|null $previousElementSibling
 * @property-read DOMElement|null $nextElementSibling
 *
 * @since 8.0
 */
interface DOMChildNode
{
    /**
     * Acts as a simpler version of {@see DOMNode::removeChild()}.
     *
     * @return void
     * @since 8.0
     */
    public function remove(): void;

    /**
     * Add passed node(s) before the current node
     *
     * @param DOMNode|string|null ...$nodes
     * @return void
     * @since 8.0
     */
    public function before(...$nodes): void;

    /**
     * Add passed node(s) after  the current node
     *
     * @param DOMNode|string|null ...$nodes
     * @return void
     * @since 8.0
     */
    public function after(...$nodes): void;

    /**
     * Replace current node with new node(s), a combination
     * of {@see DOMChildNode::remove()} + {@see DOMChildNode::append()}.
     *
     * @param DOMNode|string|null ...$nodes
     * @return void
     * @since 8.0
     */
    public function replaceWith(...$nodes): void;
}
