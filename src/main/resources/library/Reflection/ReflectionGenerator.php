<?php

use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

/**
* <div id="class.reflectiongenerator" class="reference"> <h1 class="title">ReflectionGenerator 类</h1>  <div class="partintro"><p class="verinfo">(PHP 7, PHP 8)</p>  <div class="section" id="reflectiongenerator.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">ReflectionGenerator</strong></span> 类报告有关生成器的信息。   </p>  </div>  <div class="section" id="reflectiongenerator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">ReflectionGenerator</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span> <span class="parameter" style="color:#3A95FF">$generator</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.getexecutingfile.php" class="methodname" style="color:#CC7832">getExecutingFile</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.getexecutinggenerator.php" class="methodname" style="color:#CC7832">getExecutingGenerator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.getexecutingline.php" class="methodname" style="color:#CC7832">getExecutingLine</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link getFunction}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.reflectionfunctionabstract.php" class="type ReflectionFunctionAbstract" style="color:#EAB766">ReflectionFunctionAbstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.getthis.php" class="methodname" style="color:#CC7832">getThis</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.gettrace.php" class="methodname" style="color:#CC7832">getTrace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.debug-backtrace-provide-object">DEBUG_BACKTRACE_PROVIDE_OBJECT</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/reflectiongenerator.isclosed.php" class="methodname" style="color:#CC7832">isClosed</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <p class="para">    </p><table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.0.0</td>        <td>         类现在是 <span class="modifier">final</span>。        </td>       </tr>      </tbody>         </table>     </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ReflectionGenerator::__construct} — Constructs a ReflectionGenerator object</li><li>{@link ReflectionGenerator::getExecutingFile} — Gets the file name of the currently executing generator</li><li>{@link ReflectionGenerator::getExecutingGenerator} — Gets the executing Generator object</li><li>{@link ReflectionGenerator::getExecutingLine} — Gets the currently executing line of the generator</li><li>{@link ReflectionGenerator::getFunction} — Gets the function name of the generator</li><li>{@link ReflectionGenerator::getThis} — Gets the $this value of the generator</li><li>{@link ReflectionGenerator::getTrace} — Gets the trace of the executing generator</li><li>{@link ReflectionGenerator::isClosed} — Checks if execution finished</li></ul></div>
*
 * The ReflectionGenerator class reports information about a generator.
 *
 * @since 7.0
 
*/
final class ReflectionGenerator
{
    /**
     * Constructs a ReflectionGenerator object
     *
     * @link https://php.net/manual/en/reflectiongenerator.construct.php
     * @param Generator $generator A generator object.
     * @since 7.0
     */
    public function __construct(Generator $generator) {}

/**
* <div id="reflectiongenerator.getexecutingline" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingLine</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingLine</span> — <span class="dc-title">Gets the currently executing line of the generator</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutingline-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingLine</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get the currently executing line number of the generator.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutingline-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutingline-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the line number of the currently executing statement in the generator.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutingline-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5599">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingLine()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br></span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>    {<br>        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Line: </span><span style="color: #007700">{</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingLine</span><span style="color: #007700">()}</span><span style="color: #DD0000">"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Line: 7</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutingline-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingGenerator()} - Gets the executing Generator object</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingFile()} - Gets the file name of the currently executing generator</span></li>   </ul>   </div></div>
    *
     * Gets the currently executing line of the generator
     *
     * @link https://php.net/manual/zh/reflectiongenerator.getexecutingline.php
     * @return int Returns the line number of the currently executing statement
     * in the generator.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getExecutingLine(): int {}

/**
* <div id="reflectiongenerator.getexecutingfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingFile</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingFile</span> — <span class="dc-title">Gets the file name of the currently executing generator</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutingfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingFile</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get the full path and file name of the currently executing generator.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutingfile-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutingfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the full path and file name of the currently executing generator.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutingfile-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5597">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingFile()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br></span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>    {<br>        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"File: </span><span style="color: #007700">{</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingFile</span><span style="color: #007700">()}</span><span style="color: #DD0000">"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">File: /path/to/file/example.php</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutingfile-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingLine()} - Gets the currently executing line of the generator</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingGenerator()} - Gets the executing Generator object</span></li>   </ul>   </div></div>
    *
     * Gets the file name of the currently executing generator
     *
     * @link https://php.net/manual/zh/reflectiongenerator.getexecutingfile.php
     * @return string Returns the full path and file name of the currently
     * executing generator.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getExecutingFile(): string {}

/**
* <div id="reflectiongenerator.gettrace" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getTrace</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getTrace</span> — <span class="dc-title">Gets the trace of the executing generator</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.gettrace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getTrace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.debug-backtrace-provide-object">DEBUG_BACKTRACE_PROVIDE_OBJECT</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Get the trace of the currently executing generator.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.gettrace-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The value of <span class="parameter" style="color:#3A95FF">options</span> can be any of       the following flags.      </p>      <p class="para">       </p><table class="doctable table">        <caption><strong>Available options</strong></caption>                 <thead>          <tr>           <th>Option</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>            <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.debug-backtrace-provide-object">DEBUG_BACKTRACE_PROVIDE_OBJECT</a></span></strong>           </td>           <td>            Default.           </td>          </tr>          <tr>           <td>            <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.debug-backtrace-ignore-args">DEBUG_BACKTRACE_IGNORE_ARGS</a></span></strong>           </td>           <td>            Don't include the argument information for functions in the stack            trace.           </td>          </tr>         </tbody>               </table>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.gettrace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the trace of the currently executing generator.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.gettrace-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5602">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getTrace()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">foo</span><span style="color: #007700">() {<br>    yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>}<br><br>function </span><span style="color: #9876AA">bar</span><span style="color: #007700">()<br>{<br>    yield from </span><span style="color: #9876AA">foo</span><span style="color: #007700">();<br>}<br><br>function </span><span style="color: #9876AA">baz</span><span style="color: #007700">()<br>{<br>    yield from </span><span style="color: #9876AA">bar</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= </span><span style="color: #9876AA">baz</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$gen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">(); </span><span style="color: #FF8000">// start the generator<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">((new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">))-&gt;</span><span style="color: #9876AA">getTrace</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(2) {<br>  [0]=&gt;<br>  array(4) {<br>    ["file"]=&gt;<br>    string(18) "example.php"<br>    ["line"]=&gt;<br>    int(8)<br>    ["function"]=&gt;<br>    string(3) "foo"<br>    ["args"]=&gt;<br>    array(0) {<br>    }<br>  }<br>  [1]=&gt;<br>  array(4) {<br>    ["file"]=&gt;<br>    string(18) "example.php"<br>    ["line"]=&gt;<br>    int(12)<br>    ["function"]=&gt;<br>    string(3) "bar"<br>    ["args"]=&gt;<br>    array(0) {<br>    }<br>  }<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.gettrace-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getFunction()} - Gets the function name of the generator</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getThis()} - Gets the $this value of the generator</span></li>   </ul>   </div></div>
    *
     * Gets the trace of the executing generator
     *
     * @link https://php.net/manual/zh/reflectiongenerator.gettrace.php
     * @param int $options The value of <em>options</em> can be any of the following the following flags.
     *
     * Available options:
     *
     * {@see DEBUG_BACKTRACE_PROVIDE_OBJECT} - Default
     *
     * {@see DEBUG_BACKTRACE_IGNORE_ARGS} - Don't include the argument
     * information for functions in the stack trace.
     *
     * @return array Returns the trace of the currently executing generator.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getTrace(int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT): array {}

/**
* <div id="reflectiongenerator.getfunction" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getFunction</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getFunction</span> — <span class="dc-title">Gets the function name of the generator</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.getfunction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getFunction</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.reflectionfunctionabstract.php" class="type ReflectionFunctionAbstract" style="color:#EAB766">ReflectionFunctionAbstract</a></span></div>  <p class="para rdfs-comment">   Enables the function name of the generator to be obtained by returning a   class derived from <span class="classname"><a href="https://php.net/manual/zh/class.reflectionfunctionabstract.php" class="classname">ReflectionFunctionAbstract</a></span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.getfunction-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getfunction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.reflectionfunctionabstract.php" class="classname">ReflectionFunctionAbstract</a></span> class. This will   be <span class="classname">{@link ReflectionFunction}</span> for functions, or   <span class="classname"><a href="https://php.net/manual/zh/class.reflectionmethod.php" class="classname">ReflectionMethod</a></span> for methods.  </p> </div> <div class="refsect1 changelog" id="refsect1-reflectiongenerator.getfunction-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getFunction()</strong></span>       may now be called after the generator finished executing.      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.getfunction-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5600">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getFunction()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>{<br>    yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= </span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFunction</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(ReflectionFunction)#3 (1) {<br>  ["name"]=&gt;<br>  string(3) "gen"<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.getfunction-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getThis()} - Gets the $this value of the generator</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getTrace()} - Gets the trace of the executing generator</span></li>   </ul>   </div></div>
    *
     * Gets the function name of the generator
     *
     * @link https://php.net/manual/zh/reflectiongenerator.getfunction.php
     * @return ReflectionFunctionAbstract Returns a {@see ReflectionFunctionAbstract}
     * class. This will be {@see ReflectionFunction} for functions,
     * or {@see ReflectionMethod} for methods.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getFunction(): ReflectionFunctionAbstract {}

/**
* <div id="reflectiongenerator.getthis" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getThis</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getThis</span> — <span class="dc-title">Gets the <span class="literal">$this</span> value of the generator</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.getthis-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getThis</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span></span></div>  <p class="para rdfs-comment">   Get the <span class="literal">$this</span> value that the generator has access to.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.getthis-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getthis-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <span class="literal">$this</span> value, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if the generator was   not created in a class context.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.getthis-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5601">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getThis()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br></span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>    {<br>        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getThis</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(GenExample)#3 (0) {<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.getthis-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getFunction()} - Gets the function name of the generator</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getTrace()} - Gets the trace of the executing generator</span></li>   </ul>   </div></div>
    *
     * Gets the function name of the generator
     *
     * @link https://php.net/manual/zh/reflectiongenerator.getthis.php
     * @return object|null Returns the $this value, or {@see null} if the
     * generator was not created in a class context.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getThis(): ?object {}

/**
* <div id="reflectiongenerator.getexecutinggenerator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingGenerator</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingGenerator</span> — <span class="dc-title">Gets the executing <span class="classname"><a href="https://php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutinggenerator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingGenerator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span></div>  <p class="para rdfs-comment">   Get the executing <span class="classname"><a href="https://php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutinggenerator-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutinggenerator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the currently executing <span class="classname"><a href="https://php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutinggenerator-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5598">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingGenerator()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br></span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>    {<br>        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$gen2 </span><span style="color: #007700">= </span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingGenerator</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen2 </span><span style="color: #007700">=== </span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>int(1);</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutinggenerator-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingLine()} - Gets the currently executing line of the generator</span></li>    <li><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingFile()} - Gets the file name of the currently executing generator</span></li>   </ul>   </div></div>
    *
     * Gets the executing Generator object
     *
     * @link https://php.net/manual/zh/reflectiongenerator.construct.php
     * @return Generator Returns the currently executing Generator object.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public function getExecutingGenerator(): Generator {}

/**
* <div id="reflectiongenerator.isclosed" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::isClosed</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::isClosed</span> — <span class="dc-title">Checks if execution finished</span></p> </div> <div class="refsect1 description" id="refsect1-reflectiongenerator.isclosed-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::isClosed</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="simpara">   Returns whether the execution reached the end of the function, a return statement or if an exception was thrown.  </p> </div> <div class="refsect1 parameters" id="refsect1-reflectiongenerator.isclosed-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.isclosed-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns whether the generator finished executing.  </p> </div>  <div class="refsect1 examples" id="refsect1-reflectiongenerator.isclosed-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-5603">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::isClosed()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br>{<br>    yield </span><span style="color: #DD0000">'a'</span><span style="color: #007700">;<br>    yield </span><span style="color: #DD0000">'a'</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= </span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br><br>foreach (</span><span style="color: #9876AA">$gen </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$value</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isClosed</span><span style="color: #007700">());<br>}<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isClosed</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">a<br>bool(false)<br>a<br>bool(false)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * @since 8.4
     
*/
    public function isClosed(): bool {}
}
