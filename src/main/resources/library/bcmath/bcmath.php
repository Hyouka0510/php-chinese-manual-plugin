<?php

namespace {
    use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
    use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
    use JetBrains\PhpStorm\Pure;

    /**
 * <div id="function.bcadd" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcadd</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcadd</span> — <span class="dc-title">两个任意精度数字的加法计算</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcadd-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcadd</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   对 <span class="parameter" style="color:#3A95FF">num1</span> 和 <span class="parameter" style="color:#3A95FF">num2</span> 求和。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcadd-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt id="function.bcadd..parameters.scale"><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcadd-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以字符串返回两个操作数求和之后的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcadd-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.bcadd-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcadd-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3238">   <p><strong>示例 #1 <span class="function"><strong>bcadd()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$a </span><span style="color: #007700">= </span><span style="color: #DD0000">'1.234'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$b </span><span style="color: #007700">= </span><span style="color: #DD0000">'5'</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">bcadd</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">);     </span><span style="color: #FF8000">// 6<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcadd</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 6.2340<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcadd-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcsub()} - 两个任意精度数字的减法</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::add()} - Adds an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Add two arbitrary precision numbers
     * @link https://php.net/manual/zh/function.bcadd.php
     * @param string $num1 <p>
     * The left operand, as a string.
     * </p>
     * @param string $num2 <p>
     * The right operand, as a string.
     * </p>
     * @param int|null $scale <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string The sum of the two operands, as a string.
     */
    #[Pure]
    function bcadd(string $num1, string $num2, ?int $scale = null): string {}

    /**
 * <div id="function.bcsub" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcsub</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcsub</span> — <span class="dc-title">两个任意精度数字的减法</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcsub-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcsub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   <span class="parameter" style="color:#3A95FF">num1</span> 减去 <span class="parameter" style="color:#3A95FF">num2</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcsub-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcsub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以 string 类型返回减法之后的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcsub-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.bcsub-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.bcsub-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3257">   <p><strong>示例 #1 <span class="function"><strong>bcsub()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$a </span><span style="color: #007700">= </span><span style="color: #DD0000">'1.234'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$b </span><span style="color: #007700">= </span><span style="color: #DD0000">'5'</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">bcsub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">);     </span><span style="color: #FF8000">// -3<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcsub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">);  </span><span style="color: #FF8000">// -3.7660<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.bcsub-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcadd()} - 两个任意精度数字的加法计算</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::sub()} - Subtracts an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Subtract one arbitrary precision number from another
     * @link https://php.net/manual/zh/function.bcsub.php
     * @param string $num1 <p>
     * The left operand, as a string.
     * </p>
     * @param string $num2 <p>
     * The right operand, as a string.
     * </p>
     * @param int|null $scale <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string The result of the subtraction, as a string.
     */
    #[Pure]
    function bcsub(string $num1, string $num2, ?int $scale = null): string {}

    /**
 * <div id="function.bcmul" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcmul</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcmul</span> — <span class="dc-title">两个任意精度数字乘法计算</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcmul-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcmul</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   <span class="parameter" style="color:#3A95FF">num1</span> 乘以 <span class="parameter" style="color:#3A95FF">num2</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcmul-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcmul-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcmul-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.bcmul-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>7.3.0</td>      <td>       现在 <span class="function"><strong>bcmul()</strong></span> 可以按想要的小数点位数返回数字。       而之前，返回的数字会忽略尾随零（trailing decimal zeroes）。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.bcmul-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3247">   <p><strong>示例 #1 <span class="function"><strong>bcmul()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmul</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.34747474747'</span><span style="color: #007700">, </span><span style="color: #DD0000">'35'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// 47.161<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmul</span><span style="color: #007700">(</span><span style="color: #DD0000">'2'</span><span style="color: #007700">, </span><span style="color: #DD0000">'4'</span><span style="color: #007700">); </span><span style="color: #FF8000">// 8<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 notes" id="refsect1-function.bcmul-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    PHP 7.3.0 之前，<span class="function"><strong>bcmul()</strong></span> 返回的结果中小数位数可能比 <span class="parameter" style="color:#3A95FF">scale</span>    参数指定的少。只有当结果不需要 <span class="parameter" style="color:#3A95FF">scale</span> 允许的所有精度时，才会发生这种情况。例如：    </p><div class="example" id="example-3248">     <p><strong>示例 #2 <span class="function"><strong>bcmul()</strong></span> 进位制示例</strong></p>     <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmul</span><span style="color: #007700">(</span><span style="color: #DD0000">'5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'2'</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);     </span><span style="color: #FF8000">// 打印“10”而不是“10.00”<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>    </div>     </blockquote> </div>  <div class="refsect1 seealso" id="refsect1-function.bcmul-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcdiv()} - 两个任意精度的数字除法计算</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::mul()} - Multiplies an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Multiply two arbitrary precision numbers
     * @link https://php.net/manual/zh/function.bcmul.php
     * @param string $num1 <p>
     * The left operand, as a string.
     * </p>
     * @param string $num2 <p>
     * The right operand, as a string.
     * </p>
     * @param int|null $scale <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string the result as a string.
     */
    #[Pure]
    function bcmul(string $num1, string $num2, ?int $scale = null): string {}

    /**
 * <div id="function.bcdiv" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcdiv</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcdiv</span> — <span class="dc-title">两个任意精度的数字除法计算</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcdiv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcdiv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   <span class="parameter" style="color:#3A95FF">num1</span> 除以 <span class="parameter" style="color:#3A95FF">num2</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcdiv-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       被除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcdiv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型的除法结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcdiv-errors">    <h3 class="title">错误／异常</h3><p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num2</span> 为 <span class="literal">0</span>，此函数会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcdiv-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，除以 <span class="literal">0</span> 会引发 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常，而不是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcdiv-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3241">   <p><strong>示例 #1 <span class="function"><strong>bcdiv()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcdiv</span><span style="color: #007700">(</span><span style="color: #DD0000">'105'</span><span style="color: #007700">, </span><span style="color: #DD0000">'6.55957'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 16.007<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcdiv-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcdivmod()} - Get the quotient and modulus of an arbitrary precision number</span></li>    <li><span class="function">{@link bcmod()} - 任意精度数字取模</span></li>    <li><span class="function">{@link bcmul()} - 两个任意精度数字乘法计算</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::div()} - Divides by an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Divide two arbitrary precision numbers
     * @link https://php.net/manual/zh/function.bcdiv.php
     * @param string $num1 <p>
     * The dividend, as a string.
     * </p>
     * @param string $num2 <p>
     * The divisor, as a string.
     * </p>
     * @param int|null $scale [optional] <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string|null the result of the division as a string, or <b>NULL</b> if
     * <i>divisor</i> is 0.
     */
    #[Pure]
    #[PhpStormStubsElementAvailable(to: '7.4')]
    function bcdiv(string $num1, string $num2, ?int $scale = 0): ?string {}

    /**
 * <div id="function.bcdiv" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcdiv</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcdiv</span> — <span class="dc-title">两个任意精度的数字除法计算</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcdiv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcdiv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   <span class="parameter" style="color:#3A95FF">num1</span> 除以 <span class="parameter" style="color:#3A95FF">num2</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcdiv-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       被除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcdiv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型的除法结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcdiv-errors">    <h3 class="title">错误／异常</h3><p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num2</span> 为 <span class="literal">0</span>，此函数会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcdiv-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，除以 <span class="literal">0</span> 会引发 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常，而不是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcdiv-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3241">   <p><strong>示例 #1 <span class="function"><strong>bcdiv()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcdiv</span><span style="color: #007700">(</span><span style="color: #DD0000">'105'</span><span style="color: #007700">, </span><span style="color: #DD0000">'6.55957'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 16.007<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcdiv-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcdivmod()} - Get the quotient and modulus of an arbitrary precision number</span></li>    <li><span class="function">{@link bcmod()} - 任意精度数字取模</span></li>    <li><span class="function">{@link bcmul()} - 两个任意精度数字乘法计算</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::div()} - Divides by an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Divide two arbitrary precision numbers
     * @link https://php.net/manual/zh/function.bcdiv.php
     * @param string $num1 <p>
     * The dividend, as a string.
     * </p>
     * @param string $num2 <p>
     * The divisor, as a string.
     * </p>
     * @param int|null $scale [optional] <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string the result of the division as a string.
     * @throws \DivisionByZeroError if <i>divisor</i> is 0. Available since PHP 8.0.
     */
    #[Pure]
    #[PhpStormStubsElementAvailable('8.0')]
    function bcdiv(string $num1, string $num2, ?int $scale = null): string {}

    /**
 * <div id="function.bcmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcmod</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcmod</span> — <span class="dc-title">任意精度数字取模</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcmod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   对 <span class="parameter" style="color:#3A95FF">num1</span> 使用 <span class="parameter" style="color:#3A95FF">num2</span> 取模。结果与   <span class="parameter" style="color:#3A95FF">num1</span> 的符号相同。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcmod-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型取模后的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcmod-errors">    <h3 class="title">错误／异常</h3><p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num2</span> 为 <span class="literal">0</span>，此函数会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcmod-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，除以 <span class="literal">0</span> 会引发 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常，而不是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       现在       <span class="parameter" style="color:#3A95FF">num1</span> 和 <span class="parameter" style="color:#3A95FF">num2</span> 不会截断成整数。       所以现在 <span class="function"><strong>bcmod()</strong></span> 的表现更接近 <span class="function">{@link fmod()}</span>       而不是 <span class="literal">%</span> 操作符。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       新增参数 <span class="parameter" style="color:#3A95FF">scale</span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcmod-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3245">   <p><strong>示例 #1 <span class="function"><strong>bcmod()</strong></span> 示例</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">( </span><span style="color: #DD0000">'5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">); </span><span style="color: #FF8000">//  2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">( </span><span style="color: #DD0000">'5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">); </span><span style="color: #FF8000">//  2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// -2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// -2<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-3246">   <p><strong>示例 #2 带小数点的 <span class="function"><strong>bcmod()</strong></span></strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'5.7'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1.3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// PHP 7.2.0 起是 0.5；之前是 0<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.bcmod-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcdiv()} - 两个任意精度的数字除法计算</span></li>    <li><span class="function">{@link bcdivmod()} - Get the quotient and modulus of an arbitrary precision number</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::mod()} - Gets the modulus of an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Get modulus of an arbitrary precision number
     * @link https://php.net/manual/zh/function.bcmod.php
     * @param string $num1 <p>
     * The dividend, as a string. Since PHP 7.2, the divided is no longer truncated to an integer.
     * </p>
     * @param string $num2 <p>
     * The divisor, as a string. Since PHP 7.2, the divisor is no longer truncated to an integer.
     * </p>
     * @param int|null $scale [optional] <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set. Available since PHP 7.2.
     * </p>
     * @return string|null the modulus as a string, or <b>NULL</b> if
     * <i>divisor</i> is 0.
     */
    #[Pure]
    #[PhpStormStubsElementAvailable(to: '7.4')]
    function bcmod(string $num1, string $num2, ?int $scale = 0): ?string {}

    /**
 * <div id="function.bcmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcmod</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcmod</span> — <span class="dc-title">任意精度数字取模</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcmod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   对 <span class="parameter" style="color:#3A95FF">num1</span> 使用 <span class="parameter" style="color:#3A95FF">num2</span> 取模。结果与   <span class="parameter" style="color:#3A95FF">num1</span> 的符号相同。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcmod-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型取模后的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcmod-errors">    <h3 class="title">错误／异常</h3><p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num2</span> 为 <span class="literal">0</span>，此函数会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcmod-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，除以 <span class="literal">0</span> 会引发 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常，而不是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       现在       <span class="parameter" style="color:#3A95FF">num1</span> 和 <span class="parameter" style="color:#3A95FF">num2</span> 不会截断成整数。       所以现在 <span class="function"><strong>bcmod()</strong></span> 的表现更接近 <span class="function">{@link fmod()}</span>       而不是 <span class="literal">%</span> 操作符。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       新增参数 <span class="parameter" style="color:#3A95FF">scale</span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcmod-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3245">   <p><strong>示例 #1 <span class="function"><strong>bcmod()</strong></span> 示例</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">( </span><span style="color: #DD0000">'5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">); </span><span style="color: #FF8000">//  2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">( </span><span style="color: #DD0000">'5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">); </span><span style="color: #FF8000">//  2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// -2<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// -2<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-3246">   <p><strong>示例 #2 带小数点的 <span class="function"><strong>bcmod()</strong></span></strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'5.7'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1.3'</span><span style="color: #007700">); </span><span style="color: #FF8000">// PHP 7.2.0 起是 0.5；之前是 0<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.bcmod-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcdiv()} - 两个任意精度的数字除法计算</span></li>    <li><span class="function">{@link bcdivmod()} - Get the quotient and modulus of an arbitrary precision number</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::mod()} - Gets the modulus of an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Get modulus of an arbitrary precision number
     * @link https://php.net/manual/zh/function.bcmod.php
     * @param string $num1 <p>
     * The dividend, as a string. Since PHP 7.2, the divided is no longer truncated to an integer.
     * </p>
     * @param string $num2 <p>
     * The divisor, as a string. Since PHP 7.2, the divisor is no longer truncated to an integer.
     * </p>
     * @param int|null $scale [optional] <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set. Available since PHP 7.2.
     * </p>
     * @return string the modulus as a string.
     * @throws \DivisionByZeroError if <i>divisor</i> is 0. Available since PHP 8.0.
     */
    #[Pure]
    #[PhpStormStubsElementAvailable('8.0')]
    function bcmod(string $num1, string $num2, ?int $scale = null): string {}

    /**
 * <div id="function.bcpow" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcpow</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcpow</span> — <span class="dc-title">任意精度数字的乘方</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcpow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcpow</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$exponent</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   <span class="parameter" style="color:#3A95FF">num</span> 的 <span class="parameter" style="color:#3A95FF">exponent</span> 次方运算。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcpow-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       string 类型的底数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">exponent</span></dt>     <dd>      <p class="para">       string 类型的指数。必须是没有小数部分的值。指数的有效范围取决于平台，但起码支持       <span class="literal">-2147483648</span> 到 <span class="literal">2147483647</span> 的范围。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcpow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串类型的结果。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcpow-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   函数在下列情况会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li><span class="parameter" style="color:#3A95FF">num</span> 或 <span class="parameter" style="color:#3A95FF">exponent</span> 不是格式正确的 BCMath 数字字符串</li>    <li><span class="parameter" style="color:#3A95FF">exponent</span> 有小数部分</li>    <li><span class="parameter" style="color:#3A95FF">exponent</span> 或 <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围</li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num</span> 为 <span class="literal">0</span> 且 <span class="parameter" style="color:#3A95FF">exponent</span>   为负值，则此函数抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcpow-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="literal">0</span> 的负幂以前返回 <span class="literal">0</span>，但现在会引发 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       当 <span class="parameter" style="color:#3A95FF">exponent</span> 有小数部分时，现在会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> 而不是截断。      </td>     </tr>     <tr>      <td>7.3.0</td>      <td>       现在 <span class="function"><strong>bcpow()</strong></span> 可以按想要的小数点位数返回数字。       而之前，返回的数字会忽略尾随零（trailing decimal zeroes）。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcpow-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3249">   <p><strong>示例 #1 <span class="function"><strong>bcpow()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcpow</span><span style="color: #007700">(</span><span style="color: #DD0000">'4.2'</span><span style="color: #007700">, </span><span style="color: #DD0000">'3'</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">); </span><span style="color: #FF8000">// 74.08<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 notes" id="refsect1-function.bcpow-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    PHP 7.3.0 之前，<span class="function"><strong>bcpow()</strong></span> 返回的结果，小数点后的小数位数可能比 <span class="parameter" style="color:#3A95FF">scale</span>    参数指定的少。只有当结果不需要 <span class="parameter" style="color:#3A95FF">scale</span> 允许的所有小数位数时，才会发生这种情况。例如：    </p><div class="example" id="example-3250">     <p><strong>示例 #2 <span class="function"><strong>bcpow()</strong></span> 小数位数示例</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcpow</span><span style="color: #007700">(</span><span style="color: #DD0000">'5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'2'</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);     </span><span style="color: #FF8000">// 打印 "25" 而不是 "25.00"<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>    </div>     </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.bcpow-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcpowmod()} - Raise an arbitrary precision number to another, reduced by a specified modulus</span></li>    <li><span class="function">{@link bcsqrt()} - 任意精度数字的二次方根</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::pow()} - Raises an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Raise an arbitrary precision number to another
     * @link https://php.net/manual/zh/function.bcpow.php
     * @param string $num <p>
     * The base, as a string.
     * </p>
     * @param string $exponent <p>
     * The exponent, as a string. If the exponent is non-integral, it is truncated.
     * The valid range of the exponent is platform specific, but is at least
     * -2147483648 to 2147483647.
     * </p>
     * @param int|null $scale <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string the result as a string.
     */
    #[Pure]
    function bcpow(string $num, string $exponent, ?int $scale = null): string {}

    /**
 * <div id="function.bcsqrt" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcsqrt</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcsqrt</span> — <span class="dc-title">任意精度数字的二次方根</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcsqrt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcsqrt</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的二次方根。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcsqrt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       操作数，格式良好的 BCMath 数字字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcsqrt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回平方根，作为格式良好的 BCMath 数字字符串。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.bcsqrt-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   此函数在以下情况下引发 <span class="classname"><a href="https://php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> 错误：   </p><ul class="simplelist">    <li><span class="parameter" style="color:#3A95FF">num</span> 不是格式良好的 BCMath 数字字符串</li>    <li><span class="parameter" style="color:#3A95FF">num</span> 小于 <span class="literal">0</span></li>    <li><span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围</li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.bcsqrt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       如果 <span class="parameter" style="color:#3A95FF">num</span> 不是格式良好的 BCMath 数字字符串，或小于 <span class="literal">0</span>，则会引发       <span class="classname"><a href="https://php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> 错误。之前，会引发 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 错误。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，<span class="parameter" style="color:#3A95FF">scale</span> 的取值范围必须在 <span class="literal">0</span> 到 <span class="literal">2147483647</span> 之间；之前，负数的 scale 值会被静默处理为 <span class="literal">0</span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.bcsqrt-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3256">   <p><strong>示例 #1 <span class="function"><strong>bcsqrt()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcsqrt</span><span style="color: #007700">(</span><span style="color: #DD0000">'2'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// 1.414<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-function.bcsqrt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcpow()} - 任意精度数字的乘方</span></li>    <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::sqrt()} - Gets the square root of an arbitrary precision number</span></li>   </ul>   </div></div>
 * 
     * Get the square root of an arbitrary precision number
     * @link https://php.net/manual/zh/function.bcsqrt.php
     * @param string $num <p>
     * The operand, as a string.
     * </p>
     * @param int|null $scale [optional]
     * @return string|null the square root as a string, or <b>NULL</b> if
     * <i>operand</i> is negative.
     */
    #[Pure]
    #[LanguageLevelTypeAware(["8.0" => "string"], default: "string|null")]
    function bcsqrt(string $num, ?int $scale) {}

    /**
 * <div id="function.bcscale" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcscale</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcscale</span> — <span class="dc-title">设置/获取所有 bc math 函数的默认小数点保留位数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcscale-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcscale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$scale</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   设置所有 bc math 函数在未设定情况下的小数点保留位数。  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>bcscale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   获取当前的小数点保留位数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcscale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <p class="para">       小数点保留位数。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcscale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   设置的时候，返回之前的小数点保留位数。否则就是返回当前的位数。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcscale-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围，函数抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcscale-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>     <tr>      <td>7.3.0</td>      <td>       现在 <span class="function"><strong>bcscale()</strong></span> 不仅可以设置，还可以获取当前的小数点保留位数。       用于设置的时候，现在会返回之前的位数。       之前 <span class="parameter" style="color:#3A95FF">scale</span> 是强制的参数， 且       <span class="function"><strong>bcscale()</strong></span> 总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.bcscale-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-3255">    <p><strong>示例 #1 <span class="function"><strong>bcscale()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// 默认小数点位数： 3<br></span><span style="color: #9876AA">bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bcdiv</span><span style="color: #007700">(</span><span style="color: #DD0000">'105'</span><span style="color: #007700">, </span><span style="color: #DD0000">'6.55957'</span><span style="color: #007700">); </span><span style="color: #FF8000">// 16.007<br><br>// 不调用 bcscale() 也一样<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bcdiv</span><span style="color: #007700">(</span><span style="color: #DD0000">'105'</span><span style="color: #007700">, </span><span style="color: #DD0000">'6.55957'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// 16.007<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Set default scale parameter for all bc math functions
     * @link https://php.net/manual/zh/function.bcscale.php
     * @param int $scale
     * @return int|bool
     */
    #[LanguageLevelTypeAware(['7.3' => 'int'], default: 'bool')]
    function bcscale(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '7.2')] int                                                   $scale,
        #[PhpStormStubsElementAvailable(from: '7.3')] #[LanguageLevelTypeAware(['8.0' => 'int|null'], default: 'int')] $scale = null
    ) {}

    /**
 * <div id="function.bccomp" class="refentry"> <div class="refnamediv">  <h1 class="refname">bccomp</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bccomp</span> — <span class="dc-title">比较两个任意精度的数字</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bccomp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bccomp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   将 <span class="parameter" style="color:#3A95FF">num1</span> 与 <span class="parameter" style="color:#3A95FF">num2</span> 进行比较，并返回整型数字的比较结果。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bccomp-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       左操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       右操作数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bccomp-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   如果所有的操作数相等返回 <span class="literal">0</span>；如果 <span class="parameter" style="color:#3A95FF">num1</span> 大于   <span class="parameter" style="color:#3A95FF">num2</span> 时返回 <span class="literal">1</span>，否则返回 <span class="literal">-1</span>。  </p> </div> <div class="refsect1 errors" id="refsect1-function.bccomp-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.bccomp-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">scale</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.bccomp-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3240">   <p><strong>示例 #1 <span class="function"><strong>bccomp()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bccomp</span><span style="color: #007700">(</span><span style="color: #DD0000">'1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'2'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;   </span><span style="color: #FF8000">// -1<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bccomp</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.00001'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// 0<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bccomp</span><span style="color: #007700">(</span><span style="color: #DD0000">'1.00001'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1'</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">); </span><span style="color: #FF8000">// 1<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bccomp-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::compare()} - Compares two arbitrary precision numbers</span></li>  </ul> </div></div>
 * 
     * Compare two arbitrary precision numbers
     * @link https://php.net/manual/zh/function.bccomp.php
     * @param string $num1 <p>
     * The left operand, as a string.
     * </p>
     * @param string $num2 <p>
     * The right operand, as a string.
     * </p>
     * @param int|null $scale <p>
     * The optional <i>scale</i> parameter is used to set the
     * number of digits after the decimal place which will be used in the
     * comparison.
     * </p>
     * @return int 0 if the two operands are equal, 1 if the
     * <i>left_operand</i> is larger than the
     * <i>right_operand</i>, -1 otherwise.
     */
    #[Pure]
    function bccomp(string $num1, string $num2, ?int $scale = null): int {}

    /**
 * <div id="function.bcpowmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcpowmod</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bcpowmod</span> — <span class="dc-title">Raise an arbitrary precision number to another, reduced by a specified modulus</span></p> </div>  <div class="refsect1 description" id="refsect1-function.bcpowmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcpowmod</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$exponent</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modulus</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Use the fast-exponentiation method to raise    <span class="parameter" style="color:#3A95FF">num</span> to the power   <span class="parameter" style="color:#3A95FF">exponent</span> with respect to the modulus   <span class="parameter" style="color:#3A95FF">modulus</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcpowmod-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       The base, as an integral string (i.e. the scale has to be zero).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">exponent</span></dt>     <dd>      <p class="para">       The exponent, as an non-negative, integral string (i.e. the scale has to be zero).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">modulus</span></dt>     <dd>      <p class="para">       The modulus, as an integral string (i.e. the scale has to be zero).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcpowmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the result as a string.  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcpowmod-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This function throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> in the following cases:   </p><ul class="simplelist">    <li><span class="parameter" style="color:#3A95FF">num</span>, <span class="parameter" style="color:#3A95FF">exponent</span> or <span class="parameter" style="color:#3A95FF">modulus</span> is not a well-formed BCMath numeric string</li>    <li><span class="parameter" style="color:#3A95FF">num</span>, <span class="parameter" style="color:#3A95FF">exponent</span> or <span class="parameter" style="color:#3A95FF">modulus</span> has a fractional part</li>    <li><span class="parameter" style="color:#3A95FF">exponent</span> is a negative value</li>    <li><span class="parameter" style="color:#3A95FF">scale</span> is outside the valid range</li>   </ul>    <p class="simpara">   This function throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> exception if <span class="parameter" style="color:#3A95FF">modulus</span>   is <span class="literal">0</span>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.bcpowmod-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">scale</span> is now nullable.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Now throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> instead of returning <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if <span class="parameter" style="color:#3A95FF">exponent</span> is a negative value.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       Dividing by <span class="literal">0</span> now throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> exception instead of returning <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.bcpowmod-examples">  <h3 class="title">示例</h3>  <p class="para">   The following two statements are functionally identical.  The   <span class="function"><strong>bcpowmod()</strong></span> version however, executes in   less time and can accept larger parameters.   </p><div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$a </span><span style="color: #007700">= </span><span style="color: #9876AA">bcpowmod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$x</span><span style="color: #007700">, </span><span style="color: #9876AA">\$y</span><span style="color: #007700">, </span><span style="color: #9876AA">\$mod</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$b </span><span style="color: #007700">= </span><span style="color: #9876AA">bcmod</span><span style="color: #007700">(</span><span style="color: #9876AA">bcpow</span><span style="color: #007700">(</span><span style="color: #9876AA">\$x</span><span style="color: #007700">, </span><span style="color: #9876AA">\$y</span><span style="color: #007700">), </span><span style="color: #9876AA">\$mod</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// \$a and \$b are equal to each other.<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.bcpowmod-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Because this method uses the modulus operation, numbers which are not    positive integers may give unexpected results.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.bcpowmod-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link bcpow()} - 任意精度数字的乘方</span></li>    <li><span class="function">{@link bcmod()} - 任意精度数字取模</span></li>   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::powmod()} - Raises an arbitrary precision number, reduced by a specified modulus</span></li>   </ul>   </div></div>
 * 
     * Raise an arbitrary precision number to another, reduced by a specified modulus
     * @link https://php.net/manual/zh/function.bcpowmod.php
     * @param string $num <p>
     * The base, as an integral string (i.e. the scale has to be zero).
     * </p>
     * @param string $exponent <p>
     * The exponent, as an non-negative, integral string (i.e. the scale has to be
     * zero).
     * </p>
     * @param string $modulus <p>
     * The modulus, as an integral string (i.e. the scale has to be zero).
     * </p>
     * @param int|null $scale <p>
     * This optional parameter is used to set the number of digits after the
     * decimal place in the result. If omitted, it will default to the scale
     * set globally with the {@link bcscale()} function, or fallback to 0 if
     * this has not been set.
     * </p>
     * @return string|null the result as a string, or <b>NULL</b> if <i>modulus</i>
     * is 0 or <i>exponent</i> is negative.
     */
    #[Pure]
    #[LanguageLevelTypeAware(["8.0" => "string"], default: "string|null")]
    function bcpowmod(string $num, string $exponent, string $modulus, ?int $scale = null) {}

    /**
 * <div id="function.bcfloor" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcfloor</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">bcfloor</span> — <span class="dc-title">Round down arbitrary precision number</span></p> </div> <div class="refsect1 description" id="refsect1-function.bcfloor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcfloor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   Returns the next lowest integer value by rounding down   <span class="parameter" style="color:#3A95FF">num</span> if necessary.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcfloor-parameters">  <h3 class="title">参数</h3><dl>       <dt><span class="parameter" style="color:#3A95FF">num</span></dt>    <dd>     <span class="simpara">      The value to round.     </span>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.bcfloor-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns a numeric string representing <span class="parameter" style="color:#3A95FF">num</span> rounded down to the nearest integer.  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcfloor-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   This function throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if   <span class="parameter" style="color:#3A95FF">num</span> is not a well-formed BCMath numeric string.  </p> </div> <div class="refsect1 examples" id="refsect1-function.bcfloor-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3244">   <p><strong>示例 #1 <span class="function"><strong>bcfloor()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcfloor</span><span style="color: #007700">(</span><span style="color: #DD0000">'4.3'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcfloor</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.999'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcfloor</span><span style="color: #007700">(</span><span style="color: #DD0000">'-3.14'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(1)&nbsp;"4"<br>string(1)&nbsp;"9"<br>string(2)&nbsp;"-4"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcfloor-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link bcceil()} - Round up arbitrary precision number</span></li>   <li><span class="function">{@link bcround()} - Round arbitrary precision number</span></li>   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::floor()} - Rounds down an arbitrary precision number</span></li>  </ul> </div></div>
 * 
     * @since 8.4
     */
    function bcfloor(string $num): string {}

    /**
 * <div id="function.bcceil" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcceil</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">bcceil</span> — <span class="dc-title">Round up arbitrary precision number</span></p> </div> <div class="refsect1 description" id="refsect1-function.bcceil-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcceil</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   Returns the next highest integer value by rounding up   <span class="parameter" style="color:#3A95FF">num</span> if necessary.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcceil-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num</span></dt>    <dd>     <span class="simpara">      The value to round.     </span>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.bcceil-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns a numeric string representing <span class="parameter" style="color:#3A95FF">num</span> rounded up to the nearest integer.  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcceil-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   This function throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if   <span class="parameter" style="color:#3A95FF">num</span> is not a well-formed BCMath numeric string.  </p> </div> <div class="refsect1 examples" id="refsect1-function.bcceil-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3239">   <p><strong>示例 #1 <span class="function"><strong>bcceil()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcceil</span><span style="color: #007700">(</span><span style="color: #DD0000">'4.3'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcceil</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.999'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcceil</span><span style="color: #007700">(</span><span style="color: #DD0000">'-3.14'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(1)&nbsp;"5"<br>string(2)&nbsp;"10"<br>string(2)&nbsp;"-3"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcceil-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link bcfloor()} - Round down arbitrary precision number</span></li>   <li><span class="function">{@link bcround()} - Round arbitrary precision number</span></li>   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::ceil()} - Rounds up an arbitrary precision number</span></li>  </ul> </div></div>
 * 
     * @since 8.4
     */
    function bcceil(string $num): string {}

    /**
 * <div id="function.bcround" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcround</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">bcround</span> — <span class="dc-title">Round arbitrary precision number</span></p> </div> <div class="refsect1 description" id="refsect1-function.bcround-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcround</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$precision</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/enum.roundingmode.php" class="type RoundingMode" style="color:#EAB766">RoundingMode</a></span> <span class="parameter" style="color:#3A95FF">\$mode</span><span class="initializer"> = RoundingMode::HalfAwayFromZero</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="simpara">   Returns the rounded value of <span class="parameter" style="color:#3A95FF">num</span> to   specified <span class="parameter" style="color:#3A95FF">precision</span>   (number of digits after the decimal point).   <span class="parameter" style="color:#3A95FF">precision</span> can also be negative or zero (default).  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcround-parameters">  <h3 class="title">参数</h3>  <dl>        <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的值。      </p>     </dd>            <dt><span class="parameter" style="color:#3A95FF">precision</span></dt>     <dd>      <p class="para">       可选的十进制小数点后数字的数目。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">precision</span> 是正数，则 <span class="parameter" style="color:#3A95FF">num</span>       会四舍五入到小数点后 <span class="parameter" style="color:#3A95FF">precision</span> 位有效数字。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">precision</span> 是负数，则 <span class="parameter" style="color:#3A95FF">num</span>       四舍五入到小数点前 <span class="parameter" style="color:#3A95FF">precision</span> 位有效数字。即 <span class="code">pow(10,       -\$precision)</span> 最接近的倍数，例如，<span class="parameter" style="color:#3A95FF">precision</span>       为 -1，<span class="parameter" style="color:#3A95FF">num</span> 可以四舍五入到十位，<span class="parameter" style="color:#3A95FF">precision</span>       为 -2，<span class="parameter" style="color:#3A95FF">num</span> 可以四舍五入到百位，等等。      </p>     </dd>           <dt id="bcmath-number.round..parameters.mode"><span class="parameter" style="color:#3A95FF">mode</span></dt>    <dd>     <span class="simpara">      Specifies the rounding mode. For more information about modes, see <span class="enumname"><a href="https://php.net/manual/zh/enum.roundingmode.php" class="enumname">RoundingMode</a></span>.     </span>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.bcround-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns a numeric string representing <span class="parameter" style="color:#3A95FF">num</span> rounded to the given precision.  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcround-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This function throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> in the following cases:   </p><ul class="simplelist">    <li><span class="parameter" style="color:#3A95FF">num</span> is not a well-formed BCMath numeric string.</li>    <li>An invalid <span class="parameter" style="color:#3A95FF">mode</span> is specified.</li>   </ul>   </div> <div class="refsect1 examples" id="refsect1-function.bcround-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-3251">   <p><strong>示例 #1 <span class="function"><strong>bcround()</strong></span> examples</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'3.4'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'3.5'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'3.6'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'3.6'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'5.045'</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'5.055'</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'345'</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'345'</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'678'</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'678'</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(1)&nbsp;"3"<br>string(1)&nbsp;"4"<br>string(1)&nbsp;"4"<br>string(1)&nbsp;"4"<br>string(4)&nbsp;"5.05"<br>string(4)&nbsp;"5.06"<br>string(3)&nbsp;"300"<br>string(1)&nbsp;"0"<br>string(3)&nbsp;"700"<br>string(4)&nbsp;"1000"</blockquote></div>   </div>  </div>  <div class="example" id="example-3252">   <p><strong>示例 #2     Example of using <span class="function"><strong>bcround()</strong></span> with different <span class="parameter" style="color:#3A95FF">precision</span> values   </strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$number </span><span style="color: #007700">= </span><span style="color: #DD0000">'123.45'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #9876AA">\$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(7)&nbsp;"123.450"<br>string(6)&nbsp;"123.45"<br>string(5)&nbsp;"123.5"<br>string(3)&nbsp;"123"<br>string(3)&nbsp;"120"<br>string(3)&nbsp;"100"<br>string(1)&nbsp;"0"</blockquote></div>   </div>  </div>  <div class="example" id="example-3253">   <p><strong>示例 #3     Example of using <span class="function"><strong>bcround()</strong></span> with different <span class="parameter" style="color:#3A95FF">mode</span> values   </strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Rounding modes with 9.5' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfAwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfTowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfEven</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfOdd</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">TowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">AwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">NegativeInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'9.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">PositiveInfinity</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Rounding modes with 8.5' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfAwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfTowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfEven</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfOdd</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">TowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">AwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">NegativeInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(</span><span style="color: #DD0000">'8.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">PositiveInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Rounding&nbsp;modes&nbsp;with&nbsp;9.5<br>string(2)&nbsp;"10"<br>string(1)&nbsp;"9"<br>string(2)&nbsp;"10"<br>string(1)&nbsp;"9"<br>string(1)&nbsp;"9"<br>string(2)&nbsp;"10"<br>string(1)&nbsp;"9"<br>string(2)&nbsp;"10"<br><br>Rounding&nbsp;modes&nbsp;with&nbsp;8.5<br>string(1)&nbsp;"9"<br>string(1)&nbsp;"8"<br>string(1)&nbsp;"8"<br>string(1)&nbsp;"9"<br>string(1)&nbsp;"8"<br>string(1)&nbsp;"9"<br>string(1)&nbsp;"8"<br>string(1)&nbsp;"9"</blockquote></div>   </div>  </div>  <div class="example" id="example-3254">   <p><strong>示例 #4     Example of using <span class="function"><strong>bcround()</strong></span> with different <span class="parameter" style="color:#3A95FF">mode</span> values    when specifying <span class="parameter" style="color:#3A95FF">precision</span>   </strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Using RoundingMode::HalfAwayFromZero with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfAwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfAwayFromZero</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::HalfTowardsZero with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfTowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfTowardsZero</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::HalfEven with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfEven</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfEven</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::HalfOdd with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfOdd</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">HalfOdd</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::TowardsZero with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">TowardsZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">TowardsZero</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::AwayFromZero with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">AwayFromZero</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">AwayFromZero</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::NegativeInfinity with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">NegativeInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">NegativeInfinity</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Using RoundingMode::PositiveInfinity with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">PositiveInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bcround</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">RoundingMode</span><span style="color: #007700">::</span><span style="color: #9876AA">PositiveInfinity</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Using&nbsp;RoundingMode::HalfAwayFromZero&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.6"<br>string(4)&nbsp;"-1.6"<br><br>Using&nbsp;RoundingMode::HalfTowardsZero&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.5"<br>string(4)&nbsp;"-1.5"<br><br>Using&nbsp;RoundingMode::HalfEven&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.6"<br>string(4)&nbsp;"-1.6"<br><br>Using&nbsp;RoundingMode::HalfOdd&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.5"<br>string(4)&nbsp;"-1.5"<br><br>Using&nbsp;RoundingMode::TowardsZero&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.5"<br>string(4)&nbsp;"-1.5"<br><br>Using&nbsp;RoundingMode::AwayFromZero&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.6"<br>string(4)&nbsp;"-1.6"<br><br>Using&nbsp;RoundingMode::NegativeInfinity&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.5"<br>string(4)&nbsp;"-1.6"<br><br>Using&nbsp;RoundingMode::PositiveInfinity&nbsp;with&nbsp;1&nbsp;decimal&nbsp;digit&nbsp;precision<br>string(3)&nbsp;"1.6"<br>string(4)&nbsp;"-1.5"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcround-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link bcceil()} - Round up arbitrary precision number</span></li>   <li><span class="function">{@link bcfloor()} - Round down arbitrary precision number</span></li>   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::round()} - Rounds an arbitrary precision number</span></li>  </ul> </div></div>
 * 
     * @since 8.4
     */
    function bcround(string $num, int $precision = 0, RoundingMode $mode = RoundingMode::HalfAwayFromZero): string {}

    /**
 * <div id="function.bcdivmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">bcdivmod</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">bcdivmod</span> — <span class="dc-title">Get the quotient and modulus of an arbitrary precision number</span></p> </div> <div class="refsect1 description" id="refsect1-function.bcdivmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bcdivmod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$num2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$scale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="simpara">   Get the quotient and remainder of dividing <span class="parameter" style="color:#3A95FF">num1</span> by   <span class="parameter" style="color:#3A95FF">num2</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.bcdivmod-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       被除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       除数，字符串类型。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <span class="simpara">       此参数用于设置结果小数点后的位数。       如果为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则默认为使用 <span class="function">{@link bcscale()}</span> 设置的默认精度，       或者回退到 <a href="https://php.net/manual/zh/bc.configuration.php#ini.bcmath.scale" class="link"><span class="literal">bcmath.scale</span></a> INI 指令的值。      </span>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.bcdivmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns an indexed <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> where the first element is the quotient as a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>   and the second element is the remainder as a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.bcdivmod-errors">    <h3 class="title">错误／异常</h3><p class="para">   此函数在下列情况下抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>：   </p><ul class="simplelist">    <li>     <span class="parameter" style="color:#3A95FF">num1</span> 或 <span class="parameter" style="color:#3A95FF">num2</span> 不是格式正确的 BCMath 数字字符串。    </li>    <li>     <span class="parameter" style="color:#3A95FF">scale</span> 超出有效范围。    </li>   </ul>    <p class="simpara">   如果 <span class="parameter" style="color:#3A95FF">num2</span> 为 <span class="literal">0</span>，此函数会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.divisionbyzeroerror.php" class="exceptionname">DivisionByZeroError</a></span> 异常。  </p> </div> <div class="refsect1 examples" id="refsect1-function.bcdivmod-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3242">   <p><strong>示例 #1 <span class="function"><strong>bcdivmod()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>bcscale</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br>[</span><span style="color: #9876AA">\$quot</span><span style="color: #007700">, </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">] = </span><span style="color: #9876AA">bcdivmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$quot</span><span style="color: #007700">; </span><span style="color: #FF8000">// 1<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 2<br><br></span><span style="color: #007700">[</span><span style="color: #9876AA">\$quot</span><span style="color: #007700">, </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">] = </span><span style="color: #9876AA">bcdivmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$quot</span><span style="color: #007700">; </span><span style="color: #FF8000">// -1<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 2<br><br></span><span style="color: #007700">[</span><span style="color: #9876AA">\$quot</span><span style="color: #007700">, </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">] = </span><span style="color: #9876AA">bcdivmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'3'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$quot</span><span style="color: #007700">; </span><span style="color: #FF8000">// -1<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">;  </span><span style="color: #FF8000">// -2<br><br></span><span style="color: #007700">[</span><span style="color: #9876AA">\$quot</span><span style="color: #007700">, </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">] = </span><span style="color: #9876AA">bcdivmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'-5'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'-3'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$quot</span><span style="color: #007700">; </span><span style="color: #FF8000">// 1<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">;  </span><span style="color: #FF8000">// -2<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-3243">   <p><strong>示例 #2 <span class="function"><strong>bcdivmod()</strong></span> with decimals</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">[</span><span style="color: #9876AA">\$quot</span><span style="color: #007700">, </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">] = </span><span style="color: #9876AA">bcdivmod</span><span style="color: #007700">(</span><span style="color: #DD0000">'5.7'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1.3'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$quot</span><span style="color: #007700">; </span><span style="color: #FF8000">// 4<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$rem</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 0.5<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.bcdivmod-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link bcdiv()} - 两个任意精度的数字除法计算</span></li>   <li><span class="function">{@link bcmod()} - 任意精度数字取模</span></li>   <li><span class="methodname" style="color:#CC7832">{@link BcMath\Number::divmod()} - Gets the quotient and modulus of an arbitrary precision number</span></li>  </ul> </div></div>
 * 
     * @return string[]
     */
    function bcdivmod(string $num1, string $num2, ?int $scale = null): array {}
}

namespace BcMath {
    /**
     * @since 8.4
     */
    final readonly class Number implements \Stringable
    {
        public readonly string $value;
        public readonly int $scale;


        public function __construct(string|int $num) {}


        public function add(Number|string|int $num, ?int $scale = null): Number {}


        public function sub(Number|string|int $num, ?int $scale = null): Number {}


        public function mul(Number|string|int $num, ?int $scale = null): Number {}


        public function div(Number|string|int $num, ?int $scale = null): Number {}


        public function mod(Number|string|int $num, ?int $scale = null): Number {}

        /** @return Number[] */
        public function divmod(Number|string|int $num, ?int $scale = null): array {}


        public function powmod(Number|string|int $exponent, Number|string|int $modulus, ?int $scale = null): Number {}


        public function pow(Number|string|int $exponent, ?int $scale = null): Number {}


        public function sqrt(?int $scale = null): Number {}


        public function floor(): Number {}


        public function ceil(): Number {}


        public function round(int $precision = 0, \RoundingMode $mode = \RoundingMode::HalfAwayFromZero): Number {}


        public function compare(Number|string|int $num, ?int $scale = null): int {}


        public function __toString(): string {}


        public function __serialize(): array {}


        public function __unserialize(array $data): void {}
    }
}
