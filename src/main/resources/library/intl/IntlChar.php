<?php

use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

/**
* <div id="class.intlchar" class="reference"> <h1 class="title">IntlChar</h1>  <div class="partintro"><p class="verinfo">(PHP 7, PHP 8)</p>  <div class="section" id="intlchar.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">IntlChar</strong></span> provides access to a number of utility    methods that can be used to access information about Unicode characters.   </p>   <p class="para">    The methods and constants adhere closely to the names and behavior used by the underlying ICU library.   </p>  </div>  <div class="section" id="intlchar.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlChar</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-version"><var class="varname">UNICODE_VERSION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.codepoint-min"><var class="varname">CODEPOINT_MIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.codepoint-max"><var class="varname">CODEPOINT_MAX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.no-numeric-value"><var class="varname">NO_NUMERIC_VALUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-alphabetic"><var class="varname">PROPERTY_ALPHABETIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-binary-start"><var class="varname">PROPERTY_BINARY_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ascii-hex-digit"><var class="varname">PROPERTY_ASCII_HEX_DIGIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-control"><var class="varname">PROPERTY_BIDI_CONTROL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-mirrored"><var class="varname">PROPERTY_BIDI_MIRRORED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-dash"><var class="varname">PROPERTY_DASH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-default-ignorable-code-point"><var class="varname">PROPERTY_DEFAULT_IGNORABLE_CODE_POINT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-deprecated"><var class="varname">PROPERTY_DEPRECATED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-diacritic"><var class="varname">PROPERTY_DIACRITIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-extender"><var class="varname">PROPERTY_EXTENDER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-full-composition-exclusion"><var class="varname">PROPERTY_FULL_COMPOSITION_EXCLUSION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-base"><var class="varname">PROPERTY_GRAPHEME_BASE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-extend"><var class="varname">PROPERTY_GRAPHEME_EXTEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-link"><var class="varname">PROPERTY_GRAPHEME_LINK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hex-digit"><var class="varname">PROPERTY_HEX_DIGIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hyphen"><var class="varname">PROPERTY_HYPHEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-id-continue"><var class="varname">PROPERTY_ID_CONTINUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-id-start"><var class="varname">PROPERTY_ID_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ideographic"><var class="varname">PROPERTY_IDEOGRAPHIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ids-binary-operator"><var class="varname">PROPERTY_IDS_BINARY_OPERATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-ids-trinary-operator"><var class="varname">PROPERTY_IDS_TRINARY_OPERATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-join-control"><var class="varname">PROPERTY_JOIN_CONTROL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-logical-order-exception"><var class="varname">PROPERTY_LOGICAL_ORDER_EXCEPTION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lowercase"><var class="varname">PROPERTY_LOWERCASE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-math"><var class="varname">PROPERTY_MATH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-noncharacter-code-point"><var class="varname">PROPERTY_NONCHARACTER_CODE_POINT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-quotation-mark"><var class="varname">PROPERTY_QUOTATION_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-radical"><var class="varname">PROPERTY_RADICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-soft-dotted"><var class="varname">PROPERTY_SOFT_DOTTED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-terminal-punctuation"><var class="varname">PROPERTY_TERMINAL_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-unified-ideograph"><var class="varname">PROPERTY_UNIFIED_IDEOGRAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-uppercase"><var class="varname">PROPERTY_UPPERCASE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-white-space"><var class="varname">PROPERTY_WHITE_SPACE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-xid-continue"><var class="varname">PROPERTY_XID_CONTINUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-xid-start"><var class="varname">PROPERTY_XID_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-sensitive"><var class="varname">PROPERTY_CASE_SENSITIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-s-term"><var class="varname">PROPERTY_S_TERM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-variation-selector"><var class="varname">PROPERTY_VARIATION_SELECTOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfd-inert"><var class="varname">PROPERTY_NFD_INERT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkd-inert"><var class="varname">PROPERTY_NFKD_INERT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfc-inert"><var class="varname">PROPERTY_NFC_INERT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkc-inert"><var class="varname">PROPERTY_NFKC_INERT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-segment-starter"><var class="varname">PROPERTY_SEGMENT_STARTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-pattern-syntax"><var class="varname">PROPERTY_PATTERN_SYNTAX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-pattern-white-space"><var class="varname">PROPERTY_PATTERN_WHITE_SPACE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-alnum"><var class="varname">PROPERTY_POSIX_ALNUM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-blank"><var class="varname">PROPERTY_POSIX_BLANK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-graph"><var class="varname">PROPERTY_POSIX_GRAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-print"><var class="varname">PROPERTY_POSIX_PRINT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-posix-xdigit"><var class="varname">PROPERTY_POSIX_XDIGIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-cased"><var class="varname">PROPERTY_CASED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-ignorable"><var class="varname">PROPERTY_CASE_IGNORABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-lowercased"><var class="varname">PROPERTY_CHANGES_WHEN_LOWERCASED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-uppercased"><var class="varname">PROPERTY_CHANGES_WHEN_UPPERCASED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-titlecased"><var class="varname">PROPERTY_CHANGES_WHEN_TITLECASED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-casefolded"><var class="varname">PROPERTY_CHANGES_WHEN_CASEFOLDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-casemapped"><var class="varname">PROPERTY_CHANGES_WHEN_CASEMAPPED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-changes-when-nfkc-casefolded"><var class="varname">PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-binary-limit"><var class="varname">PROPERTY_BINARY_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-class"><var class="varname">PROPERTY_BIDI_CLASS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-int-start"><var class="varname">PROPERTY_INT_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-block"><var class="varname">PROPERTY_BLOCK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-canonical-combining-class"><var class="varname">PROPERTY_CANONICAL_COMBINING_CLASS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-decomposition-type"><var class="varname">PROPERTY_DECOMPOSITION_TYPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-east-asian-width"><var class="varname">PROPERTY_EAST_ASIAN_WIDTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-general-category"><var class="varname">PROPERTY_GENERAL_CATEGORY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-joining-group"><var class="varname">PROPERTY_JOINING_GROUP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-joining-type"><var class="varname">PROPERTY_JOINING_TYPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-line-break"><var class="varname">PROPERTY_LINE_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-numeric-type"><var class="varname">PROPERTY_NUMERIC_TYPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-script"><var class="varname">PROPERTY_SCRIPT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-hangul-syllable-type"><var class="varname">PROPERTY_HANGUL_SYLLABLE_TYPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfd-quick-check"><var class="varname">PROPERTY_NFD_QUICK_CHECK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkd-quick-check"><var class="varname">PROPERTY_NFKD_QUICK_CHECK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfc-quick-check"><var class="varname">PROPERTY_NFC_QUICK_CHECK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-nfkc-quick-check"><var class="varname">PROPERTY_NFKC_QUICK_CHECK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lead-canonical-combining-class"><var class="varname">PROPERTY_LEAD_CANONICAL_COMBINING_CLASS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-trail-canonical-combining-class"><var class="varname">PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-grapheme-cluster-break"><var class="varname">PROPERTY_GRAPHEME_CLUSTER_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-sentence-break"><var class="varname">PROPERTY_SENTENCE_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-word-break"><var class="varname">PROPERTY_WORD_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-paired-bracket-type"><var class="varname">PROPERTY_BIDI_PAIRED_BRACKET_TYPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-int-limit"><var class="varname">PROPERTY_INT_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-general-category-mask"><var class="varname">PROPERTY_GENERAL_CATEGORY_MASK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-mask-start"><var class="varname">PROPERTY_MASK_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-mask-limit"><var class="varname">PROPERTY_MASK_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-numeric-value"><var class="varname">PROPERTY_NUMERIC_VALUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-double-start"><var class="varname">PROPERTY_DOUBLE_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-double-limit"><var class="varname">PROPERTY_DOUBLE_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-age"><var class="varname">PROPERTY_AGE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-string-start"><var class="varname">PROPERTY_STRING_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-mirroring-glyph"><var class="varname">PROPERTY_BIDI_MIRRORING_GLYPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-case-folding"><var class="varname">PROPERTY_CASE_FOLDING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-iso-comment"><var class="varname">PROPERTY_ISO_COMMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-lowercase-mapping"><var class="varname">PROPERTY_LOWERCASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-name"><var class="varname">PROPERTY_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-case-folding"><var class="varname">PROPERTY_SIMPLE_CASE_FOLDING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-lowercase-mapping"><var class="varname">PROPERTY_SIMPLE_LOWERCASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-titlecase-mapping"><var class="varname">PROPERTY_SIMPLE_TITLECASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-simple-uppercase-mapping"><var class="varname">PROPERTY_SIMPLE_UPPERCASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-titlecase-mapping"><var class="varname">PROPERTY_TITLECASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-unicode-1-name"><var class="varname">PROPERTY_UNICODE_1_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-uppercase-mapping"><var class="varname">PROPERTY_UPPERCASE_MAPPING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-bidi-paired-bracket"><var class="varname">PROPERTY_BIDI_PAIRED_BRACKET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-string-limit"><var class="varname">PROPERTY_STRING_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-script-extensions"><var class="varname">PROPERTY_SCRIPT_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-other-property-start"><var class="varname">PROPERTY_OTHER_PROPERTY_START</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-other-property-limit"><var class="varname">PROPERTY_OTHER_PROPERTY_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-invalid-code"><var class="varname">PROPERTY_INVALID_CODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-unassigned"><var class="varname">CHAR_CATEGORY_UNASSIGNED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-general-other-types"><var class="varname">CHAR_CATEGORY_GENERAL_OTHER_TYPES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-uppercase-letter"><var class="varname">CHAR_CATEGORY_UPPERCASE_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-lowercase-letter"><var class="varname">CHAR_CATEGORY_LOWERCASE_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-titlecase-letter"><var class="varname">CHAR_CATEGORY_TITLECASE_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-modifier-letter"><var class="varname">CHAR_CATEGORY_MODIFIER_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-letter"><var class="varname">CHAR_CATEGORY_OTHER_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-non-spacing-mark"><var class="varname">CHAR_CATEGORY_NON_SPACING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-enclosing-mark"><var class="varname">CHAR_CATEGORY_ENCLOSING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-combining-spacing-mark"><var class="varname">CHAR_CATEGORY_COMBINING_SPACING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-decimal-digit-number"><var class="varname">CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-letter-number"><var class="varname">CHAR_CATEGORY_LETTER_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-number"><var class="varname">CHAR_CATEGORY_OTHER_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-space-separator"><var class="varname">CHAR_CATEGORY_SPACE_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-line-separator"><var class="varname">CHAR_CATEGORY_LINE_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-paragraph-separator"><var class="varname">CHAR_CATEGORY_PARAGRAPH_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-control-char"><var class="varname">CHAR_CATEGORY_CONTROL_CHAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-format-char"><var class="varname">CHAR_CATEGORY_FORMAT_CHAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-private-use-char"><var class="varname">CHAR_CATEGORY_PRIVATE_USE_CHAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-surrogate"><var class="varname">CHAR_CATEGORY_SURROGATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-dash-punctuation"><var class="varname">CHAR_CATEGORY_DASH_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-start-punctuation"><var class="varname">CHAR_CATEGORY_START_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-end-punctuation"><var class="varname">CHAR_CATEGORY_END_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-connector-punctuation"><var class="varname">CHAR_CATEGORY_CONNECTOR_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-punctuation"><var class="varname">CHAR_CATEGORY_OTHER_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-math-symbol"><var class="varname">CHAR_CATEGORY_MATH_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-currency-symbol"><var class="varname">CHAR_CATEGORY_CURRENCY_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-modifier-symbol"><var class="varname">CHAR_CATEGORY_MODIFIER_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-other-symbol"><var class="varname">CHAR_CATEGORY_OTHER_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-initial-punctuation"><var class="varname">CHAR_CATEGORY_INITIAL_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-final-punctuation"><var class="varname">CHAR_CATEGORY_FINAL_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-category-char-category-count"><var class="varname">CHAR_CATEGORY_CHAR_CATEGORY_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number-separator"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-european-number-terminator"><var class="varname">CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-arabic-number"><var class="varname">CHAR_DIRECTION_ARABIC_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-common-number-separator"><var class="varname">CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-block-separator"><var class="varname">CHAR_DIRECTION_BLOCK_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-segment-separator"><var class="varname">CHAR_DIRECTION_SEGMENT_SEPARATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-white-space-neutral"><var class="varname">CHAR_DIRECTION_WHITE_SPACE_NEUTRAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-other-neutral"><var class="varname">CHAR_DIRECTION_OTHER_NEUTRAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-embedding"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-override"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-arabic"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-embedding"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-override"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-pop-directional-format"><var class="varname">CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-dir-non-spacing-mark"><var class="varname">CHAR_DIRECTION_DIR_NON_SPACING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-boundary-neutral"><var class="varname">CHAR_DIRECTION_BOUNDARY_NEUTRAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-first-strong-isolate"><var class="varname">CHAR_DIRECTION_FIRST_STRONG_ISOLATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-left-to-right-isolate"><var class="varname">CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-right-to-left-isolate"><var class="varname">CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-pop-directional-isolate"><var class="varname">CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-direction-char-direction-count"><var class="varname">CHAR_DIRECTION_CHAR_DIRECTION_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-no-block"><var class="varname">BLOCK_CODE_NO_BLOCK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-basic-latin"><var class="varname">BLOCK_CODE_BASIC_LATIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-1-supplement"><var class="varname">BLOCK_CODE_LATIN_1_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-a"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-b"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ipa-extensions"><var class="varname">BLOCK_CODE_IPA_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-spacing-modifier-letters"><var class="varname">BLOCK_CODE_SPACING_MODIFIER_LETTERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-diacritical-marks"><var class="varname">BLOCK_CODE_COMBINING_DIACRITICAL_MARKS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-greek"><var class="varname">BLOCK_CODE_GREEK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic"><var class="varname">BLOCK_CODE_CYRILLIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-armenian"><var class="varname">BLOCK_CODE_ARMENIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hebrew"><var class="varname">BLOCK_CODE_HEBREW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic"><var class="varname">BLOCK_CODE_ARABIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-syriac"><var class="varname">BLOCK_CODE_SYRIAC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-thaana"><var class="varname">BLOCK_CODE_THAANA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-devanagari"><var class="varname">BLOCK_CODE_DEVANAGARI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bengali"><var class="varname">BLOCK_CODE_BENGALI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gurmukhi"><var class="varname">BLOCK_CODE_GURMUKHI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gujarati"><var class="varname">BLOCK_CODE_GUJARATI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-oriya"><var class="varname">BLOCK_CODE_ORIYA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tamil"><var class="varname">BLOCK_CODE_TAMIL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-telugu"><var class="varname">BLOCK_CODE_TELUGU</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kannada"><var class="varname">BLOCK_CODE_KANNADA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-malayalam"><var class="varname">BLOCK_CODE_MALAYALAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sinhala"><var class="varname">BLOCK_CODE_SINHALA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-thai"><var class="varname">BLOCK_CODE_THAI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lao"><var class="varname">BLOCK_CODE_LAO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tibetan"><var class="varname">BLOCK_CODE_TIBETAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-myanmar"><var class="varname">BLOCK_CODE_MYANMAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-georgian"><var class="varname">BLOCK_CODE_GEORGIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo"><var class="varname">BLOCK_CODE_HANGUL_JAMO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic"><var class="varname">BLOCK_CODE_ETHIOPIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cherokee"><var class="varname">BLOCK_CODE_CHEROKEE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-unified-canadian-aboriginal-syllabics"><var class="varname">BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ogham"><var class="varname">BLOCK_CODE_OGHAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-runic"><var class="varname">BLOCK_CODE_RUNIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khmer"><var class="varname">BLOCK_CODE_KHMER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mongolian"><var class="varname">BLOCK_CODE_MONGOLIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-additional"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-greek-extended"><var class="varname">BLOCK_CODE_GREEK_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-general-punctuation"><var class="varname">BLOCK_CODE_GENERAL_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-superscripts-and-subscripts"><var class="varname">BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-currency-symbols"><var class="varname">BLOCK_CODE_CURRENCY_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-marks-for-symbols"><var class="varname">BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-letterlike-symbols"><var class="varname">BLOCK_CODE_LETTERLIKE_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-number-forms"><var class="varname">BLOCK_CODE_NUMBER_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arrows"><var class="varname">BLOCK_CODE_ARROWS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mathematical-operators"><var class="varname">BLOCK_CODE_MATHEMATICAL_OPERATORS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-technical"><var class="varname">BLOCK_CODE_MISCELLANEOUS_TECHNICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-control-pictures"><var class="varname">BLOCK_CODE_CONTROL_PICTURES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-optical-character-recognition"><var class="varname">BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-alphanumerics"><var class="varname">BLOCK_CODE_ENCLOSED_ALPHANUMERICS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-box-drawing"><var class="varname">BLOCK_CODE_BOX_DRAWING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-block-elements"><var class="varname">BLOCK_CODE_BLOCK_ELEMENTS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-geometric-shapes"><var class="varname">BLOCK_CODE_GEOMETRIC_SHAPES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-dingbats"><var class="varname">BLOCK_CODE_DINGBATS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-braille-patterns"><var class="varname">BLOCK_CODE_BRAILLE_PATTERNS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-radicals-supplement"><var class="varname">BLOCK_CODE_CJK_RADICALS_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kangxi-radicals"><var class="varname">BLOCK_CODE_KANGXI_RADICALS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ideographic-description-characters"><var class="varname">BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-symbols-and-punctuation"><var class="varname">BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hiragana"><var class="varname">BLOCK_CODE_HIRAGANA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-katakana"><var class="varname">BLOCK_CODE_KATAKANA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bopomofo"><var class="varname">BLOCK_CODE_BOPOMOFO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-compatibility-jamo"><var class="varname">BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kanbun"><var class="varname">BLOCK_CODE_KANBUN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bopomofo-extended"><var class="varname">BLOCK_CODE_BOPOMOFO_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-cjk-letters-and-months"><var class="varname">BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-a"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yi-syllables"><var class="varname">BLOCK_CODE_YI_SYLLABLES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yi-radicals"><var class="varname">BLOCK_CODE_YI_RADICALS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-syllables"><var class="varname">BLOCK_CODE_HANGUL_SYLLABLES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-high-surrogates"><var class="varname">BLOCK_CODE_HIGH_SURROGATES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-high-private-use-surrogates"><var class="varname">BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-low-surrogates"><var class="varname">BLOCK_CODE_LOW_SURROGATES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-private-use-area"><var class="varname">BLOCK_CODE_PRIVATE_USE_AREA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-private-use"><var class="varname">BLOCK_CODE_PRIVATE_USE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-ideographs"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-alphabetic-presentation-forms"><var class="varname">BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-presentation-forms-a"><var class="varname">BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-half-marks"><var class="varname">BLOCK_CODE_COMBINING_HALF_MARKS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-forms"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-small-form-variants"><var class="varname">BLOCK_CODE_SMALL_FORM_VARIANTS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-presentation-forms-b"><var class="varname">BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-specials"><var class="varname">BLOCK_CODE_SPECIALS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-halfwidth-and-fullwidth-forms"><var class="varname">BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-italic"><var class="varname">BLOCK_CODE_OLD_ITALIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-gothic"><var class="varname">BLOCK_CODE_GOTHIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-deseret"><var class="varname">BLOCK_CODE_DESERET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-byzantine-musical-symbols"><var class="varname">BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-musical-symbols"><var class="varname">BLOCK_CODE_MUSICAL_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mathematical-alphanumeric-symbols"><var class="varname">BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-b"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-compatibility-ideographs-supplement"><var class="varname">BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tags"><var class="varname">BLOCK_CODE_TAGS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-supplement"><var class="varname">BLOCK_CODE_CYRILLIC_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-supplementary"><var class="varname">BLOCK_CODE_CYRILLIC_SUPPLEMENTARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tagalog"><var class="varname">BLOCK_CODE_TAGALOG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hanunoo"><var class="varname">BLOCK_CODE_HANUNOO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-buhid"><var class="varname">BLOCK_CODE_BUHID</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tagbanwa"><var class="varname">BLOCK_CODE_TAGBANWA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-mathematical-symbols-a"><var class="varname">BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-arrows-a"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_ARROWS_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-arrows-b"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_ARROWS_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-mathematical-symbols-b"><var class="varname">BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-mathematical-operators"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-katakana-phonetic-extensions"><var class="varname">BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-variation-selectors"><var class="varname">BLOCK_CODE_VARIATION_SELECTORS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplementary-private-use-area-a"><var class="varname">BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplementary-private-use-area-b"><var class="varname">BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-limbu"><var class="varname">BLOCK_CODE_LIMBU</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-le"><var class="varname">BLOCK_CODE_TAI_LE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khmer-symbols"><var class="varname">BLOCK_CODE_KHMER_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phonetic-extensions"><var class="varname">BLOCK_CODE_PHONETIC_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols-and-arrows"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-yijing-hexagram-symbols"><var class="varname">BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-linear-b-syllabary"><var class="varname">BLOCK_CODE_LINEAR_B_SYLLABARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-linear-b-ideograms"><var class="varname">BLOCK_CODE_LINEAR_B_IDEOGRAMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-aegean-numbers"><var class="varname">BLOCK_CODE_AEGEAN_NUMBERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ugaritic"><var class="varname">BLOCK_CODE_UGARITIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-shavian"><var class="varname">BLOCK_CODE_SHAVIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-osmanya"><var class="varname">BLOCK_CODE_OSMANYA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cypriot-syllabary"><var class="varname">BLOCK_CODE_CYPRIOT_SYLLABARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-xuan-jing-symbols"><var class="varname">BLOCK_CODE_TAI_XUAN_JING_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-variation-selectors-supplement"><var class="varname">BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-greek-musical-notation"><var class="varname">BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-greek-numbers"><var class="varname">BLOCK_CODE_ANCIENT_GREEK_NUMBERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-supplement"><var class="varname">BLOCK_CODE_ARABIC_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-buginese"><var class="varname">BLOCK_CODE_BUGINESE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-strokes"><var class="varname">BLOCK_CODE_CJK_STROKES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-diacritical-marks-supplement"><var class="varname">BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-coptic"><var class="varname">BLOCK_CODE_COPTIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-extended"><var class="varname">BLOCK_CODE_ETHIOPIC_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-supplement"><var class="varname">BLOCK_CODE_ETHIOPIC_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-georgian-supplement"><var class="varname">BLOCK_CODE_GEORGIAN_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-glagolitic"><var class="varname">BLOCK_CODE_GLAGOLITIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kharoshthi"><var class="varname">BLOCK_CODE_KHAROSHTHI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-modifier-tone-letters"><var class="varname">BLOCK_CODE_MODIFIER_TONE_LETTERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-new-tai-lue"><var class="varname">BLOCK_CODE_NEW_TAI_LUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-persian"><var class="varname">BLOCK_CODE_OLD_PERSIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phonetic-extensions-supplement"><var class="varname">BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-punctuation"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-syloti-nagri"><var class="varname">BLOCK_CODE_SYLOTI_NAGRI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tifinagh"><var class="varname">BLOCK_CODE_TIFINAGH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vertical-forms"><var class="varname">BLOCK_CODE_VERTICAL_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-nko"><var class="varname">BLOCK_CODE_NKO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-balinese"><var class="varname">BLOCK_CODE_BALINESE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-c"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_C</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-d"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_D</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phags-pa"><var class="varname">BLOCK_CODE_PHAGS_PA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phoenician"><var class="varname">BLOCK_CODE_PHOENICIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cuneiform"><var class="varname">BLOCK_CODE_CUNEIFORM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cuneiform-numbers-and-punctuation"><var class="varname">BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-counting-rod-numerals"><var class="varname">BLOCK_CODE_COUNTING_ROD_NUMERALS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sundanese"><var class="varname">BLOCK_CODE_SUNDANESE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lepcha"><var class="varname">BLOCK_CODE_LEPCHA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ol-chiki"><var class="varname">BLOCK_CODE_OL_CHIKI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-extended-a"><var class="varname">BLOCK_CODE_CYRILLIC_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vai"><var class="varname">BLOCK_CODE_VAI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cyrillic-extended-b"><var class="varname">BLOCK_CODE_CYRILLIC_EXTENDED_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-saurashtra"><var class="varname">BLOCK_CODE_SAURASHTRA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kayah-li"><var class="varname">BLOCK_CODE_KAYAH_LI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-rejang"><var class="varname">BLOCK_CODE_REJANG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cham"><var class="varname">BLOCK_CODE_CHAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ancient-symbols"><var class="varname">BLOCK_CODE_ANCIENT_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-phaistos-disc"><var class="varname">BLOCK_CODE_PHAISTOS_DISC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lycian"><var class="varname">BLOCK_CODE_LYCIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-carian"><var class="varname">BLOCK_CODE_CARIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lydian"><var class="varname">BLOCK_CODE_LYDIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mahjong-tiles"><var class="varname">BLOCK_CODE_MAHJONG_TILES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-domino-tiles"><var class="varname">BLOCK_CODE_DOMINO_TILES</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-samaritan"><var class="varname">BLOCK_CODE_SAMARITAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-unified-canadian-aboriginal-syllabics-extended"><var class="varname">BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-tham"><var class="varname">BLOCK_CODE_TAI_THAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-vedic-extensions"><var class="varname">BLOCK_CODE_VEDIC_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-lisu"><var class="varname">BLOCK_CODE_LISU</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bamum"><var class="varname">BLOCK_CODE_BAMUM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-common-indic-number-forms"><var class="varname">BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-devanagari-extended"><var class="varname">BLOCK_CODE_DEVANAGARI_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo-extended-a"><var class="varname">BLOCK_CODE_HANGUL_JAMO_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-javanese"><var class="varname">BLOCK_CODE_JAVANESE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-myanmar-extended-a"><var class="varname">BLOCK_CODE_MYANMAR_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tai-viet"><var class="varname">BLOCK_CODE_TAI_VIET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meetei-mayek"><var class="varname">BLOCK_CODE_MEETEI_MAYEK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-hangul-jamo-extended-b"><var class="varname">BLOCK_CODE_HANGUL_JAMO_EXTENDED_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-imperial-aramaic"><var class="varname">BLOCK_CODE_IMPERIAL_ARAMAIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-south-arabian"><var class="varname">BLOCK_CODE_OLD_SOUTH_ARABIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-avestan"><var class="varname">BLOCK_CODE_AVESTAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-inscriptional-parthian"><var class="varname">BLOCK_CODE_INSCRIPTIONAL_PARTHIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-inscriptional-pahlavi"><var class="varname">BLOCK_CODE_INSCRIPTIONAL_PAHLAVI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-turkic"><var class="varname">BLOCK_CODE_OLD_TURKIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-rumi-numeral-symbols"><var class="varname">BLOCK_CODE_RUMI_NUMERAL_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kaithi"><var class="varname">BLOCK_CODE_KAITHI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-egyptian-hieroglyphs"><var class="varname">BLOCK_CODE_EGYPTIAN_HIEROGLYPHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-alphanumeric-supplement"><var class="varname">BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-enclosed-ideographic-supplement"><var class="varname">BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-c"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mandaic"><var class="varname">BLOCK_CODE_MANDAIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-batak"><var class="varname">BLOCK_CODE_BATAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ethiopic-extended-a"><var class="varname">BLOCK_CODE_ETHIOPIC_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-brahmi"><var class="varname">BLOCK_CODE_BRAHMI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bamum-supplement"><var class="varname">BLOCK_CODE_BAMUM_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-kana-supplement"><var class="varname">BLOCK_CODE_KANA_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-playing-cards"><var class="varname">BLOCK_CODE_PLAYING_CARDS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miscellaneous-symbols-and-pictographs"><var class="varname">BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-emoticons"><var class="varname">BLOCK_CODE_EMOTICONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-transport-and-map-symbols"><var class="varname">BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-alchemical-symbols"><var class="varname">BLOCK_CODE_ALCHEMICAL_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-cjk-unified-ideographs-extension-d"><var class="varname">BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-extended-a"><var class="varname">BLOCK_CODE_ARABIC_EXTENDED_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-arabic-mathematical-alphabetic-symbols"><var class="varname">BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-chakma"><var class="varname">BLOCK_CODE_CHAKMA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meetei-mayek-extensions"><var class="varname">BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meroitic-cursive"><var class="varname">BLOCK_CODE_MEROITIC_CURSIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-meroitic-hieroglyphs"><var class="varname">BLOCK_CODE_MEROITIC_HIEROGLYPHS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-miao"><var class="varname">BLOCK_CODE_MIAO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sharada"><var class="varname">BLOCK_CODE_SHARADA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sora-sompeng"><var class="varname">BLOCK_CODE_SORA_SOMPENG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sundanese-supplement"><var class="varname">BLOCK_CODE_SUNDANESE_SUPPLEMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-takri"><var class="varname">BLOCK_CODE_TAKRI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-bassa-vah"><var class="varname">BLOCK_CODE_BASSA_VAH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-caucasian-albanian"><var class="varname">BLOCK_CODE_CAUCASIAN_ALBANIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-coptic-epact-numbers"><var class="varname">BLOCK_CODE_COPTIC_EPACT_NUMBERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-combining-diacritical-marks-extended"><var class="varname">BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-duployan"><var class="varname">BLOCK_CODE_DUPLOYAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-elbasan"><var class="varname">BLOCK_CODE_ELBASAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-geometric-shapes-extended"><var class="varname">BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-grantha"><var class="varname">BLOCK_CODE_GRANTHA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khojki"><var class="varname">BLOCK_CODE_KHOJKI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-khudawadi"><var class="varname">BLOCK_CODE_KHUDAWADI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-latin-extended-e"><var class="varname">BLOCK_CODE_LATIN_EXTENDED_E</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-linear-a"><var class="varname">BLOCK_CODE_LINEAR_A</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mahajani"><var class="varname">BLOCK_CODE_MAHAJANI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-manichaean"><var class="varname">BLOCK_CODE_MANICHAEAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mende-kikakui"><var class="varname">BLOCK_CODE_MENDE_KIKAKUI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-modi"><var class="varname">BLOCK_CODE_MODI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-mro"><var class="varname">BLOCK_CODE_MRO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-myanmar-extended-b"><var class="varname">BLOCK_CODE_MYANMAR_EXTENDED_B</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-nabataean"><var class="varname">BLOCK_CODE_NABATAEAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-north-arabian"><var class="varname">BLOCK_CODE_OLD_NORTH_ARABIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-old-permic"><var class="varname">BLOCK_CODE_OLD_PERMIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-ornamental-dingbats"><var class="varname">BLOCK_CODE_ORNAMENTAL_DINGBATS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-pahawh-hmong"><var class="varname">BLOCK_CODE_PAHAWH_HMONG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-palmyrene"><var class="varname">BLOCK_CODE_PALMYRENE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-pau-cin-hau"><var class="varname">BLOCK_CODE_PAU_CIN_HAU</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-psalter-pahlavi"><var class="varname">BLOCK_CODE_PSALTER_PAHLAVI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-shorthand-format-controls"><var class="varname">BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-siddham"><var class="varname">BLOCK_CODE_SIDDHAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-sinhala-archaic-numbers"><var class="varname">BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-supplemental-arrows-c"><var class="varname">BLOCK_CODE_SUPPLEMENTAL_ARROWS_C</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-tirhuta"><var class="varname">BLOCK_CODE_TIRHUTA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-warang-citi"><var class="varname">BLOCK_CODE_WARANG_CITI</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-count"><var class="varname">BLOCK_CODE_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.block-code-invalid-code"><var class="varname">BLOCK_CODE_INVALID_CODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-none"><var class="varname">BPT_NONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-open"><var class="varname">BPT_OPEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-close"><var class="varname">BPT_CLOSE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.bpt-count"><var class="varname">BPT_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-neutral"><var class="varname">EA_NEUTRAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-ambiguous"><var class="varname">EA_AMBIGUOUS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-halfwidth"><var class="varname">EA_HALFWIDTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-fullwidth"><var class="varname">EA_FULLWIDTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-narrow"><var class="varname">EA_NARROW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-wide"><var class="varname">EA_WIDE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.ea-count"><var class="varname">EA_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-char-name"><var class="varname">UNICODE_CHAR_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.unicode-10-char-name"><var class="varname">UNICODE_10_CHAR_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.extended-char-name"><var class="varname">EXTENDED_CHAR_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-name-alias"><var class="varname">CHAR_NAME_ALIAS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.char-name-choice-count"><var class="varname">CHAR_NAME_CHOICE_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.short-property-name"><var class="varname">SHORT_PROPERTY_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.long-property-name"><var class="varname">LONG_PROPERTY_NAME</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.property-name-choice-count"><var class="varname">PROPERTY_NAME_CHOICE_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-none"><var class="varname">DT_NONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-canonical"><var class="varname">DT_CANONICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-compat"><var class="varname">DT_COMPAT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-circle"><var class="varname">DT_CIRCLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-final"><var class="varname">DT_FINAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-font"><var class="varname">DT_FONT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-fraction"><var class="varname">DT_FRACTION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-initial"><var class="varname">DT_INITIAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-isolated"><var class="varname">DT_ISOLATED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-medial"><var class="varname">DT_MEDIAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-narrow"><var class="varname">DT_NARROW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-nobreak"><var class="varname">DT_NOBREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-small"><var class="varname">DT_SMALL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-square"><var class="varname">DT_SQUARE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-sub"><var class="varname">DT_SUB</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-super"><var class="varname">DT_SUPER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-vertical"><var class="varname">DT_VERTICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-wide"><var class="varname">DT_WIDE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.dt-count"><var class="varname">DT_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-non-joining"><var class="varname">JT_NON_JOINING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-join-causing"><var class="varname">JT_JOIN_CAUSING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-dual-joining"><var class="varname">JT_DUAL_JOINING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-left-joining"><var class="varname">JT_LEFT_JOINING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-right-joining"><var class="varname">JT_RIGHT_JOINING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-transparent"><var class="varname">JT_TRANSPARENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jt-count"><var class="varname">JT_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-no-joining-group"><var class="varname">JG_NO_JOINING_GROUP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-ain"><var class="varname">JG_AIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-alaph"><var class="varname">JG_ALAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-alef"><var class="varname">JG_ALEF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-beh"><var class="varname">JG_BEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-beth"><var class="varname">JG_BETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-dal"><var class="varname">JG_DAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-dalath-rish"><var class="varname">JG_DALATH_RISH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-e"><var class="varname">JG_E</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-feh"><var class="varname">JG_FEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-final-semkath"><var class="varname">JG_FINAL_SEMKATH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-gaf"><var class="varname">JG_GAF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-gamal"><var class="varname">JG_GAMAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-hah"><var class="varname">JG_HAH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teh-marbuta-goal"><var class="varname">JG_TEH_MARBUTA_GOAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-hamza-on-heh-goal"><var class="varname">JG_HAMZA_ON_HEH_GOAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-he"><var class="varname">JG_HE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heh"><var class="varname">JG_HEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heh-goal"><var class="varname">JG_HEH_GOAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-heth"><var class="varname">JG_HETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-kaf"><var class="varname">JG_KAF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-kaph"><var class="varname">JG_KAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-knotted-heh"><var class="varname">JG_KNOTTED_HEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-lam"><var class="varname">JG_LAM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-lamadh"><var class="varname">JG_LAMADH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-meem"><var class="varname">JG_MEEM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-mim"><var class="varname">JG_MIM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-noon"><var class="varname">JG_NOON</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-nun"><var class="varname">JG_NUN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-pe"><var class="varname">JG_PE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-qaf"><var class="varname">JG_QAF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-qaph"><var class="varname">JG_QAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-reh"><var class="varname">JG_REH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-reversed-pe"><var class="varname">JG_REVERSED_PE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-sad"><var class="varname">JG_SAD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-sadhe"><var class="varname">JG_SADHE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-seen"><var class="varname">JG_SEEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-semkath"><var class="varname">JG_SEMKATH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-shin"><var class="varname">JG_SHIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-swash-kaf"><var class="varname">JG_SWASH_KAF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-syriac-waw"><var class="varname">JG_SYRIAC_WAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-tah"><var class="varname">JG_TAH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-taw"><var class="varname">JG_TAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teh-marbuta"><var class="varname">JG_TEH_MARBUTA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-teth"><var class="varname">JG_TETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-waw"><var class="varname">JG_WAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh"><var class="varname">JG_YEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh-barree"><var class="varname">JG_YEH_BARREE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yeh-with-tail"><var class="varname">JG_YEH_WITH_TAIL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yudh"><var class="varname">JG_YUDH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-yudh-he"><var class="varname">JG_YUDH_HE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-zain"><var class="varname">JG_ZAIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-fe"><var class="varname">JG_FE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-khaph"><var class="varname">JG_KHAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-zhain"><var class="varname">JG_ZHAIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-burushaski-yeh-barree"><var class="varname">JG_BURUSHASKI_YEH_BARREE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-farsi-yeh"><var class="varname">JG_FARSI_YEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-nya"><var class="varname">JG_NYA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-rohingya-yeh"><var class="varname">JG_ROHINGYA_YEH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-aleph"><var class="varname">JG_MANICHAEAN_ALEPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-ayin"><var class="varname">JG_MANICHAEAN_AYIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-beth"><var class="varname">JG_MANICHAEAN_BETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-daleth"><var class="varname">JG_MANICHAEAN_DALETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-dhamedh"><var class="varname">JG_MANICHAEAN_DHAMEDH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-five"><var class="varname">JG_MANICHAEAN_FIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-gimel"><var class="varname">JG_MANICHAEAN_GIMEL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-heth"><var class="varname">JG_MANICHAEAN_HETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-hundred"><var class="varname">JG_MANICHAEAN_HUNDRED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-kaph"><var class="varname">JG_MANICHAEAN_KAPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-lamedh"><var class="varname">JG_MANICHAEAN_LAMEDH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-mem"><var class="varname">JG_MANICHAEAN_MEM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-nun"><var class="varname">JG_MANICHAEAN_NUN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-one"><var class="varname">JG_MANICHAEAN_ONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-pe"><var class="varname">JG_MANICHAEAN_PE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-qoph"><var class="varname">JG_MANICHAEAN_QOPH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-resh"><var class="varname">JG_MANICHAEAN_RESH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-sadhe"><var class="varname">JG_MANICHAEAN_SADHE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-samekh"><var class="varname">JG_MANICHAEAN_SAMEKH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-taw"><var class="varname">JG_MANICHAEAN_TAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-ten"><var class="varname">JG_MANICHAEAN_TEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-teth"><var class="varname">JG_MANICHAEAN_TETH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-thamedh"><var class="varname">JG_MANICHAEAN_THAMEDH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-twenty"><var class="varname">JG_MANICHAEAN_TWENTY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-waw"><var class="varname">JG_MANICHAEAN_WAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-yodh"><var class="varname">JG_MANICHAEAN_YODH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-manichaean-zayin"><var class="varname">JG_MANICHAEAN_ZAYIN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-straight-waw"><var class="varname">JG_STRAIGHT_WAW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.jg-count"><var class="varname">JG_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-other"><var class="varname">GCB_OTHER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-control"><var class="varname">GCB_CONTROL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-cr"><var class="varname">GCB_CR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-extend"><var class="varname">GCB_EXTEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-l"><var class="varname">GCB_L</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lf"><var class="varname">GCB_LF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lv"><var class="varname">GCB_LV</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-lvt"><var class="varname">GCB_LVT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-t"><var class="varname">GCB_T</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-v"><var class="varname">GCB_V</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-spacing-mark"><var class="varname">GCB_SPACING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-prepend"><var class="varname">GCB_PREPEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-regional-indicator"><var class="varname">GCB_REGIONAL_INDICATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.gcb-count"><var class="varname">GCB_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-other"><var class="varname">WB_OTHER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-aletter"><var class="varname">WB_ALETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-format"><var class="varname">WB_FORMAT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-katakana"><var class="varname">WB_KATAKANA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midletter"><var class="varname">WB_MIDLETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midnum"><var class="varname">WB_MIDNUM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-numeric"><var class="varname">WB_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-extendnumlet"><var class="varname">WB_EXTENDNUMLET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-cr"><var class="varname">WB_CR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-extend"><var class="varname">WB_EXTEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-lf"><var class="varname">WB_LF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-midnumlet"><var class="varname">WB_MIDNUMLET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-newline"><var class="varname">WB_NEWLINE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-regional-indicator"><var class="varname">WB_REGIONAL_INDICATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-hebrew-letter"><var class="varname">WB_HEBREW_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-single-quote"><var class="varname">WB_SINGLE_QUOTE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-double-quote"><var class="varname">WB_DOUBLE_QUOTE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.wb-count"><var class="varname">WB_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-other"><var class="varname">SB_OTHER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-aterm"><var class="varname">SB_ATERM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-close"><var class="varname">SB_CLOSE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-format"><var class="varname">SB_FORMAT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-lower"><var class="varname">SB_LOWER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-numeric"><var class="varname">SB_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-oletter"><var class="varname">SB_OLETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sep"><var class="varname">SB_SEP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sp"><var class="varname">SB_SP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-sterm"><var class="varname">SB_STERM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-upper"><var class="varname">SB_UPPER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-cr"><var class="varname">SB_CR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-extend"><var class="varname">SB_EXTEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-lf"><var class="varname">SB_LF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-scontinue"><var class="varname">SB_SCONTINUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.sb-count"><var class="varname">SB_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-unknown"><var class="varname">LB_UNKNOWN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-ambiguous"><var class="varname">LB_AMBIGUOUS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-alphabetic"><var class="varname">LB_ALPHABETIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-both"><var class="varname">LB_BREAK_BOTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-after"><var class="varname">LB_BREAK_AFTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-before"><var class="varname">LB_BREAK_BEFORE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-mandatory-break"><var class="varname">LB_MANDATORY_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-contingent-break"><var class="varname">LB_CONTINGENT_BREAK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-close-punctuation"><var class="varname">LB_CLOSE_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-combining-mark"><var class="varname">LB_COMBINING_MARK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-carriage-return"><var class="varname">LB_CARRIAGE_RETURN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-exclamation"><var class="varname">LB_EXCLAMATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-glue"><var class="varname">LB_GLUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-hyphen"><var class="varname">LB_HYPHEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-ideographic"><var class="varname">LB_IDEOGRAPHIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-inseparable"><var class="varname">LB_INSEPARABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-inseperable"><var class="varname">LB_INSEPERABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-infix-numeric"><var class="varname">LB_INFIX_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-line-feed"><var class="varname">LB_LINE_FEED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-nonstarter"><var class="varname">LB_NONSTARTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-numeric"><var class="varname">LB_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-open-punctuation"><var class="varname">LB_OPEN_PUNCTUATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-postfix-numeric"><var class="varname">LB_POSTFIX_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-prefix-numeric"><var class="varname">LB_PREFIX_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-quotation"><var class="varname">LB_QUOTATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-complex-context"><var class="varname">LB_COMPLEX_CONTEXT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-surrogate"><var class="varname">LB_SURROGATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-space"><var class="varname">LB_SPACE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-break-symbols"><var class="varname">LB_BREAK_SYMBOLS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-zwspace"><var class="varname">LB_ZWSPACE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-next-line"><var class="varname">LB_NEXT_LINE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-word-joiner"><var class="varname">LB_WORD_JOINER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-h2"><var class="varname">LB_H2</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-h3"><var class="varname">LB_H3</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jl"><var class="varname">LB_JL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jt"><var class="varname">LB_JT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-jv"><var class="varname">LB_JV</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-close-parenthesis"><var class="varname">LB_CLOSE_PARENTHESIS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-conditional-japanese-starter"><var class="varname">LB_CONDITIONAL_JAPANESE_STARTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-hebrew-letter"><var class="varname">LB_HEBREW_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-regional-indicator"><var class="varname">LB_REGIONAL_INDICATOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.lb-count"><var class="varname">LB_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-none"><var class="varname">NT_NONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-decimal"><var class="varname">NT_DECIMAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-digit"><var class="varname">NT_DIGIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-numeric"><var class="varname">NT_NUMERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.nt-count"><var class="varname">NT_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-not-applicable"><var class="varname">HST_NOT_APPLICABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-leading-jamo"><var class="varname">HST_LEADING_JAMO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-vowel-jamo"><var class="varname">HST_VOWEL_JAMO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-trailing-jamo"><var class="varname">HST_TRAILING_JAMO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-lv-syllable"><var class="varname">HST_LV_SYLLABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-lvt-syllable"><var class="varname">HST_LVT_SYLLABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.hst-count"><var class="varname">HST_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.fold-case-default"><var class="varname">FOLD_CASE_DEFAULT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlchar.php#intlchar.constants.fold-case-exclude-special-i"><var class="varname">FOLD_CASE_EXCLUDE_SPECIAL_I</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.charage.php" class="methodname" style="color:#CC7832">charAge</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.chardigitvalue.php" class="methodname" style="color:#CC7832">charDigitValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.chardirection.php" class="methodname" style="color:#CC7832">charDirection</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.charfromname.php" class="methodname" style="color:#CC7832">charFromName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.charmirror.php" class="methodname" style="color:#CC7832">charMirror</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.charname.php" class="methodname" style="color:#CC7832">charName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.chartype.php" class="methodname" style="color:#CC7832">charType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.chr.php" class="methodname" style="color:#CC7832">chr</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.digit.php" class="methodname" style="color:#CC7832">digit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = 10</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.enumcharnames.php" class="methodname" style="color:#CC7832">enumCharNames</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$end</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.enumchartypes.php" class="methodname" style="color:#CC7832">enumCharTypes</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.foldcase.php" class="methodname" style="color:#CC7832">foldCase</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = IntlChar::FOLD_CASE_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.fordigit.php" class="methodname" style="color:#CC7832">forDigit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$digit</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = 10</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getbidipairedbracket.php" class="methodname" style="color:#CC7832">getBidiPairedBracket</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getblockcode.php" class="methodname" style="color:#CC7832">getBlockCode</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getcombiningclass.php" class="methodname" style="color:#CC7832">getCombiningClass</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getfc-nfkc-closure.php" class="methodname" style="color:#CC7832">getFC_NFKC_Closure</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getintpropertymaxvalue.php" class="methodname" style="color:#CC7832">getIntPropertyMaxValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getintpropertyminvalue.php" class="methodname" style="color:#CC7832">getIntPropertyMinValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getintpropertyvalue.php" class="methodname" style="color:#CC7832">getIntPropertyValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getnumericvalue.php" class="methodname" style="color:#CC7832">getNumericValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getpropertyenum.php" class="methodname" style="color:#CC7832">getPropertyEnum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$alias</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getpropertyname.php" class="methodname" style="color:#CC7832">getPropertyName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::LONG_PROPERTY_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getpropertyvalueenum.php" class="methodname" style="color:#CC7832">getPropertyValueEnum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getpropertyvaluename.php" class="methodname" style="color:#CC7832">getPropertyValueName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::LONG_PROPERTY_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.getunicodeversion.php" class="methodname" style="color:#CC7832">getUnicodeVersion</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.hasbinaryproperty.php" class="methodname" style="color:#CC7832">hasBinaryProperty</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isalnum.php" class="methodname" style="color:#CC7832">isalnum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isalpha.php" class="methodname" style="color:#CC7832">isalpha</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isbase.php" class="methodname" style="color:#CC7832">isbase</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isblank.php" class="methodname" style="color:#CC7832">isblank</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.iscntrl.php" class="methodname" style="color:#CC7832">iscntrl</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isdefined.php" class="methodname" style="color:#CC7832">isdefined</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isdigit.php" class="methodname" style="color:#CC7832">isdigit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isgraph.php" class="methodname" style="color:#CC7832">isgraph</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isidignorable.php" class="methodname" style="color:#CC7832">isIDIgnorable</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isidpart.php" class="methodname" style="color:#CC7832">isIDPart</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isidstart.php" class="methodname" style="color:#CC7832">isIDStart</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isisocontrol.php" class="methodname" style="color:#CC7832">isISOControl</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isjavaidpart.php" class="methodname" style="color:#CC7832">isJavaIDPart</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isjavaidstart.php" class="methodname" style="color:#CC7832">isJavaIDStart</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isjavaspacechar.php" class="methodname" style="color:#CC7832">isJavaSpaceChar</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.islower.php" class="methodname" style="color:#CC7832">islower</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.ismirrored.php" class="methodname" style="color:#CC7832">isMirrored</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isprint.php" class="methodname" style="color:#CC7832">isprint</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.ispunct.php" class="methodname" style="color:#CC7832">ispunct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isspace.php" class="methodname" style="color:#CC7832">isspace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.istitle.php" class="methodname" style="color:#CC7832">istitle</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isualphabetic.php" class="methodname" style="color:#CC7832">isUAlphabetic</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isulowercase.php" class="methodname" style="color:#CC7832">isULowercase</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isupper.php" class="methodname" style="color:#CC7832">isupper</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isuuppercase.php" class="methodname" style="color:#CC7832">isUUppercase</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isuwhitespace.php" class="methodname" style="color:#CC7832">isUWhiteSpace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.iswhitespace.php" class="methodname" style="color:#CC7832">isWhitespace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.isxdigit.php" class="methodname" style="color:#CC7832">isxdigit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.ord.php" class="methodname" style="color:#CC7832">ord</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$character</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.tolower.php" class="methodname" style="color:#CC7832">tolower</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.totitle.php" class="methodname" style="color:#CC7832">totitle</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlchar.toupper.php" class="methodname" style="color:#CC7832">toupper</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>   }</div>   <div class="section" id="intlchar.constants">    <h2 class="title">预定义常量</h2>    <dl>           <dt id="intlchar.constants.unicode-version">       <strong><span>{@link IntlChar::UNICODE_VERSION}</span></strong>       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      </dt>      <dd>       <p class="para"></p>      </dd>              <dt id="intlchar.constants.codepoint-min">      <strong><span>{@link IntlChar::CODEPOINT_MIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.codepoint-max">      <strong><span>{@link IntlChar::CODEPOINT_MAX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.no-numeric-value">      <strong><span>{@link IntlChar::NO_NUMERIC_VALUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Special value that is returned by       <span class="methodname" style="color:#CC7832">{@link IntlChar::getNumericValue()}</span> when no numeric value       is defined for a code point.      </p>     </dd>             <dt id="intlchar.constants.property-alphabetic">      <strong><span>{@link IntlChar::PROPERTY_ALPHABETIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-binary-start">      <strong><span>{@link IntlChar::PROPERTY_BINARY_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-ascii-hex-digit">      <strong><span>{@link IntlChar::PROPERTY_ASCII_HEX_DIGIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-control">      <strong><span>{@link IntlChar::PROPERTY_BIDI_CONTROL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-mirrored">      <strong><span>{@link IntlChar::PROPERTY_BIDI_MIRRORED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-dash">      <strong><span>{@link IntlChar::PROPERTY_DASH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-default-ignorable-code-point">      <strong><span>{@link IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-deprecated">      <strong><span>{@link IntlChar::PROPERTY_DEPRECATED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-diacritic">      <strong><span>{@link IntlChar::PROPERTY_DIACRITIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-extender">      <strong><span>{@link IntlChar::PROPERTY_EXTENDER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-full-composition-exclusion">      <strong><span>{@link IntlChar::PROPERTY_FULL_COMPOSITION_EXCLUSION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-grapheme-base">      <strong><span>{@link IntlChar::PROPERTY_GRAPHEME_BASE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-grapheme-extend">      <strong><span>{@link IntlChar::PROPERTY_GRAPHEME_EXTEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-grapheme-link">      <strong><span>{@link IntlChar::PROPERTY_GRAPHEME_LINK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-hex-digit">      <strong><span>{@link IntlChar::PROPERTY_HEX_DIGIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-hyphen">      <strong><span>{@link IntlChar::PROPERTY_HYPHEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-id-continue">      <strong><span>{@link IntlChar::PROPERTY_ID_CONTINUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-id-start">      <strong><span>{@link IntlChar::PROPERTY_ID_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-ideographic">      <strong><span>{@link IntlChar::PROPERTY_IDEOGRAPHIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-ids-binary-operator">      <strong><span>{@link IntlChar::PROPERTY_IDS_BINARY_OPERATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-ids-trinary-operator">      <strong><span>{@link IntlChar::PROPERTY_IDS_TRINARY_OPERATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-join-control">      <strong><span>{@link IntlChar::PROPERTY_JOIN_CONTROL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-logical-order-exception">      <strong><span>{@link IntlChar::PROPERTY_LOGICAL_ORDER_EXCEPTION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-lowercase">      <strong><span>{@link IntlChar::PROPERTY_LOWERCASE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-math">      <strong><span>{@link IntlChar::PROPERTY_MATH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-noncharacter-code-point">      <strong><span>{@link IntlChar::PROPERTY_NONCHARACTER_CODE_POINT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-quotation-mark">      <strong><span>{@link IntlChar::PROPERTY_QUOTATION_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-radical">      <strong><span>{@link IntlChar::PROPERTY_RADICAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-soft-dotted">      <strong><span>{@link IntlChar::PROPERTY_SOFT_DOTTED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-terminal-punctuation">      <strong><span>{@link IntlChar::PROPERTY_TERMINAL_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-unified-ideograph">      <strong><span>{@link IntlChar::PROPERTY_UNIFIED_IDEOGRAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-uppercase">      <strong><span>{@link IntlChar::PROPERTY_UPPERCASE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-white-space">      <strong><span>{@link IntlChar::PROPERTY_WHITE_SPACE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-xid-continue">      <strong><span>{@link IntlChar::PROPERTY_XID_CONTINUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-xid-start">      <strong><span>{@link IntlChar::PROPERTY_XID_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-case-sensitive">      <strong><span>{@link IntlChar::PROPERTY_CASE_SENSITIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-s-term">      <strong><span>{@link IntlChar::PROPERTY_S_TERM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-variation-selector">      <strong><span>{@link IntlChar::PROPERTY_VARIATION_SELECTOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfd-inert">      <strong><span>{@link IntlChar::PROPERTY_NFD_INERT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfkd-inert">      <strong><span>{@link IntlChar::PROPERTY_NFKD_INERT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfc-inert">      <strong><span>{@link IntlChar::PROPERTY_NFC_INERT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfkc-inert">      <strong><span>{@link IntlChar::PROPERTY_NFKC_INERT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-segment-starter">      <strong><span>{@link IntlChar::PROPERTY_SEGMENT_STARTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-pattern-syntax">      <strong><span>{@link IntlChar::PROPERTY_PATTERN_SYNTAX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-pattern-white-space">      <strong><span>{@link IntlChar::PROPERTY_PATTERN_WHITE_SPACE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-posix-alnum">      <strong><span>{@link IntlChar::PROPERTY_POSIX_ALNUM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-posix-blank">      <strong><span>{@link IntlChar::PROPERTY_POSIX_BLANK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-posix-graph">      <strong><span>{@link IntlChar::PROPERTY_POSIX_GRAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-posix-print">      <strong><span>{@link IntlChar::PROPERTY_POSIX_PRINT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-posix-xdigit">      <strong><span>{@link IntlChar::PROPERTY_POSIX_XDIGIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-cased">      <strong><span>{@link IntlChar::PROPERTY_CASED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-case-ignorable">      <strong><span>{@link IntlChar::PROPERTY_CASE_IGNORABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-lowercased">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_LOWERCASED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-uppercased">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_UPPERCASED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-titlecased">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_TITLECASED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-casefolded">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_CASEFOLDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-casemapped">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_CASEMAPPED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-changes-when-nfkc-casefolded">      <strong><span>{@link IntlChar::PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-binary-limit">      <strong><span>{@link IntlChar::PROPERTY_BINARY_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-class">      <strong><span>{@link IntlChar::PROPERTY_BIDI_CLASS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-int-start">      <strong><span>{@link IntlChar::PROPERTY_INT_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-block">      <strong><span>{@link IntlChar::PROPERTY_BLOCK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-canonical-combining-class">      <strong><span>{@link IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-decomposition-type">      <strong><span>{@link IntlChar::PROPERTY_DECOMPOSITION_TYPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-east-asian-width">      <strong><span>{@link IntlChar::PROPERTY_EAST_ASIAN_WIDTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-general-category">      <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-joining-group">      <strong><span>{@link IntlChar::PROPERTY_JOINING_GROUP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-joining-type">      <strong><span>{@link IntlChar::PROPERTY_JOINING_TYPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-line-break">      <strong><span>{@link IntlChar::PROPERTY_LINE_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-numeric-type">      <strong><span>{@link IntlChar::PROPERTY_NUMERIC_TYPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-script">      <strong><span>{@link IntlChar::PROPERTY_SCRIPT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-hangul-syllable-type">      <strong><span>{@link IntlChar::PROPERTY_HANGUL_SYLLABLE_TYPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfd-quick-check">      <strong><span>{@link IntlChar::PROPERTY_NFD_QUICK_CHECK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfkd-quick-check">      <strong><span>{@link IntlChar::PROPERTY_NFKD_QUICK_CHECK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfc-quick-check">      <strong><span>{@link IntlChar::PROPERTY_NFC_QUICK_CHECK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-nfkc-quick-check">      <strong><span>{@link IntlChar::PROPERTY_NFKC_QUICK_CHECK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-lead-canonical-combining-class">      <strong><span>{@link IntlChar::PROPERTY_LEAD_CANONICAL_COMBINING_CLASS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-trail-canonical-combining-class">      <strong><span>{@link IntlChar::PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-grapheme-cluster-break">      <strong><span>{@link IntlChar::PROPERTY_GRAPHEME_CLUSTER_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-sentence-break">      <strong><span>{@link IntlChar::PROPERTY_SENTENCE_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-word-break">      <strong><span>{@link IntlChar::PROPERTY_WORD_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-paired-bracket-type">      <strong><span>{@link IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-int-limit">      <strong><span>{@link IntlChar::PROPERTY_INT_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-general-category-mask">      <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY_MASK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-mask-start">      <strong><span>{@link IntlChar::PROPERTY_MASK_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-mask-limit">      <strong><span>{@link IntlChar::PROPERTY_MASK_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-numeric-value">      <strong><span>{@link IntlChar::PROPERTY_NUMERIC_VALUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-double-start">      <strong><span>{@link IntlChar::PROPERTY_DOUBLE_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-double-limit">      <strong><span>{@link IntlChar::PROPERTY_DOUBLE_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-age">      <strong><span>{@link IntlChar::PROPERTY_AGE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-string-start">      <strong><span>{@link IntlChar::PROPERTY_STRING_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-mirroring-glyph">      <strong><span>{@link IntlChar::PROPERTY_BIDI_MIRRORING_GLYPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-case-folding">      <strong><span>{@link IntlChar::PROPERTY_CASE_FOLDING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-iso-comment">      <strong><span>{@link IntlChar::PROPERTY_ISO_COMMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-lowercase-mapping">      <strong><span>{@link IntlChar::PROPERTY_LOWERCASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-name">      <strong><span>{@link IntlChar::PROPERTY_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-simple-case-folding">      <strong><span>{@link IntlChar::PROPERTY_SIMPLE_CASE_FOLDING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-simple-lowercase-mapping">      <strong><span>{@link IntlChar::PROPERTY_SIMPLE_LOWERCASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-simple-titlecase-mapping">      <strong><span>{@link IntlChar::PROPERTY_SIMPLE_TITLECASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-simple-uppercase-mapping">      <strong><span>{@link IntlChar::PROPERTY_SIMPLE_UPPERCASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-titlecase-mapping">      <strong><span>{@link IntlChar::PROPERTY_TITLECASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-unicode-1-name">      <strong><span>{@link IntlChar::PROPERTY_UNICODE_1_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-uppercase-mapping">      <strong><span>{@link IntlChar::PROPERTY_UPPERCASE_MAPPING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-bidi-paired-bracket">      <strong><span>{@link IntlChar::PROPERTY_BIDI_PAIRED_BRACKET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-string-limit">      <strong><span>{@link IntlChar::PROPERTY_STRING_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-script-extensions">      <strong><span>{@link IntlChar::PROPERTY_SCRIPT_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-other-property-start">      <strong><span>{@link IntlChar::PROPERTY_OTHER_PROPERTY_START}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-other-property-limit">      <strong><span>{@link IntlChar::PROPERTY_OTHER_PROPERTY_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-invalid-code">      <strong><span>{@link IntlChar::PROPERTY_INVALID_CODE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-unassigned">      <strong><span>{@link IntlChar::CHAR_CATEGORY_UNASSIGNED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-general-other-types">      <strong><span>{@link IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-uppercase-letter">      <strong><span>{@link IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-lowercase-letter">      <strong><span>{@link IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-titlecase-letter">      <strong><span>{@link IntlChar::CHAR_CATEGORY_TITLECASE_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-modifier-letter">      <strong><span>{@link IntlChar::CHAR_CATEGORY_MODIFIER_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-other-letter">      <strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-non-spacing-mark">      <strong><span>{@link IntlChar::CHAR_CATEGORY_NON_SPACING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-enclosing-mark">      <strong><span>{@link IntlChar::CHAR_CATEGORY_ENCLOSING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-combining-spacing-mark">      <strong><span>{@link IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-decimal-digit-number">      <strong><span>{@link IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-letter-number">      <strong><span>{@link IntlChar::CHAR_CATEGORY_LETTER_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-other-number">      <strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-space-separator">      <strong><span>{@link IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-line-separator">      <strong><span>{@link IntlChar::CHAR_CATEGORY_LINE_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-paragraph-separator">      <strong><span>{@link IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-control-char">      <strong><span>{@link IntlChar::CHAR_CATEGORY_CONTROL_CHAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-format-char">      <strong><span>{@link IntlChar::CHAR_CATEGORY_FORMAT_CHAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-private-use-char">      <strong><span>{@link IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-surrogate">      <strong><span>{@link IntlChar::CHAR_CATEGORY_SURROGATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-dash-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-start-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_START_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-end-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_END_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-connector-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-other-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-math-symbol">      <strong><span>{@link IntlChar::CHAR_CATEGORY_MATH_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-currency-symbol">      <strong><span>{@link IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-modifier-symbol">      <strong><span>{@link IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-other-symbol">      <strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-initial-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-final-punctuation">      <strong><span>{@link IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-category-char-category-count">      <strong><span>{@link IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-left-to-right">      <strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-right-to-left">      <strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-european-number">      <strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-european-number-separator">      <strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-european-number-terminator">      <strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-arabic-number">      <strong><span>{@link IntlChar::CHAR_DIRECTION_ARABIC_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-common-number-separator">      <strong><span>{@link IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-block-separator">      <strong><span>{@link IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-segment-separator">      <strong><span>{@link IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-white-space-neutral">      <strong><span>{@link IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-other-neutral">      <strong><span>{@link IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-left-to-right-embedding">      <strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-left-to-right-override">      <strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-right-to-left-arabic">      <strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-right-to-left-embedding">      <strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-right-to-left-override">      <strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-pop-directional-format">      <strong><span>{@link IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-dir-non-spacing-mark">      <strong><span>{@link IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-boundary-neutral">      <strong><span>{@link IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-first-strong-isolate">      <strong><span>{@link IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-left-to-right-isolate">      <strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-right-to-left-isolate">      <strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-pop-directional-isolate">      <strong><span>{@link IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-direction-char-direction-count">      <strong><span>{@link IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-no-block">      <strong><span>{@link IntlChar::BLOCK_CODE_NO_BLOCK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-basic-latin">      <strong><span>{@link IntlChar::BLOCK_CODE_BASIC_LATIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-1-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_1_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-b">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ipa-extensions">      <strong><span>{@link IntlChar::BLOCK_CODE_IPA_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-spacing-modifier-letters">      <strong><span>{@link IntlChar::BLOCK_CODE_SPACING_MODIFIER_LETTERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-combining-diacritical-marks">      <strong><span>{@link IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-greek">      <strong><span>{@link IntlChar::BLOCK_CODE_GREEK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cyrillic">      <strong><span>{@link IntlChar::BLOCK_CODE_CYRILLIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-armenian">      <strong><span>{@link IntlChar::BLOCK_CODE_ARMENIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hebrew">      <strong><span>{@link IntlChar::BLOCK_CODE_HEBREW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-syriac">      <strong><span>{@link IntlChar::BLOCK_CODE_SYRIAC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-thaana">      <strong><span>{@link IntlChar::BLOCK_CODE_THAANA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-devanagari">      <strong><span>{@link IntlChar::BLOCK_CODE_DEVANAGARI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bengali">      <strong><span>{@link IntlChar::BLOCK_CODE_BENGALI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-gurmukhi">      <strong><span>{@link IntlChar::BLOCK_CODE_GURMUKHI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-gujarati">      <strong><span>{@link IntlChar::BLOCK_CODE_GUJARATI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-oriya">      <strong><span>{@link IntlChar::BLOCK_CODE_ORIYA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tamil">      <strong><span>{@link IntlChar::BLOCK_CODE_TAMIL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-telugu">      <strong><span>{@link IntlChar::BLOCK_CODE_TELUGU}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kannada">      <strong><span>{@link IntlChar::BLOCK_CODE_KANNADA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-malayalam">      <strong><span>{@link IntlChar::BLOCK_CODE_MALAYALAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sinhala">      <strong><span>{@link IntlChar::BLOCK_CODE_SINHALA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-thai">      <strong><span>{@link IntlChar::BLOCK_CODE_THAI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-lao">      <strong><span>{@link IntlChar::BLOCK_CODE_LAO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tibetan">      <strong><span>{@link IntlChar::BLOCK_CODE_TIBETAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-myanmar">      <strong><span>{@link IntlChar::BLOCK_CODE_MYANMAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-georgian">      <strong><span>{@link IntlChar::BLOCK_CODE_GEORGIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hangul-jamo">      <strong><span>{@link IntlChar::BLOCK_CODE_HANGUL_JAMO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ethiopic">      <strong><span>{@link IntlChar::BLOCK_CODE_ETHIOPIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cherokee">      <strong><span>{@link IntlChar::BLOCK_CODE_CHEROKEE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-unified-canadian-aboriginal-syllabics">      <strong><span>{@link IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ogham">      <strong><span>{@link IntlChar::BLOCK_CODE_OGHAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-runic">      <strong><span>{@link IntlChar::BLOCK_CODE_RUNIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-khmer">      <strong><span>{@link IntlChar::BLOCK_CODE_KHMER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mongolian">      <strong><span>{@link IntlChar::BLOCK_CODE_MONGOLIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-additional">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-greek-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_GREEK_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-general-punctuation">      <strong><span>{@link IntlChar::BLOCK_CODE_GENERAL_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-superscripts-and-subscripts">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-currency-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_CURRENCY_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-combining-marks-for-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-letterlike-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_LETTERLIKE_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-number-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_NUMBER_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arrows">      <strong><span>{@link IntlChar::BLOCK_CODE_ARROWS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mathematical-operators">      <strong><span>{@link IntlChar::BLOCK_CODE_MATHEMATICAL_OPERATORS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-technical">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_TECHNICAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-control-pictures">      <strong><span>{@link IntlChar::BLOCK_CODE_CONTROL_PICTURES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-optical-character-recognition">      <strong><span>{@link IntlChar::BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-enclosed-alphanumerics">      <strong><span>{@link IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERICS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-box-drawing">      <strong><span>{@link IntlChar::BLOCK_CODE_BOX_DRAWING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-block-elements">      <strong><span>{@link IntlChar::BLOCK_CODE_BLOCK_ELEMENTS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-geometric-shapes">      <strong><span>{@link IntlChar::BLOCK_CODE_GEOMETRIC_SHAPES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-dingbats">      <strong><span>{@link IntlChar::BLOCK_CODE_DINGBATS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-braille-patterns">      <strong><span>{@link IntlChar::BLOCK_CODE_BRAILLE_PATTERNS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-radicals-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_RADICALS_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kangxi-radicals">      <strong><span>{@link IntlChar::BLOCK_CODE_KANGXI_RADICALS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ideographic-description-characters">      <strong><span>{@link IntlChar::BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-symbols-and-punctuation">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hiragana">      <strong><span>{@link IntlChar::BLOCK_CODE_HIRAGANA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-katakana">      <strong><span>{@link IntlChar::BLOCK_CODE_KATAKANA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bopomofo">      <strong><span>{@link IntlChar::BLOCK_CODE_BOPOMOFO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hangul-compatibility-jamo">      <strong><span>{@link IntlChar::BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kanbun">      <strong><span>{@link IntlChar::BLOCK_CODE_KANBUN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bopomofo-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_BOPOMOFO_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-enclosed-cjk-letters-and-months">      <strong><span>{@link IntlChar::BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-compatibility">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_COMPATIBILITY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-a">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-unified-ideographs">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-yi-syllables">      <strong><span>{@link IntlChar::BLOCK_CODE_YI_SYLLABLES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-yi-radicals">      <strong><span>{@link IntlChar::BLOCK_CODE_YI_RADICALS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hangul-syllables">      <strong><span>{@link IntlChar::BLOCK_CODE_HANGUL_SYLLABLES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-high-surrogates">      <strong><span>{@link IntlChar::BLOCK_CODE_HIGH_SURROGATES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-high-private-use-surrogates">      <strong><span>{@link IntlChar::BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-low-surrogates">      <strong><span>{@link IntlChar::BLOCK_CODE_LOW_SURROGATES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-private-use-area">      <strong><span>{@link IntlChar::BLOCK_CODE_PRIVATE_USE_AREA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-private-use">      <strong><span>{@link IntlChar::BLOCK_CODE_PRIVATE_USE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-compatibility-ideographs">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-alphabetic-presentation-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic-presentation-forms-a">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-combining-half-marks">      <strong><span>{@link IntlChar::BLOCK_CODE_COMBINING_HALF_MARKS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-compatibility-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-small-form-variants">      <strong><span>{@link IntlChar::BLOCK_CODE_SMALL_FORM_VARIANTS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic-presentation-forms-b">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-specials">      <strong><span>{@link IntlChar::BLOCK_CODE_SPECIALS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-halfwidth-and-fullwidth-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-italic">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_ITALIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-gothic">      <strong><span>{@link IntlChar::BLOCK_CODE_GOTHIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-deseret">      <strong><span>{@link IntlChar::BLOCK_CODE_DESERET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-byzantine-musical-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-musical-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_MUSICAL_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mathematical-alphanumeric-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-b">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-compatibility-ideographs-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tags">      <strong><span>{@link IntlChar::BLOCK_CODE_TAGS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cyrillic-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cyrillic-supplementary">      <strong><span>{@link IntlChar::BLOCK_CODE_CYRILLIC_SUPPLEMENTARY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tagalog">      <strong><span>{@link IntlChar::BLOCK_CODE_TAGALOG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hanunoo">      <strong><span>{@link IntlChar::BLOCK_CODE_HANUNOO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-buhid">      <strong><span>{@link IntlChar::BLOCK_CODE_BUHID}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tagbanwa">      <strong><span>{@link IntlChar::BLOCK_CODE_TAGBANWA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-mathematical-symbols-a">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplemental-arrows-a">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplemental-arrows-b">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-mathematical-symbols-b">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplemental-mathematical-operators">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-katakana-phonetic-extensions">      <strong><span>{@link IntlChar::BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-variation-selectors">      <strong><span>{@link IntlChar::BLOCK_CODE_VARIATION_SELECTORS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplementary-private-use-area-a">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplementary-private-use-area-b">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-limbu">      <strong><span>{@link IntlChar::BLOCK_CODE_LIMBU}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tai-le">      <strong><span>{@link IntlChar::BLOCK_CODE_TAI_LE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-khmer-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_KHMER_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-phonetic-extensions">      <strong><span>{@link IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-symbols-and-arrows">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-yijing-hexagram-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-linear-b-syllabary">      <strong><span>{@link IntlChar::BLOCK_CODE_LINEAR_B_SYLLABARY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-linear-b-ideograms">      <strong><span>{@link IntlChar::BLOCK_CODE_LINEAR_B_IDEOGRAMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-aegean-numbers">      <strong><span>{@link IntlChar::BLOCK_CODE_AEGEAN_NUMBERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ugaritic">      <strong><span>{@link IntlChar::BLOCK_CODE_UGARITIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-shavian">      <strong><span>{@link IntlChar::BLOCK_CODE_SHAVIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-osmanya">      <strong><span>{@link IntlChar::BLOCK_CODE_OSMANYA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cypriot-syllabary">      <strong><span>{@link IntlChar::BLOCK_CODE_CYPRIOT_SYLLABARY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tai-xuan-jing-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_TAI_XUAN_JING_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-variation-selectors-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ancient-greek-musical-notation">      <strong><span>{@link IntlChar::BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ancient-greek-numbers">      <strong><span>{@link IntlChar::BLOCK_CODE_ANCIENT_GREEK_NUMBERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-buginese">      <strong><span>{@link IntlChar::BLOCK_CODE_BUGINESE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-strokes">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_STROKES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-combining-diacritical-marks-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-coptic">      <strong><span>{@link IntlChar::BLOCK_CODE_COPTIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ethiopic-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ethiopic-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_ETHIOPIC_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-georgian-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_GEORGIAN_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-glagolitic">      <strong><span>{@link IntlChar::BLOCK_CODE_GLAGOLITIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kharoshthi">      <strong><span>{@link IntlChar::BLOCK_CODE_KHAROSHTHI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-modifier-tone-letters">      <strong><span>{@link IntlChar::BLOCK_CODE_MODIFIER_TONE_LETTERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-new-tai-lue">      <strong><span>{@link IntlChar::BLOCK_CODE_NEW_TAI_LUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-persian">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_PERSIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-phonetic-extensions-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplemental-punctuation">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-syloti-nagri">      <strong><span>{@link IntlChar::BLOCK_CODE_SYLOTI_NAGRI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tifinagh">      <strong><span>{@link IntlChar::BLOCK_CODE_TIFINAGH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-vertical-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_VERTICAL_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-nko">      <strong><span>{@link IntlChar::BLOCK_CODE_NKO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-balinese">      <strong><span>{@link IntlChar::BLOCK_CODE_BALINESE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-c">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_C}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-d">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_D}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-phags-pa">      <strong><span>{@link IntlChar::BLOCK_CODE_PHAGS_PA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-phoenician">      <strong><span>{@link IntlChar::BLOCK_CODE_PHOENICIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cuneiform">      <strong><span>{@link IntlChar::BLOCK_CODE_CUNEIFORM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cuneiform-numbers-and-punctuation">      <strong><span>{@link IntlChar::BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-counting-rod-numerals">      <strong><span>{@link IntlChar::BLOCK_CODE_COUNTING_ROD_NUMERALS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sundanese">      <strong><span>{@link IntlChar::BLOCK_CODE_SUNDANESE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-lepcha">      <strong><span>{@link IntlChar::BLOCK_CODE_LEPCHA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ol-chiki">      <strong><span>{@link IntlChar::BLOCK_CODE_OL_CHIKI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cyrillic-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-vai">      <strong><span>{@link IntlChar::BLOCK_CODE_VAI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cyrillic-extended-b">      <strong><span>{@link IntlChar::BLOCK_CODE_CYRILLIC_EXTENDED_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-saurashtra">      <strong><span>{@link IntlChar::BLOCK_CODE_SAURASHTRA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kayah-li">      <strong><span>{@link IntlChar::BLOCK_CODE_KAYAH_LI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-rejang">      <strong><span>{@link IntlChar::BLOCK_CODE_REJANG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cham">      <strong><span>{@link IntlChar::BLOCK_CODE_CHAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ancient-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_ANCIENT_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-phaistos-disc">      <strong><span>{@link IntlChar::BLOCK_CODE_PHAISTOS_DISC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-lycian">      <strong><span>{@link IntlChar::BLOCK_CODE_LYCIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-carian">      <strong><span>{@link IntlChar::BLOCK_CODE_CARIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-lydian">      <strong><span>{@link IntlChar::BLOCK_CODE_LYDIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mahjong-tiles">      <strong><span>{@link IntlChar::BLOCK_CODE_MAHJONG_TILES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-domino-tiles">      <strong><span>{@link IntlChar::BLOCK_CODE_DOMINO_TILES}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-samaritan">      <strong><span>{@link IntlChar::BLOCK_CODE_SAMARITAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-unified-canadian-aboriginal-syllabics-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tai-tham">      <strong><span>{@link IntlChar::BLOCK_CODE_TAI_THAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-vedic-extensions">      <strong><span>{@link IntlChar::BLOCK_CODE_VEDIC_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-lisu">      <strong><span>{@link IntlChar::BLOCK_CODE_LISU}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bamum">      <strong><span>{@link IntlChar::BLOCK_CODE_BAMUM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-common-indic-number-forms">      <strong><span>{@link IntlChar::BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-devanagari-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_DEVANAGARI_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hangul-jamo-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-javanese">      <strong><span>{@link IntlChar::BLOCK_CODE_JAVANESE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-myanmar-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_MYANMAR_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tai-viet">      <strong><span>{@link IntlChar::BLOCK_CODE_TAI_VIET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-meetei-mayek">      <strong><span>{@link IntlChar::BLOCK_CODE_MEETEI_MAYEK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-hangul-jamo-extended-b">      <strong><span>{@link IntlChar::BLOCK_CODE_HANGUL_JAMO_EXTENDED_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-imperial-aramaic">      <strong><span>{@link IntlChar::BLOCK_CODE_IMPERIAL_ARAMAIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-south-arabian">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_SOUTH_ARABIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-avestan">      <strong><span>{@link IntlChar::BLOCK_CODE_AVESTAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-inscriptional-parthian">      <strong><span>{@link IntlChar::BLOCK_CODE_INSCRIPTIONAL_PARTHIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-inscriptional-pahlavi">      <strong><span>{@link IntlChar::BLOCK_CODE_INSCRIPTIONAL_PAHLAVI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-turkic">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_TURKIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-rumi-numeral-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_RUMI_NUMERAL_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kaithi">      <strong><span>{@link IntlChar::BLOCK_CODE_KAITHI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-egyptian-hieroglyphs">      <strong><span>{@link IntlChar::BLOCK_CODE_EGYPTIAN_HIEROGLYPHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-enclosed-alphanumeric-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-enclosed-ideographic-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-c">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mandaic">      <strong><span>{@link IntlChar::BLOCK_CODE_MANDAIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-batak">      <strong><span>{@link IntlChar::BLOCK_CODE_BATAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ethiopic-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_ETHIOPIC_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-brahmi">      <strong><span>{@link IntlChar::BLOCK_CODE_BRAHMI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bamum-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_BAMUM_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-kana-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_KANA_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-playing-cards">      <strong><span>{@link IntlChar::BLOCK_CODE_PLAYING_CARDS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miscellaneous-symbols-and-pictographs">      <strong><span>{@link IntlChar::BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-emoticons">      <strong><span>{@link IntlChar::BLOCK_CODE_EMOTICONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-transport-and-map-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-alchemical-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_ALCHEMICAL_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-cjk-unified-ideographs-extension-d">      <strong><span>{@link IntlChar::BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic-extended-a">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC_EXTENDED_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-arabic-mathematical-alphabetic-symbols">      <strong><span>{@link IntlChar::BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-chakma">      <strong><span>{@link IntlChar::BLOCK_CODE_CHAKMA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-meetei-mayek-extensions">      <strong><span>{@link IntlChar::BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-meroitic-cursive">      <strong><span>{@link IntlChar::BLOCK_CODE_MEROITIC_CURSIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-meroitic-hieroglyphs">      <strong><span>{@link IntlChar::BLOCK_CODE_MEROITIC_HIEROGLYPHS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-miao">      <strong><span>{@link IntlChar::BLOCK_CODE_MIAO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sharada">      <strong><span>{@link IntlChar::BLOCK_CODE_SHARADA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sora-sompeng">      <strong><span>{@link IntlChar::BLOCK_CODE_SORA_SOMPENG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sundanese-supplement">      <strong><span>{@link IntlChar::BLOCK_CODE_SUNDANESE_SUPPLEMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-takri">      <strong><span>{@link IntlChar::BLOCK_CODE_TAKRI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-bassa-vah">      <strong><span>{@link IntlChar::BLOCK_CODE_BASSA_VAH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-caucasian-albanian">      <strong><span>{@link IntlChar::BLOCK_CODE_CAUCASIAN_ALBANIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-coptic-epact-numbers">      <strong><span>{@link IntlChar::BLOCK_CODE_COPTIC_EPACT_NUMBERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-combining-diacritical-marks-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-duployan">      <strong><span>{@link IntlChar::BLOCK_CODE_DUPLOYAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-elbasan">      <strong><span>{@link IntlChar::BLOCK_CODE_ELBASAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-geometric-shapes-extended">      <strong><span>{@link IntlChar::BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-grantha">      <strong><span>{@link IntlChar::BLOCK_CODE_GRANTHA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-khojki">      <strong><span>{@link IntlChar::BLOCK_CODE_KHOJKI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-khudawadi">      <strong><span>{@link IntlChar::BLOCK_CODE_KHUDAWADI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-latin-extended-e">      <strong><span>{@link IntlChar::BLOCK_CODE_LATIN_EXTENDED_E}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-linear-a">      <strong><span>{@link IntlChar::BLOCK_CODE_LINEAR_A}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mahajani">      <strong><span>{@link IntlChar::BLOCK_CODE_MAHAJANI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-manichaean">      <strong><span>{@link IntlChar::BLOCK_CODE_MANICHAEAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mende-kikakui">      <strong><span>{@link IntlChar::BLOCK_CODE_MENDE_KIKAKUI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-modi">      <strong><span>{@link IntlChar::BLOCK_CODE_MODI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-mro">      <strong><span>{@link IntlChar::BLOCK_CODE_MRO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-myanmar-extended-b">      <strong><span>{@link IntlChar::BLOCK_CODE_MYANMAR_EXTENDED_B}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-nabataean">      <strong><span>{@link IntlChar::BLOCK_CODE_NABATAEAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-north-arabian">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_NORTH_ARABIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-old-permic">      <strong><span>{@link IntlChar::BLOCK_CODE_OLD_PERMIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-ornamental-dingbats">      <strong><span>{@link IntlChar::BLOCK_CODE_ORNAMENTAL_DINGBATS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-pahawh-hmong">      <strong><span>{@link IntlChar::BLOCK_CODE_PAHAWH_HMONG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-palmyrene">      <strong><span>{@link IntlChar::BLOCK_CODE_PALMYRENE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-pau-cin-hau">      <strong><span>{@link IntlChar::BLOCK_CODE_PAU_CIN_HAU}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-psalter-pahlavi">      <strong><span>{@link IntlChar::BLOCK_CODE_PSALTER_PAHLAVI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-shorthand-format-controls">      <strong><span>{@link IntlChar::BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-siddham">      <strong><span>{@link IntlChar::BLOCK_CODE_SIDDHAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-sinhala-archaic-numbers">      <strong><span>{@link IntlChar::BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-supplemental-arrows-c">      <strong><span>{@link IntlChar::BLOCK_CODE_SUPPLEMENTAL_ARROWS_C}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-tirhuta">      <strong><span>{@link IntlChar::BLOCK_CODE_TIRHUTA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-warang-citi">      <strong><span>{@link IntlChar::BLOCK_CODE_WARANG_CITI}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-count">      <strong><span>{@link IntlChar::BLOCK_CODE_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.block-code-invalid-code">      <strong><span>{@link IntlChar::BLOCK_CODE_INVALID_CODE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.bpt-none">      <strong><span>{@link IntlChar::BPT_NONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.bpt-open">      <strong><span>{@link IntlChar::BPT_OPEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.bpt-close">      <strong><span>{@link IntlChar::BPT_CLOSE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.bpt-count">      <strong><span>{@link IntlChar::BPT_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-neutral">      <strong><span>{@link IntlChar::EA_NEUTRAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-ambiguous">      <strong><span>{@link IntlChar::EA_AMBIGUOUS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-halfwidth">      <strong><span>{@link IntlChar::EA_HALFWIDTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-fullwidth">      <strong><span>{@link IntlChar::EA_FULLWIDTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-narrow">      <strong><span>{@link IntlChar::EA_NARROW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-wide">      <strong><span>{@link IntlChar::EA_WIDE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.ea-count">      <strong><span>{@link IntlChar::EA_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.unicode-char-name">      <strong><span>{@link IntlChar::UNICODE_CHAR_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.unicode-10-char-name">      <strong><span>{@link IntlChar::UNICODE_10_CHAR_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.extended-char-name">      <strong><span>{@link IntlChar::EXTENDED_CHAR_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-name-alias">      <strong><span>{@link IntlChar::CHAR_NAME_ALIAS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.char-name-choice-count">      <strong><span>{@link IntlChar::CHAR_NAME_CHOICE_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.short-property-name">      <strong><span>{@link IntlChar::SHORT_PROPERTY_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.long-property-name">      <strong><span>{@link IntlChar::LONG_PROPERTY_NAME}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.property-name-choice-count">      <strong><span>{@link IntlChar::PROPERTY_NAME_CHOICE_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-none">      <strong><span>{@link IntlChar::DT_NONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-canonical">      <strong><span>{@link IntlChar::DT_CANONICAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-compat">      <strong><span>{@link IntlChar::DT_COMPAT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-circle">      <strong><span>{@link IntlChar::DT_CIRCLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-final">      <strong><span>{@link IntlChar::DT_FINAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-font">      <strong><span>{@link IntlChar::DT_FONT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-fraction">      <strong><span>{@link IntlChar::DT_FRACTION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-initial">      <strong><span>{@link IntlChar::DT_INITIAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-isolated">      <strong><span>{@link IntlChar::DT_ISOLATED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-medial">      <strong><span>{@link IntlChar::DT_MEDIAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-narrow">      <strong><span>{@link IntlChar::DT_NARROW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-nobreak">      <strong><span>{@link IntlChar::DT_NOBREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-small">      <strong><span>{@link IntlChar::DT_SMALL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-square">      <strong><span>{@link IntlChar::DT_SQUARE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-sub">      <strong><span>{@link IntlChar::DT_SUB}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-super">      <strong><span>{@link IntlChar::DT_SUPER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-vertical">      <strong><span>{@link IntlChar::DT_VERTICAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-wide">      <strong><span>{@link IntlChar::DT_WIDE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.dt-count">      <strong><span>{@link IntlChar::DT_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-non-joining">      <strong><span>{@link IntlChar::JT_NON_JOINING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-join-causing">      <strong><span>{@link IntlChar::JT_JOIN_CAUSING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-dual-joining">      <strong><span>{@link IntlChar::JT_DUAL_JOINING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-left-joining">      <strong><span>{@link IntlChar::JT_LEFT_JOINING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-right-joining">      <strong><span>{@link IntlChar::JT_RIGHT_JOINING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-transparent">      <strong><span>{@link IntlChar::JT_TRANSPARENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jt-count">      <strong><span>{@link IntlChar::JT_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-no-joining-group">      <strong><span>{@link IntlChar::JG_NO_JOINING_GROUP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-ain">      <strong><span>{@link IntlChar::JG_AIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-alaph">      <strong><span>{@link IntlChar::JG_ALAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-alef">      <strong><span>{@link IntlChar::JG_ALEF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-beh">      <strong><span>{@link IntlChar::JG_BEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-beth">      <strong><span>{@link IntlChar::JG_BETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-dal">      <strong><span>{@link IntlChar::JG_DAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-dalath-rish">      <strong><span>{@link IntlChar::JG_DALATH_RISH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-e">      <strong><span>{@link IntlChar::JG_E}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-feh">      <strong><span>{@link IntlChar::JG_FEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-final-semkath">      <strong><span>{@link IntlChar::JG_FINAL_SEMKATH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-gaf">      <strong><span>{@link IntlChar::JG_GAF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-gamal">      <strong><span>{@link IntlChar::JG_GAMAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-hah">      <strong><span>{@link IntlChar::JG_HAH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-teh-marbuta-goal">      <strong><span>{@link IntlChar::JG_TEH_MARBUTA_GOAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-hamza-on-heh-goal">      <strong><span>{@link IntlChar::JG_HAMZA_ON_HEH_GOAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-he">      <strong><span>{@link IntlChar::JG_HE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-heh">      <strong><span>{@link IntlChar::JG_HEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-heh-goal">      <strong><span>{@link IntlChar::JG_HEH_GOAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-heth">      <strong><span>{@link IntlChar::JG_HETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-kaf">      <strong><span>{@link IntlChar::JG_KAF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-kaph">      <strong><span>{@link IntlChar::JG_KAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-knotted-heh">      <strong><span>{@link IntlChar::JG_KNOTTED_HEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-lam">      <strong><span>{@link IntlChar::JG_LAM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-lamadh">      <strong><span>{@link IntlChar::JG_LAMADH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-meem">      <strong><span>{@link IntlChar::JG_MEEM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-mim">      <strong><span>{@link IntlChar::JG_MIM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-noon">      <strong><span>{@link IntlChar::JG_NOON}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-nun">      <strong><span>{@link IntlChar::JG_NUN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-pe">      <strong><span>{@link IntlChar::JG_PE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-qaf">      <strong><span>{@link IntlChar::JG_QAF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-qaph">      <strong><span>{@link IntlChar::JG_QAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-reh">      <strong><span>{@link IntlChar::JG_REH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-reversed-pe">      <strong><span>{@link IntlChar::JG_REVERSED_PE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-sad">      <strong><span>{@link IntlChar::JG_SAD}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-sadhe">      <strong><span>{@link IntlChar::JG_SADHE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-seen">      <strong><span>{@link IntlChar::JG_SEEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-semkath">      <strong><span>{@link IntlChar::JG_SEMKATH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-shin">      <strong><span>{@link IntlChar::JG_SHIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-swash-kaf">      <strong><span>{@link IntlChar::JG_SWASH_KAF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-syriac-waw">      <strong><span>{@link IntlChar::JG_SYRIAC_WAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-tah">      <strong><span>{@link IntlChar::JG_TAH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-taw">      <strong><span>{@link IntlChar::JG_TAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-teh-marbuta">      <strong><span>{@link IntlChar::JG_TEH_MARBUTA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-teth">      <strong><span>{@link IntlChar::JG_TETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-waw">      <strong><span>{@link IntlChar::JG_WAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-yeh">      <strong><span>{@link IntlChar::JG_YEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-yeh-barree">      <strong><span>{@link IntlChar::JG_YEH_BARREE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-yeh-with-tail">      <strong><span>{@link IntlChar::JG_YEH_WITH_TAIL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-yudh">      <strong><span>{@link IntlChar::JG_YUDH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-yudh-he">      <strong><span>{@link IntlChar::JG_YUDH_HE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-zain">      <strong><span>{@link IntlChar::JG_ZAIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-fe">      <strong><span>{@link IntlChar::JG_FE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-khaph">      <strong><span>{@link IntlChar::JG_KHAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-zhain">      <strong><span>{@link IntlChar::JG_ZHAIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-burushaski-yeh-barree">      <strong><span>{@link IntlChar::JG_BURUSHASKI_YEH_BARREE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-farsi-yeh">      <strong><span>{@link IntlChar::JG_FARSI_YEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-nya">      <strong><span>{@link IntlChar::JG_NYA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-rohingya-yeh">      <strong><span>{@link IntlChar::JG_ROHINGYA_YEH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-aleph">      <strong><span>{@link IntlChar::JG_MANICHAEAN_ALEPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-ayin">      <strong><span>{@link IntlChar::JG_MANICHAEAN_AYIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-beth">      <strong><span>{@link IntlChar::JG_MANICHAEAN_BETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-daleth">      <strong><span>{@link IntlChar::JG_MANICHAEAN_DALETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-dhamedh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_DHAMEDH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-five">      <strong><span>{@link IntlChar::JG_MANICHAEAN_FIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-gimel">      <strong><span>{@link IntlChar::JG_MANICHAEAN_GIMEL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-heth">      <strong><span>{@link IntlChar::JG_MANICHAEAN_HETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-hundred">      <strong><span>{@link IntlChar::JG_MANICHAEAN_HUNDRED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-kaph">      <strong><span>{@link IntlChar::JG_MANICHAEAN_KAPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-lamedh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_LAMEDH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-mem">      <strong><span>{@link IntlChar::JG_MANICHAEAN_MEM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-nun">      <strong><span>{@link IntlChar::JG_MANICHAEAN_NUN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-one">      <strong><span>{@link IntlChar::JG_MANICHAEAN_ONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-pe">      <strong><span>{@link IntlChar::JG_MANICHAEAN_PE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-qoph">      <strong><span>{@link IntlChar::JG_MANICHAEAN_QOPH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-resh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_RESH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-sadhe">      <strong><span>{@link IntlChar::JG_MANICHAEAN_SADHE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-samekh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_SAMEKH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-taw">      <strong><span>{@link IntlChar::JG_MANICHAEAN_TAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-ten">      <strong><span>{@link IntlChar::JG_MANICHAEAN_TEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-teth">      <strong><span>{@link IntlChar::JG_MANICHAEAN_TETH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-thamedh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_THAMEDH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-twenty">      <strong><span>{@link IntlChar::JG_MANICHAEAN_TWENTY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-waw">      <strong><span>{@link IntlChar::JG_MANICHAEAN_WAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-yodh">      <strong><span>{@link IntlChar::JG_MANICHAEAN_YODH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-manichaean-zayin">      <strong><span>{@link IntlChar::JG_MANICHAEAN_ZAYIN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-straight-waw">      <strong><span>{@link IntlChar::JG_STRAIGHT_WAW}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.jg-count">      <strong><span>{@link IntlChar::JG_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-other">      <strong><span>{@link IntlChar::GCB_OTHER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-control">      <strong><span>{@link IntlChar::GCB_CONTROL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-cr">      <strong><span>{@link IntlChar::GCB_CR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-extend">      <strong><span>{@link IntlChar::GCB_EXTEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-l">      <strong><span>{@link IntlChar::GCB_L}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-lf">      <strong><span>{@link IntlChar::GCB_LF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-lv">      <strong><span>{@link IntlChar::GCB_LV}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-lvt">      <strong><span>{@link IntlChar::GCB_LVT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-t">      <strong><span>{@link IntlChar::GCB_T}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-v">      <strong><span>{@link IntlChar::GCB_V}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-spacing-mark">      <strong><span>{@link IntlChar::GCB_SPACING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-prepend">      <strong><span>{@link IntlChar::GCB_PREPEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-regional-indicator">      <strong><span>{@link IntlChar::GCB_REGIONAL_INDICATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.gcb-count">      <strong><span>{@link IntlChar::GCB_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-other">      <strong><span>{@link IntlChar::WB_OTHER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-aletter">      <strong><span>{@link IntlChar::WB_ALETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-format">      <strong><span>{@link IntlChar::WB_FORMAT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-katakana">      <strong><span>{@link IntlChar::WB_KATAKANA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-midletter">      <strong><span>{@link IntlChar::WB_MIDLETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-midnum">      <strong><span>{@link IntlChar::WB_MIDNUM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-numeric">      <strong><span>{@link IntlChar::WB_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-extendnumlet">      <strong><span>{@link IntlChar::WB_EXTENDNUMLET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-cr">      <strong><span>{@link IntlChar::WB_CR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-extend">      <strong><span>{@link IntlChar::WB_EXTEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-lf">      <strong><span>{@link IntlChar::WB_LF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-midnumlet">      <strong><span>{@link IntlChar::WB_MIDNUMLET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-newline">      <strong><span>{@link IntlChar::WB_NEWLINE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-regional-indicator">      <strong><span>{@link IntlChar::WB_REGIONAL_INDICATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-hebrew-letter">      <strong><span>{@link IntlChar::WB_HEBREW_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-single-quote">      <strong><span>{@link IntlChar::WB_SINGLE_QUOTE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-double-quote">      <strong><span>{@link IntlChar::WB_DOUBLE_QUOTE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.wb-count">      <strong><span>{@link IntlChar::WB_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-other">      <strong><span>{@link IntlChar::SB_OTHER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-aterm">      <strong><span>{@link IntlChar::SB_ATERM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-close">      <strong><span>{@link IntlChar::SB_CLOSE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-format">      <strong><span>{@link IntlChar::SB_FORMAT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-lower">      <strong><span>{@link IntlChar::SB_LOWER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-numeric">      <strong><span>{@link IntlChar::SB_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-oletter">      <strong><span>{@link IntlChar::SB_OLETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-sep">      <strong><span>{@link IntlChar::SB_SEP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-sp">      <strong><span>{@link IntlChar::SB_SP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-sterm">      <strong><span>{@link IntlChar::SB_STERM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-upper">      <strong><span>{@link IntlChar::SB_UPPER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-cr">      <strong><span>{@link IntlChar::SB_CR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-extend">      <strong><span>{@link IntlChar::SB_EXTEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-lf">      <strong><span>{@link IntlChar::SB_LF}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-scontinue">      <strong><span>{@link IntlChar::SB_SCONTINUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.sb-count">      <strong><span>{@link IntlChar::SB_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-unknown">      <strong><span>{@link IntlChar::LB_UNKNOWN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-ambiguous">      <strong><span>{@link IntlChar::LB_AMBIGUOUS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-alphabetic">      <strong><span>{@link IntlChar::LB_ALPHABETIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-break-both">      <strong><span>{@link IntlChar::LB_BREAK_BOTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-break-after">      <strong><span>{@link IntlChar::LB_BREAK_AFTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-break-before">      <strong><span>{@link IntlChar::LB_BREAK_BEFORE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-mandatory-break">      <strong><span>{@link IntlChar::LB_MANDATORY_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-contingent-break">      <strong><span>{@link IntlChar::LB_CONTINGENT_BREAK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-close-punctuation">      <strong><span>{@link IntlChar::LB_CLOSE_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-combining-mark">      <strong><span>{@link IntlChar::LB_COMBINING_MARK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-carriage-return">      <strong><span>{@link IntlChar::LB_CARRIAGE_RETURN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-exclamation">      <strong><span>{@link IntlChar::LB_EXCLAMATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-glue">      <strong><span>{@link IntlChar::LB_GLUE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-hyphen">      <strong><span>{@link IntlChar::LB_HYPHEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-ideographic">      <strong><span>{@link IntlChar::LB_IDEOGRAPHIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-inseparable">      <strong><span>{@link IntlChar::LB_INSEPARABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-inseperable">      <strong><span>{@link IntlChar::LB_INSEPERABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-infix-numeric">      <strong><span>{@link IntlChar::LB_INFIX_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-line-feed">      <strong><span>{@link IntlChar::LB_LINE_FEED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-nonstarter">      <strong><span>{@link IntlChar::LB_NONSTARTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-numeric">      <strong><span>{@link IntlChar::LB_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-open-punctuation">      <strong><span>{@link IntlChar::LB_OPEN_PUNCTUATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-postfix-numeric">      <strong><span>{@link IntlChar::LB_POSTFIX_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-prefix-numeric">      <strong><span>{@link IntlChar::LB_PREFIX_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-quotation">      <strong><span>{@link IntlChar::LB_QUOTATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-complex-context">      <strong><span>{@link IntlChar::LB_COMPLEX_CONTEXT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-surrogate">      <strong><span>{@link IntlChar::LB_SURROGATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-space">      <strong><span>{@link IntlChar::LB_SPACE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-break-symbols">      <strong><span>{@link IntlChar::LB_BREAK_SYMBOLS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-zwspace">      <strong><span>{@link IntlChar::LB_ZWSPACE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-next-line">      <strong><span>{@link IntlChar::LB_NEXT_LINE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-word-joiner">      <strong><span>{@link IntlChar::LB_WORD_JOINER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-h2">      <strong><span>{@link IntlChar::LB_H2}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-h3">      <strong><span>{@link IntlChar::LB_H3}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-jl">      <strong><span>{@link IntlChar::LB_JL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-jt">      <strong><span>{@link IntlChar::LB_JT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-jv">      <strong><span>{@link IntlChar::LB_JV}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-close-parenthesis">      <strong><span>{@link IntlChar::LB_CLOSE_PARENTHESIS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-conditional-japanese-starter">      <strong><span>{@link IntlChar::LB_CONDITIONAL_JAPANESE_STARTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-hebrew-letter">      <strong><span>{@link IntlChar::LB_HEBREW_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-regional-indicator">      <strong><span>{@link IntlChar::LB_REGIONAL_INDICATOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.lb-count">      <strong><span>{@link IntlChar::LB_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.nt-none">      <strong><span>{@link IntlChar::NT_NONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.nt-decimal">      <strong><span>{@link IntlChar::NT_DECIMAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.nt-digit">      <strong><span>{@link IntlChar::NT_DIGIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.nt-numeric">      <strong><span>{@link IntlChar::NT_NUMERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.nt-count">      <strong><span>{@link IntlChar::NT_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-not-applicable">      <strong><span>{@link IntlChar::HST_NOT_APPLICABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-leading-jamo">      <strong><span>{@link IntlChar::HST_LEADING_JAMO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-vowel-jamo">      <strong><span>{@link IntlChar::HST_VOWEL_JAMO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-trailing-jamo">      <strong><span>{@link IntlChar::HST_TRAILING_JAMO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-lv-syllable">      <strong><span>{@link IntlChar::HST_LV_SYLLABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-lvt-syllable">      <strong><span>{@link IntlChar::HST_LVT_SYLLABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.hst-count">      <strong><span>{@link IntlChar::HST_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.fold-case-default">      <strong><span>{@link IntlChar::FOLD_CASE_DEFAULT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlchar.constants.fold-case-exclude-special-i">      <strong><span>{@link IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>   </div>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <p class="para">    </p><table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.4.0</td>        <td>         The class constants are now typed.        </td>       </tr>       <tr>        <td>7.0.6</td>        <td>         The <strong><span>{@link IntlChar::NO_NUMERIC_VALUE}</span></strong> constant was added.        </td>       </tr>      </tbody>         </table>     </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlChar::charAge} — Get the "age" of the code point</li><li>{@link IntlChar::charDigitValue} — Get the decimal digit value of a decimal digit character</li><li>{@link IntlChar::charDirection} — Get bidirectional category value for a code point</li><li>{@link IntlChar::charFromName} — Find Unicode character by name and return its code point value</li><li>{@link IntlChar::charMirror} — Get the "mirror-image" character for a code point</li><li>{@link IntlChar::charName} — Retrieve the name of a Unicode character</li><li>{@link IntlChar::charType} — Get the general category value for a code point</li><li>{@link IntlChar::chr} — Return Unicode character by code point value</li><li>{@link IntlChar::digit} — Get the decimal digit value of a code point for a given radix</li><li>{@link IntlChar::enumCharNames} — Enumerate all assigned Unicode characters within a range</li><li>{@link IntlChar::enumCharTypes} — Enumerate all code points with their Unicode general categories</li><li>{@link IntlChar::foldCase} — Perform case folding on a code point</li><li>{@link IntlChar::forDigit} — Get character representation for a given digit and radix</li><li>{@link IntlChar::getBidiPairedBracket} — Get the paired bracket character for a code point</li><li>{@link IntlChar::getBlockCode} — Get the Unicode allocation block containing a code point</li><li>{@link IntlChar::getCombiningClass} — Get the combining class of a code point</li><li>{@link IntlChar::getFC_NFKC_Closure} — Get the FC_NFKC_Closure property for a code point</li><li>{@link IntlChar::getIntPropertyMaxValue} — Get the max value for a Unicode property</li><li>{@link IntlChar::getIntPropertyMinValue} — Get the min value for a Unicode property</li><li>{@link IntlChar::getIntPropertyValue} — Get the value for a Unicode property for a code point</li><li>{@link IntlChar::getNumericValue} — Get the numeric value for a Unicode code point</li><li>{@link IntlChar::getPropertyEnum} — Get the property constant value for a given property name</li><li>{@link IntlChar::getPropertyName} — Get the Unicode name for a property</li><li>{@link IntlChar::getPropertyValueEnum} — Get the property value for a given value name</li><li>{@link IntlChar::getPropertyValueName} — Get the Unicode name for a property value</li><li>{@link IntlChar::getUnicodeVersion} — Get the Unicode version</li><li>{@link IntlChar::hasBinaryProperty} — Check a binary Unicode property for a code point</li><li>{@link IntlChar::isalnum} — Check if code point is an alphanumeric character</li><li>{@link IntlChar::isalpha} — Check if code point is a letter character</li><li>{@link IntlChar::isbase} — Check if code point is a base character</li><li>{@link IntlChar::isblank} — Check if code point is a "blank" or "horizontal space" character</li><li>{@link IntlChar::iscntrl} — Check if code point is a control character</li><li>{@link IntlChar::isdefined} — Check whether the code point is defined</li><li>{@link IntlChar::isdigit} — Check if code point is a digit character</li><li>{@link IntlChar::isgraph} — Check if code point is a graphic character</li><li>{@link IntlChar::isIDIgnorable} — Check if code point is an ignorable character</li><li>{@link IntlChar::isIDPart} — Check if code point is permissible in an identifier</li><li>{@link IntlChar::isIDStart} — Check if code point is permissible as the first character in an identifier</li><li>{@link IntlChar::isISOControl} — Check if code point is an ISO control code</li><li>{@link IntlChar::isJavaIDPart} — Check if code point is permissible in a Java identifier</li><li>{@link IntlChar::isJavaIDStart} — Check if code point is permissible as the first character in a Java identifier</li><li>{@link IntlChar::isJavaSpaceChar} — Check if code point is a space character according to Java</li><li>{@link IntlChar::islower} — Check if code point is a lowercase letter</li><li>{@link IntlChar::isMirrored} — Check if code point has the Bidi_Mirrored property</li><li>{@link IntlChar::isprint} — Check if code point is a printable character</li><li>{@link IntlChar::ispunct} — Check if code point is punctuation character</li><li>{@link IntlChar::isspace} — Check if code point is a space character</li><li>{@link IntlChar::istitle} — Check if code point is a titlecase letter</li><li>{@link IntlChar::isUAlphabetic} — Check if code point has the Alphabetic Unicode property</li><li>{@link IntlChar::isULowercase} — Check if code point has the Lowercase Unicode property</li><li>{@link IntlChar::isupper} — Check if code point has the general category "Lu" (uppercase letter)</li><li>{@link IntlChar::isUUppercase} — Check if code point has the Uppercase Unicode property</li><li>{@link IntlChar::isUWhiteSpace} — Check if code point has the White_Space Unicode property</li><li>{@link IntlChar::isWhitespace} — Check if code point is a whitespace character according to ICU</li><li>{@link IntlChar::isxdigit} — Check if code point is a hexadecimal digit</li><li>{@link IntlChar::ord} — Return Unicode code point value of character</li><li>{@link IntlChar::tolower} — Make Unicode character lowercase</li><li>{@link IntlChar::totitle} — Make Unicode character titlecase</li><li>{@link IntlChar::toupper} — Make Unicode character uppercase</li></ul></div>
*
 * <p>IntlChar provides access to a number of utility methods that can be used to access information about Unicode characters.</p>
 * <p>The methods and constants adhere closely to the names and behavior used by the underlying ICU library.</p>
 * @since 7.0
 
*/
class IntlChar
{
    public const UNICODE_VERSION = 13.0;
    public const CODEPOINT_MIN = 0;
    public const CODEPOINT_MAX = 1114111;
    public const FOLD_CASE_DEFAULT = 0;
    public const FOLD_CASE_EXCLUDE_SPECIAL_I = 1;
    public const PROPERTY_ALPHABETIC = 0;
    public const PROPERTY_BINARY_START = 0;
    public const PROPERTY_ASCII_HEX_DIGIT = 1;
    public const PROPERTY_BIDI_CONTROL = 2;
    public const PROPERTY_BIDI_MIRRORED = 3;
    public const PROPERTY_DASH = 4;
    public const PROPERTY_DEFAULT_IGNORABLE_CODE_POINT = 5;
    public const PROPERTY_DEPRECATED = 6;
    public const PROPERTY_DIACRITIC = 7;
    public const PROPERTY_EXTENDER = 8;
    public const PROPERTY_FULL_COMPOSITION_EXCLUSION = 9;
    public const PROPERTY_GRAPHEME_BASE = 10;
    public const PROPERTY_GRAPHEME_EXTEND = 11;
    public const PROPERTY_GRAPHEME_LINK = 12;
    public const PROPERTY_HEX_DIGIT = 13;
    public const PROPERTY_HYPHEN = 14;
    public const PROPERTY_ID_CONTINUE = 15;
    public const PROPERTY_ID_START = 16;
    public const PROPERTY_IDEOGRAPHIC = 17;
    public const PROPERTY_IDS_BINARY_OPERATOR = 18;
    public const PROPERTY_IDS_TRINARY_OPERATOR = 19;
    public const PROPERTY_JOIN_CONTROL = 20;
    public const PROPERTY_LOGICAL_ORDER_EXCEPTION = 21;
    public const PROPERTY_LOWERCASE = 22;
    public const PROPERTY_MATH = 23;
    public const PROPERTY_NONCHARACTER_CODE_POINT = 24;
    public const PROPERTY_QUOTATION_MARK = 25;
    public const PROPERTY_RADICAL = 26;
    public const PROPERTY_SOFT_DOTTED = 27;
    public const PROPERTY_TERMINAL_PUNCTUATION = 28;
    public const PROPERTY_UNIFIED_IDEOGRAPH = 29;
    public const PROPERTY_UPPERCASE = 30;
    public const PROPERTY_WHITE_SPACE = 31;
    public const PROPERTY_XID_CONTINUE = 32;
    public const PROPERTY_XID_START = 33;
    public const PROPERTY_CASE_SENSITIVE = 34;
    public const PROPERTY_S_TERM = 35;
    public const PROPERTY_VARIATION_SELECTOR = 36;
    public const PROPERTY_NFD_INERT = 37;
    public const PROPERTY_NFKD_INERT = 38;
    public const PROPERTY_NFC_INERT = 39;
    public const PROPERTY_NFKC_INERT = 40;
    public const PROPERTY_SEGMENT_STARTER = 41;
    public const PROPERTY_PATTERN_SYNTAX = 42;
    public const PROPERTY_PATTERN_WHITE_SPACE = 43;
    public const PROPERTY_POSIX_ALNUM = 44;
    public const PROPERTY_POSIX_BLANK = 45;
    public const PROPERTY_POSIX_GRAPH = 46;
    public const PROPERTY_POSIX_PRINT = 47;
    public const PROPERTY_POSIX_XDIGIT = 48;
    public const PROPERTY_CASED = 49;
    public const PROPERTY_CASE_IGNORABLE = 50;
    public const PROPERTY_CHANGES_WHEN_LOWERCASED = 51;
    public const PROPERTY_CHANGES_WHEN_UPPERCASED = 52;
    public const PROPERTY_CHANGES_WHEN_TITLECASED = 53;
    public const PROPERTY_CHANGES_WHEN_CASEFOLDED = 54;
    public const PROPERTY_CHANGES_WHEN_CASEMAPPED = 55;
    public const PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED = 56;
    public const PROPERTY_BINARY_LIMIT = 65;
    public const PROPERTY_BIDI_CLASS = 4096;
    public const PROPERTY_INT_START = 4096;
    public const PROPERTY_BLOCK = 4097;
    public const PROPERTY_CANONICAL_COMBINING_CLASS = 4098;
    public const PROPERTY_DECOMPOSITION_TYPE = 4099;
    public const PROPERTY_EAST_ASIAN_WIDTH = 4100;
    public const PROPERTY_GENERAL_CATEGORY = 4101;
    public const PROPERTY_JOINING_GROUP = 4102;
    public const PROPERTY_JOINING_TYPE = 4103;
    public const PROPERTY_LINE_BREAK = 4104;
    public const PROPERTY_NUMERIC_TYPE = 4105;
    public const PROPERTY_SCRIPT = 4106;
    public const PROPERTY_HANGUL_SYLLABLE_TYPE = 4107;
    public const PROPERTY_NFD_QUICK_CHECK = 4108;
    public const PROPERTY_NFKD_QUICK_CHECK = 4109;
    public const PROPERTY_NFC_QUICK_CHECK = 4110;
    public const PROPERTY_NFKC_QUICK_CHECK = 4111;
    public const PROPERTY_LEAD_CANONICAL_COMBINING_CLASS = 4112;
    public const PROPERTY_TRAIL_CANONICAL_COMBINING_CLASS = 4113;
    public const PROPERTY_GRAPHEME_CLUSTER_BREAK = 4114;
    public const PROPERTY_SENTENCE_BREAK = 4115;
    public const PROPERTY_WORD_BREAK = 4116;
    public const PROPERTY_BIDI_PAIRED_BRACKET_TYPE = 4117;
    public const PROPERTY_INT_LIMIT = 4121;
    public const PROPERTY_GENERAL_CATEGORY_MASK = 8192;
    public const PROPERTY_MASK_START = 8192;
    public const PROPERTY_MASK_LIMIT = 8193;
    public const PROPERTY_NUMERIC_VALUE = 12288;
    public const PROPERTY_DOUBLE_START = 12288;
    public const PROPERTY_DOUBLE_LIMIT = 12289;
    public const PROPERTY_AGE = 16384;
    public const PROPERTY_STRING_START = 16384;
    public const PROPERTY_BIDI_MIRRORING_GLYPH = 16385;
    public const PROPERTY_CASE_FOLDING = 16386;
    public const PROPERTY_ISO_COMMENT = 16387;
    public const PROPERTY_LOWERCASE_MAPPING = 16388;
    public const PROPERTY_NAME = 16389;
    public const PROPERTY_SIMPLE_CASE_FOLDING = 16390;
    public const PROPERTY_SIMPLE_LOWERCASE_MAPPING = 16391;
    public const PROPERTY_SIMPLE_TITLECASE_MAPPING = 16392;
    public const PROPERTY_SIMPLE_UPPERCASE_MAPPING = 16393;
    public const PROPERTY_TITLECASE_MAPPING = 16394;
    public const PROPERTY_UNICODE_1_NAME = 16395;
    public const PROPERTY_UPPERCASE_MAPPING = 16396;
    public const PROPERTY_BIDI_PAIRED_BRACKET = 16397;
    public const PROPERTY_STRING_LIMIT = 16398;
    public const PROPERTY_SCRIPT_EXTENSIONS = 28672;
    public const PROPERTY_OTHER_PROPERTY_START = 28672;
    public const PROPERTY_OTHER_PROPERTY_LIMIT = 28673;
    public const PROPERTY_INVALID_CODE = -1;
    public const CHAR_CATEGORY_UNASSIGNED = 0;
    public const CHAR_CATEGORY_GENERAL_OTHER_TYPES = 0;
    public const CHAR_CATEGORY_UPPERCASE_LETTER = 1;
    public const CHAR_CATEGORY_LOWERCASE_LETTER = 2;
    public const CHAR_CATEGORY_TITLECASE_LETTER = 3;
    public const CHAR_CATEGORY_MODIFIER_LETTER = 4;
    public const CHAR_CATEGORY_OTHER_LETTER = 5;
    public const CHAR_CATEGORY_NON_SPACING_MARK = 6;
    public const CHAR_CATEGORY_ENCLOSING_MARK = 7;
    public const CHAR_CATEGORY_COMBINING_SPACING_MARK = 8;
    public const CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER = 9;
    public const CHAR_CATEGORY_LETTER_NUMBER = 10;
    public const CHAR_CATEGORY_OTHER_NUMBER = 11;
    public const CHAR_CATEGORY_SPACE_SEPARATOR = 12;
    public const CHAR_CATEGORY_LINE_SEPARATOR = 13;
    public const CHAR_CATEGORY_PARAGRAPH_SEPARATOR = 14;
    public const CHAR_CATEGORY_CONTROL_CHAR = 15;
    public const CHAR_CATEGORY_FORMAT_CHAR = 16;
    public const CHAR_CATEGORY_PRIVATE_USE_CHAR = 17;
    public const CHAR_CATEGORY_SURROGATE = 18;
    public const CHAR_CATEGORY_DASH_PUNCTUATION = 19;
    public const CHAR_CATEGORY_START_PUNCTUATION = 20;
    public const CHAR_CATEGORY_END_PUNCTUATION = 21;
    public const CHAR_CATEGORY_CONNECTOR_PUNCTUATION = 22;
    public const CHAR_CATEGORY_OTHER_PUNCTUATION = 23;
    public const CHAR_CATEGORY_MATH_SYMBOL = 24;
    public const CHAR_CATEGORY_CURRENCY_SYMBOL = 25;
    public const CHAR_CATEGORY_MODIFIER_SYMBOL = 26;
    public const CHAR_CATEGORY_OTHER_SYMBOL = 27;
    public const CHAR_CATEGORY_INITIAL_PUNCTUATION = 28;
    public const CHAR_CATEGORY_FINAL_PUNCTUATION = 29;
    public const CHAR_CATEGORY_CHAR_CATEGORY_COUNT = 30;
    public const CHAR_DIRECTION_LEFT_TO_RIGHT = 0;
    public const CHAR_DIRECTION_RIGHT_TO_LEFT = 1;
    public const CHAR_DIRECTION_EUROPEAN_NUMBER = 2;
    public const CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR = 3;
    public const CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR = 4;
    public const CHAR_DIRECTION_ARABIC_NUMBER = 5;
    public const CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR = 6;
    public const CHAR_DIRECTION_BLOCK_SEPARATOR = 7;
    public const CHAR_DIRECTION_SEGMENT_SEPARATOR = 8;
    public const CHAR_DIRECTION_WHITE_SPACE_NEUTRAL = 9;
    public const CHAR_DIRECTION_OTHER_NEUTRAL = 10;
    public const CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING = 11;
    public const CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE = 12;
    public const CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC = 13;
    public const CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING = 14;
    public const CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE = 15;
    public const CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT = 16;
    public const CHAR_DIRECTION_DIR_NON_SPACING_MARK = 17;
    public const CHAR_DIRECTION_BOUNDARY_NEUTRAL = 18;
    public const CHAR_DIRECTION_FIRST_STRONG_ISOLATE = 19;
    public const CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE = 20;
    public const CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE = 21;
    public const CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE = 22;
    public const CHAR_DIRECTION_CHAR_DIRECTION_COUNT = 23;
    public const BLOCK_CODE_NO_BLOCK = 0;
    public const BLOCK_CODE_BASIC_LATIN = 1;
    public const BLOCK_CODE_LATIN_1_SUPPLEMENT = 2;
    public const BLOCK_CODE_LATIN_EXTENDED_A = 3;
    public const BLOCK_CODE_LATIN_EXTENDED_B = 4;
    public const BLOCK_CODE_IPA_EXTENSIONS = 5;
    public const BLOCK_CODE_SPACING_MODIFIER_LETTERS = 6;
    public const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS = 7;
    public const BLOCK_CODE_GREEK = 8;
    public const BLOCK_CODE_CYRILLIC = 9;
    public const BLOCK_CODE_ARMENIAN = 10;
    public const BLOCK_CODE_HEBREW = 11;
    public const BLOCK_CODE_ARABIC = 12;
    public const BLOCK_CODE_SYRIAC = 13;
    public const BLOCK_CODE_THAANA = 14;
    public const BLOCK_CODE_DEVANAGARI = 15;
    public const BLOCK_CODE_BENGALI = 16;
    public const BLOCK_CODE_GURMUKHI = 17;
    public const BLOCK_CODE_GUJARATI = 18;
    public const BLOCK_CODE_ORIYA = 19;
    public const BLOCK_CODE_TAMIL = 20;
    public const BLOCK_CODE_TELUGU = 21;
    public const BLOCK_CODE_KANNADA = 22;
    public const BLOCK_CODE_MALAYALAM = 23;
    public const BLOCK_CODE_SINHALA = 24;
    public const BLOCK_CODE_THAI = 25;
    public const BLOCK_CODE_LAO = 26;
    public const BLOCK_CODE_TIBETAN = 27;
    public const BLOCK_CODE_MYANMAR = 28;
    public const BLOCK_CODE_GEORGIAN = 29;
    public const BLOCK_CODE_HANGUL_JAMO = 30;
    public const BLOCK_CODE_ETHIOPIC = 31;
    public const BLOCK_CODE_CHEROKEE = 32;
    public const BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 33;
    public const BLOCK_CODE_OGHAM = 34;
    public const BLOCK_CODE_RUNIC = 35;
    public const BLOCK_CODE_KHMER = 36;
    public const BLOCK_CODE_MONGOLIAN = 37;
    public const BLOCK_CODE_LATIN_EXTENDED_ADDITIONAL = 38;
    public const BLOCK_CODE_GREEK_EXTENDED = 39;
    public const BLOCK_CODE_GENERAL_PUNCTUATION = 40;
    public const BLOCK_CODE_SUPERSCRIPTS_AND_SUBSCRIPTS = 41;
    public const BLOCK_CODE_CURRENCY_SYMBOLS = 42;
    public const BLOCK_CODE_COMBINING_MARKS_FOR_SYMBOLS = 43;
    public const BLOCK_CODE_LETTERLIKE_SYMBOLS = 44;
    public const BLOCK_CODE_NUMBER_FORMS = 45;
    public const BLOCK_CODE_ARROWS = 46;
    public const BLOCK_CODE_MATHEMATICAL_OPERATORS = 47;
    public const BLOCK_CODE_MISCELLANEOUS_TECHNICAL = 48;
    public const BLOCK_CODE_CONTROL_PICTURES = 49;
    public const BLOCK_CODE_OPTICAL_CHARACTER_RECOGNITION = 50;
    public const BLOCK_CODE_ENCLOSED_ALPHANUMERICS = 51;
    public const BLOCK_CODE_BOX_DRAWING = 52;
    public const BLOCK_CODE_BLOCK_ELEMENTS = 53;
    public const BLOCK_CODE_GEOMETRIC_SHAPES = 54;
    public const BLOCK_CODE_MISCELLANEOUS_SYMBOLS = 55;
    public const BLOCK_CODE_DINGBATS = 56;
    public const BLOCK_CODE_BRAILLE_PATTERNS = 57;
    public const BLOCK_CODE_CJK_RADICALS_SUPPLEMENT = 58;
    public const BLOCK_CODE_KANGXI_RADICALS = 59;
    public const BLOCK_CODE_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 60;
    public const BLOCK_CODE_CJK_SYMBOLS_AND_PUNCTUATION = 61;
    public const BLOCK_CODE_HIRAGANA = 62;
    public const BLOCK_CODE_KATAKANA = 63;
    public const BLOCK_CODE_BOPOMOFO = 64;
    public const BLOCK_CODE_HANGUL_COMPATIBILITY_JAMO = 65;
    public const BLOCK_CODE_KANBUN = 66;
    public const BLOCK_CODE_BOPOMOFO_EXTENDED = 67;
    public const BLOCK_CODE_ENCLOSED_CJK_LETTERS_AND_MONTHS = 68;
    public const BLOCK_CODE_CJK_COMPATIBILITY = 69;
    public const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 70;
    public const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS = 71;
    public const BLOCK_CODE_YI_SYLLABLES = 72;
    public const BLOCK_CODE_YI_RADICALS = 73;
    public const BLOCK_CODE_HANGUL_SYLLABLES = 74;
    public const BLOCK_CODE_HIGH_SURROGATES = 75;
    public const BLOCK_CODE_HIGH_PRIVATE_USE_SURROGATES = 76;
    public const BLOCK_CODE_LOW_SURROGATES = 77;
    public const BLOCK_CODE_PRIVATE_USE_AREA = 78;
    public const BLOCK_CODE_PRIVATE_USE = 78;
    public const BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS = 79;
    public const BLOCK_CODE_ALPHABETIC_PRESENTATION_FORMS = 80;
    public const BLOCK_CODE_ARABIC_PRESENTATION_FORMS_A = 81;
    public const BLOCK_CODE_COMBINING_HALF_MARKS = 82;
    public const BLOCK_CODE_CJK_COMPATIBILITY_FORMS = 83;
    public const BLOCK_CODE_SMALL_FORM_VARIANTS = 84;
    public const BLOCK_CODE_ARABIC_PRESENTATION_FORMS_B = 85;
    public const BLOCK_CODE_SPECIALS = 86;
    public const BLOCK_CODE_HALFWIDTH_AND_FULLWIDTH_FORMS = 87;
    public const BLOCK_CODE_OLD_ITALIC = 88;
    public const BLOCK_CODE_GOTHIC = 89;
    public const BLOCK_CODE_DESERET = 90;
    public const BLOCK_CODE_BYZANTINE_MUSICAL_SYMBOLS = 91;
    public const BLOCK_CODE_MUSICAL_SYMBOLS = 92;
    public const BLOCK_CODE_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 93;
    public const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 94;
    public const BLOCK_CODE_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 95;
    public const BLOCK_CODE_TAGS = 96;
    public const BLOCK_CODE_CYRILLIC_SUPPLEMENT = 97;
    public const BLOCK_CODE_CYRILLIC_SUPPLEMENTARY = 97;
    public const BLOCK_CODE_TAGALOG = 98;
    public const BLOCK_CODE_HANUNOO = 99;
    public const BLOCK_CODE_BUHID = 100;
    public const BLOCK_CODE_TAGBANWA = 101;
    public const BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 102;
    public const BLOCK_CODE_SUPPLEMENTAL_ARROWS_A = 103;
    public const BLOCK_CODE_SUPPLEMENTAL_ARROWS_B = 104;
    public const BLOCK_CODE_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 105;
    public const BLOCK_CODE_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 106;
    public const BLOCK_CODE_KATAKANA_PHONETIC_EXTENSIONS = 107;
    public const BLOCK_CODE_VARIATION_SELECTORS = 108;
    public const BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 109;
    public const BLOCK_CODE_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 110;
    public const BLOCK_CODE_LIMBU = 111;
    public const BLOCK_CODE_TAI_LE = 112;
    public const BLOCK_CODE_KHMER_SYMBOLS = 113;
    public const BLOCK_CODE_PHONETIC_EXTENSIONS = 114;
    public const BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 115;
    public const BLOCK_CODE_YIJING_HEXAGRAM_SYMBOLS = 116;
    public const BLOCK_CODE_LINEAR_B_SYLLABARY = 117;
    public const BLOCK_CODE_LINEAR_B_IDEOGRAMS = 118;
    public const BLOCK_CODE_AEGEAN_NUMBERS = 119;
    public const BLOCK_CODE_UGARITIC = 120;
    public const BLOCK_CODE_SHAVIAN = 121;
    public const BLOCK_CODE_OSMANYA = 122;
    public const BLOCK_CODE_CYPRIOT_SYLLABARY = 123;
    public const BLOCK_CODE_TAI_XUAN_JING_SYMBOLS = 124;
    public const BLOCK_CODE_VARIATION_SELECTORS_SUPPLEMENT = 125;
    public const BLOCK_CODE_ANCIENT_GREEK_MUSICAL_NOTATION = 126;
    public const BLOCK_CODE_ANCIENT_GREEK_NUMBERS = 127;
    public const BLOCK_CODE_ARABIC_SUPPLEMENT = 128;
    public const BLOCK_CODE_BUGINESE = 129;
    public const BLOCK_CODE_CJK_STROKES = 130;
    public const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 131;
    public const BLOCK_CODE_COPTIC = 132;
    public const BLOCK_CODE_ETHIOPIC_EXTENDED = 133;
    public const BLOCK_CODE_ETHIOPIC_SUPPLEMENT = 134;
    public const BLOCK_CODE_GEORGIAN_SUPPLEMENT = 135;
    public const BLOCK_CODE_GLAGOLITIC = 136;
    public const BLOCK_CODE_KHAROSHTHI = 137;
    public const BLOCK_CODE_MODIFIER_TONE_LETTERS = 138;
    public const BLOCK_CODE_NEW_TAI_LUE = 139;
    public const BLOCK_CODE_OLD_PERSIAN = 140;
    public const BLOCK_CODE_PHONETIC_EXTENSIONS_SUPPLEMENT = 141;
    public const BLOCK_CODE_SUPPLEMENTAL_PUNCTUATION = 142;
    public const BLOCK_CODE_SYLOTI_NAGRI = 143;
    public const BLOCK_CODE_TIFINAGH = 144;
    public const BLOCK_CODE_VERTICAL_FORMS = 145;
    public const BLOCK_CODE_NKO = 146;
    public const BLOCK_CODE_BALINESE = 147;
    public const BLOCK_CODE_LATIN_EXTENDED_C = 148;
    public const BLOCK_CODE_LATIN_EXTENDED_D = 149;
    public const BLOCK_CODE_PHAGS_PA = 150;
    public const BLOCK_CODE_PHOENICIAN = 151;
    public const BLOCK_CODE_CUNEIFORM = 152;
    public const BLOCK_CODE_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 153;
    public const BLOCK_CODE_COUNTING_ROD_NUMERALS = 154;
    public const BLOCK_CODE_SUNDANESE = 155;
    public const BLOCK_CODE_LEPCHA = 156;
    public const BLOCK_CODE_OL_CHIKI = 157;
    public const BLOCK_CODE_CYRILLIC_EXTENDED_A = 158;
    public const BLOCK_CODE_VAI = 159;
    public const BLOCK_CODE_CYRILLIC_EXTENDED_B = 160;
    public const BLOCK_CODE_SAURASHTRA = 161;
    public const BLOCK_CODE_KAYAH_LI = 162;
    public const BLOCK_CODE_REJANG = 163;
    public const BLOCK_CODE_CHAM = 164;
    public const BLOCK_CODE_ANCIENT_SYMBOLS = 165;
    public const BLOCK_CODE_PHAISTOS_DISC = 166;
    public const BLOCK_CODE_LYCIAN = 167;
    public const BLOCK_CODE_CARIAN = 168;
    public const BLOCK_CODE_LYDIAN = 169;
    public const BLOCK_CODE_MAHJONG_TILES = 170;
    public const BLOCK_CODE_DOMINO_TILES = 171;
    public const BLOCK_CODE_SAMARITAN = 172;
    public const BLOCK_CODE_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 173;
    public const BLOCK_CODE_TAI_THAM = 174;
    public const BLOCK_CODE_VEDIC_EXTENSIONS = 175;
    public const BLOCK_CODE_LISU = 176;
    public const BLOCK_CODE_BAMUM = 177;
    public const BLOCK_CODE_COMMON_INDIC_NUMBER_FORMS = 178;
    public const BLOCK_CODE_DEVANAGARI_EXTENDED = 179;
    public const BLOCK_CODE_HANGUL_JAMO_EXTENDED_A = 180;
    public const BLOCK_CODE_JAVANESE = 181;
    public const BLOCK_CODE_MYANMAR_EXTENDED_A = 182;
    public const BLOCK_CODE_TAI_VIET = 183;
    public const BLOCK_CODE_MEETEI_MAYEK = 184;
    public const BLOCK_CODE_HANGUL_JAMO_EXTENDED_B = 185;
    public const BLOCK_CODE_IMPERIAL_ARAMAIC = 186;
    public const BLOCK_CODE_OLD_SOUTH_ARABIAN = 187;
    public const BLOCK_CODE_AVESTAN = 188;
    public const BLOCK_CODE_INSCRIPTIONAL_PARTHIAN = 189;
    public const BLOCK_CODE_INSCRIPTIONAL_PAHLAVI = 190;
    public const BLOCK_CODE_OLD_TURKIC = 191;
    public const BLOCK_CODE_RUMI_NUMERAL_SYMBOLS = 192;
    public const BLOCK_CODE_KAITHI = 193;
    public const BLOCK_CODE_EGYPTIAN_HIEROGLYPHS = 194;
    public const BLOCK_CODE_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 195;
    public const BLOCK_CODE_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 196;
    public const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 197;
    public const BLOCK_CODE_MANDAIC = 198;
    public const BLOCK_CODE_BATAK = 199;
    public const BLOCK_CODE_ETHIOPIC_EXTENDED_A = 200;
    public const BLOCK_CODE_BRAHMI = 201;
    public const BLOCK_CODE_BAMUM_SUPPLEMENT = 202;
    public const BLOCK_CODE_KANA_SUPPLEMENT = 203;
    public const BLOCK_CODE_PLAYING_CARDS = 204;
    public const BLOCK_CODE_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 205;
    public const BLOCK_CODE_EMOTICONS = 206;
    public const BLOCK_CODE_TRANSPORT_AND_MAP_SYMBOLS = 207;
    public const BLOCK_CODE_ALCHEMICAL_SYMBOLS = 208;
    public const BLOCK_CODE_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 209;
    public const BLOCK_CODE_ARABIC_EXTENDED_A = 210;
    public const BLOCK_CODE_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 211;
    public const BLOCK_CODE_CHAKMA = 212;
    public const BLOCK_CODE_MEETEI_MAYEK_EXTENSIONS = 213;
    public const BLOCK_CODE_MEROITIC_CURSIVE = 214;
    public const BLOCK_CODE_MEROITIC_HIEROGLYPHS = 215;
    public const BLOCK_CODE_MIAO = 216;
    public const BLOCK_CODE_SHARADA = 217;
    public const BLOCK_CODE_SORA_SOMPENG = 218;
    public const BLOCK_CODE_SUNDANESE_SUPPLEMENT = 219;
    public const BLOCK_CODE_TAKRI = 220;
    public const BLOCK_CODE_BASSA_VAH = 221;
    public const BLOCK_CODE_CAUCASIAN_ALBANIAN = 222;
    public const BLOCK_CODE_COPTIC_EPACT_NUMBERS = 223;
    public const BLOCK_CODE_COMBINING_DIACRITICAL_MARKS_EXTENDED = 224;
    public const BLOCK_CODE_DUPLOYAN = 225;
    public const BLOCK_CODE_ELBASAN = 226;
    public const BLOCK_CODE_GEOMETRIC_SHAPES_EXTENDED = 227;
    public const BLOCK_CODE_GRANTHA = 228;
    public const BLOCK_CODE_KHOJKI = 229;
    public const BLOCK_CODE_KHUDAWADI = 230;
    public const BLOCK_CODE_LATIN_EXTENDED_E = 231;
    public const BLOCK_CODE_LINEAR_A = 232;
    public const BLOCK_CODE_MAHAJANI = 233;
    public const BLOCK_CODE_MANICHAEAN = 234;
    public const BLOCK_CODE_MENDE_KIKAKUI = 235;
    public const BLOCK_CODE_MODI = 236;
    public const BLOCK_CODE_MRO = 237;
    public const BLOCK_CODE_MYANMAR_EXTENDED_B = 238;
    public const BLOCK_CODE_NABATAEAN = 239;
    public const BLOCK_CODE_OLD_NORTH_ARABIAN = 240;
    public const BLOCK_CODE_OLD_PERMIC = 241;
    public const BLOCK_CODE_ORNAMENTAL_DINGBATS = 242;
    public const BLOCK_CODE_PAHAWH_HMONG = 243;
    public const BLOCK_CODE_PALMYRENE = 244;
    public const BLOCK_CODE_PAU_CIN_HAU = 245;
    public const BLOCK_CODE_PSALTER_PAHLAVI = 246;
    public const BLOCK_CODE_SHORTHAND_FORMAT_CONTROLS = 247;
    public const BLOCK_CODE_SIDDHAM = 248;
    public const BLOCK_CODE_SINHALA_ARCHAIC_NUMBERS = 249;
    public const BLOCK_CODE_SUPPLEMENTAL_ARROWS_C = 250;
    public const BLOCK_CODE_TIRHUTA = 251;
    public const BLOCK_CODE_WARANG_CITI = 252;
    public const BLOCK_CODE_COUNT = 309;
    public const BLOCK_CODE_INVALID_CODE = -1;
    public const BPT_NONE = 0;
    public const BPT_OPEN = 1;
    public const BPT_CLOSE = 2;
    public const BPT_COUNT = 3;
    public const EA_NEUTRAL = 0;
    public const EA_AMBIGUOUS = 1;
    public const EA_HALFWIDTH = 2;
    public const EA_FULLWIDTH = 3;
    public const EA_NARROW = 4;
    public const EA_WIDE = 5;
    public const EA_COUNT = 6;
    public const UNICODE_CHAR_NAME = 0;
    public const UNICODE_10_CHAR_NAME = 1;
    public const EXTENDED_CHAR_NAME = 2;
    public const CHAR_NAME_ALIAS = 3;
    public const CHAR_NAME_CHOICE_COUNT = 4;
    public const SHORT_PROPERTY_NAME = 0;
    public const LONG_PROPERTY_NAME = 1;
    public const PROPERTY_NAME_CHOICE_COUNT = 2;
    public const DT_NONE = 0;
    public const DT_CANONICAL = 1;
    public const DT_COMPAT = 2;
    public const DT_CIRCLE = 3;
    public const DT_FINAL = 4;
    public const DT_FONT = 5;
    public const DT_FRACTION = 6;
    public const DT_INITIAL = 7;
    public const DT_ISOLATED = 8;
    public const DT_MEDIAL = 9;
    public const DT_NARROW = 10;
    public const DT_NOBREAK = 11;
    public const DT_SMALL = 12;
    public const DT_SQUARE = 13;
    public const DT_SUB = 14;
    public const DT_SUPER = 15;
    public const DT_VERTICAL = 16;
    public const DT_WIDE = 17;
    public const DT_COUNT = 18;
    public const JT_NON_JOINING = 0;
    public const JT_JOIN_CAUSING = 1;
    public const JT_DUAL_JOINING = 2;
    public const JT_LEFT_JOINING = 3;
    public const JT_RIGHT_JOINING = 4;
    public const JT_TRANSPARENT = 5;
    public const JT_COUNT = 6;
    public const JG_NO_JOINING_GROUP = 0;
    public const JG_AIN = 1;
    public const JG_ALAPH = 2;
    public const JG_ALEF = 3;
    public const JG_BEH = 4;
    public const JG_BETH = 5;
    public const JG_DAL = 6;
    public const JG_DALATH_RISH = 7;
    public const JG_E = 8;
    public const JG_FEH = 9;
    public const JG_FINAL_SEMKATH = 10;
    public const JG_GAF = 11;
    public const JG_GAMAL = 12;
    public const JG_HAH = 13;
    public const JG_TEH_MARBUTA_GOAL = 14;
    public const JG_HAMZA_ON_HEH_GOAL = 14;
    public const JG_HE = 15;
    public const JG_HEH = 16;
    public const JG_HEH_GOAL = 17;
    public const JG_HETH = 18;
    public const JG_KAF = 19;
    public const JG_KAPH = 20;
    public const JG_KNOTTED_HEH = 21;
    public const JG_LAM = 22;
    public const JG_LAMADH = 23;
    public const JG_MEEM = 24;
    public const JG_MIM = 25;
    public const JG_NOON = 26;
    public const JG_NUN = 27;
    public const JG_PE = 28;
    public const JG_QAF = 29;
    public const JG_QAPH = 30;
    public const JG_REH = 31;
    public const JG_REVERSED_PE = 32;
    public const JG_SAD = 33;
    public const JG_SADHE = 34;
    public const JG_SEEN = 35;
    public const JG_SEMKATH = 36;
    public const JG_SHIN = 37;
    public const JG_SWASH_KAF = 38;
    public const JG_SYRIAC_WAW = 39;
    public const JG_TAH = 40;
    public const JG_TAW = 41;
    public const JG_TEH_MARBUTA = 42;
    public const JG_TETH = 43;
    public const JG_WAW = 44;
    public const JG_YEH = 45;
    public const JG_YEH_BARREE = 46;
    public const JG_YEH_WITH_TAIL = 47;
    public const JG_YUDH = 48;
    public const JG_YUDH_HE = 49;
    public const JG_ZAIN = 50;
    public const JG_FE = 51;
    public const JG_KHAPH = 52;
    public const JG_ZHAIN = 53;
    public const JG_BURUSHASKI_YEH_BARREE = 54;
    public const JG_FARSI_YEH = 55;
    public const JG_NYA = 56;
    public const JG_ROHINGYA_YEH = 57;
    public const JG_MANICHAEAN_ALEPH = 58;
    public const JG_MANICHAEAN_AYIN = 59;
    public const JG_MANICHAEAN_BETH = 60;
    public const JG_MANICHAEAN_DALETH = 61;
    public const JG_MANICHAEAN_DHAMEDH = 62;
    public const JG_MANICHAEAN_FIVE = 63;
    public const JG_MANICHAEAN_GIMEL = 64;
    public const JG_MANICHAEAN_HETH = 65;
    public const JG_MANICHAEAN_HUNDRED = 66;
    public const JG_MANICHAEAN_KAPH = 67;
    public const JG_MANICHAEAN_LAMEDH = 68;
    public const JG_MANICHAEAN_MEM = 69;
    public const JG_MANICHAEAN_NUN = 70;
    public const JG_MANICHAEAN_ONE = 71;
    public const JG_MANICHAEAN_PE = 72;
    public const JG_MANICHAEAN_QOPH = 73;
    public const JG_MANICHAEAN_RESH = 74;
    public const JG_MANICHAEAN_SADHE = 75;
    public const JG_MANICHAEAN_SAMEKH = 76;
    public const JG_MANICHAEAN_TAW = 77;
    public const JG_MANICHAEAN_TEN = 78;
    public const JG_MANICHAEAN_TETH = 79;
    public const JG_MANICHAEAN_THAMEDH = 80;
    public const JG_MANICHAEAN_TWENTY = 81;
    public const JG_MANICHAEAN_WAW = 82;
    public const JG_MANICHAEAN_YODH = 83;
    public const JG_MANICHAEAN_ZAYIN = 84;
    public const JG_STRAIGHT_WAW = 85;
    public const JG_COUNT = 102;
    public const GCB_OTHER = 0;
    public const GCB_CONTROL = 1;
    public const GCB_CR = 2;
    public const GCB_EXTEND = 3;
    public const GCB_L = 4;
    public const GCB_LF = 5;
    public const GCB_LV = 6;
    public const GCB_LVT = 7;
    public const GCB_T = 8;
    public const GCB_V = 9;
    public const GCB_SPACING_MARK = 10;
    public const GCB_PREPEND = 11;
    public const GCB_REGIONAL_INDICATOR = 12;
    public const GCB_COUNT = 18;
    public const WB_OTHER = 0;
    public const WB_ALETTER = 1;
    public const WB_FORMAT = 2;
    public const WB_KATAKANA = 3;
    public const WB_MIDLETTER = 4;
    public const WB_MIDNUM = 5;
    public const WB_NUMERIC = 6;
    public const WB_EXTENDNUMLET = 7;
    public const WB_CR = 8;
    public const WB_EXTEND = 9;
    public const WB_LF = 10;
    public const WB_MIDNUMLET = 11;
    public const WB_NEWLINE = 12;
    public const WB_REGIONAL_INDICATOR = 13;
    public const WB_HEBREW_LETTER = 14;
    public const WB_SINGLE_QUOTE = 15;
    public const WB_DOUBLE_QUOTE = 16;
    public const WB_COUNT = 23;
    public const SB_OTHER = 0;
    public const SB_ATERM = 1;
    public const SB_CLOSE = 2;
    public const SB_FORMAT = 3;
    public const SB_LOWER = 4;
    public const SB_NUMERIC = 5;
    public const SB_OLETTER = 6;
    public const SB_SEP = 7;
    public const SB_SP = 8;
    public const SB_STERM = 9;
    public const SB_UPPER = 10;
    public const SB_CR = 11;
    public const SB_EXTEND = 12;
    public const SB_LF = 13;
    public const SB_SCONTINUE = 14;
    public const SB_COUNT = 15;
    public const LB_UNKNOWN = 0;
    public const LB_AMBIGUOUS = 1;
    public const LB_ALPHABETIC = 2;
    public const LB_BREAK_BOTH = 3;
    public const LB_BREAK_AFTER = 4;
    public const LB_BREAK_BEFORE = 5;
    public const LB_MANDATORY_BREAK = 6;
    public const LB_CONTINGENT_BREAK = 7;
    public const LB_CLOSE_PUNCTUATION = 8;
    public const LB_COMBINING_MARK = 9;
    public const LB_CARRIAGE_RETURN = 10;
    public const LB_EXCLAMATION = 11;
    public const LB_GLUE = 12;
    public const LB_HYPHEN = 13;
    public const LB_IDEOGRAPHIC = 14;
    public const LB_INSEPARABLE = 15;
    public const LB_INSEPERABLE = 15;
    public const LB_INFIX_NUMERIC = 16;
    public const LB_LINE_FEED = 17;
    public const LB_NONSTARTER = 18;
    public const LB_NUMERIC = 19;
    public const LB_OPEN_PUNCTUATION = 20;
    public const LB_POSTFIX_NUMERIC = 21;
    public const LB_PREFIX_NUMERIC = 22;
    public const LB_QUOTATION = 23;
    public const LB_COMPLEX_CONTEXT = 24;
    public const LB_SURROGATE = 25;
    public const LB_SPACE = 26;
    public const LB_BREAK_SYMBOLS = 27;
    public const LB_ZWSPACE = 28;
    public const LB_NEXT_LINE = 29;
    public const LB_WORD_JOINER = 30;
    public const LB_H2 = 31;
    public const LB_H3 = 32;
    public const LB_JL = 33;
    public const LB_JT = 34;
    public const LB_JV = 35;
    public const LB_CLOSE_PARENTHESIS = 36;
    public const LB_CONDITIONAL_JAPANESE_STARTER = 37;
    public const LB_HEBREW_LETTER = 38;
    public const LB_REGIONAL_INDICATOR = 39;
    public const LB_COUNT = 43;
    public const NT_NONE = 0;
    public const NT_DECIMAL = 1;
    public const NT_DIGIT = 2;
    public const NT_NUMERIC = 3;
    public const NT_COUNT = 4;
    public const HST_NOT_APPLICABLE = 0;
    public const HST_LEADING_JAMO = 1;
    public const HST_VOWEL_JAMO = 2;
    public const HST_TRAILING_JAMO = 3;
    public const HST_LV_SYLLABLE = 4;
    public const HST_LVT_SYLLABLE = 5;
    public const HST_COUNT = 6;
    public const NO_NUMERIC_VALUE = -123456789;

    /**
     * @since 8.4
     */
    public const PROPERTY_IDS_UNARY_OPERATOR = 72;

    /**
     * @since 8.4
     */
    public const PROPERTY_ID_COMPAT_MATH_START = 73;

    /**
     * @since 8.4
     */
    public const PROPERTY_ID_COMPAT_MATH_CONTINUE = 74;

/**
* <div id="intlchar.hasbinaryproperty" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::hasBinaryProperty</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::hasBinaryProperty</span> — <span class="dc-title">Check a binary Unicode property for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.hasbinaryproperty-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::hasBinaryProperty</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Checks a binary Unicode property for a code point.  </p>  <p class="para">   Unicode, especially in version 3.2, defines many more properties than the original set in UnicodeData.txt.  </p>  <p class="para">   The properties APIs are intended to reflect Unicode properties as defined in the Unicode Character Database (UCD)   and Unicode Technical Reports (UTR). For details about the properties see   <a href="http://www.unicode.org/ucd/" class="link external">» http://www.unicode.org/ucd/</a>.   For names of Unicode properties see the UCD file PropertyAliases.txt.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.hasbinaryproperty-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.hasbinaryproperty-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> according to the binary Unicode property value for <span class="parameter" style="color:#3A95FF">codepoint</span>.   Also <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if <span class="parameter" style="color:#3A95FF">property</span> is out of bounds or if the Unicode version does not have data for   the property at all, or not for this code point. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.hasbinaryproperty-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2693">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_CASE_SENSITIVE</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_CASE_SENSITIVE</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">hasBinaryProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)<br>bool(false)<br>bool(false)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.hasbinaryproperty-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>   </ul>   </div></div>
    *
     * Check a binary Unicode property for a code point
     * @link https://php.net/manual/zh/intlchar.hasbinaryproperty.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @param int $property The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * @return bool|null Returns TRUE or FALSE according to the binary Unicode property value for codepoint.
     * Also FALSE if property is out of bounds or if the Unicode version does not have data for the property at all, or not for this code point.
     * Or NULL if <em>codepoint</em> is out of bounds.
     * @since 7.0
     
    #[Pure]
    #[TentativeType]
*/
    public static function hasBinaryProperty(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property
    ): ?bool {}

/**
* <div id="intlchar.charage" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charAge</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charAge</span> — <span class="dc-title">Get the "age" of the code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.charage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charAge</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   Gets the "age" of the code point.  </p>  <p class="para">   The "age" is the Unicode version when the code point was first designated (as a non-character or for Private Use)   or assigned a character. This can be useful to avoid emitting code points to receiving processes that do not accept   newer characters.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.charage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.charage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The Unicode version number, as an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>.   For example, version <em>1.3.31.2</em> would be represented as <span class="literal">[1, 3, 31, 2]</span>.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.charage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2668">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charage</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charage</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{1F576}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">array(4) {<br>  [0]=&gt;<br>  int(1)<br>  [1]=&gt;<br>  int(1)<br>  [2]=&gt;<br>  int(0)<br>  [3]=&gt;<br>  int(0)<br>}<br>array(4) {<br>  [0]=&gt;<br>  int(7)<br>  [1]=&gt;<br>  int(0)<br>  [2]=&gt;<br>  int(0)<br>  [3]=&gt;<br>  int(0)<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.charage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>   </ul>   </div></div>
    *
     * @link https://php.net/manual/zh/intlchar.charage.php
     * Get the "age" of the code point
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return array|null The Unicode version number, as an array. For example, version 1.3.31.2 would be represented as [1, 3, 31, 2].
     * Or NULL if <em>codepoint</em> is out of bounds.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charAge(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?array {}

/**
* <div id="intlchar.chardigitvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charDigitValue</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charDigitValue</span> — <span class="dc-title">Get the decimal digit value of a decimal digit character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.chardigitvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charDigitValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the decimal digit value of a decimal digit character.  </p>  <p class="para">   Such characters have the general category "Nd" (decimal digit numbers) and a Numeric_Type of Decimal.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.chardigitvalue-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.chardigitvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The decimal digit value of <span class="parameter" style="color:#3A95FF">codepoint</span>,   or <span class="literal">-1</span> if it is not a decimal digit character. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.chardigitvalue-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2669">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0662}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDigitValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0E53}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(1)<br>int(2)<br>int(3)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.chardigitvalue-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::getNumericValue()} - Get the numeric value for a Unicode code point</span></li>   </ul>   </div></div>
    *
     * @link https://php.net/manual/zh/intlchar.chardigitvalue.php
     * Get the decimal digit value of a decimal digit character
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|null The decimal digit value of codepoint, or -1 if it is not a decimal digit character.
     * Or NULL if <em>codepoint</em> is out of bounds.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charDigitValue(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?int {}

/**
* <div id="intlchar.chardirection" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charDirection</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charDirection</span> — <span class="dc-title">Get bidirectional category value for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.chardirection-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charDirection</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the bidirectional category value for the code point, which is used in the <a href="http://www.unicode.org/reports/tr9/" class="link external">» Unicode bidirectional algorithm (UAX #9)</a>.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Some unassigned code points have bidi values of R or AL because they are in blocks that are reserved for Right-To-Left scripts.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.chardirection-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.chardirection-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The bidirectional category value; one of the following constants:   </p><ul class="simplelist">    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_ARABIC_NUMBER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT}</span></strong></li>   </ul>   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.   </div> <div class="refsect1 examples" id="refsect1-intlchar.chardirection-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2670">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_LEFT_TO_RIGHT</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{05E9}"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_RIGHT_TO_LEFT</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"+"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charDirection</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get bidirectional category value for a code point
     * @link https://php.net/manual/zh/intlchar.chardirection.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")</p>
     * @return int|null <p>The bidirectional category value; one of the following constants:
     * </p>
     * <ul>
     * <li><b> IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_EUROPEAN_NUMBER_TERMINATOR </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_ARABIC_NUMBER </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_COMMON_NUMBER_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_BLOCK_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_SEGMENT_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_WHITE_SPACE_NEUTRAL </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_OTHER_NEUTRAL </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_EMBEDDING </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_OVERRIDE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ARABIC </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_EMBEDDING </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_OVERRIDE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_FORMAT </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_DIR_NON_SPACING_MARK </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_BOUNDARY_NEUTRAL </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_FIRST_STRONG_ISOLATE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_LEFT_TO_RIGHT_ISOLATE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE </b></li>
     * <li><b> IntlChar::CHAR_DIRECTION_CHAR_DIRECTION_COUNT </b></li>
     * </ul>
     * Or NULL if <em>codepoint</em> is out of bounds.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charDirection(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?int {}

/**
* <div id="intlchar.charfromname" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charFromName</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charFromName</span> — <span class="dc-title">Find Unicode character by name and return its code point value</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.charfromname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charFromName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Finds a Unicode character by its name and returns its code point value.  </p>  <p class="para">   The name is matched exactly and completely. If the name does not correspond to a code point, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> is returned.  </p>  <p class="para">   A Unicode 1.0 name is matched only if it differs from the modern name. Unicode names are all uppercase.   Extended names are lowercase followed by an uppercase hexadecimal number, and within angle brackets.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.charfromname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      Full name of the Unicode character.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Which set of names to use for the lookup. Can be any of these constants:      </p><ul class="simplelist">       <li><strong><span>{@link IntlChar::UNICODE_CHAR_NAME}</span></strong> (default)</li>       <li><strong><span>{@link IntlChar::UNICODE_10_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::EXTENDED_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_ALIAS}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_CHOICE_COUNT}</span></strong></li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.charfromname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The Unicode value of the code point with the given name (as an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>), or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there is no such code point.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.charfromname-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2671">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"LATIN CAPITAL LETTER A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"SNOWMAN"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"RECYCLING SYMBOL FOR TYPE-1 PLASTICS"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charFromName</span><span style="color: #007700">(</span><span style="color: #DD0000">"A RANDOM STRING WHICH DOESN'T CORRESPOND TO ANY UNICODE CHARACTER"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(65)<br>int(9731)<br>int(9843)<br>NULL</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.charfromname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charName()} - Retrieve the name of a Unicode character</span></li>    <li><span class="function">{@link IntlChar::enumCharNames()} - Enumerate all assigned Unicode characters within a range</span></li>   </ul>   </div></div>
    *
     * @link https://php.net/manual/zh/intlchar.charfromname.php
     * Find Unicode character by name and return its code point value
     * @param string $name <p>Full name of the Unicode character.</p>
     * @param int $type [optional] <p>
     * Which set of names to use for the lookup. Can be any of these constants:
     * </p><ul>
     * <li><b> IntlChar::UNICODE_CHAR_NAME </b> (default)</li>
     * <li><b> IntlChar::UNICODE_10_CHAR_NAME </b></li>
     * <li><b> IntlChar::EXTENDED_CHAR_NAME </b></li>
     * <li><b> IntlChar::CHAR_NAME_ALIAS </b></li>
     * <li><b> IntlChar::CHAR_NAME_CHOICE_COUNT </b></li>
     * </ul>
     * @return int|null The Unicode value of the code point with the given name (as an integer), or NULL if there is no such code point.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charFromName(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = IntlChar::UNICODE_CHAR_NAME
    ): ?int {}

/**
* <div id="intlchar.charmirror" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charMirror</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charMirror</span> — <span class="dc-title">Get the "mirror-image" character for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.charmirror-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charMirror</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Maps the specified character to a "mirror-image" character.  </p>  <p class="para">   For characters with the <em>Bidi_Mirrored</em> property, implementations sometimes need a "poor man's" mapping to another   Unicode character (code point) such that the default glyph may serve as the mirror-image of the default glyph of the   specified character. This is useful for text conversion to and from codepages with visual order, and for displays   without glyph selection capabilities.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.charmirror-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.charmirror-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns another Unicode code point that may serve as a mirror-image substitute, or <span class="parameter" style="color:#3A95FF">codepoint</span>   itself if there is no such mapping or <span class="parameter" style="color:#3A95FF">codepoint</span> does not have the   <em>Bidi_Mirrored</em> property.  </p>  <p class="para">返回类型是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，如果代码点作为 UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 传递，则会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-intlchar.charmirror-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2672">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charMirror</span><span style="color: #007700">(</span><span style="color: #DD0000">"("</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(1) "A"<br>string(1) "&gt;"<br>string(2) ")"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.charmirror-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isMirrored()} - Check if code point has the Bidi_Mirrored property</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_BIDI_MIRRORED}</span></strong></li>   </ul>   </div></div>
    *
     * @link https://php.net/manual/zh/intlchar.charmirror.php
     * Get the "mirror-image" character for a code point
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|string|null Returns another Unicode code point that may serve as a mirror-image substitute, or codepoint itself if there is no such mapping or codepoint does not have the Bidi_Mirrored property.
     * The return type will be integer unless the code point was passed as a UTF-8 string, in which case a string will be returned.
     * Or NULL if <em>codepoint</em> will be out of bound.
     
    #[TentativeType]
*/
    public static function charMirror(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|int|null {}

/**
* <div id="intlchar.charname" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charName</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charName</span> — <span class="dc-title">Retrieve the name of a Unicode character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.charname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Retrieves the name of a Unicode character.  </p>  <p class="para">   Depending on <span class="parameter" style="color:#3A95FF">type</span>, the resulting character name is the "modern" name or the name that   was defined in Unicode version 1.0. The name contains only "invariant" characters like A-Z, 0-9, space, and '-'.   Unicode 1.0 names are only retrieved if they are different from the modern names and if ICU contains the data for them.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.charname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Which set of names to use for the lookup. Can be any of these constants:      </p><ul class="simplelist">       <li><strong><span>{@link IntlChar::UNICODE_CHAR_NAME}</span></strong> (default)</li>       <li><strong><span>{@link IntlChar::UNICODE_10_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::EXTENDED_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_ALIAS}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_CHOICE_COUNT}</span></strong></li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.charname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The corresponding name, or an empty string if there is no name for this character,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there is no such code point.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.charname-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2673">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">UNICODE_CHAR_NAME</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charName</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0000}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(9) "FULL STOP"<br>string(9) "FULL STOP"<br>string(7) "SNOWMAN"<br>string(0) ""</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.charname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charFromName()} - Find Unicode character by name and return its code point value</span></li>    <li><span class="function">{@link IntlChar::enumCharNames()} - Enumerate all assigned Unicode characters within a range</span></li>   </ul>   </div></div>
    *
     * Retrieve the name of a Unicode character
     * @link https://php.net/manual/zh/intlchar.charname.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @param int $type [optional] Which set of names to use for the lookup. Can be any of these constants:
     * <ul>
     * <li><b> IntlChar::UNICODE_CHAR_NAME </b> (default)</li>
     * <li><b> IntlChar::UNICODE_10_CHAR_NAME </b></li>
     * <li><b> IntlChar::EXTENDED_CHAR_NAME </b></li>
     * <li><b> IntlChar::CHAR_NAME_ALIAS </b></li>
     * <li><b> IntlChar::CHAR_NAME_CHOICE_COUNT </b></li>
     * </ul>
     * @return string|null The corresponding name, or an empty string if there is no name for this character, or NULL if <em>codepoint</em> is out of bounds.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charName(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = IntlChar::UNICODE_CHAR_NAME
    ): ?string {}

/**
* <div id="intlchar.chartype" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::charType</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::charType</span> — <span class="dc-title">Get the general category value for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.chartype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::charType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the general category value for the code point.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.chartype-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.chartype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the general category type, which may be one of the following constants:   </p><ul class="simplelist">    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_UNASSIGNED}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_TITLECASE_LETTER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_MODIFIER_LETTER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_LETTER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_NON_SPACING_MARK}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_ENCLOSING_MARK}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_LETTER_NUMBER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_NUMBER}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_LINE_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_CONTROL_CHAR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_FORMAT_CHAR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_SURROGATE}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_START_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_END_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_MATH_SYMBOL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_OTHER_SYMBOL}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION}</span></strong></li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT}</span></strong></li>   </ul>   </div> <div class="refsect1 examples" id="refsect1-intlchar.chartype-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2674">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_UPPERCASE_LETTER</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_OTHER_PUNCTUATION</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_CONTROL_CHAR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_CATEGORY_OTHER_SYMBOL</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">charType</span><span style="color: #007700">(</span><span style="color: #DD0000">"multiple chars"</span><span style="color: #007700">) === </span><span style="color: #9876AA">null</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the general category value for a code point
     * @link https://php.net/manual/zh/intlchar.chartype.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|null Returns the general category type, which may be one of the following constants:
     * </p><ul>
     * <li><b> IntlChar::CHAR_CATEGORY_UNASSIGNED </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_GENERAL_OTHER_TYPES </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_UPPERCASE_LETTER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_LOWERCASE_LETTER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_TITLECASE_LETTER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_MODIFIER_LETTER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_OTHER_LETTER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_NON_SPACING_MARK </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_ENCLOSING_MARK </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_COMBINING_SPACING_MARK </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_DECIMAL_DIGIT_NUMBER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_LETTER_NUMBER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_OTHER_NUMBER </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_SPACE_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_LINE_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_CONTROL_CHAR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_FORMAT_CHAR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_PRIVATE_USE_CHAR </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_SURROGATE </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_DASH_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_START_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_END_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_CONNECTOR_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_OTHER_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_MATH_SYMBOL </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_CURRENCY_SYMBOL </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_MODIFIER_SYMBOL </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_OTHER_SYMBOL </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_INITIAL_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_FINAL_PUNCTUATION </b></li>
     * <li><b> IntlChar::CHAR_CATEGORY_CHAR_CATEGORY_COUNT </b></li></ul>
     * <p>Or NULL if <em>codepoint</em> is out of bound.</p
     * @since 7.0
     
    #[TentativeType]
*/
    public static function charType(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?int {}

/**
* <div id="intlchar.chr" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::chr</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::chr</span> — <span class="dc-title">Return Unicode character by code point value</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.chr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::chr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Returns a string containing the character specified by the Unicode code point value.  </p>  <p class="para">   This method complements <span class="methodname" style="color:#CC7832">{@link IntlChar::ord()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.chr-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.chr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string containing the single character specified by the Unicode code point value, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.chr-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2675">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$values </span><span style="color: #007700">= [</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">63</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">9731</span><span style="color: #007700">];<br>foreach (</span><span style="color: #9876AA">$values </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">));<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(1) "A"<br>string(1) "?"<br>string(1) "{"<br>string(3) "â"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.chr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::ord()} - Return Unicode code point value of character</span></li>    <li><span class="function">{@link mb_chr()} - 按 Unicode 码位值返回字符</span></li>    <li><span class="function">{@link chr()} - 从数字生成单字节字符串</span></li>   </ul>   </div></div>
    *
     * Return Unicode character by code point value
     * @link https://php.net/manual/zh/intlchar.chr.php
     * @param mixed $codepoint <p>The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")</p>
     * @return string|null A string containing the single character specified by the Unicode code point value.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function chr(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?string {}

/**
* <div id="intlchar.digit" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::digit</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::digit</span> — <span class="dc-title">Get the decimal digit value of a code point for a given radix</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.digit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::digit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = 10</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Returns the decimal digit value of the code point in the specified radix.  </p>  <p class="para">   If the radix is not in the range <span class="literal">2&lt;=radix&lt;=36</span> or if the value of <span class="parameter" style="color:#3A95FF">codepoint</span>   is not a valid digit in the specified radix, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.   A character is a valid digit if at least one of the following is true:   </p><ul class="simplelist">    <li>The character has a decimal digit value. Such characters have the general category "Nd" (decimal digit numbers) and a Numeric_Type of Decimal. In this case the value is the character's decimal digit value.</li>    <li>The character is one of the uppercase Latin letters 'A' through 'Z'. In this case the value is c-'A'+10.</li>    <li>The character is one of the lowercase Latin letters 'a' through 'z'. In this case the value is ch-'a'+10.</li>    <li>Latin letters from both the ASCII range (0061..007A, 0041..005A) as well as from the Fullwidth ASCII range (FF41..FF5A, FF21..FF3A) are recognized.</li>   </ul>   </div> <div class="refsect1 parameters" id="refsect1-intlchar.digit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">base</span></dt>    <dd>     <p class="para">      The radix (defaults to <span class="literal">10</span>).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.digit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the numeric value represented by the character in the specified radix,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if there is no value or if the value exceeds the radix. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，但也可能返回等同于 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的非布尔值。请阅读 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <div class="refsect1 examples" id="refsect1-intlchar.digit-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2676">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"0"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"3"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">digit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(0)<br>int(3)<br>bool(false)<br>int(10)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.digit-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::forDigit()} - Get character representation for a given digit and radix</span></li>    <li><span class="function">{@link IntlChar::charDigitValue()} - Get the decimal digit value of a decimal digit character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_NUMERIC_TYPE}</span></strong></li>   </ul>   </div></div>
    *
     * Get the decimal digit value of a code point for a given radix
     * @link https://php.net/manual/zh/intlchar.digit.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. <em>0x2603</em> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 string (e.g. <em>"\u{2603}"</em>)</p>
     * @param int $base <p>The radix (defaults to 10).</p>
     * @return int|false|null Returns the numeric value represented by the character in the specified radix,
     * or <b>FALSE</b> if there is no value or if the value exceeds the radix,
     * or <b>NULL</b> if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function digit(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $base = 10
    ): int|false|null {}

/**
* <div id="intlchar.enumcharnames" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::enumCharNames</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::enumCharNames</span> — <span class="dc-title">Enumerate all assigned Unicode characters within a range</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.enumcharnames-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::enumCharNames</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$end</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::UNICODE_CHAR_NAME</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Enumerate all assigned Unicode characters between the start and limit code points (start inclusive, limit exclusive)   and call a function for each, passing the code point value and the character name.  </p>  <p class="para">   For Unicode 1.0 names, only those are enumerated that differ from the modern names.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.enumcharnames-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">start</span></dt>    <dd>     <p class="para">      The first code point in the enumeration range.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">end</span></dt>    <dd>     <p class="para">      One more than the last code point in the enumeration range (the first one after the range).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <p class="para">      The function that is to be called for each character name.  The following three arguments will be passed into it:      </p><ul class="simplelist">       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="literal">$codepoint</span> - The numeric code point value</li>       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="literal">$nameChoice</span> - The same value as the <span class="parameter" style="color:#3A95FF">type</span> parameter below</li>       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="literal">$name</span> - The name of the character</li>      </ul>         </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Selector for which kind of names to enumerate.  Can be any of these constants:      </p><ul class="simplelist">       <li><strong><span>{@link IntlChar::UNICODE_CHAR_NAME}</span></strong> (default)</li>       <li><strong><span>{@link IntlChar::UNICODE_10_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::EXTENDED_CHAR_NAME}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_ALIAS}</span></strong></li>       <li><strong><span>{@link IntlChar::CHAR_NAME_CHOICE_COUNT}</span></strong></li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.enumcharnames-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlchar.enumcharnames-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        This method now returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure; previously it returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlchar.enumcharnames-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2677">   <p><strong>示例 #1 Enumerating over a sample range of code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">enumCharNames</span><span style="color: #007700">(</span><span style="color: #9876AA">0x2600</span><span style="color: #007700">, </span><span style="color: #9876AA">0x2610</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$nameChoice</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"U+%04x %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br>});<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">U+2600 BLACK SUN WITH RAYS<br>U+2601 CLOUD<br>U+2602 UMBRELLA<br>U+2603 SNOWMAN<br>U+2604 COMET<br>U+2605 BLACK STAR<br>U+2606 WHITE STAR<br>U+2607 LIGHTNING<br>U+2608 THUNDERSTORM<br>U+2609 SUN<br>U+260a ASCENDING NODE<br>U+260b DESCENDING NODE<br>U+260c CONJUNCTION<br>U+260d OPPOSITION<br>U+260e BLACK TELEPHONE<br>U+260f WHITE TELEPHONE</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.enumcharnames-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charName()} - Retrieve the name of a Unicode character</span></li>    <li><span class="function">{@link IntlChar::charFromName()} - Find Unicode character by name and return its code point value</span></li>   </ul>   </div></div>
    *
     * Enumerate all assigned Unicode characters within a range
     * @link https://php.net/manual/zh/intlchar.enumcharnames.php
     * @param int|string $start The first code point in the enumeration range.
     * @param int|string $end One more than the last code point in the enumeration range (the first one after the range).
     * @param callable $callback <p>
     * The function that is to be called for each character name.  The following three arguments will be passed into it:
     * </p><ul>
     * <li>integer <em>$codepoint</em> - The numeric code point value</li>
     * <li>integer <em>$nameChoice</em> - The same value as the <b>nameChoice</b> parameter below</li>
     * <li>string <em>$name</em> - The name of the character</li>
     * </ul>
     * @param int $type [optional]  <p>
     * Selector for which kind of names to enumerate.  Can be any of these constants:
     * </p><ul>
     * <li><b>IntlChar::UNICODE_CHAR_NAME</b> (default)</li>
     * <li><b>IntlChar::UNICODE_10_CHAR_NAME</b></li>
     * <li><b>IntlChar::EXTENDED_CHAR_NAME</b></li>
     * <li><b>IntlChar::CHAR_NAME_ALIAS</b></li>
     * <li><b>IntlChar::CHAR_NAME_CHOICE_COUNT</b></li>
     * </ul>
     * @since 7.0
     
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.3' => 'bool'], default: 'bool|null')]
*/
    public static function enumCharNames(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $start,
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $end,
        #[LanguageLevelTypeAware(['8.0' => 'callable'], default: '')] $callback,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = IntlChar::UNICODE_CHAR_NAME
    ) {}

/**
* <div id="intlchar.enumchartypes" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::enumCharTypes</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::enumCharTypes</span> — <span class="dc-title">Enumerate all code points with their Unicode general categories</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.enumchartypes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::enumCharTypes</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Enumerates efficiently all code points with their Unicode general categories. This is useful for building data   structures, for enumerating all assigned code points, etc.  </p>  <p class="para">   For each contiguous range of code points with a given general category ("character type"), the   <span class="parameter" style="color:#3A95FF">callback</span> function is called. Adjacent ranges have different types. The Unicode Standard   guarantees that the numeric value of the type is 0..31.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.enumchartypes-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <p class="para">      The function that is to be called for each contiguous range of code points with the same general category.      The following three arguments will be passed into it:      </p><ul class="simplelist">       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="literal">$start</span> - The starting code point of the range</li>       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="literal">$end</span> - The ending code point of the range</li>       <li><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="literal">$name</span> - The category type (one of the <span class="literal">IntlChar::CHAR_CATEGORY_*</span> constants)</li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.enumchartypes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.enumchartypes-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2678">   <p><strong>示例 #1 Enumerating over a sample range of code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">enumCharTypes</span><span style="color: #007700">(function(</span><span style="color: #9876AA">$start</span><span style="color: #007700">, </span><span style="color: #9876AA">$end</span><span style="color: #007700">, </span><span style="color: #9876AA">$type</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"U+%04x through U+%04x are in category %d\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$start</span><span style="color: #007700">, </span><span style="color: #9876AA">$end</span><span style="color: #007700">, </span><span style="color: #9876AA">$type</span><span style="color: #007700">);<br>});<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">U+0000 through U+0020 are in category 15<br>U+0020 through U+0021 are in category 12<br>U+0021 through U+0024 are in category 23<br>U+0024 through U+0025 are in category 25<br>U+0025 through U+0028 are in category 23<br>U+0028 through U+0029 are in category 20<br>U+0029 through U+002a are in category 21<br>U+002a through U+002b are in category 23<br>U+002b through U+002c are in category 24<br>U+002c through U+002d are in category 23<br>U+002d through U+002e are in category 19<br>U+002e through U+0030 are in category 23<br>U+0030 through U+003a are in category 9<br>...</blockquote></div>   </div>  </div> </div></div>
    *
     * Enumerate all code points with their Unicode general categories
     * @link https://php.net/manual/zh/intlchar.enumchartypes.php
     * @param callable $callback <p>
     * The function that is to be called for each contiguous range of code points with the same general category.
     * The following three arguments will be passed into it:
     * </p><ul>
     * <li>integer <em>$start</em> - The starting code point of the range</li>
     * <li>integer <em>$end</em> - The ending code point of the range</li>
     * <li>integer <em>$name</em> - The category type (one of the <em>IntlChar::CHAR_CATEGORY_*</em> constants)</li>
     * </ul>
     * @since 7.0
     
    #[TentativeType]
*/
    public static function enumCharTypes(
        #[PhpStormStubsElementAvailable(from: '7.0', to: '7.4')] $callback = null,
        #[PhpStormStubsElementAvailable(from: '8.0')] callable $callback
    ): void {}

/**
* <div id="intlchar.foldcase" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::foldCase</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::foldCase</span> — <span class="dc-title">Perform case folding on a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.foldcase-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::foldCase</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = IntlChar::FOLD_CASE_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   The given character is mapped to its case folding equivalent; if the character has no case folding equivalent,   the character itself is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.foldcase-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">      Either <strong><span>{@link IntlChar::FOLD_CASE_DEFAULT}</span></strong> (default)      or <strong><span>{@link IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.foldcase-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <em>Simple_Case_Folding</em> of the code point, if any; otherwise the code point itself on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div></div>
    *
     * Perform case folding on a code point
     * @link https://php.net/manual/zh/intlchar.foldcase.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @param int $options [optional] Either IntlChar::FOLD_CASE_DEFAULT (default) or IntlChar::FOLD_CASE_EXCLUDE_SPECIAL_I.
     * @return int|string|null Returns the Simple_Case_Folding of the code point, if any; otherwise the code point itself.
     * Returns NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function foldCase(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $options = IntlChar::FOLD_CASE_DEFAULT
    ): string|int|null {}

/**
* <div id="intlchar.fordigit" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::forDigit</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::forDigit</span> — <span class="dc-title">Get character representation for a given digit and radix</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.fordigit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::forDigit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$digit</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = 10</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Determines the character representation for a specific digit in the specified radix.  </p>  <p class="para">   If the value of radix is not a valid radix, or the value of digit is not a valid digit in the specified radix,   the null character (<span class="literal">U+0000</span>) is returned.  </p>  <p class="para">   The radix argument is valid if it is greater than or equal to <span class="literal">2</span> and less than or equal to <span class="literal">36</span>.   The digit argument is valid if <span class="literal">0 &lt;= digit &lt; radix</span>.  </p>  <p class="para">   If the digit is less than <span class="literal">10</span>, then '0' + digit is returned. Otherwise, the value 'a' + digit - 10 is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.fordigit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">digit</span></dt>    <dd>     <p class="para">      The number to convert to a character.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">base</span></dt>    <dd>     <p class="para">      The radix (defaults to <span class="literal">10</span>).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.fordigit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The character representation (as a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>) of the specified digit in the specified radix.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.fordigit-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2679">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">forDigit</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(48)<br>int(51)<br>int(51)<br>int(0)<br>int(97)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.fordigit-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::digit()} - Get the decimal digit value of a code point for a given radix</span></li>    <li><span class="function">{@link IntlChar::charDigitValue()} - Get the decimal digit value of a decimal digit character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_NUMERIC_TYPE}</span></strong></li>   </ul>   </div></div>
    *
     * Get character representation for a given digit and radix
     * @link https://php.net/manual/zh/intlchar.fordigit.php
     * @param int $digit <p>The number to convert to a character.</p>
     * @param int $base [optional] <p>The radix (defaults to 10).</p>
     * @return int The character representation (as a string) of the specified digit in the specified radix.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function forDigit(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $digit,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $base = 10
    ): int {}

/**
* <div id="intlchar.getbidipairedbracket" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getBidiPairedBracket</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getBidiPairedBracket</span> — <span class="dc-title">Get the paired bracket character for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getbidipairedbracket-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getBidiPairedBracket</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Maps the specified character to its paired bracket character.  </p>  <p class="para">   For <span class="code">IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE !== IntlChar::BPT_NONE</span>, this is the same as <span class="function">{@link IntlChar::charMirror()}</span>.   Otherwise <span class="parameter" style="color:#3A95FF">codepoint</span> itself is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getbidipairedbracket-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getbidipairedbracket-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the paired bracket code point, or <span class="parameter" style="color:#3A95FF">codepoint</span> itself if there is no such mapping. Returns   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <p class="para">返回类型是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，如果代码点作为 UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 传递，则会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getbidipairedbracket-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2680">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBidiPairedBracket</span><span style="color: #007700">(</span><span style="color: #9876AA">91</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBidiPairedBracket</span><span style="color: #007700">(</span><span style="color: #DD0000">'['</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(93)<br>string(1) "]"</blockquote></div>   </div>  </div> </div> <div class="refsect1 notes" id="refsect1-intlchar.getbidipairedbracket-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This method is available as of ICU version 52.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getbidipairedbracket-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charMirror()} - Get the "mirror-image" character for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_BIDI_PAIRED_BRACKET}</span></strong></li>    <li><strong><span>{@link IntlChar::PROPERTY_BIDI_PAIRED_BRACKET_TYPE}</span></strong></li>   </ul>   </div></div>
    *
     * Get the paired bracket character for a code point
     * @link https://php.net/manual/zh/intlchar.getbidipairedbracket.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")</p>
     * @return int|string|null  Returns the paired bracket code point, or <em>codepoint</em> itself if there is no such mapping.
     * The return type will be integer unless the code point was passed as a UTF-8 string, in which case a string will be returned.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getBidiPairedBracket(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|int|null {}

/**
* <div id="intlchar.getblockcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getBlockCode</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getBlockCode</span> — <span class="dc-title">Get the Unicode allocation block containing a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getblockcode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getBlockCode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the Unicode allocation block that contains the character.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getblockcode-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getblockcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the block value for <span class="parameter" style="color:#3A95FF">codepoint</span>.   See the <span class="literal">IntlChar::BLOCK_CODE_*</span> constants for possible return values. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getblockcode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2681">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_BASIC_LATIN</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getBlockCode</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_MISCELLANEOUS_SYMBOLS</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the Unicode allocation block containing a code point
     * @link https://php.net/manual/zh/intlchar.getblockcode.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|null Returns the block value for <em>codepoint</em>, or NULL if <em>codepoint</em> is out of bound.
     * See the <em>IntlChar::BLOCK_CODE_*</em> constants for possible return values.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getBlockCode(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?int {}

/**
* <div id="intlchar.getcombiningclass" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getCombiningClass</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getCombiningClass</span> — <span class="dc-title">Get the combining class of a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getcombiningclass-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getCombiningClass</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the combining class of the code point.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getcombiningclass-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getcombiningclass-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the combining class of the character. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getcombiningclass-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2682">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0334}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getCombiningClass</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{0358}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(0)<br>int(1)<br>int(232)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the combining class of a code point
     * @link https://php.net/manual/zh/intlchar.getcombiningclass.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|null Returns the combining class of the character.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getCombiningClass(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?int {}

/**
* <div id="intlchar.getfc-nfkc-closure" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getFC_NFKC_Closure</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getFC_NFKC_Closure</span> — <span class="dc-title">Get the FC_NFKC_Closure property for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getfc-nfkc-closure-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getFC_NFKC_Closure</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Gets the FC_NFKC_Closure property string for a character.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getfc-nfkc-closure-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getfc-nfkc-closure-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the FC_NFKC_Closure property string for the <span class="parameter" style="color:#3A95FF">codepoint</span>, or an empty string if there is none.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getfc-nfkc-closure-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2683">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getFC_NFKC_Closure</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2121}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getFC_NFKC_Closure</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{1D2D}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(3) "tel"<br>string(2) "Ã¦"</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the FC_NFKC_Closure property for a code point
     * @link https://php.net/manual/zh/intlchar.getfc-nfkc-closure.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return string|false|null Returns the FC_NFKC_Closure property string for the codepoint, or an empty string if there is none,
     * or NULL if <em>codepoint</em> is out of bound,
     * or FALSE if there was an error.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getFC_NFKC_Closure(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|false|null {}

/**
* <div id="intlchar.getintpropertymaxvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getIntPropertyMaxValue</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyMaxValue</span> — <span class="dc-title">Get the max value for a Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getintpropertymaxvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getIntPropertyMaxValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the maximum value for an enumerated/integer/binary Unicode property.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertymaxvalue-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertymaxvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The maximum value returned by <span class="function">{@link IntlChar::getIntPropertyValue()}</span> for a Unicode property.   <span class="literal">&lt;=0</span> if the property selector is out of range.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getintpropertymaxvalue-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2684">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMaxValue</span><span style="color: #007700">(</span><span style="color: #9876AA">999999999</span><span style="color: #007700">)); </span><span style="color: #FF8000">// Some made-up value<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(22)<br>int(166)<br>int(1)<br>int(-1)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertymaxvalue-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>   </ul>   </div></div>
    *
     * Get the max value for a Unicode property
     * @link https://php.net/manual/zh/intlchar.getintpropertymaxvalue.php
     * @param int $property The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * @return int The maximum value returned by {@see IntlChar::getIntPropertyValue()} for a Unicode property. <=0 if the property selector is out of range.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getIntPropertyMaxValue(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property): int {}

/**
* <div id="intlchar.getintpropertyminvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getIntPropertyMinValue</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyMinValue</span> — <span class="dc-title">Get the min value for a Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getintpropertyminvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getIntPropertyMinValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the minimum value for an enumerated/integer/binary Unicode property.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertyminvalue-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertyminvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The minimum value returned by <span class="function">{@link IntlChar::getIntPropertyValue()}</span> for a Unicode property.   <span class="literal">0</span> if the property selector is out of range.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getintpropertyminvalue-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2685">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyMinValue</span><span style="color: #007700">(</span><span style="color: #9876AA">999999999</span><span style="color: #007700">)); </span><span style="color: #FF8000">// Some made-up value<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(0)<br>int(0)<br>int(0)<br>int(0)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertyminvalue-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyMaxValue()} - Get the max value for a Unicode property</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyValue()} - Get the value for a Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>   </ul>   </div></div>
    *
     * Get the min value for a Unicode property
     * @link https://php.net/manual/zh/intlchar.getintpropertyminvalue.php
     * @param int $property The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * @return int The minimum value returned by {@see IntlChar::getIntPropertyValue()} for a Unicode property. 0 if the property selector is out of range.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getIntPropertyMinValue(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property): int {}

/**
* <div id="intlchar.getintpropertyvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getIntPropertyValue</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getIntPropertyValue</span> — <span class="dc-title">Get the value for a Unicode property for a code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getintpropertyvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getIntPropertyValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Gets the property value for an enumerated or integer Unicode property for a code point.   Also returns binary and mask property values.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getintpropertyvalue-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getintpropertyvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the numeric value that is directly the property value or, for enumerated properties, corresponds to the   numeric value of the enumerated constant of the respective property value enumeration type. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <p class="para">   Returns <span class="literal">0</span> or <span class="literal">1</span> (for <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>/<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>) for binary Unicode properties.  </p>  <p class="para">   Returns a bit-mask for mask properties.  </p>  <p class="para">   Returns <span class="literal">0</span> if <span class="parameter" style="color:#3A95FF">property</span> is out of bounds or if the Unicode version does not   have data for the property at all, or not for this code point.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getintpropertyvalue-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2686">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_ALPHABETIC</span><span style="color: #007700">) === </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"["</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_MIRRORED</span><span style="color: #007700">) === </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getIntPropertyValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getintpropertyvalue-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyMinValue()} - Get the min value for a Unicode property</span></li>    <li><span class="function">{@link IntlChar::getIntPropertyMaxValue()} - Get the max value for a Unicode property</span></li>    <li><span class="function">{@link IntlChar::getUnicodeVersion()} - Get the Unicode version</span></li>   </ul>   </div></div>
    *
     * Get the value for a Unicode property for a code point
     * @link https://php.net/manual/zh/intlchar.getintpropertyvalue.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @param int $property The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * @return int|null <p>
     * Returns the numeric value that is directly the property value or, for enumerated properties, corresponds to the
     * numeric value of the enumerated constant of the respective property value enumeration type.
     * </p>
     * <p>
     * Returns <em>0</em> or <em>1</em> (for <b>FALSE</b><b>/</b><b>TRUE</B>) for binary Unicode properties.
     * </p>
     * <p>
     * Returns a bit-mask for mask properties.
     * </p>
     * <p>
     * Returns <em>0</em> if <em>property</em> is out of bounds or if the Unicode version does not
     * have data for the property at all, or not for this code point.
     * </p>
     * <p>
     * Returns NULL if <em>codepoint</em> is out of bound.
     * </p>
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getIntPropertyValue(
        #[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property
    ): ?int {}

/**
* <div id="intlchar.getnumericvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getNumericValue</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getNumericValue</span> — <span class="dc-title">Get the numeric value for a Unicode code point</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getnumericvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getNumericValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span></div>  <p class="para rdfs-comment">   Gets the numeric value for a Unicode code point as defined in the Unicode Character Database.  </p>  <p class="para">   For characters without any numeric values in the Unicode Character Database, this function will return   <strong><span>{@link IntlChar::NO_NUMERIC_VALUE}</span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getnumericvalue-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getnumericvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Numeric value of <span class="parameter" style="color:#3A95FF">codepoint</span>,   or <strong><span>{@link IntlChar::NO_NUMERIC_VALUE}</span></strong> if none is defined. This   constant was added in PHP 7.0.6, prior to this version the literal value   (<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>)<span class="literal">-123456789</span> may be used instead. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getnumericvalue-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2687">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"4"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"x"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNumericValue</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{216C}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">float(4)<br>float(-123456789)<br>float(50)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the numeric value for a Unicode code point
     * @link https://php.net/manual/zh/intlchar.getnumericvalue.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return float|null Numeric value of codepoint, or float(-123456789) if none is defined, or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getNumericValue(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?float {}

/**
* <div id="intlchar.getpropertyenum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getPropertyEnum</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyEnum</span> — <span class="dc-title">Get the property constant value for a given property name</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getpropertyenum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getPropertyEnum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$alias</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the property constant value for a given property name, as specified in the Unicode database file PropertyAliases.txt.   Short, long, and any other variants are recognized.  </p>  <p class="para">   In addition, this function maps the synthetic names "gcm" / "General_Category_Mask" to the property   <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY_MASK}</span></strong>. These names are not in PropertyAliases.txt.  </p>  <p class="para">   This function complements <span class="function">{@link IntlChar::getPropertyName()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyenum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">alias</span></dt>    <dd>     <p class="para">      The property name to be matched. The name is compared using "loose matching" as described in PropertyAliases.txt.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyenum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="literal">IntlChar::PROPERTY_</span> constant value,   or <strong><span>{@link IntlChar::PROPERTY_INVALID_CODE}</span></strong> if the given name does not match any property.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getpropertyenum-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2688">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'Bidi_Class'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'script'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_SCRIPT</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'IDEOGRAPHIC'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_IDEOGRAPHIC</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyEnum</span><span style="color: #007700">(</span><span style="color: #DD0000">'Some made-up string'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getpropertyenum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::getPropertyName()} - Get the Unicode name for a property</span></li>   </ul>   </div></div>
    *
     * Get the property constant value for a given property name
     * @link https://php.net/manual/zh/intlchar.getpropertyenum.php
     * @param string $alias The property name to be matched. The name is compared using "loose matching" as described in PropertyAliases.txt.
     * @return int Returns an IntlChar::PROPERTY_ constant value, or <b>IntlChar::PROPERTY_INVALID_CODE</b> if the given name does not match any property.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getPropertyEnum(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $alias): int {}

/**
* <div id="intlchar.getpropertyname" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getPropertyName</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyName</span> — <span class="dc-title">Get the Unicode name for a property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getpropertyname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getPropertyName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::LONG_PROPERTY_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the Unicode name for a given property, as given in the Unicode database file PropertyAliases.txt.  </p>  <p class="para">   In addition, this function maps the property <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY_MASK}</span></strong> to the   synthetic names "gcm" / "General_Category_Mask". These names are not in PropertyAliases.txt.  </p>  <p class="para">   This function complements <span class="function">{@link IntlChar::getPropertyEnum()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>     <p class="para">      <strong><span>{@link IntlChar::PROPERTY_INVALID_CODE}</span></strong> should not be used.      Also, if <span class="parameter" style="color:#3A95FF">property</span> is out of range, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Selector for which name to get. If out of range, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.     </p>     <p class="para">      All properties have a long name. Most have a short name, but some do not. Unicode allows for additional names;      if present these will be returned by adding 1, 2, etc. to <strong><span>{@link IntlChar::LONG_PROPERTY_NAME}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the name, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if either the <span class="parameter" style="color:#3A95FF">property</span> or the <span class="parameter" style="color:#3A95FF">type</span>   is out of range.  </p>  <p class="para">   If a given <span class="parameter" style="color:#3A95FF">type</span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, then all larger values of   <span class="parameter" style="color:#3A95FF">type</span> will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, with one exception: if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned for   <strong><span>{@link IntlChar::SHORT_PROPERTY_NAME}</span></strong>, then <strong><span>{@link IntlChar::LONG_PROPERTY_NAME}</span></strong>   (and higher) may still return a non-<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> value.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getpropertyname-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2689">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT_PROPERTY_NAME</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME </span><span style="color: #007700">+ </span><span style="color: #9876AA">1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(10) "Bidi_Class"<br>string(2) "bc"<br>string(10) "Bidi_Class"<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getpropertyname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::getPropertyEnum()} - Get the property constant value for a given property name</span></li>   </ul>   </div></div>
    *
     * Get the Unicode name for a property
     * @link https://php.net/manual/zh/intlchar.getpropertyname.php
     * @param int $property <p>The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).</p>
     * <p><b>IntlChar::PROPERTY_INVALID_CODE</b> should not be used. Also, if property is out of range, FALSE is returned.</p>
     * @param int $type <p> Selector for which name to get. If out of range, FALSE is returned.</p>
     * <p>All properties have a long name. Most have a short name, but some do not. Unicode allows for additional names; if present these will be returned by adding 1, 2, etc. to <b>IntlChar::LONG_PROPERTY_NAME</b>.</p>
     * @return string|false <p>
     * Returns the name, or <b>FALSE</b> if either the <em>property</em> or the <em>nameChoice</em>
     * is out of range.
     * </p>
     * <p>
     * If a given <em>nameChoice</em> returns <b>FALSE</b>, then all larger values of
     * <em>nameChoice</em> will return <b>FALSE</b>, with one exception: if <b>FALSE</b> is returned for
     * <b>IntlChar::SHORT_PROPERTY_NAME</b>, then <b>IntlChar::LONG_PROPERTY_NAME</b>
     * (and higher) may still return a non-<b>FALSE</b> value.
     * </p>
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getPropertyName(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = IntlChar::LONG_PROPERTY_NAME
    ): string|false {}

/**
* <div id="intlchar.getpropertyvalueenum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getPropertyValueEnum</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyValueEnum</span> — <span class="dc-title">Get the property value for a given value name</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getpropertyvalueenum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getPropertyValueEnum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the property value integer for a given value name, as specified in the Unicode database file PropertyValueAliases.txt.   Short, long, and any other variants are recognized.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Some of the names in PropertyValueAliases.txt will only be recognized with    <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY_MASK}</span></strong>, not    <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY}</span></strong>.    These include:    </p><ul class="simplelist">     <li>"C" / "Other"</li>     <li>"L" / "Letter"</li>     <li>"LC" / "Cased_Letter"</li>     <li>"M" / "Mark"</li>     <li>"N" / "Number"</li>     <li>"P" / "Punctuation"</li>     <li>"S" / "Symbol"</li>     <li> "Z" / "Separator"</li>    </ul>     </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyvalueenum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>     <p class="para">      If out of range, or this method doesn't work with the given value,      <strong><span>{@link IntlChar::PROPERTY_INVALID_CODE}</span></strong> is returned.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      The value name to be matched.  The name is compared using "loose matching" as described in PropertyValueAliases.txt.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyvalueenum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the corresponding value integer, or <strong><span>{@link IntlChar::PROPERTY_INVALID_CODE}</span></strong> if the given name   does not match any value of the given property, or if the property is invalid.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getpropertyvalueenum-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2690">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">, </span><span style="color: #DD0000">'greek'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">, </span><span style="color: #DD0000">'RIGHT_TO_LEFT'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">CHAR_DIRECTION_RIGHT_TO_LEFT</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BIDI_CLASS</span><span style="color: #007700">, </span><span style="color: #DD0000">'some made-up string'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueEnum</span><span style="color: #007700">(</span><span style="color: #9876AA">123456789</span><span style="color: #007700">, </span><span style="color: #DD0000">'RIGHT_TO_LEFT'</span><span style="color: #007700">) === </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_INVALID_CODE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the property value for a given value name
     * @link https://php.net/manual/zh/intlchar.getpropertyvalueenum.php
     * @param int $property <p>The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * If out of range, or this method doesn't work with the given value, IntlChar::PROPERTY_INVALID_CODE is returned</p>
     * @param string $name <p> The value name to be matched. The name is compared using "loose matching" as described in PropertyValueAliases.txt.</p>
     * @return int Returns the corresponding value integer, or IntlChar::PROPERTY_INVALID_CODE if the given name does not match any value of the given property, or if the property is invalid.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getPropertyValueEnum(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name
    ): int {}

/**
* <div id="intlchar.getpropertyvaluename" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getPropertyValueName</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getPropertyValueName</span> — <span class="dc-title">Get the Unicode name for a property value</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getpropertyvaluename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getPropertyValueName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$property</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = IntlChar::LONG_PROPERTY_NAME</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the Unicode name for a given property value, as given in the Unicode database file PropertyValueAliases.txt.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Some of the names in PropertyValueAliases.txt can only be retrieved using    <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY_MASK}</span></strong>, not    <strong><span>{@link IntlChar::PROPERTY_GENERAL_CATEGORY}</span></strong>.    These include:    </p><ul class="simplelist">     <li>"C" / "Other"</li>     <li>"L" / "Letter"</li>     <li>"LC" / "Cased_Letter"</li>     <li>"M" / "Mark"</li>     <li>"N" / "Number"</li>     <li>"P" / "Punctuation"</li>     <li>"S" / "Symbol"</li>     <li> "Z" / "Separator"</li>    </ul>     </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getpropertyvaluename-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">property</span></dt>    <dd>     <p class="para">The Unicode property to lookup (see the <span class="literal">IntlChar::PROPERTY_*</span> constants).</p>     <p class="para">      If out of range, or this method doesn't work with the given value, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      Selector for a value for the given property. If out of range, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.     </p>     <p class="para">      In general, valid values range from <span class="literal">0</span> up to some maximum. There are a couple exceptions:      </p><ul class="simplelist">       <li>        <strong><span>{@link IntlChar::PROPERTY_BLOCK}</span></strong> values begin at the non-zero value <strong><span>{@link IntlChar::BLOCK_CODE_BASIC_LATIN}</span></strong>       </li>       <li>        <strong><span>{@link IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS}</span></strong> values are not contiguous and range from 0..240.       </li>      </ul>         </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Selector for which name to get. If out of range, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.     </p>     <p class="para">      All values have a long name. Most have a short name, but some do not. Unicode allows for additional names;      if present these will be returned by adding 1, 2, etc. to <strong><span>{@link IntlChar::LONG_PROPERTY_NAME}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getpropertyvaluename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the name, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if either the <span class="parameter" style="color:#3A95FF">property</span> or the <span class="parameter" style="color:#3A95FF">type</span>   is out of range. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <p class="para">   If a given <span class="parameter" style="color:#3A95FF">type</span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, then all larger values of <span class="parameter" style="color:#3A95FF">type</span>   will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>, with one exception: if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned for <strong><span>{@link IntlChar::SHORT_PROPERTY_NAME}</span></strong>,   then <strong><span>{@link IntlChar::LONG_PROPERTY_NAME}</span></strong> (and higher) may still return a non-<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> value.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getpropertyvaluename-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2691">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT_PROPERTY_NAME</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getPropertyValueName</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">PROPERTY_BLOCK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">BLOCK_CODE_GREEK</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">LONG_PROPERTY_NAME </span><span style="color: #007700">+ </span><span style="color: #9876AA">1</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(16) "Greek_And_Coptic"<br>string(5) "Greek"<br>string(16) "Greek_And_Coptic"<br>bool(false)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the Unicode name for a property value
     * @link https://php.net/manual/zh/intlchar.getpropertyvaluename.php
     * @param int $property <p>
     * The Unicode property to lookup (see the IntlChar::PROPERTY_* constants).
     * If out of range, or this method doesn't work with the given value, FALSE is returned.
     * </p>
     * @param int $value <p>
     * Selector for a value for the given property. If out of range, <b>FALSE</b> is returned.
     * </p>
     * <p>
     * In general, valid values range from <em>0</em> up to some maximum. There are a couple exceptions:
     * </p><ul>
     * <li>
     * <b>IntlChar::PROPERTY_BLOCK</b> values begin at the non-zero value <b>IntlChar::BLOCK_CODE_BASIC_LATIN</b>
     * </li>
     * <li>
     * <b>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</b> values are not contiguous and range from 0..240.
     * </li>
     * </ul>
     * @param int $type [optional] <p>
     * Selector for which name to get. If out of range, FALSE is returned.
     * All values have a long name. Most have a short name, but some do not. Unicode allows for additional names; if present these will be returned by adding 1, 2, etc. to IntlChar::LONG_PROPERTY_NAME.
     * </p>
     * @return  string|false Returns the name, or FALSE if either the property or the nameChoice is out of range.
     * If a given nameChoice returns FALSE, then all larger values of nameChoice will return FALSE, with one exception: if FALSE is returned for IntlChar::SHORT_PROPERTY_NAME, then IntlChar::LONG_PROPERTY_NAME (and higher) may still return a non-FALSE value.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getPropertyValueName(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $property,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $value,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = IntlChar::LONG_PROPERTY_NAME
    ): string|false {}

/**
* <div id="intlchar.getunicodeversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::getUnicodeVersion</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::getUnicodeVersion</span> — <span class="dc-title">Get the Unicode version</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.getunicodeversion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::getUnicodeVersion</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Gets the Unicode version information.  </p>  <p class="para">   The version array is filled in with the version information for the Unicode standard that is currently used by ICU.   For example, Unicode version 3.1.1 is represented as an array with the values <span class="literal">[3, 1, 1, 0]</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.getunicodeversion-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.getunicodeversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array containing the Unicode version number.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.getunicodeversion-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2692">   <p><strong>示例 #1 Testing different properties</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">getUnicodeVersion</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">array(4) {<br>  [0]=&gt;<br>  int(7)<br>  [1]=&gt;<br>  int(0)<br>  [2]=&gt;<br>  int(0)<br>  [3]=&gt;<br>  int(0)<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.getunicodeversion-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charAge()} - Get the "age" of the code point</span></li>   </ul>   </div></div>
    *
     * Get the Unicode version
     * @link https://php.net/manual/zh/intlchar.getunicodeversion.php
     * @return array An array containing the Unicode version number.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function getUnicodeVersion(): array {}

/**
* <div id="intlchar.isalnum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isalnum</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isalnum</span> — <span class="dc-title">Check if code point is an alphanumeric character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isalnum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isalnum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is an alphanumeric character (letter or digit).  <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "L" (letters) and "Nd" (decimal digit numbers).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isalnum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isalnum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is an alphanumeric character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isalnum-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2694">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalnum</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isalnum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><span class="function">{@link ctype_alnum()} - 检测字母数字式字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is an alphanumeric character
     * @link https://php.net/manual/zh/intlchar.isalnum.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is an alphanumeric character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isalnum(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isalpha" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isalpha</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isalpha</span> — <span class="dc-title">Check if code point is a letter character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isalpha-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isalpha</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a letter character.  <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for general categories "L" (letters).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isalpha-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isalpha-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a letter character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isalpha-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2695">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isalpha</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isalpha-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><span class="function">{@link ctype_alpha()} - 检测字母字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a letter character
     * @link https://php.net/manual/zh/intlchar.isalpha.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a letter character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isalpha(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isbase" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isbase</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isbase</span> — <span class="dc-title">Check if code point is a base character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isbase-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isbase</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a base character.  <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for general categories "L" (letters),   "N" (numbers), "Mc" (spacing combining marks), and "Me" (enclosing marks).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This is different from the Unicode definition in chapter 3.5, conformance clause D13, which defines base characters    to be all characters (not Cn) that do not graphically combine with preceding characters (M) and that are neither    control (Cc) or format (Cf) characters.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isbase-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isbase-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a base character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isbase-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2696">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isbase</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isbase-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>   </ul>   </div></div>
    *
     * Check if code point is a base character
     * @link https://php.net/manual/zh/intlchar.isbase.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a base character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isbase(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isblank" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isblank</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isblank</span> — <span class="dc-title">Check if code point is a "blank" or "horizontal space" character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isblank-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isblank</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a "blank" or "horizontal space", a character that visibly separates words on a line.  </p>  <p class="para">   The following are equivalent definitions:   </p><ul class="simplelist">    <li>     <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for Unicode White_Space characters except for "vertical space controls" where "vertical space controls" are     the following characters: U+000A (LF) U+000B (VT) U+000C (FF) U+000D (CR) U+0085 (NEL) U+2028 (LS) U+2029 (PS)    </li>    <li>     <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for U+0009 (TAB) and characters with general category "Zs" (space separators) except Zero Width Space (ZWSP, U+200B).    </li>   </ul>   </div> <div class="refsect1 parameters" id="refsect1-intlchar.isblank-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isblank-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is either a "blank" or "horizontal space" character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isblank-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2697">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isblank</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isblank-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>    <li><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>    <li><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>    <li><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>   </ul>   </div></div>
    *
     * Check if code point is a "blank" or "horizontal space" character
     * @link https://php.net/manual/zh/intlchar.isblank.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is either a "blank" or "horizontal space" character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isblank(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.iscntrl" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::iscntrl</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::iscntrl</span> — <span class="dc-title">Check if code point is a control character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.iscntrl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::iscntrl</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a control character.  </p>  <p class="para">   A control character is one of the following:   </p><ul class="simplelist">    <li>ISO 8-bit control character (U+0000..U+001f and U+007f..U+009f)</li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_CONTROL_CHAR}</span></strong> (Cc)</li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_FORMAT_CHAR}</span></strong> (Cf)</li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_LINE_SEPARATOR}</span></strong> (Zl)</li>    <li><strong><span>{@link IntlChar::CHAR_CATEGORY_PARAGRAPH_SEPARATOR}</span></strong> (Zp)</li>   </ul>   </div> <div class="refsect1 parameters" id="refsect1-intlchar.iscntrl-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.iscntrl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a control character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.iscntrl-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2698">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iscntrl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(false)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.iscntrl-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isprint()} - Check if code point is a printable character</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT}</span></strong></li>    <li><span class="function">{@link ctype_cntrl()} - 检测控制字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a control character
     * @link https://php.net/manual/zh/intlchar.iscntrl.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a control character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function iscntrl(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isdefined" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isdefined</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isdefined</span> — <span class="dc-title">Check whether the code point is defined</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isdefined-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isdefined</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is "defined", which usually means that it is assigned a character.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for general categories other than "Cn" (other, not assigned).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Note that non-character code points (e.g., U+FDD0) are not "defined" (they are Cn), but surrogate code points are "defined" (Cs).   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isdefined-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isdefined-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a defined character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isdefined-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2699">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdefined</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{FDD0}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isdefined-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>    <li><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category "Lu" (uppercase letter)</span></li>    <li><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>    <li><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>   </ul>   </div></div>
    *
     * Check whether the code point is defined
     * @link https://php.net/manual/zh/intlchar.isdefined.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a defined character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isdefined(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isdigit" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isdigit</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isdigit</span> — <span class="dc-title">Check if code point is a digit character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isdigit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isdigit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a digit character.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general category "Nd" (decimal digit numbers). Beginning with Unicode 4, this is the same as testing for the Numeric_Type of Decimal.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isdigit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isdigit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a digit character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isdigit-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2700">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isdigit-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isalnum()} - Check if code point is an alphanumeric character</span></li>    <li><span class="function">{@link IntlChar::isxdigit()} - Check if code point is a hexadecimal digit</span></li>    <li><span class="function">{@link ctype_digit()} - 检测数字字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a digit character
     * @link https://php.net/manual/zh/intlchar.isdigit.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a digit character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isdigit(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isgraph" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isgraph</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isgraph</span> — <span class="dc-title">Check if code point is a graphic character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isgraph-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isgraph</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a "graphic" character (printable, excluding spaces).  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for all characters except those with general categories "Cc" (control codes), "Cf" (format controls), "Cs" (surrogates), "Cn" (unassigned), and "Z" (separators).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isgraph-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isgraph-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a "graphic" character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isgraph-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2701">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isgraph</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isgraph-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ctype_graph()} - 检测除空格外的任何打印字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a graphic character
     * @link https://php.net/manual/zh/intlchar.isgraph.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a "graphic" character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isgraph(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isidignorable" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isIDIgnorable</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isIDIgnorable</span> — <span class="dc-title">Check if code point is an ignorable character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isidignorable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isIDIgnorable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character should be regarded as an ignorable character in an identifier.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general category "Cf" (format controls) as well as non-whitespace ISO controls (U+0000..U+0008, U+000E..U+001B, U+007F..U+009F).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Note that Unicode just recommends to ignore Cf (format controls).   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isidignorable-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isidignorable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is ignorable in identifiers, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isidignorable-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2702">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDIgnorable</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{007F}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(false)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isidignorable-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>    <li><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point is an ignorable character
     * @link https://php.net/manual/zh/intlchar.isidignorable.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is ignorable in identifiers, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isIDIgnorable(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isidpart" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isIDPart</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isIDPart</span> — <span class="dc-title">Check if code point is permissible in an identifier</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isidpart-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isIDPart</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character is permissible in an identifier.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "L" (letters), "Nl" (letter numbers), "Nd" (decimal digits),   "Mc" and "Mn" (combining marks), "Pc" (connecting punctuation), and u_isIDIgnorable(c).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This is almost the same as Unicode's ID_Continue (<strong><span>{@link IntlChar::PROPERTY_ID_CONTINUE}</span></strong>) except that    Unicode recommends to ignore Cf which is less than <span class="function">{@link IntlChar::isIDIgnorable()}</span>.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isidpart-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isidpart-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is the code point may occur in an identifier, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isidpart-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2703">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isidpart-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isIDIgnorable()} - Check if code point is an ignorable character</span></li>    <li><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_ID_CONTINUE}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point is permissible in an identifier
     * @link https://php.net/manual/zh/intlchar.isidpart.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is the code point may occur in an identifier, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isIDPart(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isidstart" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isIDStart</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isIDStart</span> — <span class="dc-title">Check if code point is permissible as the first character in an identifier</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isidstart-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isIDStart</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character is permissible as the first character in an identifier according to Unicode (The Unicode Standard, Version 3.0, chapter 5.16 Identifiers).  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "L" (letters) and "Nl" (letter numbers).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isidstart-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isidstart-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> may start an identifier, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isidstart-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2704">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isidstart-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_ID_START}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point is permissible as the first character in an identifier
     * @link https://php.net/manual/zh/intlchar.isidstart.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint may start an identifier, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isIDStart(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isisocontrol" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isISOControl</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isISOControl</span> — <span class="dc-title">Check if code point is an ISO control code</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isisocontrol-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isISOControl</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is an ISO control code.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for U+0000..U+001f and U+007f..U+009f (general category "Cc").  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isisocontrol-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isisocontrol-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is an ISO control code, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isisocontrol-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2705">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isISOControl</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isisocontrol-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::iscntrl()} - Check if code point is a control character</span></li>   </ul>   </div></div>
    *
     * Check if code point is an ISO control code
     * @link https://php.net/manual/zh/intlchar.isisocontrol.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is an ISO control code, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isISOControl(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isjavaidpart" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isJavaIDPart</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaIDPart</span> — <span class="dc-title">Check if code point is permissible in a Java identifier</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isjavaidpart-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isJavaIDPart</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character is permissible in a Java identifier.  </p>  <p class="para">   In addition to <span class="function">{@link IntlChar::isIDPart()}</span>, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general category "Sc" (currency symbols).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isjavaidpart-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaidpart-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> may occur in a Java identifier, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isjavaidpart-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2706">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDPart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isjavaidpart-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isIDIgnorable()} - Check if code point is an ignorable character</span></li>    <li><span class="function">{@link IntlChar::isIDPart()} - Check if code point is permissible in an identifier</span></li>    <li><span class="function">{@link IntlChar::isJavaIDStart()} - Check if code point is permissible as the first character in a Java identifier</span></li>    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>   </ul>   </div></div>
    *
     * Check if code point is permissible in a Java identifier
     * @link https://php.net/manual/zh/intlchar.isjavaidpart.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint may occur in a Java identifier, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isJavaIDPart(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isjavaidstart" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isJavaIDStart</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaIDStart</span> — <span class="dc-title">Check if code point is permissible as the first character in a Java identifier</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isjavaidstart-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isJavaIDStart</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character is permissible as the start of a Java identifier.  </p>  <p class="para">   In addition to <span class="function">{@link IntlChar::isIDStart()}</span>, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "Sc" (currency symbols) and "Pc" (connecting punctuation).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isjavaidstart-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaidstart-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> may start a Java identifier, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isjavaidstart-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2707">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaIDStart</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isjavaidstart-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isIDStart()} - Check if code point is permissible as the first character in an identifier</span></li>    <li><span class="function">{@link IntlChar::isJavaIDPart()} - Check if code point is permissible in a Java identifier</span></li>    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>   </ul>   </div></div>
    *
     * Check if code point is permissible as the first character in a Java identifier
     * @link https://php.net/manual/zh/intlchar.isjavaidstart.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint may start a Java identifier, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isJavaIDStart(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isjavaspacechar" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isJavaSpaceChar</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isJavaSpaceChar</span> — <span class="dc-title">Check if code point is a space character according to Java</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isjavaspacechar-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isJavaSpaceChar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determine if the specified code point is a space character according to Java.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "Z" (separators), which does not include control codes (e.g., TAB or Line Feed).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isjavaspacechar-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isjavaspacechar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a space character according to Java, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isjavaspacechar-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2708">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isJavaSpaceChar</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)<br>bool(false)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isjavaspacechar-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>    <li><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>    <li><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>   </ul>   </div></div>
    *
     * Check if code point is a space character according to Java
     * @link https://php.net/manual/zh/intlchar.isjavaspacechar.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a space character according to Java, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isJavaSpaceChar(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.islower" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::islower</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::islower</span> — <span class="dc-title">Check if code point is a lowercase letter</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.islower-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::islower</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point has the general category "Ll" (lowercase letter).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This misses some characters that are also lowercase but have a different general category value. In order to include those, use <span class="function">{@link IntlChar::isULowercase()}</span>.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.islower-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.islower-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is an Ll lowercase letter, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.islower-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2709">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">islower</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.islower-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category "Lu" (uppercase letter)</span></li>    <li><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>    <li><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>    <li><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_LOWERCASE}</span></strong></li>    <li><span class="function">{@link ctype_lower()} - 检测小写字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a lowercase letter
     * @link https://php.net/manual/zh/intlchar.islower.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN),
     * or the character encoded as a UTF-8 string (e.g. "\u{2603}")</p>
     * @return bool|null Returns TRUE if codepoint is an Ll lowercase letter, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function islower(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.ismirrored" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isMirrored</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isMirrored</span> — <span class="dc-title">Check if code point has the Bidi_Mirrored property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.ismirrored-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isMirrored</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the code point has the Bidi_Mirrored property.  </p>  <p class="para">   This property is set for characters that are commonly used in Right-To-Left contexts and need to be displayed with a "mirrored" glyph.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.ismirrored-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.ismirrored-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> has the Bidi_Mirrored property, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.ismirrored-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2710">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isMirrored</span><span style="color: #007700">(</span><span style="color: #DD0000">"("</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.ismirrored-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::charMirror()} - Get the "mirror-image" character for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_BIDI_MIRRORED}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point has the Bidi_Mirrored property
     * @link https://php.net/manual/zh/intlchar.ismirrored.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. <em>0x2603</em> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 string (e.g. <em>"\u{2603}"</em>)</p>
     * @return bool|null Returns TRUE if codepoint has the Bidi_Mirrored property, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isMirrored(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isprint" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isprint</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isprint</span> — <span class="dc-title">Check if code point is a printable character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isprint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isprint</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a printable character.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for general categories other than "C" (controls).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isprint-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isprint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a printable character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isprint-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2711">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isprint</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{200e}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isprint-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::iscntrl()} - Check if code point is a control character</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_DEFAULT_IGNORABLE_CODE_POINT}</span></strong></li>    <li><span class="function">{@link ctype_print()} - 检测可打印字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a printable character
     * @link https://php.net/manual/zh/intlchar.isprint.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. <em>0x2603</em> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 string (e.g. <em>"\u{2603}"</em>)</p>
     * @return bool|null Returns TRUE if codepoint is a printable character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isprint(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.ispunct" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::ispunct</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::ispunct</span> — <span class="dc-title">Check if code point is punctuation character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.ispunct-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::ispunct</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a punctuation character.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general categories "P" (punctuation).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.ispunct-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.ispunct-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a punctuation character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.ispunct-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2712">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">","</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ispunct</span><span style="color: #007700">(</span><span style="color: #DD0000">"$"</span><span style="color: #007700">));</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.ispunct-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link ctype_punct()} - 检测可打印的字符是不是不包含空白、数字和字母</span></li>   </ul>   </div></div>
    *
     * Check if code point is punctuation character
     * @link https://php.net/manual/zh/intlchar.ispunct.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. <em>0x2603</em> for <em>U+2603 SNOWMAN</em>),
     * or the character encoded as a UTF-8 string (e.g. <em>"\u{2603}"</em>)</p>
     * @return bool|null Returns TRUE if codepoint is a punctuation character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function ispunct(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isspace</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isspace</span> — <span class="dc-title">Check if code point is a space character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isspace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified character is a space character or not.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isspace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a space character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isspace-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2713">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isspace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isspace-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>    <li><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>    <li><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>    <li><span class="function">{@link ctype_space()} - 检测空白字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a space character
     * @link https://php.net/manual/zh/intlchar.isspace.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a space character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isspace(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.istitle" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::istitle</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::istitle</span> — <span class="dc-title">Check if code point is a titlecase letter</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.istitle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::istitle</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a titlecase letter.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for general category "Lt" (titlecase letter).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.istitle-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.istitle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a titlecase letter, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.istitle-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2714">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Latin Capital Letter Dz with Caron U+01C4<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Ǆ"</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// Latin Capital Letter D with Small Letter Z with Caron U+01C5<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ǅ"</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// Latin Small Letter Dz with Caron U+01C6<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ǆ"</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Greek Capital Letter Alpha with Prosgegrammeni U+1FBC<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ᾼ"</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// Greek Small Letter Alpha with Ypogegrammeni U+1FB3<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ᾳ"</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// Greek Capital Letter Alpha U+0391<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">istitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Α"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.istitle-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category "Lu" (uppercase letter)</span></li>    <li><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>    <li><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>   </ul>   </div></div>
    *
     * Check if code point is a titlecase letter
     * @link https://php.net/manual/zh/intlchar.istitle.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a titlecase letter, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function istitle(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isualphabetic" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isUAlphabetic</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isUAlphabetic</span> — <span class="dc-title">Check if code point has the Alphabetic Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isualphabetic-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isUAlphabetic</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Check if a code point has the Alphabetic Unicode property.  </p>  <p class="para">   This is the same as <span class="literal">IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_ALPHABETIC)</span>  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isualphabetic-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isualphabetic-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> has the Alphabetic Unicode property, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isualphabetic-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2715">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUAlphabetic</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isualphabetic-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isalpha()} - Check if code point is a letter character</span></li>    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_ALPHABETIC}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point has the Alphabetic Unicode property
     * @link https://php.net/manual/zh/intlchar.isualphabetic.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint has the Alphabetic Unicode property, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isUAlphabetic(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isulowercase" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isULowercase</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isULowercase</span> — <span class="dc-title">Check if code point has the Lowercase Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isulowercase-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isULowercase</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Check if a code point has the Lowercase Unicode property.  </p>  <p class="para">   This is the same as <span class="literal">IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_LOWERCASE)</span>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This is different than <span class="function">{@link IntlChar::islower()}</span> and will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for more characters.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isulowercase-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isulowercase-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> has the Lowercase Unicode property, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isulowercase-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2716">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isULowercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isulowercase-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_LOWERCASE}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point has the Lowercase Unicode property
     * @link https://php.net/manual/zh/intlchar.isulowercase.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint has the Lowercase Unicode property, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isULowercase(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isupper" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isupper</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isupper</span> — <span class="dc-title">Check if code point has the general category "Lu" (uppercase letter)</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isupper-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isupper</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point has the general category "Lu" (uppercase letter).  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This misses some characters that are also uppercase but have a different general category value. In order to include those, use <span class="function">{@link IntlChar::isUUppercase()}</span>.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isupper-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isupper-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is an Lu uppercase letter, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isupper-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2717">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isupper-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::islower()} - Check if code point is a lowercase letter</span></li>    <li><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>    <li><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>    <li><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_UPPERCASE}</span></strong></li>    <li><span class="function">{@link ctype_upper()} - 检测大写字符</span></li>   </ul>   </div></div>
    *
     * Check if code point has the general category "Lu" (uppercase letter)
     * @link https://php.net/manual/zh/intlchar.isupper.php
     * @param int|string $codepoint <p>The integer codepoint value (e.g. <em>0x2603</em> for <em>U+2603 SNOWMAN</em>),
     * or the character encoded as a UTF-8 string (e.g. <em>"\u{2603}"</em>)</p>
     * @return bool|null Returns TRUE if codepoint is an Lu uppercase letter, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isupper(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isuuppercase" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isUUppercase</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isUUppercase</span> — <span class="dc-title">Check if code point has the Uppercase Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isuuppercase-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isUUppercase</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Check if a code point has the Uppercase Unicode property.  </p>  <p class="para">   This is the same as <span class="literal">IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_UPPERCASE)</span>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This is different than <span class="function">{@link IntlChar::isupper()}</span> and will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for more characters.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isuuppercase-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isuuppercase-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> has the Uppercase Unicode property, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isuuppercase-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2718">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUUppercase</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>bool(true)<br>bool(false)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isuuppercase-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isupper()} - Check if code point has the general category "Lu" (uppercase letter)</span></li>    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_UPPERCASE}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point has the Uppercase Unicode property
     * @link https://php.net/manual/zh/intlchar.isuuppercase.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint has the Uppercase Unicode property, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isUUppercase(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isuwhitespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isUWhiteSpace</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isUWhiteSpace</span> — <span class="dc-title">Check if code point has the White_Space Unicode property</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isuwhitespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isUWhiteSpace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Check if a code point has the White_Space Unicode property.  </p>  <p class="para">   This is the same as <span class="literal">IntlChar::hasBinaryProperty($codepoint, IntlChar::PROPERTY_WHITE_SPACE)</span>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This is different from both <span class="function">{@link IntlChar::isspace()}</span> and <span class="function">{@link IntlChar::isWhitespace()}</span>.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isuwhitespace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isuwhitespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> has the White_Space Unicode property, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isuwhitespace-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2719">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isUWhiteSpace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(true)<br>bool(true)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isuwhitespace-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>    <li><span class="function">{@link IntlChar::isWhitespace()} - Check if code point is a whitespace character according to ICU</span></li>    <li><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>    <li><span class="function">{@link IntlChar::hasBinaryProperty()} - Check a binary Unicode property for a code point</span></li>    <li><strong><span>{@link IntlChar::PROPERTY_WHITE_SPACE}</span></strong></li>   </ul>   </div></div>
    *
     * Check if code point has the White_Space Unicode property
     * @link https://php.net/manual/zh/intlchar.isuwhitespace.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint has the White_Space Unicode property, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isUWhiteSpace(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.iswhitespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isWhitespace</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isWhitespace</span> — <span class="dc-title">Check if code point is a whitespace character according to ICU</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.iswhitespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isWhitespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines if the specified code point is a whitespace character according to ICU.  </p>  <p class="para">   A character is considered to be a ICU whitespace character if and only if it satisfies one of the following criteria:   </p><ul class="simplelist">    <li>It is a Unicode Separator character (categories "Z" = "Zs" or "Zl" or "Zp"), but is not also a non-breaking space (U+00A0 NBSP or U+2007 Figure Space or U+202F Narrow NBSP).</li>    <li>It is U+0009 HORIZONTAL TABULATION.</li>    <li>It is U+000A LINE FEED.</li>    <li>It is U+000B VERTICAL TABULATION.</li>    <li>It is U+000C FORM FEED.</li>    <li>It is U+000D CARRIAGE RETURN.</li>    <li>It is U+001C FILE SEPARATOR.</li>    <li>It is U+001D GROUP SEPARATOR.</li>    <li>It is U+001E RECORD SEPARATOR.</li>    <li>It is U+001F UNIT SEPARATOR.</li>   </ul>   </div> <div class="refsect1 parameters" id="refsect1-intlchar.iswhitespace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.iswhitespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a whitespace character according to ICU, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.iswhitespace-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2720">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\t"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">iswhitespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{00A0}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.iswhitespace-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isspace()} - Check if code point is a space character</span></li>    <li><span class="function">{@link IntlChar::isJavaSpaceChar()} - Check if code point is a space character according to Java</span></li>    <li><span class="function">{@link IntlChar::isUWhiteSpace()} - Check if code point has the White_Space Unicode property</span></li>   </ul>   </div></div>
    *
     * Check if code point is a whitespace character according to ICU
     * @link https://php.net/manual/zh/intlchar.iswhitespace.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a whitespace character according to ICU, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isWhitespace(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.isxdigit" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::isxdigit</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::isxdigit</span> — <span class="dc-title">Check if code point is a hexadecimal digit</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.isxdigit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::isxdigit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Determines whether the specified code point is a hexadecimal digit.  </p>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for characters with general category "Nd" (decimal digit numbers) as   well as Latin letters a-f and A-F in both ASCII and Fullwidth ASCII.   (That is, for letters with code points 0041..0046, 0061..0066, FF21..FF26, FF41..FF46.)  </p>  <p class="para">   This is equivalent to <span class="literal">IntlChar::digit($codepoint, 16) &gt;= 0</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.isxdigit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.isxdigit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if   <span class="parameter" style="color:#3A95FF">codepoint</span> is a hexadecimal character, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if not. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.isxdigit-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2721">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 notes" id="refsect1-intlchar.isxdigit-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    In order to narrow the definition of hexadecimal digits to only ASCII characters use:   </p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$isASCIIHexadecimal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">) &lt;= </span><span style="color: #9876AA">0x7F </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">isxdigit</span><span style="color: #007700">(</span><span style="color: #9876AA">$codepoint</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-intlchar.isxdigit-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::isdigit()} - Check if code point is a digit character</span></li>    <li><span class="function">{@link ctype_xdigit()} - 检测字符是否只包含十六进制字符</span></li>   </ul>   </div></div>
    *
     * Check if code point is a hexadecimal digit
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return bool|null Returns TRUE if codepoint is a hexadecimal character, FALSE if not, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function isxdigit(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): ?bool {}

/**
* <div id="intlchar.ord" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::ord</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::ord</span> — <span class="dc-title">Return Unicode code point value of character</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.ord-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::ord</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$character</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Returns the Unicode code point value of the given character.  </p>  <p class="para">   This function complements <span class="function">{@link IntlChar::chr()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.ord-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">character</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.ord-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the Unicode code point value as an integer.  </p> </div> <div class="refsect1 examples" id="refsect1-intlchar.ord-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2722">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">" "</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{2603}"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">int(65)<br>int(32)<br>int(9731)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.ord-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::chr()} - Return Unicode character by code point value</span></li>    <li><span class="function">{@link mb_ord()} - 获取字符的 Unicode 码位值</span></li>    <li><span class="function">{@link ord()} - 转换字符串第一个字节为 0-255 之间的值</span></li>   </ul>   </div></div>
    *
     * Return Unicode code point value of character
     * @link https://php.net/manual/zh/intlchar.ord.php
     * @param int|string $character <p>A Unicode character.</p>
     * @return int|null Returns the Unicode code point value as an integer, NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function ord(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $character): ?int {}

/**
* <div id="intlchar.tolower" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::tolower</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::tolower</span> — <span class="dc-title">Make Unicode character lowercase</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.tolower-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::tolower</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   The given character is mapped to its lowercase equivalent.   If the character has no lowercase equivalent, the original character itself is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.tolower-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.tolower-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the Simple_Lowercase_Mapping of the code point, if any;   otherwise the code point itself. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <p class="para">返回类型是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，如果代码点作为 UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 传递，则会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-intlchar.tolower-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2723">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">tolower</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(1) "a"<br>string(1) "a"<br>string(2) "Ï"<br>string(2) "Ï"<br>string(1) "1"<br>int(97)<br>int(97)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.tolower-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>    <li><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>    <li><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>   </ul>   </div></div>
    *
     * Make Unicode character lowercase
     * @link https://php.net/manual/zh/intlchar.tolower.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|string|null Returns the Simple_Lowercase_Mapping of the code point, if any; otherwise the code point itself.
     * The return type will be integer unless the code point was passed as a UTF-8 string, in which case a string will be returned.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function tolower(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|int|null {}

/**
* <div id="intlchar.totitle" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::totitle</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::totitle</span> — <span class="dc-title">Make Unicode character titlecase</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.totitle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::totitle</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   The given character is mapped to its titlecase equivalent.   If the character has no titlecase equivalent, the original character itself is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.totitle-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.totitle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the Simple_Titlecase_Mapping of the code point, if any;   otherwise the code point itself. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p>  <p class="para">返回类型是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，如果代码点作为 UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 传递，则会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-intlchar.totitle-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2724">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Ǆ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ǆ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #DD0000">"ᾳ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">totitle</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(1) "Ç"<br>string(1) "Ç"<br>string(2) "Î¦"<br>string(2) "Ï"<br>string(1) "1"<br>string(1) "á¾¼"<br>int(65)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.totitle-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>    <li><span class="function">{@link IntlChar::toupper()} - Make Unicode character uppercase</span></li>    <li><span class="function">{@link IntlChar::istitle()} - Check if code point is a titlecase letter</span></li>    <li><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>   </ul>   </div></div>
    *
     * Make Unicode character titlecase
     * @link https://php.net/manual/zh/intlchar.totitle.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|string|null  Returns the Simple_Titlecase_Mapping of the code point, if any; otherwise the code point itself.
     * The return type will be integer unless the code point was passed as a UTF-8 string, in which case a string will be returned.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function totitle(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|int|null {}

/**
* <div id="intlchar.toupper" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlChar::toupper</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlChar::toupper</span> — <span class="dc-title">Make Unicode character uppercase</span></p> </div> <div class="refsect1 description" id="refsect1-intlchar.toupper-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlChar::toupper</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   The given character is mapped to its uppercase equivalent.   If the character has no uppercase equivalent, the character itself is returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlchar.toupper-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <p class="para">The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> codepoint value (e.g. <span class="literal">0x2603</span> for <em>U+2603 SNOWMAN</em>), or the character encoded as a UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (e.g. <span class="literal">"\u{2603}"</span>)</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlchar.toupper-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the Simple_Uppercase_Mapping of the code point, if any;   otherwise the code point itself.  </p>  <p class="para">返回类型是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，如果代码点作为 UTF-8 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 传递，则会返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-intlchar.toupper-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2725">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"Φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"φ"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlChar</span><span style="color: #007700">::</span><span style="color: #9876AA">toupper</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">string(1) "A"<br>string(1) "A"<br>string(2) "Î¦"<br>string(2) "Î¦"<br>string(1) "1"<br>int(65)<br>int(65)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intlchar.toupper-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlChar::tolower()} - Make Unicode character lowercase</span></li>    <li><span class="function">{@link IntlChar::totitle()} - Make Unicode character titlecase</span></li>    <li><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>   </ul>   </div></div>
    *
     * Make Unicode character uppercase
     * @link https://php.net/manual/zh/intlchar.toupper.php
     * @param int|string $codepoint The integer codepoint value (e.g. 0x2603 for U+2603 SNOWMAN), or the character encoded as a UTF-8 string (e.g. "\u{2603}")
     * @return int|string|null Returns the Simple_Uppercase_Mapping of the code point, if any; otherwise the code point itself.
     * The return type will be integer unless the code point was passed as a UTF-8 string, in which case a string will be returned.
     * Or NULL if <em>codepoint</em> is out of bound.
     * @since 7.0
     
    #[TentativeType]
*/
    public static function toupper(#[LanguageLevelTypeAware(['8.0' => 'int|string'], default: '')] $codepoint): string|int|null {}
}
