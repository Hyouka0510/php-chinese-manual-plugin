<?php

// Start of intl v.1.1.0

use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\ExpectedValues as EV;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware as LanguageAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable as ElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

/**
 * <div id="class.collator" class="reference"> <h1 class="title">The Collator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="collator.intro">   <h2 class="title">简介</h2>   <p class="para">    Provides string comparison capability with support for appropriate    locale-sensitive sort orderings.   </p>  </div>    <div class="section" id="collator.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Collator</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.default-value"><var class="varname">DEFAULT_VALUE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.primary"><var class="varname">PRIMARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.secondary"><var class="varname">SECONDARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.tertiary"><var class="varname">TERTIARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.default-strength"><var class="varname">DEFAULT_STRENGTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.quaternary"><var class="varname">QUATERNARY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.identical"><var class="varname">IDENTICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.off"><var class="varname">OFF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.on"><var class="varname">ON</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.shifted"><var class="varname">SHIFTED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.non-ignorable"><var class="varname">NON_IGNORABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.lower-first"><var class="varname">LOWER_FIRST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.upper-first"><var class="varname">UPPER_FIRST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.french-collation"><var class="varname">FRENCH_COLLATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.alternate-handling"><var class="varname">ALTERNATE_HANDLING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.case-first"><var class="varname">CASE_FIRST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.case-level"><var class="varname">CASE_LEVEL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.normalization-mode"><var class="varname">NORMALIZATION_MODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.strength"><var class="varname">STRENGTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.hiragana-quaternary-mode"><var class="varname">HIRAGANA_QUATERNARY_MODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.numeric-collation"><var class="varname">NUMERIC_COLLATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.sort-regular"><var class="varname">SORT_REGULAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.sort-string"><var class="varname">SORT_STRING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.collator.php#collator.constants.sort-numeric"><var class="varname">SORT_NUMERIC</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.asort.php" class="methodname" style="color:#CC7832">asort</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.compare.php" class="methodname" style="color:#CC7832">compare</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.create.php" class="methodname" style="color:#CC7832">create</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.getattribute.php" class="methodname" style="color:#CC7832">getAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.getsortkey.php" class="methodname" style="color:#CC7832">getSortKey</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.getstrength.php" class="methodname" style="color:#CC7832">getStrength</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.setattribute.php" class="methodname" style="color:#CC7832">setAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.setstrength.php" class="methodname" style="color:#CC7832">setStrength</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$strength</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.sort.php" class="methodname" style="color:#CC7832">sort</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/collator.sortwithsortkeys.php" class="methodname" style="color:#CC7832">sortWithSortKeys</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>     </div>    <div class="section" id="intl.collator-constants"> <h2 class="title">预定义常量</h2> <p class="para">  </p><dl>       <dt id="collator.constants.french-collation">     <strong><span>{@link Collator::FRENCH_COLLATION}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      Sort strings with different accents from the back of the string. This      attribute is automatically set to      <em>On</em>      for the French locales and a few others. Users normally would not need      to explicitly set this attribute. There is a string comparison      performance cost when it is set <em>On</em>,      but sort key length is unaffected. Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::ON}</span></strong></li>       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>          <p class="para">      </p><div class="example" id="example-2449">       <p><strong>示例 #1 FRENCH_COLLATION rules</strong></p>       <div class="example-contents"><p>        </p><ul class="simplelist">         <li>F=OFF cote &lt; coté &lt; côte &lt; côté </li>         <li>F=ON cote &lt; côte &lt; coté &lt; côté</li>        </ul>       </div>      </div>         </dd>          <dt id="collator.constants.alternate-handling">     <strong><span>{@link Collator::ALTERNATE_HANDLING}</span></strong>    </dt>    <dd>     <p class="para">      The Alternate attribute is used to control the handling of the so called      variable characters in the UCA: whitespace, punctuation and symbols. If      Alternate is set to <em>NonIgnorable</em>      (N), then differences among these characters are of the same importance      as differences among letters. If Alternate is set to      <em>Shifted</em>      (S), then these characters are of only minor importance. The      <em>Shifted</em> value is often used in combination with      <em>Strength</em>      set to Quaternary. In such a case, whitespace, punctuation, and symbols      are considered when comparing strings, but only if all other aspects of      the strings (base letters, accents, and case) are identical. If      Alternate is not set to Shifted, then there is no difference between a      Strength of 3 and a Strength of 4. For more information and examples,      see Variable_Weighting in the      <a href="https://www.unicode.org/reports/tr10/" class="link external">»&nbsp;UCA</a>.      The reason the Alternate values are not simply      <em>On</em> and <em>Off</em>      is that additional Alternate values may be added in the future. The UCA      option Blanked is expressed with Strength set to 3, and Alternate set to      Shifted. The default for most locales is NonIgnorable. If Shifted is      selected, it may be slower if there are many strings that are the same      except for punctuation; sort key length will not be affected unless the      strength level is also increased.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::NON_IGNORABLE}</span></strong>(default)</li>       <li><strong><span>{@link Collator::SHIFTED}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>          <p class="para">      </p><div class="example" id="example-2450">       <p><strong>示例 #2 ALTERNATE_HANDLING rules</strong></p>       <div class="example-contents"><p>        </p><ul class="simplelist">         <li>         S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA         </li>          <li>         S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA         </li>          <li>         S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA         </li>        </ul>       </div>      </div>         </dd>          <dt id="collator.constants.case-first">     <strong><span>{@link Collator::CASE_FIRST}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      The Case_First attribute is used to control whether uppercase letters      come before lowercase letters or vice versa, in the absence of other      differences in the strings. The possible values are      <em>Uppercase_First</em>      (U) and <em>Lowercase_First</em>      (L), plus the standard <em>Default</em>      and <em>Off</em>.      There is almost no difference between the Off and Lowercase_First      options in terms of results, so typically users will not use      Lowercase_First: only Off or Uppercase_First. (People interested in the      detailed differences between X and L should consult the <span class="literal">Collation      Customization</span>). Specifying either L or U won't affect string comparison      performance, but will affect the sort key length.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::LOWER_FIRST}</span></strong></li>       <li><strong><span>{@link Collator::UPPER_FIRST}</span></strong></li>       <li><strong><span>Collator:DEFAULT</span></strong></li>      </ul>          <p class="para">      </p><div class="example" id="example-2451">       <p><strong>示例 #3 CASE_FIRST rules</strong></p>       <div class="example-contents"><p>        </p><ul class="simplelist">         <li>C=X or C=L "china" &lt; "China" &lt; "denmark" &lt; "Denmark"</li>          <li>C=U "China" &lt; "china" &lt; "Denmark" &lt; "denmark"</li>        </ul>       </div>      </div>         </dd>          <dt id="collator.constants.case-level">     <strong><span>{@link Collator::CASE_LEVEL}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      The Case_Level attribute is used when ignoring accents but not case. In      such a situation, set Strength to be <em>Primary</em>,      and Case_Level to be <em>On</em>.      In most locales, this setting is Off by default. There is a small      string comparison performance and sort key impact if this attribute is      set to be <em>On</em>.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::ON}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>          <p class="para">      </p><div class="example" id="example-2452">       <p><strong>示例 #4 CASE_LEVEL rules</strong></p>       <div class="example-contents"><p>        </p><ul class="simplelist">         <li>S=1, E=X role = Role = rôle</li>          <li>S=1, E=O role = rôle &lt; Role</li>        </ul>       </div>      </div>         </dd>          <dt id="collator.constants.normalization-mode">     <strong><span>{@link Collator::NORMALIZATION_MODE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      The Normalization setting determines whether text is thoroughly      normalized or not in comparison. Even if the setting is off (which is      the default for many locales), text as represented in common usage will      compare correctly (for details, see UTN #5). Only if the accent marks      are in noncanonical order will there be a problem. If the setting is      <em>On</em>,      then the best results are guaranteed for all possible text input.      There is a medium string comparison performance cost if this attribute      is <em>On</em>,      depending on the frequency of sequences that require normalization.      There is no significant effect on sort key length. If the input text is      known to be in NFD or NFKD normalization forms, there is no need to      enable this Normalization option.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::ON}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>         </dd>          <dt id="collator.constants.strength">     <strong><span>{@link Collator::STRENGTH}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      The ICU Collation Service supports many levels of comparison (named      "Levels", but also known as "Strengths"). Having these categories      enables ICU to sort strings precisely according to local conventions.      However, by allowing the levels to be selectively employed, searching      for a string in text can be performed with various matching conditions.      For more detailed information, see      <span class="function"><a href="https://php.net/manual/zh/collator.setstrength.php" class="function">collator_set_strength()</a></span> chapter.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::PRIMARY}</span></strong></li>       <li><strong><span>{@link Collator::SECONDARY}</span></strong></li>       <li><strong><span>{@link Collator::TERTIARY}</span></strong>(default)</li>       <li><strong><span>{@link Collator::QUATERNARY}</span></strong></li>       <li><strong><span>{@link Collator::IDENTICAL}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>         </dd>          <dt id="collator.constants.hiragana-quaternary-mode">     <strong><span>{@link Collator::HIRAGANA_QUATERNARY_MODE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      Compatibility with JIS x 4061 requires the introduction of an additional      level to distinguish Hiragana and Katakana characters. If compatibility      with that standard is required, then this attribute should be set      <em>On</em>,      and the strength set to Quaternary. This will affect sort key length      and string comparison string comparison performance.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::ON}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>         </dd>          <dt id="collator.constants.numeric-collation">     <strong><span>{@link Collator::NUMERIC_COLLATION}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para">      When turned on, this attribute generates a collation key for the numeric      value of substrings of digits. This is a way to get '100' to sort AFTER      '2'.     </p>     <p class="para">      Possible values are:      </p><ul class="simplelist">       <li><strong><span>{@link Collator::OFF}</span></strong>(default)</li>       <li><strong><span>{@link Collator::ON}</span></strong></li>       <li><strong><span>{@link Collator::DEFAULT_VALUE}</span></strong></li>      </ul>         </dd>          <dt id="collator.constants.default-value">     <strong><span>{@link Collator::DEFAULT_VALUE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.primary">     <strong><span>{@link Collator::PRIMARY}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.secondary">     <strong><span>{@link Collator::SECONDARY}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.tertiary">     <strong><span>{@link Collator::TERTIARY}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.default-strength">     <strong><span>{@link Collator::DEFAULT_STRENGTH}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.quaternary">     <strong><span>{@link Collator::QUATERNARY}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.identical">     <strong><span>{@link Collator::IDENTICAL}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.off">     <strong><span>{@link Collator::OFF}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.on">     <strong><span>{@link Collator::ON}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.shifted">     <strong><span>{@link Collator::SHIFTED}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.non-ignorable">     <strong><span>{@link Collator::NON_IGNORABLE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.lower-first">     <strong><span>{@link Collator::LOWER_FIRST}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.upper-first">     <strong><span>{@link Collator::UPPER_FIRST}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">     </span>    </dd>          <dt id="collator.constants.sort-regular">     <strong><span>{@link Collator::SORT_REGULAR}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="collator.constants.sort-string">     <strong><span>{@link Collator::SORT_STRING}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="collator.constants.sort-numeric">     <strong><span>{@link Collator::SORT_NUMERIC}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>     </dl> </div>  <div class="section" id="collator.changelog">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Collator::asort} — Sort array maintaining index association</li><li>{@link Collator::compare} — Compare two Unicode strings</li><li>{@link Collator::__construct} — Create a collator</li><li>{@link Collator::create} — Create a collator</li><li>{@link Collator::getAttribute} — Get collation attribute value</li><li>{@link Collator::getErrorCode} — Get collator's last error code</li><li>{@link Collator::getErrorMessage} — Get text for collator's last error code</li><li>{@link Collator::getLocale} — Get the locale name of the collator</li><li>{@link Collator::getSortKey} — Get sorting key for a string</li><li>{@link Collator::getStrength} — Get current collation strength</li><li>{@link Collator::setAttribute} — Set collation attribute</li><li>{@link Collator::setStrength} — Set collation strength</li><li>{@link Collator::sort} — Sort array using specified collator</li><li>{@link Collator::sortWithSortKeys} — Sort array using specified collator and sort keys</li></ul></div>
 */
class Collator
{
    public const DEFAULT_VALUE = -1;
    public const PRIMARY = 0;
    public const SECONDARY = 1;
    public const TERTIARY = 2;
    public const DEFAULT_STRENGTH = 2;
    public const QUATERNARY = 3;
    public const IDENTICAL = 15;
    public const OFF = 16;
    public const ON = 17;
    public const SHIFTED = 20;
    public const NON_IGNORABLE = 21;
    public const LOWER_FIRST = 24;
    public const UPPER_FIRST = 25;

    /**
     * <p>
     * Sort strings with different accents from the back of the string. This
     * attribute is automatically set to
     * On
     * for the French locales and a few others. Users normally would not need
     * to explicitly set this attribute. There is a string comparison
     * performance cost when it is set On,
     * but sort key length is unaffected. Possible values are:
     * <b>Collator::ON</b>
     * <b>Collator::OFF</b>(default)
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * <p>
     * FRENCH_COLLATION rules
     * <p>
     * F=OFF cote &lt; coté &lt; côte &lt; côté
     * F=ON cote &lt; côte &lt; coté &lt; côté
     * </p>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const FRENCH_COLLATION = 0;

    /**
     * <p>
     * The Alternate attribute is used to control the handling of the so called
     * variable characters in the UCA: whitespace, punctuation and symbols. If
     * Alternate is set to NonIgnorable
     * (N), then differences among these characters are of the same importance
     * as differences among letters. If Alternate is set to
     * Shifted
     * (S), then these characters are of only minor importance. The
     * Shifted value is often used in combination with
     * Strength
     * set to Quaternary. In such a case, whitespace, punctuation, and symbols
     * are considered when comparing strings, but only if all other aspects of
     * the strings (base letters, accents, and case) are identical. If
     * Alternate is not set to Shifted, then there is no difference between a
     * Strength of 3 and a Strength of 4. For more information and examples,
     * see Variable_Weighting in the
     * UCA.
     * The reason the Alternate values are not simply
     * On and Off
     * is that additional Alternate values may be added in the future. The UCA
     * option Blanked is expressed with Strength set to 3, and Alternate set to
     * Shifted. The default for most locales is NonIgnorable. If Shifted is
     * selected, it may be slower if there are many strings that are the same
     * except for punctuation; sort key length will not be affected unless the
     * strength level is also increased.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::NON_IGNORABLE</b>(default)
     * <b>Collator::SHIFTED</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * <p>
     * ALTERNATE_HANDLING rules
     * <p>
     * S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA
     * S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA
     * S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA
     * </p>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const ALTERNATE_HANDLING = 1;

    /**
     * <p>
     * The Case_First attribute is used to control whether uppercase letters
     * come before lowercase letters or vice versa, in the absence of other
     * differences in the strings. The possible values are
     * Uppercase_First
     * (U) and Lowercase_First
     * (L), plus the standard Default
     * and Off.
     * There is almost no difference between the Off and Lowercase_First
     * options in terms of results, so typically users will not use
     * Lowercase_First: only Off or Uppercase_First. (People interested in the
     * detailed differences between X and L should consult the Collation
     * Customization). Specifying either L or U won't affect string comparison
     * performance, but will affect the sort key length.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::OFF</b>(default)
     * <b>Collator::LOWER_FIRST</b>
     * <b>Collator::UPPER_FIRST</b>
     * <b>Collator:DEFAULT</b>
     * </p>
     * <p>
     * CASE_FIRST rules
     * <p>
     * C=X or C=L "china" &lt; "China" &lt; "denmark" &lt; "Denmark"
     * C=U "China" &lt; "china" &lt; "Denmark" &lt; "denmark"
     * </p>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const CASE_FIRST = 2;

    /**
     * <p>
     * The Case_Level attribute is used when ignoring accents but not case. In
     * such a situation, set Strength to be Primary,
     * and Case_Level to be On.
     * In most locales, this setting is Off by default. There is a small
     * string comparison performance and sort key impact if this attribute is
     * set to be On.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::OFF</b>(default)
     * <b>Collator::ON</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * <p>
     * CASE_LEVEL rules
     * <p>
     * S=1, E=X role = Role = rôle
     * S=1, E=O role = rôle &lt; Role
     * </p>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const CASE_LEVEL = 3;

    /**
     * <p>
     * The Normalization setting determines whether text is thoroughly
     * normalized or not in comparison. Even if the setting is off (which is
     * the default for many locales), text as represented in common usage will
     * compare correctly (for details, see UTN #5). Only if the accent marks
     * are in noncanonical order will there be a problem. If the setting is
     * On,
     * then the best results are guaranteed for all possible text input.
     * There is a medium string comparison performance cost if this attribute
     * is On,
     * depending on the frequency of sequences that require normalization.
     * There is no significant effect on sort key length. If the input text is
     * known to be in NFD or NFKD normalization forms, there is no need to
     * enable this Normalization option.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::OFF</b>(default)
     * <b>Collator::ON</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const NORMALIZATION_MODE = 4;

    /**
     * <p>
     * The ICU Collation Service supports many levels of comparison (named
     * "Levels", but also known as "Strengths"). Having these categories
     * enables ICU to sort strings precisely according to local conventions.
     * However, by allowing the levels to be selectively employed, searching
     * for a string in text can be performed with various matching conditions.
     * For more detailed information, see
     * <b>collator_set_strength</b> chapter.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::PRIMARY</b>
     * <b>Collator::SECONDARY</b>
     * <b>Collator::TERTIARY</b>(default)
     * <b>Collator::QUATERNARY</b>
     * <b>Collator::IDENTICAL</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const STRENGTH = 5;

    /**
     * <p>
     * Compatibility with JIS x 4061 requires the introduction of an additional
     * level to distinguish Hiragana and Katakana characters. If compatibility
     * with that standard is required, then this attribute should be set
     * On,
     * and the strength set to Quaternary. This will affect sort key length
     * and string comparison string comparison performance.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::OFF</b>(default)
     * <b>Collator::ON</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const HIRAGANA_QUATERNARY_MODE = 6;

    /**
     * <p>
     * When turned on, this attribute generates a collation key for the numeric
     * value of substrings of digits. This is a way to get '100' to sort AFTER
     * '2'.
     * </p>
     * <p>
     * Possible values are:
     * <b>Collator::OFF</b>(default)
     * <b>Collator::ON</b>
     * <b>Collator::DEFAULT_VALUE</b>
     * </p>
     * @link https://php.net/manual/en/class.collator.php#intl.collator-constants
     */
    public const NUMERIC_COLLATION = 7;
    public const SORT_REGULAR = 0;
    public const SORT_STRING = 1;
    public const SORT_NUMERIC = 2;

    /**
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Create a collator
     * @link https://php.net/manual/en/collator.construct.php
     * @param string $locale
     */
    #[Pure]
    public function __construct(#[LanguageAware(['8.0' => 'string'], default: '')] $locale) {}

    /**
 * <div id="collator.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::create</h1>  <h1 class="refname">collator_create</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::create</span> -- <span class="refname">collator_create</span> — <span class="dc-title">Create a collator</span></p> </div> <div class="refsect1 description" id="refsect1-collator.create-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Collator::create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span></span></div>  <p class="para rdfs-comment">   The strings will be compared using the options already specified.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale containing the required collation rules. Special values for       locales can be passed in - if an empty <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> is passed for the locale, the       default locale collation rules will be used. If       <span class="literal">"root"</span> is passed, <a href="https://www.unicode.org/reports/tr10/" class="link external">»&nbsp;UCA</a> rules will be used.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return new instance of <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>   on error.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.create-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2457">    <p><strong>示例 #1 <span class="function"><strong>collator_create()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br><br>if( !isset( </span><span style="color: #9876AA">\$coll </span><span style="color: #007700">) ) {<br>    </span><span style="color: #9876AA">printf</span><span style="color: #007700">( </span><span style="color: #DD0000">"Collator creation failed: %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">() );<br>    exit( </span><span style="color: #9876AA">1 </span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link Collator::__construct()} - Create a collator</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Create a collator
     * @link https://php.net/manual/zh/collator.create.php
     * @param string $locale <p>
     * The locale containing the required collation rules. Special values for
     * locales can be passed in - if null is passed for the locale, the
     * default locale collation rules will be used. If empty string ("") or
     * "root" are passed, UCA rules will be used.
     * </p>
     * @return Collator|null Return new instance of <b>Collator</b> object, or <b>NULL</b>
     * on error.
     */
    #[TentativeType]
    public static function create(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?Collator {}

    /**
 * <div id="collator.compare" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::compare</h1>  <h1 class="refname">collator_compare</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::compare</span> -- <span class="refname">collator_compare</span> — <span class="dc-title">Compare two Unicode strings</span></p> </div> <div class="refsect1 description" id="refsect1-collator.compare-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::compare</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_compare</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Compare two Unicode strings according to collation rules.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.compare-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>     <dd>      <p class="para">       The first string to compare.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>     <dd>      <p class="para">       The second string to compare.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.compare-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">Return comparison result:</p>  <p class="para">   </p><ul class="itemizedlist">    <li class="listitem">     <p class="para">      1 if <span class="parameter" style="color:#3A95FF">string1</span> is <em>greater</em> than       <span class="parameter" style="color:#3A95FF">string2</span> ;     </p>    </li>    <li class="listitem">     <p class="para">      0 if <span class="parameter" style="color:#3A95FF">string1</span> is <em>equal</em> to       <span class="parameter" style="color:#3A95FF">string2</span>;     </p>    </li>    <li class="listitem">     <p class="para">      -1 if <span class="parameter" style="color:#3A95FF">string1</span> is <em>less</em> than       <span class="parameter" style="color:#3A95FF">string2</span> .     </p>    </li>   </ul>   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.    <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，但也可能返回等同于 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的非布尔值。请阅读 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <div class="refsect1 examples" id="refsect1-collator.compare-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2454">    <p><strong>示例 #1 <span class="function"><strong>collator_compare()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$s1 </span><span style="color: #007700">= </span><span style="color: #DD0000">'Hello'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$s2 </span><span style="color: #007700">= </span><span style="color: #DD0000">'hello'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res  </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_compare</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$s1</span><span style="color: #007700">, </span><span style="color: #9876AA">\$s2 </span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">\$res </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">collator_get_error_message</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll </span><span style="color: #007700">);<br>} else if( </span><span style="color: #9876AA">\$res </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">0 </span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"s1 is greater than s2\n"</span><span style="color: #007700">;<br>} else if( </span><span style="color: #9876AA">\$res </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">0 </span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"s1 is less than s2\n"</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"s1 is equal to s2\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>     s1 is greater than s2<br>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2455">    <p><strong>示例 #2 Comparing strings without diacritics or case-sensitivity</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$c </span><span style="color: #007700">= new </span><span style="color: #9876AA">Collator</span><span style="color: #007700">( </span><span style="color: #DD0000">'en' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrength</span><span style="color: #007700">( </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">PRIMARY </span><span style="color: #007700">);<br><br>if ( </span><span style="color: #9876AA">\$c</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compare</span><span style="color: #007700">( </span><span style="color: #DD0000">'Séan'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Sean' </span><span style="color: #007700">) == </span><span style="color: #9876AA">0 </span><span style="color: #007700">)<br>{<br>    echo </span><span style="color: #DD0000">"The same\n"</span><span style="color: #007700">;<br>}</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>     The same<br>    </div>    <div class="example-contents"><p>     This example instructs the collator to compare with only taking the base     characters into account. The documentation for     <span class="function"><strong>Collator-&gt;setStrength()</strong></span> explains the different     strengths.    </p></div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.compare-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/collator.sort.php" class="function" rel="rdfs-seeAlso">collator_sort()</a> - Sort array using specified collator</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Compare two Unicode strings
     * @link https://php.net/manual/zh/collator.compare.php
     * @param string $string1 <p>
     * The first string to compare.
     * </p>
     * @param string $string2 <p>
     * The second string to compare.
     * </p>
     * @return int|false Return comparison result:</p>
     * <p>
     * <p>
     * 1 if <i>str1</i> is greater than
     * <i>str2</i> ;
     * </p>
     * <p>
     * 0 if <i>str1</i> is equal to
     * <i>str2</i>;
     * </p>
     * <p>
     * -1 if <i>str1</i> is less than
     * <i>str2</i> .
     * </p>
     * On error
     * boolean
     * <b>FALSE</b>
     * is returned.
     */
    #[Pure]
    #[TentativeType]
    public function compare(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string1,
        #[LanguageAware(['8.0' => 'string'], default: '')] $string2
    ): int|false {}

    /**
 * <div id="collator.sort" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::sort</h1>  <h1 class="refname">collator_sort</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::sort</span> -- <span class="refname">collator_sort</span> — <span class="dc-title">Sort array using specified collator</span></p> </div> <div class="refsect1 description" id="refsect1-collator.sort-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::sort</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_sort</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">This function sorts an array according to current locale rules.</p>  <p class="para">   Equivalent to standard PHP   <span class="function">{@link sort()}</span> .  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.sort-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">array</span></dt>     <dd>      <p class="para">       Array of strings to sort.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Optional sorting type, one of the following:      </p>      <p class="para">       </p><ul class="itemizedlist">        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_REGULAR}</span></strong>          - compare items normally (don't change types)         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_NUMERIC}</span></strong>          - compare items numerically         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_STRING}</span></strong>          - compare items as strings         </p>        </li>       </ul>       Default sorting type is <strong><span>{@link Collator::SORT_REGULAR}</span></strong>.       It is also used if an invalid <span class="parameter" style="color:#3A95FF">flags</span> value has been specified.           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.sort-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-collator.sort-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2467">    <p><strong>示例 #1 <span class="function"><strong>collator_sort()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$arr  </span><span style="color: #007700">= array( </span><span style="color: #DD0000">'at'</span><span style="color: #007700">, </span><span style="color: #DD0000">'às'</span><span style="color: #007700">, </span><span style="color: #DD0000">'as' </span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">collator_sort</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'at',<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'Ã&nbsp;s',<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'as',<br>)array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'as',<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'Ã&nbsp;s',<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'at',<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.sort-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.asort.php" class="function" rel="rdfs-seeAlso">collator_asort()</a> - Sort array maintaining index association</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.sortwithsortkeys.php" class="function" rel="rdfs-seeAlso">collator_sort_with_sort_keys()</a> - Sort array using specified collator and sort keys</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Sort array using specified collator
     * @link https://php.net/manual/zh/collator.sort.php
     * @param string[] &$array <p>
     * Array of strings to sort.
     * </p>
     * @param int $flags [optional] <p>
     * Optional sorting type, one of the following:
     * </p>
     * <p>
     * <b>Collator::SORT_REGULAR</b>
     * - compare items normally (don't change types)
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function sort(
        array &$array,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Collator::SORT_REGULAR])] $flags = 0
    ): bool {}

    /**
 * <div id="collator.sortwithsortkeys" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::sortWithSortKeys</h1>  <h1 class="refname">collator_sort_with_sort_keys</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::sortWithSortKeys</span> -- <span class="refname">collator_sort_with_sort_keys</span> — <span class="dc-title">Sort array using specified collator and sort keys</span></p> </div> <div class="refsect1 description" id="refsect1-collator.sortwithsortkeys-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::sortWithSortKeys</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_sort_with_sort_keys</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Similar to <span class="function"><a href="https://php.net/manual/zh/collator.sort.php" class="function">collator_sort()</a></span>   but uses ICU sorting keys produced by ucol_getSortKey() to gain more speed   on large arrays.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.sortwithsortkeys-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">array</span></dt>     <dd>      <p class="para">Array of strings to sort</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.sortwithsortkeys-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-collator.sortwithsortkeys-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2468">    <p><strong>示例 #1 <span class="function"><strong>collator_sort_with_sort_keys()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr  </span><span style="color: #007700">= array( </span><span style="color: #DD0000">'Köpfe'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Kypper'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Kopfe' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'sv' </span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">collator_sort_with_sort_keys</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'Kopfe',<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'Kypper',<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'KÃ¶pfe',<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.sortwithsortkeys-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.sort.php" class="function" rel="rdfs-seeAlso">collator_sort()</a> - Sort array using specified collator</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.asort.php" class="function" rel="rdfs-seeAlso">collator_asort()</a> - Sort array maintaining index association</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Sort array using specified collator and sort keys
     * @link https://php.net/manual/zh/collator.sortwithsortkeys.php
     * @param string[] &$array <p>Array of strings to sort</p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function sortWithSortKeys(
        array &$array,
        #[ElementAvailable(from: '5.3', to: '5.6')] $flags = []
    ): bool {}

    /**
 * <div id="collator.asort" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::asort</h1>  <h1 class="refname">collator_asort</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::asort</span> -- <span class="refname">collator_asort</span> — <span class="dc-title">Sort array maintaining index association</span></p> </div> <div class="refsect1 description" id="refsect1-collator.asort-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::asort</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_asort</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = Collator::SORT_REGULAR</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function sorts an array such that array indices maintain their   correlation with the array elements they are associated with. This is used   mainly when sorting associative arrays where the actual element order is   significant. Array elements will have sort order according to current   locale rules.  </p>  <p class="para">   Equivalent to standard PHP   <span class="function">{@link asort()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.asort-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">array</span></dt>     <dd>      <p class="para">Array of strings to sort.</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Optional sorting type, one of the following:       </p><ul class="itemizedlist">        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_REGULAR}</span></strong>          - compare items normally (don't change types)         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_NUMERIC}</span></strong>          - compare items numerically         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SORT_STRING}</span></strong>          - compare items as strings         </p>        </li>       </ul>            <p class="para">       Default <span class="parameter" style="color:#3A95FF">flags</span> value is       <strong><span>{@link Collator::SORT_REGULAR}</span></strong>.       It is also used if an invalid <span class="parameter" style="color:#3A95FF">flags</span> value has been specified.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.asort-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-collator.asort-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2453">    <p><strong>示例 #1 <span class="function"><strong>collator_asort()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= array(<br>     </span><span style="color: #DD0000">'a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'100'</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">'b' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'50'</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">'c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'7'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">collator_asort</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">SORT_NUMERIC </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">collator_asort</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">SORT_STRING </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;'c'&nbsp;=&gt;&nbsp;'7',<br>&nbsp;&nbsp;'b'&nbsp;=&gt;&nbsp;'50',<br>&nbsp;&nbsp;'a'&nbsp;=&gt;&nbsp;'100',<br>)array&nbsp;(<br>&nbsp;&nbsp;'a'&nbsp;=&gt;&nbsp;'100',<br>&nbsp;&nbsp;'b'&nbsp;=&gt;&nbsp;'50',<br>&nbsp;&nbsp;'c'&nbsp;=&gt;&nbsp;'7',<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.asort-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.sort.php" class="function" rel="rdfs-seeAlso">collator_sort()</a> - Sort array using specified collator</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.sortwithsortkeys.php" class="function" rel="rdfs-seeAlso">collator_sort_with_sort_keys()</a> - Sort array using specified collator and sort keys</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Sort array maintaining index association
     * @link https://php.net/manual/zh/collator.asort.php
     * @param string[] &$array <p>Array of strings to sort.</p>
     * @param int $flags [optional] <p>
     * Optional sorting type, one of the following:
     * <b>Collator::SORT_REGULAR</b>
     * - compare items normally (don't change types)
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function asort(
        array &$array,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Collator::SORT_REGULAR])] $flags = 0
    ): bool {}

    /**
 * <div id="collator.getattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getAttribute</h1>  <h1 class="refname">collator_get_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::getAttribute</span> -- <span class="refname">collator_get_attribute</span> — <span class="dc-title">Get collation attribute value</span></p> </div> <div class="refsect1 description" id="refsect1-collator.getattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get a value of an integer collator attribute.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.getattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">       Attribute to get value for.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.getattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Attribute value, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.getattribute-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2458">    <p><strong>示例 #1 <span class="function"><strong>collator_get_attribute()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_CA' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$val </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_attribute</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">NUMERIC_COLLATION </span><span style="color: #007700">);<br>if( </span><span style="color: #9876AA">\$val </span><span style="color: #007700">=== </span><span style="color: #9876AA">false </span><span style="color: #007700">)<br>{<br>    </span><span style="color: #FF8000">// Handle error.<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.getattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.setattribute.php" class="function" rel="rdfs-seeAlso">collator_set_attribute()</a> - Set collation attribute</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.getstrength.php" class="function" rel="rdfs-seeAlso">collator_get_strength()</a> - Get current collation strength</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get collation attribute value
     * @link https://php.net/manual/zh/collator.getattribute.php
     * @param int $attribute <p>
     * Attribute to get value for.
     * </p>
     * @return int|false Attribute value, or boolean <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function getAttribute(#[LanguageAware(['8.0' => 'int'], default: '')] $attribute): int|false {}

    /**
 * <div id="collator.setattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::setAttribute</h1>  <h1 class="refname">collator_set_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::setAttribute</span> -- <span class="refname">collator_set_attribute</span> — <span class="dc-title">Set collation attribute</span></p> </div>  <div class="refsect1 description" id="refsect1-collator.setattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::setAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_set_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">     </p> </div> <div class="refsect1 parameters" id="refsect1-collator.setattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">Attribute.</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       Attribute value.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.setattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-collator.setattribute-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2465">    <p><strong>示例 #1 <span class="function"><strong>collator_set_attribute()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_CA' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$val  </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_attribute</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">NUMERIC_COLLATION </span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$val </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// Handle error.<br></span><span style="color: #007700">} elseif (</span><span style="color: #9876AA">\$val </span><span style="color: #007700">=== </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">ON</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// Do something useful.<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.setattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.getattribute.php" class="function" rel="rdfs-seeAlso">collator_get_attribute()</a> - Get collation attribute value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.setstrength.php" class="function" rel="rdfs-seeAlso">collator_set_strength()</a> - Set collation strength</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set collation attribute
     * @link https://php.net/manual/zh/collator.setattribute.php
     * @param int $attribute <p>Attribute.</p>
     * @param int $value <p>
     * Attribute value.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setAttribute(
        #[LanguageAware(['8.0' => 'int'], default: '')] $attribute,
        #[LanguageAware(['8.0' => 'int'], default: '')] $value
    ): bool {}

    /**
 * <div id="collator.getstrength" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getStrength</h1>  <h1 class="refname">collator_get_strength</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::getStrength</span> -- <span class="refname">collator_get_strength</span> — <span class="dc-title">Get current collation strength</span></p> </div> <div class="refsect1 description" id="refsect1-collator.getstrength-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getStrength</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_strength</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">     </p> </div> <div class="refsect1 parameters" id="refsect1-collator.getstrength-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.getstrength-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns current collation strength, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.getstrength-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2464">    <p><strong>示例 #1 <span class="function"><strong>collator_get_strength()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll     </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$strength </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_strength</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.getstrength-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.setstrength.php" class="function" rel="rdfs-seeAlso">collator_set_strength()</a> - Set collation strength</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.getattribute.php" class="function" rel="rdfs-seeAlso">collator_get_attribute()</a> - Get collation attribute value</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get current collation strength
     * @link https://php.net/manual/zh/collator.getstrength.php
     * @return int current collation strength, or boolean <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function getStrength(): int {}

    /**
 * <div id="collator.setstrength" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::setStrength</h1>  <h1 class="refname">collator_set_strength</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::setStrength</span> -- <span class="refname">collator_set_strength</span> — <span class="dc-title">Set collation strength</span></p> </div> <div class="refsect1 description" id="refsect1-collator.setstrength-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::setStrength</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$strength</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_set_strength</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$strength</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   The   <a href="https://icu.unicode.org/" class="link external">»&nbsp;ICU</a>   Collation Service supports many levels of comparison (named "Levels", but   also known as "Strengths"). Having these categories enables ICU to sort   strings precisely according to local conventions. However, by allowing the   levels to be selectively employed, searching for a string in text can be   performed with various matching conditions.  </p>  <p class="para">   </p><ol type="1">    <li class="listitem">     <p class="para">       <em>Primary Level</em>:      Typically, this is used to denote differences between base characters      (for example, "a" &lt; "b"). It is the strongest difference. For      example, dictionaries are divided into different sections by base      character. This is also called the <span class="literal">level 1</span> strength.     </p>    </li>    <li class="listitem">     <p class="para">       <em>Secondary Level</em>:      Accents in the characters are considered secondary differences (for      example, "as" &lt; "às" &lt; "at"). Other differences between letters      can also be considered secondary differences, depending on the language.      A secondary difference is ignored when there is a primary difference      anywhere in the strings. This is also called the <span class="literal">level 2</span> strength.      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        Note: In some languages (such as Danish), certain accented letters are        considered to be separate base characters. In most languages, however,        an accented letter only has a secondary difference from the unaccented        version of that letter.       </p>      </blockquote>         </li>    <li class="listitem">     <p class="para">       <em>Tertiary Level</em>:      Upper and lower case differences in characters are distinguished at      the tertiary level (for example, "ao" &lt; "Ao" &lt; "aò"). In addition,      a variant of a letter differs from the base form on the tertiary level      (such as "a" and "𝒶"). Another example is the difference between large      and small Kana. A tertiary difference is ignored when there is a primary      or secondary difference anywhere in the strings. This is also called the      <span class="literal">level 3</span> strength.     </p>    </li>    <li class="listitem">     <p class="para">       <em>Quaternary Level</em>:      When punctuation is ignored (see Ignoring Punctuations ) at levels 1-3,      an additional level can be used to distinguish words with and without      punctuation (for example, "ab" &lt; "a-b" &lt; "aB"). This difference is      ignored when there is a primary, secondary or tertiary difference. This      is also known as the <span class="literal">level 4</span> strength. The quaternary level should only      be used if ignoring punctuation is required or when processing Japanese      text (see Hiragana processing).     </p>    </li>    <li class="listitem">     <p class="para">       <em>Identical Level</em>:      When all other levels are equal, the identical level is used as a      tiebreaker. The Unicode code point values of the NFD form of each string      are compared at this level, just in case there is no difference at      levels 1-4. For example, Hebrew cantillation marks are only distinguished      at this level. This level should be used sparingly, as only code point      values differences between two strings is an extremely rare occurrence.      Using this level substantially decreases the performance for both      incremental comparison and sort key generation (as well as increasing      the sort key length). It is also known as <span class="literal">level 5</span> strength.     </p>    </li>   </ol>    <p class="para">   For example, people may choose to ignore accents or ignore accents and case   when searching for text. Almost all characters are distinguished by the   first three levels, and in most locales the default value is thus Tertiary.   However, if Alternate is set to be Shifted, then the Quaternary strength   can be used to break ties among whitespace, punctuation, and symbols that   would otherwise be ignored. If very fine distinctions among characters are   required, then the Identical strength can be used (for example, Identical   Strength distinguishes between the Mathematical Bold Small A and the   Mathematical Italic Small A.). However, using levels higher than Tertiary   the Identical strength result in significantly longer sort keys, and slower   string comparison performance for equal strings.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.setstrength-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">strength</span></dt>     <dd>      <p class="para">Strength to set.</p>      <p class="para">       Possible values are:       </p><ul class="itemizedlist">        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::PRIMARY}</span></strong>         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::SECONDARY}</span></strong>         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::TERTIARY}</span></strong>         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::QUATERNARY}</span></strong>         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::IDENTICAL}</span></strong>         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>{@link Collator::DEFAULT_STRENGTH}</span></strong>         </p>        </li>       </ul>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.setstrength-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-collator.setstrength-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2466">    <p><strong>示例 #1 <span class="function"><strong>collator_set_strength()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr  </span><span style="color: #007700">= array( </span><span style="color: #DD0000">'aò'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Ao'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ao' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sort array using default strength.<br></span><span style="color: #9876AA">collator_sort</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">); <br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sort array using primary strength.<br></span><span style="color: #9876AA">collator_set_strength</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">PRIMARY </span><span style="color: #007700">);<br></span><span style="color: #9876AA">collator_sort</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'ao',<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'Ao',<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'aÃ²',<br>)<br>array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'aÃ²',<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'Ao',<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'ao',<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.setstrength-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/class.collator.php#intl.collator-constants" class="link"><span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> constants</a></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.getstrength.php" class="function" rel="rdfs-seeAlso">collator_get_strength()</a> - Get current collation strength</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set collation strength
     * @link https://php.net/manual/zh/collator.setstrength.php
     * @param int $strength <p>Strength to set.</p>
     * <p>
     * Possible values are:
     * <b>Collator::PRIMARY</b>
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setStrength(#[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Collator::PRIMARY])] $strength) {}

    /**
 * <div id="collator.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getErrorCode</h1>  <h1 class="refname">collator_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::getErrorCode</span> -- <span class="refname">collator_get_error_code</span> — <span class="dc-title">Get collator's last error code</span></p> </div> <div class="refsect1 description" id="refsect1-collator.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">     </p> </div> <div class="refsect1 parameters" id="refsect1-collator.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Error code returned by the last Collator <span>API</span> function call,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.geterrorcode-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2459">    <p><strong>示例 #1 <span class="function"><strong>collator_get_error_code()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US' </span><span style="color: #007700">);<br>if( </span><span style="color: #9876AA">collator_get_attribute</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">FRENCH_COLLATION </span><span style="color: #007700">) === </span><span style="color: #9876AA">false </span><span style="color: #007700">)<br>        </span><span style="color: #9876AA">handle_error</span><span style="color: #007700">( </span><span style="color: #9876AA">collator_get_error_code</span><span style="color: #007700">() );<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/collator.geterrormessage.php" class="function" rel="rdfs-seeAlso">collator_get_error_message()</a> - Get text for collator's last error code</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get collator's last error code
     * @link https://php.net/manual/zh/collator.geterrorcode.php
     * @return int|false Error code returned by the last Collator API function call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int|false {}

    /**
 * <div id="collator.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getLocale</h1>  <h1 class="refname">collator_get_locale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::getLocale</span> -- <span class="refname">collator_get_locale</span> — <span class="dc-title">Get the locale name of the collator</span></p> </div> <div class="refsect1 description" id="refsect1-collator.getlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get collector locale name.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.getlocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       You can choose between valid and actual locale (       <strong><span>{@link Locale::VALID_LOCALE}</span></strong> and        <strong><span>{@link Locale::ACTUAL_LOCALE}</span></strong>,       respectively).      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Real locale name from which the collation data comes. If the collator was   instantiated from rules or an error occurred, returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.getlocale-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2461">    <p><strong>示例 #1 <span class="function"><strong>collator_get_locale()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll    </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_US_California' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res_val </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_locale</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">VALID_LOCALE </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res_act </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_locale</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">ACTUAL_LOCALE </span><span style="color: #007700">);<br></span><span style="color: #9876AA">printf</span><span style="color: #007700">( </span><span style="color: #DD0000">"Valid locale name: %s\nActual locale name: %s\n"</span><span style="color: #007700">,<br>         </span><span style="color: #9876AA">\$res_val</span><span style="color: #007700">, </span><span style="color: #9876AA">\$res_act </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Requested&nbsp;locale&nbsp;name:&nbsp;en_US_California<br>Valid&nbsp;locale&nbsp;name:&nbsp;en_US<br>Actual&nbsp;locale&nbsp;name:&nbsp;en</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.getlocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/collator.create.php" class="function" rel="rdfs-seeAlso">collator_create()</a> - Create a collator</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the locale name of the collator
     * @link https://php.net/manual/zh/collator.getlocale.php
     * @param int $type <p>
     * You can choose between valid and actual locale (
     * <b>Locale::VALID_LOCALE</b> and
     * <b>Locale::ACTUAL_LOCALE</b>,
     * respectively).
     * </p>
     * @return string|false Real locale name from which the collation data comes. If the collator was
     * instantiated from rules or an error occurred, returns
     * boolean <b>FALSE</b>.
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Locale::VALID_LOCALE, Locale::ACTUAL_LOCALE])] $type
    ): string|false {}

    /**
 * <div id="collator.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getErrorMessage</h1>  <h1 class="refname">collator_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Collator::getErrorMessage</span> -- <span class="refname">collator_get_error_message</span> — <span class="dc-title">Get text for collator's last error code</span></p> </div> <div class="refsect1 description" id="refsect1-collator.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Retrieves the message for the last error.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Description of an error occurred in the last Collator <span>API</span> function call,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-collator.geterrormessage-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2460">    <p><strong>示例 #1 <span class="function"><strong>collator_get_error_message()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'lt' </span><span style="color: #007700">);<br>if( </span><span style="color: #9876AA">collator_compare</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #DD0000">'y'</span><span style="color: #007700">, </span><span style="color: #DD0000">'k' </span><span style="color: #007700">) === </span><span style="color: #9876AA">false </span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">collator_get_error_message</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll </span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/collator.geterrorcode.php" class="function" rel="rdfs-seeAlso">collator_get_error_code()</a> - Get collator's last error code</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get text for collator's last error code
     * @link https://php.net/manual/zh/collator.geterrormessage.php
     * @return string|false Description of an error occurred in the last Collator API function call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string|false {}

    /**
 * <div id="collator.getsortkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">Collator::getSortKey</h1>  <h1 class="refname">collator_get_sort_key</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 1.0.3)</p><p class="refpurpose"><span class="refname">Collator::getSortKey</span> -- <span class="refname">collator_get_sort_key</span> — <span class="dc-title">Get sorting key for a string</span></p> </div> <div class="refsect1 description" id="refsect1-collator.getsortkey-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Collator::getSortKey</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>collator_get_sort_key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.collator.php" class="type Collator" style="color:#EAB766">Collator</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Return collation key for a string.   Collation keys can be compared directly instead of strings, though are implementation   specific and may change between ICU library versions. Sort keys are generally only   useful in databases or other circumstances where function calls are extremely expensive.  </p> </div> <div class="refsect1 parameters" id="refsect1-collator.getsortkey-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.collator.php" class="classname">Collator</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The string to produce the key from.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-collator.getsortkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">Returns the collation key for the string,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.</p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，但也可能返回等同于 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的非布尔值。请阅读 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <div class="refsect1 examples" id="refsect1-collator.getsortkey-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2462">    <p><strong>示例 #1 <span class="function"><strong>collator_get_sort_key()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$s1 </span><span style="color: #007700">= </span><span style="color: #DD0000">'Hello'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res  </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_sort_key</span><span style="color: #007700">(</span><span style="color: #9876AA">\$coll</span><span style="color: #007700">, </span><span style="color: #9876AA">\$s1</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$res</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>     3832404046010901dc08<br>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2463">    <p><strong>示例 #2 <span class="function"><strong>Collator::getSortKey()</strong></span> example with <span class="function">{@link usort()}</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$data </span><span style="color: #007700">= [<br>    [ </span><span style="color: #DD0000">'name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'🇳🇱 Derick Rethans'</span><span style="color: #007700">, </span><span style="color: #DD0000">'linked_account' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'https://phpc.social/users/derickr' </span><span style="color: #007700">],<br>    [ </span><span style="color: #DD0000">'name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Elephpant'</span><span style="color: #007700">, </span><span style="color: #DD0000">'linked_account' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'https://phpc.social/phpc' </span><span style="color: #007700">],<br>    [ </span><span style="color: #DD0000">'name' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'🇫🇷 Marcus Bointon'</span><span style="color: #007700">, </span><span style="color: #DD0000">'linked_account' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'https://phpc.social/users/Synchro' </span><span style="color: #007700">],<br>];<br><br></span><span style="color: #FF8000">// Create the collator <br></span><span style="color: #9876AA">\$col </span><span style="color: #007700">= new </span><span style="color: #9876AA">Collator</span><span style="color: #007700">(</span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Sort upper-case letters before lower-case letters <br></span><span style="color: #9876AA">\$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">CASE_FIRST</span><span style="color: #007700">, </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">UPPER_FIRST</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Use a user-defined function with sort, that strips out the emojis <br> </span><span style="color: #007700"><br></span><span style="color: #9876AA">usort</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$data</span><span style="color: #007700">,<br>    function(</span><span style="color: #9876AA">\$a</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">) use (</span><span style="color: #9876AA">\$col</span><span style="color: #007700">) {<br>        </span><span style="color: #FF8000">// Remove the character class 'S' (the Symbols), and remove whitespace<br>         * (with trim) <br>        </span><span style="color: #9876AA">\$aName </span><span style="color: #007700">= </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/\p{S}+/u'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">\$a</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]));<br>        </span><span style="color: #9876AA">\$bName </span><span style="color: #007700">= </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/\p{S}+/u'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">\$b</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">]));<br><br>                                </span><span style="color: #FF8000">// Create the sort key <br>        </span><span style="color: #9876AA">\$aKey </span><span style="color: #007700">= </span><span style="color: #9876AA">\$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSortKey</span><span style="color: #007700">(</span><span style="color: #9876AA">\$aName</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">\$bKey </span><span style="color: #007700">= </span><span style="color: #9876AA">\$col</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSortKey</span><span style="color: #007700">(</span><span style="color: #9876AA">\$bName</span><span style="color: #007700">);<br><br>                                </span><span style="color: #FF8000">// Use the sort key to signal which element sorts first <br>        </span><span style="color: #007700">return </span><span style="color: #9876AA">\$aKey </span><span style="color: #007700">&lt;=&gt; </span><span style="color: #9876AA">\$bKey</span><span style="color: #007700">;<br>    }<br>);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$data</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>array(3) {<br>  [0] =&gt;<br>  array(2) {<br>    'name' =&gt;<br>    string(25) "🇳🇱 Derick Rethans"<br>    'linked_account' =&gt;<br>    string(33) "https://phpc.social/users/derickr"<br>  }<br>  [1] =&gt;<br>  array(2) {<br>    'name' =&gt;<br>    string(9) "Elephpant"<br>    'linked_account' =&gt;<br>    string(24) "https://phpc.social/phpc"<br>  }<br>  [2] =&gt;<br>  array(2) {<br>    'name' =&gt;<br>    string(25) "🇫🇷 Marcus Bointon"<br>    'linked_account' =&gt;<br>    string(33) "https://phpc.social/users/Synchro"<br>  }<br>}<br>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-collator.getsortkey-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/collator.sort.php" class="function" rel="rdfs-seeAlso">collator_sort()</a> - Sort array using specified collator</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.sortwithsortkeys.php" class="function" rel="rdfs-seeAlso">collator_sort_with_sort_keys()</a> - Sort array using specified collator and sort keys</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.2, PECL intl &gt;= 1.0.3)<br/>
     * Get sorting key for a string
     * @link https://php.net/manual/zh/collator.getsortkey.php
     * @param string $string <p>
     * The string to produce the key from.
     * </p>
     * @return string|false the collation key for the string. Collation keys can be compared directly instead of strings.
     */
    #[Pure]
    #[TentativeType]
    public function getSortKey(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string,
        #[ElementAvailable(from: '5.3', to: '5.6')] $arg2
    ): string|false {}
}

/**
 * <div id="class.numberformatter" class="reference"> <h1 class="title">The NumberFormatter class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="numberformatter.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Programs store and operate on numbers using a locale-independent binary    representation. When displaying or printing a number it is converted to a    locale-specific string. For example, the number 12345.67 is "12,345.67" in    the US, "12 345,67" in France and "12.345,67" in Germany.   </p>   <p class="simpara">    By invoking the methods provided by the NumberFormatter class, you can    format numbers, currencies, and percentages according to the specified or    default locale. NumberFormatter is locale-sensitive so you need to create    a new NumberFormatter for each locale. NumberFormatter methods format    primitive-type numbers, such as double and output the number as a    locale-specific string.   </p>   <p class="para">    For currencies you can use currency format type to create a formatter that    returns a string with the formatted number and the appropriate currency    sign. Of course, the NumberFormatter class is unaware of exchange rates    so, the number output is the same regardless of the specified currency.    This means that the same number has different monetary values depending on    the currency locale. If the number is 9988776.65 the results will be:    </p><ul class="simplelist">     <li>9 988 776,65 € in France</li>     <li>9.988.776,65 € in Germany</li>     <li>\$9,988,776.65 in the United States</li>    </ul>      <p class="simpara">    In order to format percentages, create a locale-specific formatter with    percentage format type. With this formatter, a decimal fraction such as    0.75 is displayed as 75%.   </p>   <p class="simpara">    For more complex formatting, like spelled-out numbers, the rule-based    number formatters are used.   </p>  </div>    <div class="section" id="numberformatter.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">NumberFormatter</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pattern-decimal"><var class="varname">PATTERN_DECIMAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.decimal"><var class="varname">DECIMAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.currency"><var class="varname">CURRENCY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.percent"><var class="varname">PERCENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.scientific"><var class="varname">SCIENTIFIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.spellout"><var class="varname">SPELLOUT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.ordinal"><var class="varname">ORDINAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.duration"><var class="varname">DURATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pattern-rulebased"><var class="varname">PATTERN_RULEBASED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.ignore"><var class="varname">IGNORE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.currency-accounting"><var class="varname">CURRENCY_ACCOUNTING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.default-style"><var class="varname">DEFAULT_STYLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-ceiling"><var class="varname">ROUND_CEILING</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-floor"><var class="varname">ROUND_FLOOR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-down"><var class="varname">ROUND_DOWN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-up"><var class="varname">ROUND_UP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-toward-zero"><var class="varname">ROUND_TOWARD_ZERO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-away-from-zero"><var class="varname">ROUND_AWAY_FROM_ZERO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-halfeven"><var class="varname">ROUND_HALFEVEN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-halfodd"><var class="varname">ROUND_HALFODD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-halfdown"><var class="varname">ROUND_HALFDOWN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.round-halfup"><var class="varname">ROUND_HALFUP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pad-before-prefix"><var class="varname">PAD_BEFORE_PREFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pad-after-prefix"><var class="varname">PAD_AFTER_PREFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pad-before-suffix"><var class="varname">PAD_BEFORE_SUFFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pad-after-suffix"><var class="varname">PAD_AFTER_SUFFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.parse-int-only"><var class="varname">PARSE_INT_ONLY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.grouping-used"><var class="varname">GROUPING_USED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.decimal-always-shown"><var class="varname">DECIMAL_ALWAYS_SHOWN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.max-integer-digits"><var class="varname">MAX_INTEGER_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.min-integer-digits"><var class="varname">MIN_INTEGER_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.integer-digits"><var class="varname">INTEGER_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.max-fraction-digits"><var class="varname">MAX_FRACTION_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.min-fraction-digits"><var class="varname">MIN_FRACTION_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.fraction-digits"><var class="varname">FRACTION_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.multiplier"><var class="varname">MULTIPLIER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.grouping-size"><var class="varname">GROUPING_SIZE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.rounding-mode"><var class="varname">ROUNDING_MODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.rounding-increment"><var class="varname">ROUNDING_INCREMENT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.format-width"><var class="varname">FORMAT_WIDTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.padding-position"><var class="varname">PADDING_POSITION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.secondary-grouping-size"><var class="varname">SECONDARY_GROUPING_SIZE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.significant-digits-used"><var class="varname">SIGNIFICANT_DIGITS_USED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.min-significant-digits"><var class="varname">MIN_SIGNIFICANT_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.max-significant-digits"><var class="varname">MAX_SIGNIFICANT_DIGITS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.lenient-parse"><var class="varname">LENIENT_PARSE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.positive-prefix"><var class="varname">POSITIVE_PREFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.positive-suffix"><var class="varname">POSITIVE_SUFFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.negative-prefix"><var class="varname">NEGATIVE_PREFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.negative-suffix"><var class="varname">NEGATIVE_SUFFIX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.padding-character"><var class="varname">PADDING_CHARACTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.currency-code"><var class="varname">CURRENCY_CODE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.default-ruleset"><var class="varname">DEFAULT_RULESET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.public-rulesets"><var class="varname">PUBLIC_RULESETS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.decimal-separator-symbol"><var class="varname">DECIMAL_SEPARATOR_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.grouping-separator-symbol"><var class="varname">GROUPING_SEPARATOR_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pattern-separator-symbol"><var class="varname">PATTERN_SEPARATOR_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.percent-symbol"><var class="varname">PERCENT_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.zero-digit-symbol"><var class="varname">ZERO_DIGIT_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.digit-symbol"><var class="varname">DIGIT_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.minus-sign-symbol"><var class="varname">MINUS_SIGN_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.plus-sign-symbol"><var class="varname">PLUS_SIGN_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.currency-symbol"><var class="varname">CURRENCY_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.intl-currency-symbol"><var class="varname">INTL_CURRENCY_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.monetary-separator-symbol"><var class="varname">MONETARY_SEPARATOR_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.exponential-symbol"><var class="varname">EXPONENTIAL_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.permill-symbol"><var class="varname">PERMILL_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.pad-escape-symbol"><var class="varname">PAD_ESCAPE_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.infinity-symbol"><var class="varname">INFINITY_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.nan-symbol"><var class="varname">NAN_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.significant-digit-symbol"><var class="varname">SIGNIFICANT_DIGIT_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.monetary-grouping-separator-symbol"><var class="varname">MONETARY_GROUPING_SEPARATOR_SYMBOL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.type-default"><var class="varname">TYPE_DEFAULT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.type-int32"><var class="varname">TYPE_INT32</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.type-int64"><var class="varname">TYPE_INT64</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.type-double"><var class="varname">TYPE_DOUBLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.numberformatter.php#numberformatter.constants.type-currency"><var class="varname">TYPE_CURRENCY</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.create.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.create.php" class="methodname" style="color:#CC7832">create</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.formatcurrency.php" class="methodname" style="color:#CC7832">formatCurrency</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$amount</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$currency</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="methodname" style="color:#CC7832">getAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.getpattern.php" class="methodname" style="color:#CC7832">getPattern</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.getsymbol.php" class="methodname" style="color:#CC7832">getSymbol</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.gettextattribute.php" class="methodname" style="color:#CC7832">getTextAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.parse.php" class="methodname" style="color:#CC7832">parse</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DOUBLE</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.parsecurrency.php" class="methodname" style="color:#CC7832">parseCurrency</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$currency</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="methodname" style="color:#CC7832">setAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.setpattern.php" class="methodname" style="color:#CC7832">setPattern</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.setsymbol.php" class="methodname" style="color:#CC7832">setSymbol</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/numberformatter.settextattribute.php" class="methodname" style="color:#CC7832">setTextAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>     </div>    <div class="section" id="intl.numberformatter-constants"> <h2 class="title">预定义常量</h2> <div class="section" id="intl.numberformatter-constants.unumberformatstyle">  <h2 class="title">Format Types</h2>  <p class="para">   These styles are used by the <span class="function"><a href="https://php.net/manual/zh/numberformatter.create.php" class="function">numfmt_create()</a></span>   to define the type of the formatter.   </p><dl>         <dt id="numberformatter.constants.pattern-decimal">      <strong><span>{@link NumberFormatter::PATTERN_DECIMAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Decimal format defined by pattern</span>     </dd>             <dt id="numberformatter.constants.decimal">      <strong><span>{@link NumberFormatter::DECIMAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Decimal format</span>     </dd>             <dt id="numberformatter.constants.currency">      <strong><span>{@link NumberFormatter::CURRENCY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Currency format</span>     </dd>             <dt id="numberformatter.constants.percent">      <strong><span>{@link NumberFormatter::PERCENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Percent format</span>     </dd>             <dt id="numberformatter.constants.scientific">      <strong><span>{@link NumberFormatter::SCIENTIFIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Scientific format</span>     </dd>             <dt id="numberformatter.constants.spellout">      <strong><span>{@link NumberFormatter::SPELLOUT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Spellout rule-based format</span>     </dd>             <dt id="numberformatter.constants.ordinal">      <strong><span>{@link NumberFormatter::ORDINAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Ordinal rule-based format</span>     </dd>             <dt id="numberformatter.constants.duration">      <strong><span>{@link NumberFormatter::DURATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Duration rule-based format</span>     </dd>             <dt id="numberformatter.constants.pattern-rulebased">      <strong><span>{@link NumberFormatter::PATTERN_RULEBASED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rule-based format defined by pattern</span>     </dd>             <dt id="numberformatter.constants.currency-accounting">      <strong><span>{@link NumberFormatter::CURRENCY_ACCOUNTING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       Currency format for accounting, e.g., <span class="literal">(\$3.00)</span> for negative currency amount       instead of <span class="literal">-\$3.00</span>. Available as of PHP 7.4.1 and ICU 53.      </span>     </dd>             <dt id="numberformatter.constants.default-style">      <strong><span>{@link NumberFormatter::DEFAULT_STYLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Default format for the locale</span>     </dd>             <dt id="numberformatter.constants.ignore">      <strong><span>{@link NumberFormatter::IGNORE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Alias for PATTERN_DECIMAL</span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.types">  <h2 class="title">Number Format Specifiers</h2>  <p class="para">   These constants define how the numbers are parsed or formatted. They should   be used as arguments to <span class="function"><a href="https://php.net/manual/zh/numberformatter.format.php" class="function">numfmt_format()</a></span>   and <span class="function"><a href="https://php.net/manual/zh/numberformatter.parse.php" class="function">numfmt_parse()</a></span>.   </p><dl>         <dt id="numberformatter.constants.type-default">      <strong><span>{@link NumberFormatter::TYPE_DEFAULT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Derive the type from variable type</span>     </dd>             <dt id="numberformatter.constants.type-int32">      <strong><span>{@link NumberFormatter::TYPE_INT32}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Format/parse as 32-bit integer</span>     </dd>             <dt id="numberformatter.constants.type-int64">      <strong><span>{@link NumberFormatter::TYPE_INT64}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Format/parse as 64-bit integer</span>     </dd>             <dt id="numberformatter.constants.type-double">      <strong><span>{@link NumberFormatter::TYPE_DOUBLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Format/parse as floating point value</span>     </dd>             <dt id="numberformatter.constants.type-currency">      <strong><span>{@link NumberFormatter::TYPE_CURRENCY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Format/parse as currency value. Deprecated as of PHP 8.3.0</span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.unumberformatattribute">  <h2 class="title">Number Format Attributes</h2>  <p class="para">   Number format attribute used by   <span class="function"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="function">numfmt_get_attribute()</a></span>   and   <span class="function"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="function">numfmt_set_attribute()</a></span>.   </p><dl>         <dt id="numberformatter.constants.parse-int-only">      <strong><span>{@link NumberFormatter::PARSE_INT_ONLY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Parse integers only.</span>     </dd>             <dt id="numberformatter.constants.grouping-used">      <strong><span>{@link NumberFormatter::GROUPING_USED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Use grouping separator.</span>     </dd>             <dt id="numberformatter.constants.decimal-always-shown">      <strong><span>{@link NumberFormatter::DECIMAL_ALWAYS_SHOWN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Always show decimal point.</span>     </dd>             <dt id="numberformatter.constants.max-integer-digits">      <strong><span>{@link NumberFormatter::MAX_INTEGER_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Maximum integer digits.</span>     </dd>             <dt id="numberformatter.constants.min-integer-digits">      <strong><span>{@link NumberFormatter::MIN_INTEGER_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Minimum integer digits.</span>     </dd>             <dt id="numberformatter.constants.integer-digits">      <strong><span>{@link NumberFormatter::INTEGER_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Integer digits.</span>     </dd>             <dt id="numberformatter.constants.max-fraction-digits">      <strong><span>{@link NumberFormatter::MAX_FRACTION_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Maximum fraction digits.</span>     </dd>             <dt id="numberformatter.constants.min-fraction-digits">      <strong><span>{@link NumberFormatter::MIN_FRACTION_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Minimum fraction digits.</span>     </dd>             <dt id="numberformatter.constants.fraction-digits">      <strong><span>{@link NumberFormatter::FRACTION_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Fraction digits.</span>     </dd>             <dt id="numberformatter.constants.multiplier">      <strong><span>{@link NumberFormatter::MULTIPLIER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Multiplier.</span>     </dd>             <dt id="numberformatter.constants.grouping-size">      <strong><span>{@link NumberFormatter::GROUPING_SIZE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Grouping size.</span>     </dd>             <dt id="numberformatter.constants.rounding-mode">      <strong><span>{@link NumberFormatter::ROUNDING_MODE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding Mode.</span>     </dd>             <dt id="numberformatter.constants.rounding-increment">      <strong><span>{@link NumberFormatter::ROUNDING_INCREMENT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding increment.</span>     </dd>             <dt id="numberformatter.constants.format-width">      <strong><span>{@link NumberFormatter::FORMAT_WIDTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The width to which the output of format() is padded.</span>     </dd>             <dt id="numberformatter.constants.padding-position">      <strong><span>{@link NumberFormatter::PADDING_POSITION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       The position at which padding will take place. See pad position       constants for possible argument values.      </span>     </dd>             <dt id="numberformatter.constants.secondary-grouping-size">      <strong><span>{@link NumberFormatter::SECONDARY_GROUPING_SIZE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Secondary grouping size.</span>     </dd>             <dt id="numberformatter.constants.significant-digits-used">      <strong><span>{@link NumberFormatter::SIGNIFICANT_DIGITS_USED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Use significant digits.</span>     </dd>             <dt id="numberformatter.constants.min-significant-digits">      <strong><span>{@link NumberFormatter::MIN_SIGNIFICANT_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Minimum significant digits.</span>     </dd>             <dt id="numberformatter.constants.max-significant-digits">      <strong><span>{@link NumberFormatter::MAX_SIGNIFICANT_DIGITS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Maximum significant digits.</span>     </dd>             <dt id="numberformatter.constants.lenient-parse">      <strong><span>{@link NumberFormatter::LENIENT_PARSE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Lenient parse mode used by rule-based formats.</span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.unumberformattextattribute">  <h2 class="title">Number Format Text Attributes</h2>  <p class="para">   Number format text attribute used by   <span class="function"><a href="https://php.net/manual/zh/numberformatter.gettextattribute.php" class="function">numfmt_get_text_attribute()</a></span> and   <span class="function"><a href="https://php.net/manual/zh/numberformatter.settextattribute.php" class="function">numfmt_set_text_attribute()</a></span>.   </p><dl>         <dt id="numberformatter.constants.positive-prefix">      <strong><span>{@link NumberFormatter::POSITIVE_PREFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Positive prefix.</span>     </dd>             <dt id="numberformatter.constants.positive-suffix">      <strong><span>{@link NumberFormatter::POSITIVE_SUFFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Positive suffix.</span>     </dd>             <dt id="numberformatter.constants.negative-prefix">      <strong><span>{@link NumberFormatter::NEGATIVE_PREFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Negative prefix.</span>     </dd>             <dt id="numberformatter.constants.negative-suffix">      <strong><span>{@link NumberFormatter::NEGATIVE_SUFFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Negative suffix.</span>     </dd>             <dt id="numberformatter.constants.padding-character">      <strong><span>{@link NumberFormatter::PADDING_CHARACTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The character used to pad to the format width.</span>     </dd>             <dt id="numberformatter.constants.currency-code">      <strong><span>{@link NumberFormatter::CURRENCY_CODE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The ISO currency code.</span>     </dd>             <dt id="numberformatter.constants.default-ruleset">      <strong><span>{@link NumberFormatter::DEFAULT_RULESET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       The default rule set. This is only available with rule-based       formatters.      </span>     </dd>             <dt id="numberformatter.constants.public-rulesets">      <strong><span>{@link NumberFormatter::PUBLIC_RULESETS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       The public rule sets. This is only available with rule-based       formatters. This is a read-only attribute. The public rulesets are       returned as a single string, with each ruleset name delimited by ';'       (semicolon).      </span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.unumberformatsymbol">  <h2 class="title">Symbol Format Specifiers</h2>  <p class="para">   Number format symbols used by <span class="function"><a href="https://php.net/manual/zh/numberformatter.getsymbol.php" class="function">numfmt_get_symbol()</a></span>   and <span class="function"><a href="https://php.net/manual/zh/numberformatter.setsymbol.php" class="function">numfmt_set_symbol()</a></span>.   </p><dl>         <dt id="numberformatter.constants.decimal-separator-symbol">      <strong><span>{@link NumberFormatter::DECIMAL_SEPARATOR_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The decimal separator.</span>     </dd>             <dt id="numberformatter.constants.grouping-separator-symbol">      <strong><span>{@link NumberFormatter::GROUPING_SEPARATOR_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The grouping separator.</span>     </dd>             <dt id="numberformatter.constants.pattern-separator-symbol">      <strong><span>{@link NumberFormatter::PATTERN_SEPARATOR_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The pattern separator.</span>     </dd>             <dt id="numberformatter.constants.percent-symbol">      <strong><span>{@link NumberFormatter::PERCENT_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The percent sign.</span>     </dd>             <dt id="numberformatter.constants.zero-digit-symbol">      <strong><span>{@link NumberFormatter::ZERO_DIGIT_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Zero.</span>     </dd>             <dt id="numberformatter.constants.digit-symbol">      <strong><span>{@link NumberFormatter::DIGIT_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Character representing a digit in the pattern.</span>     </dd>             <dt id="numberformatter.constants.minus-sign-symbol">      <strong><span>{@link NumberFormatter::MINUS_SIGN_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The minus sign.</span>     </dd>             <dt id="numberformatter.constants.plus-sign-symbol">      <strong><span>{@link NumberFormatter::PLUS_SIGN_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The plus sign.</span>     </dd>             <dt id="numberformatter.constants.currency-symbol">      <strong><span>{@link NumberFormatter::CURRENCY_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The currency symbol.</span>     </dd>             <dt id="numberformatter.constants.intl-currency-symbol">      <strong><span>{@link NumberFormatter::INTL_CURRENCY_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The international currency symbol.</span>     </dd>             <dt id="numberformatter.constants.monetary-separator-symbol">      <strong><span>{@link NumberFormatter::MONETARY_SEPARATOR_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>     <dd>      <span class="simpara">The monetary separator.</span>     </dd>             <dt id="numberformatter.constants.exponential-symbol">      <strong><span>{@link NumberFormatter::EXPONENTIAL_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The exponential symbol.</span>     </dd>             <dt id="numberformatter.constants.permill-symbol">      <strong><span>{@link NumberFormatter::PERMILL_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Per mill symbol.</span>     </dd>             <dt id="numberformatter.constants.pad-escape-symbol">      <strong><span>{@link NumberFormatter::PAD_ESCAPE_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Escape padding character.</span>     </dd>             <dt id="numberformatter.constants.infinity-symbol">      <strong><span>{@link NumberFormatter::INFINITY_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Infinity symbol.</span>     </dd>             <dt id="numberformatter.constants.nan-symbol">      <strong><span>{@link NumberFormatter::NAN_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Not-a-number symbol.</span>     </dd>             <dt id="numberformatter.constants.significant-digit-symbol">      <strong><span>{@link NumberFormatter::SIGNIFICANT_DIGIT_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Significant digit symbol.</span>     </dd>             <dt id="numberformatter.constants.monetary-grouping-separator-symbol">      <strong><span>{@link NumberFormatter::MONETARY_GROUPING_SEPARATOR_SYMBOL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">The monetary grouping separator.</span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.unumberformatroundingmode">  <h2 class="title">Rounding Modes</h2>  <p class="para">   Rounding mode values used by <span class="function"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="function">numfmt_get_attribute()</a></span>   and <span class="function"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="function">numfmt_set_attribute()</a></span> with   <strong><span>{@link NumberFormatter::ROUNDING_MODE}</span></strong> attribute.   </p><dl>         <dt id="numberformatter.constants.round-away-from-zero">      <strong><span>{@link NumberFormatter::ROUND_AWAY_FROM_ZERO}</span></strong>     </dt>     <dd>      <span class="simpara">别名 <strong><span>{@link NumberFormatter::ROUND_UP}</span></strong>.</span>     </dd>             <dt id="numberformatter.constants.round-ceiling">      <strong><span>{@link NumberFormatter::ROUND_CEILING}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding mode to round towards positive infinity.</span>     </dd>             <dt id="numberformatter.constants.round-down">      <strong><span>{@link NumberFormatter::ROUND_DOWN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding mode to round towards zero.</span>     </dd>             <dt id="numberformatter.constants.round-floor">      <strong><span>{@link NumberFormatter::ROUND_FLOOR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding mode to round towards negative infinity.</span>     </dd>             <dt id="numberformatter.constants.round-halfdown">      <strong><span>{@link NumberFormatter::ROUND_HALFDOWN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       Rounding mode to round towards "nearest neighbor" unless both neighbors       are equidistant, in which case round down.      </span>     </dd>             <dt id="numberformatter.constants.round-halfeven">      <strong><span>{@link NumberFormatter::ROUND_HALFEVEN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       Rounding mode to round towards the "nearest neighbor" unless both       neighbors are equidistant, in which case, round towards the even       neighbor.      </span>     </dd>             <dt id="numberformatter.constants.round-halfodd">      <strong><span>{@link NumberFormatter::ROUND_HALFODD}</span></strong>     </dt>     <dd>      <span class="simpara">       Rounding mode to round towards the "odd neighbor".      </span>     </dd>             <dt id="numberformatter.constants.round-halfup">      <strong><span>{@link NumberFormatter::ROUND_HALFUP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">       Rounding mode to round towards "nearest neighbor" unless both neighbors       are equidistant, in which case round up.      </span>     </dd>             <dt id="numberformatter.constants.round-toward-zero">      <strong><span>{@link NumberFormatter::ROUND_TOWARD_ZERO}</span></strong>     </dt>     <dd>      <span class="simpara">别名 <strong><span>{@link NumberFormatter::ROUND_DOWN}</span></strong>.</span>     </dd>             <dt id="numberformatter.constants.round-up">      <strong><span>{@link NumberFormatter::ROUND_UP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Rounding mode to round away from zero.</span>     </dd>       </dl>   </div> <div class="section" id="intl.numberformatter-constants.unumberformatpadposition">  <h2 class="title">Padding Specifiers</h2>  <p class="para">   Pad position values used by <span class="function"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="function">numfmt_get_attribute()</a></span>   and <span class="function"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="function">numfmt_set_attribute()</a></span> with   <strong><span>{@link NumberFormatter::PADDING_POSITION}</span></strong> attribute.   </p><dl>         <dt id="numberformatter.constants.pad-after-prefix">      <strong><span>{@link NumberFormatter::PAD_AFTER_PREFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Pad characters inserted after the prefix.</span>     </dd>             <dt id="numberformatter.constants.pad-after-suffix">      <strong><span>{@link NumberFormatter::PAD_AFTER_SUFFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Pad characters inserted after the suffix.</span>     </dd>             <dt id="numberformatter.constants.pad-before-prefix">      <strong><span>{@link NumberFormatter::PAD_BEFORE_PREFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Pad characters inserted before the prefix.</span>     </dd>             <dt id="numberformatter.constants.pad-before-suffix">      <strong><span>{@link NumberFormatter::PAD_BEFORE_SUFFIX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <span class="simpara">Pad characters inserted before the suffix.</span>     </dd>       </dl>   </div></div>  <div class="section" id="numberformatter.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/" class="link external">»&nbsp;       ICU formatting documentation      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/numbers/" class="link external">»&nbsp;ICU number formatters</a>     </li>     <li>      <a href="https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classDecimalFormat.html" class="link external">»&nbsp;ICU decimal formatters</a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/numbers/rbnf.html" class="link external">»&nbsp;       ICU rule-based number formatters      </a>     </li>    </ul>     </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link NumberFormatter::create} — Create a number formatter</li><li>{@link NumberFormatter::format} — Format a number</li><li>{@link NumberFormatter::formatCurrency} — Format a currency value</li><li>{@link NumberFormatter::getAttribute} — Get an attribute</li><li>{@link NumberFormatter::getErrorCode} — Get formatter's last error code</li><li>{@link NumberFormatter::getErrorMessage} — Get formatter's last error message</li><li>{@link NumberFormatter::getLocale} — Get formatter locale</li><li>{@link NumberFormatter::getPattern} — Get formatter pattern</li><li>{@link NumberFormatter::getSymbol} — Get a symbol value</li><li>{@link NumberFormatter::getTextAttribute} — Get a text attribute</li><li>{@link NumberFormatter::parse} — Parse a number</li><li>{@link NumberFormatter::parseCurrency} — Parse a currency number</li><li>{@link NumberFormatter::setAttribute} — Set an attribute</li><li>{@link NumberFormatter::setPattern} — Set formatter pattern</li><li>{@link NumberFormatter::setSymbol} — Set a symbol value</li><li>{@link NumberFormatter::setTextAttribute} — Set a text attribute</li></ul></div>
 */
class NumberFormatter
{
    public const CURRENCY_ACCOUNTING = 12;

    /**
     * Decimal format defined by pattern
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PATTERN_DECIMAL = 0;

    /**
     * Decimal format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DECIMAL = 1;

    /**
     * Currency format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const CURRENCY = 2;

    /**
     * Percent format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PERCENT = 3;

    /**
     * Scientific format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SCIENTIFIC = 4;

    /**
     * Spellout rule-based format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SPELLOUT = 5;

    /**
     * Ordinal rule-based format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ORDINAL = 6;

    /**
     * Duration rule-based format
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DURATION = 7;

    /**
     * Rule-based format defined by pattern
     * @link https://php.net/manual/en/class.locale.php#intl.locale-constants
     */
    public const PATTERN_RULEBASED = 9;

    /**
     * Alias for PATTERN_DECIMAL
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const IGNORE = 0;

    /**
     * Default format for the locale
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DEFAULT_STYLE = 1;

    /**
     * Rounding mode to round towards positive infinity.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_CEILING = 0;

    /**
     * Rounding mode to round towards negative infinity.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_FLOOR = 1;

    /**
     * Rounding mode to round towards zero.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_DOWN = 2;

    /**
     * Rounding mode to round away from zero.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_UP = 3;

    /**
     * Rounding mode to round towards the "nearest neighbor" unless both
     * neighbors are equidistant, in which case, round towards the even
     * neighbor.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_HALFEVEN = 4;

    /**
     * Rounding mode to round towards "nearest neighbor" unless both neighbors
     * are equidistant, in which case round down.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_HALFDOWN = 5;

    /**
     * Rounding mode to round towards "nearest neighbor" unless both neighbors
     * are equidistant, in which case round up.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUND_HALFUP = 6;

    /**
     * Pad characters inserted before the prefix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PAD_BEFORE_PREFIX = 0;

    /**
     * Pad characters inserted after the prefix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PAD_AFTER_PREFIX = 1;

    /**
     * Pad characters inserted before the suffix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PAD_BEFORE_SUFFIX = 2;

    /**
     * Pad characters inserted after the suffix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PAD_AFTER_SUFFIX = 3;

    /**
     * Parse integers only.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PARSE_INT_ONLY = 0;

    /**
     * Use grouping separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const GROUPING_USED = 1;

    /**
     * Always show decimal point.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DECIMAL_ALWAYS_SHOWN = 2;

    /**
     * Maximum integer digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MAX_INTEGER_DIGITS = 3;

    /**
     * Minimum integer digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MIN_INTEGER_DIGITS = 4;

    /**
     * Integer digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const INTEGER_DIGITS = 5;

    /**
     * Maximum fraction digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MAX_FRACTION_DIGITS = 6;

    /**
     * Minimum fraction digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MIN_FRACTION_DIGITS = 7;

    /**
     * Fraction digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const FRACTION_DIGITS = 8;

    /**
     * Multiplier.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MULTIPLIER = 9;

    /**
     * Grouping size.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const GROUPING_SIZE = 10;

    /**
     * Rounding Mode.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUNDING_MODE = 11;

    /**
     * Rounding increment.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ROUNDING_INCREMENT = 12;

    /**
     * The width to which the output of format() is padded.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const FORMAT_WIDTH = 13;

    /**
     * The position at which padding will take place. See pad position
     * constants for possible argument values.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PADDING_POSITION = 14;

    /**
     * Secondary grouping size.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SECONDARY_GROUPING_SIZE = 15;

    /**
     * Use significant digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SIGNIFICANT_DIGITS_USED = 16;

    /**
     * Minimum significant digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MIN_SIGNIFICANT_DIGITS = 17;

    /**
     * Maximum significant digits.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MAX_SIGNIFICANT_DIGITS = 18;

    /**
     * Lenient parse mode used by rule-based formats.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const LENIENT_PARSE = 19;

    /**
     * Positive prefix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const POSITIVE_PREFIX = 0;

    /**
     * Positive suffix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const POSITIVE_SUFFIX = 1;

    /**
     * Negative prefix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const NEGATIVE_PREFIX = 2;

    /**
     * Negative suffix.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const NEGATIVE_SUFFIX = 3;

    /**
     * The character used to pad to the format width.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PADDING_CHARACTER = 4;

    /**
     * The ISO currency code.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const CURRENCY_CODE = 5;

    /**
     * The default rule set. This is only available with rule-based
     * formatters.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DEFAULT_RULESET = 6;

    /**
     * The public rule sets. This is only available with rule-based
     * formatters. This is a read-only attribute. The public rulesets are
     * returned as a single string, with each ruleset name delimited by ';'
     * (semicolon).
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PUBLIC_RULESETS = 7;

    /**
     * The decimal separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DECIMAL_SEPARATOR_SYMBOL = 0;

    /**
     * The grouping separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const GROUPING_SEPARATOR_SYMBOL = 1;

    /**
     * The pattern separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PATTERN_SEPARATOR_SYMBOL = 2;

    /**
     * The percent sign.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PERCENT_SYMBOL = 3;

    /**
     * Zero.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ZERO_DIGIT_SYMBOL = 4;

    /**
     * Character representing a digit in the pattern.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DIGIT_SYMBOL = 5;

    /**
     * The minus sign.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MINUS_SIGN_SYMBOL = 6;

    /**
     * The plus sign.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PLUS_SIGN_SYMBOL = 7;

    /**
     * The currency symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const CURRENCY_SYMBOL = 8;

    /**
     * The international currency symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const INTL_CURRENCY_SYMBOL = 9;

    /**
     * The monetary separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MONETARY_SEPARATOR_SYMBOL = 10;

    /**
     * The exponential symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const EXPONENTIAL_SYMBOL = 11;

    /**
     * Per mill symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PERMILL_SYMBOL = 12;

    /**
     * Escape padding character.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PAD_ESCAPE_SYMBOL = 13;

    /**
     * Infinity symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const INFINITY_SYMBOL = 14;

    /**
     * Not-a-number symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const NAN_SYMBOL = 15;

    /**
     * Significant digit symbol.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SIGNIFICANT_DIGIT_SYMBOL = 16;

    /**
     * The monetary grouping separator.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const MONETARY_GROUPING_SEPARATOR_SYMBOL = 17;

    /**
     * Derive the type from variable type
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const TYPE_DEFAULT = 0;

    /**
     * Format/parse as 32-bit integer
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const TYPE_INT32 = 1;

    /**
     * Format/parse as 64-bit integer
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const TYPE_INT64 = 2;

    /**
     * Format/parse as floating point value
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const TYPE_DOUBLE = 3;

    /**
     * Format/parse as currency value
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     * @deprecated 8.3
     */
    public const TYPE_CURRENCY = 4;

    /**
     * @since 8.4
     */
    public const ROUND_TOWARD_ZERO = 2;

    /**
     * @since 8.4
     */
    public const ROUND_AWAY_FROM_ZERO = 3;

    /**
     * @since 8.4
     */
    public const ROUND_HALFODD = 8;

    /**
     * @link https://www.php.net/manual/en/class.numberformatter.php
     * @param string $locale
     * @param int $style
     * @param string $pattern [optional]
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([NumberFormatter::DECIMAL, NumberFormatter::PATTERN_DECIMAL,
            NumberFormatter::PATTERN_RULEBASED, NumberFormatter::CURRENCY, NumberFormatter::PERCENT,
            NumberFormatter::SCIENTIFIC, NumberFormatter::SPELLOUT, NumberFormatter::ORDINAL,
            NumberFormatter::DURATION, NumberFormatter::PATTERN_RULEBASED, NumberFormatter::CURRENCY_ACCOUNTING,
            NumberFormatter::DEFAULT_STYLE, NumberFormatter::IGNORE])] $style,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $pattern = null
    ) {}

    /**
 * <div id="numberformatter.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::create</h1>  <h1 class="refname">numfmt_create</h1>  <h1 class="refname">NumberFormatter::__construct</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::create</span> -- <span class="refname">numfmt_create</span> -- <span class="refname">NumberFormatter::__construct</span> — <span class="dc-title">Create a number formatter</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.create-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格 (method)  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span></span></div>  <p class="para rdfs-comment">   面向对象风格 (constructor):  </p>   <div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::__construct</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>  <p class="para rdfs-comment">   Creates a number formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       Locale in which the number would be formatted (locale name, e.g. en_CA).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">style</span></dt>     <dd>      <p class="para">       Style of the formatting, one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformatstyle" class="link">        format style</a> constants. If       <strong><span>{@link NumberFormatter::PATTERN_DECIMAL}</span></strong>       or <strong><span>{@link NumberFormatter::PATTERN_RULEBASED}</span></strong>       is passed then the number format is opened using the given pattern,       which must conform to the syntax described in       <a href="https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classDecimalFormat.html" class="link external">»&nbsp;ICU DecimalFormat       documentation</a> or       <a href="https://unicode-org.github.io/icu/userguide/format_parse/numbers/rbnf.html" class="link external">»&nbsp;ICU RuleBasedNumberFormat       documentation</a>, respectively.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       Pattern string if the chosen style requires a pattern.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on error.  </p> </div> <div class="refsect1 errors" id="refsect1-numberformatter.create-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if   <span class="parameter" style="color:#3A95FF">locale</span> is invalid.  </p> </div> <div class="refsect1 changelog" id="refsect1-numberformatter.create-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="simpara">        A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if        <span class="parameter" style="color:#3A95FF">locale</span> is invalid.       </span>      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">pattern</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-numberformatter.create-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2469">   <p><strong>示例 #1 <span class="function"><strong>numfmt_create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'it'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SPELLOUT </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1142</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2470">   <p><strong>示例 #2 <span class="function"><strong>NumberFormatter::create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'it'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SPELLOUT </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1142</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1.234.567,891<br>millicentoquarantadue</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.format.php" class="function" rel="rdfs-seeAlso">numfmt_format()</a> - Format a number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.parse.php" class="function" rel="rdfs-seeAlso">numfmt_parse()</a> - Parse a number</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Create a number formatter
     * @link https://php.net/manual/zh/numberformatter.create.php
     * @param string $locale <p>
     * Locale in which the number would be formatted (locale name, e.g. en_CA).
     * </p>
     * @param int $style <p>
     * Style of the formatting, one of the
     * format style constants. If
     * <b>NumberFormatter::PATTERN_DECIMAL</b>
     * or <b>NumberFormatter::PATTERN_RULEBASED</b>
     * is passed then the number format is opened using the given pattern,
     * which must conform to the syntax described in
     * ICU DecimalFormat
     * documentation or
     * ICU RuleBasedNumberFormat
     * documentation, respectively.
     * </p>
     * @param string $pattern [optional] <p>
     * Pattern string if the chosen style requires a pattern.
     * </p>
     * @return NumberFormatter|false <b>NumberFormatter</b> object or <b>FALSE</b> on error.
     */
    #[TentativeType]
    public static function create(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([NumberFormatter::DECIMAL, NumberFormatter::PATTERN_DECIMAL,
            NumberFormatter::PATTERN_RULEBASED, NumberFormatter::CURRENCY, NumberFormatter::PERCENT,
            NumberFormatter::SCIENTIFIC, NumberFormatter::SPELLOUT, NumberFormatter::ORDINAL,
            NumberFormatter::DURATION, NumberFormatter::PATTERN_RULEBASED, NumberFormatter::CURRENCY_ACCOUNTING,
            NumberFormatter::DEFAULT_STYLE, NumberFormatter::IGNORE])] $style,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $pattern = null
    ): ?NumberFormatter {}

    /**
 * <div id="numberformatter.format" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::format</h1>  <h1 class="refname">numfmt_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::format</span> -- <span class="refname">numfmt_format</span> — <span class="dc-title">Format a number</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.format-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Format a numeric value according to the formatter rules.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.format-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       The value to format. Can be <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> or <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>,       other values will be converted to a numeric value.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       The       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.types" class="link">        formatting type</a> to use.       Note that <strong><span>{@link NumberFormatter::TYPE_CURRENCY}</span></strong> is not supported;       use <span class="methodname" style="color:#CC7832">{@link NumberFormatter::formatCurrency()}</span> instead.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the string containing formatted value, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.format-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2471">   <p><strong>示例 #1 <span class="function"><strong>numfmt_format()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$data </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Formatter error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2472">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">())) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Formatter error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1.234.567,891</blockquote></div>  </div> </div> <div class="refsect1 notes" id="refsect1-numberformatter.format-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Formats achievable by this method of formatting cannot fully use the possibilities of underlying ICU library,    such as to format currency with narrow currency symbol.   </p>   <p class="para">    To fully utilize them use <span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function">msgfmt_format_message()</a></span>.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.format-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.formatcurrency.php" class="function" rel="rdfs-seeAlso">numfmt_format_currency()</a> - Format a currency value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.parse.php" class="function" rel="rdfs-seeAlso">numfmt_parse()</a> - Parse a number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function" rel="rdfs-seeAlso">msgfmt_format_message()</a> - Quick format message</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Format a number
     * @link https://php.net/manual/zh/numberformatter.format.php
     * @param int|float $num <p>
     * The value to format. Can be integer or float,
     * other values will be converted to a numeric value.
     * </p>
     * @param int $type [optional] <p>
     * The
     * formatting type to use.
     * </p>
     * @return string|false the string containing formatted value, or <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function format(
        #[LanguageAware(['8.0' => 'int|float'], default: '')] $num,
        #[LanguageAware(['8.0' => 'int'], default: '')] $type = 0
    ): string|false {}

    /**
 * <div id="numberformatter.parse" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::parse</h1>  <h1 class="refname">numfmt_parse</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::parse</span> -- <span class="refname">numfmt_parse</span> — <span class="dc-title">Parse a number</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.parse-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DOUBLE</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_parse</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = NumberFormatter::TYPE_DOUBLE</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Parse a string into a number using the current formatter rules.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.parse-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The string to parse for the number.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       The       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.types" class="link">        formatting type</a> to use. By default,       <strong><span>{@link NumberFormatter::TYPE_DOUBLE}</span></strong> is used.       Note that <strong><span>{@link NumberFormatter::TYPE_CURRENCY}</span></strong> is not supported;       use <span class="methodname" style="color:#CC7832">{@link NumberFormatter::parseCurrency()}</span> instead.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Offset in the string at which to begin parsing. On return, this value       will hold the offset at which parsing ended.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.parse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the parsed number or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.parse-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2488">   <p><strong>示例 #1 <span class="function"><strong>numfmt_parse()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$num </span><span style="color: #007700">= </span><span style="color: #DD0000">"1.234.567,891"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$num</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$num</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TYPE_INT32</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2489">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$num </span><span style="color: #007700">= </span><span style="color: #DD0000">"1.234.567,891"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$num</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$num</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TYPE_INT32</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1234567.891<br>1234567</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.parse-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.format.php" class="function" rel="rdfs-seeAlso">numfmt_format()</a> - Format a number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.parsecurrency.php" class="function" rel="rdfs-seeAlso">numfmt_parse_currency()</a> - Parse a currency number</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Parse a number
     * @link https://php.net/manual/zh/numberformatter.parse.php
     * @param string $string
     * @param int $type [optional] <p>
     * The
     * formatting type to use. By default,
     * <b>NumberFormatter::TYPE_DOUBLE</b> is used.
     * </p>
     * @param int &$offset [optional] <p>
     * Offset in the string at which to begin parsing. On return, this value
     * will hold the offset at which parsing ended.
     * </p>
     * @return mixed The value of the parsed number or <b>FALSE</b> on error.
     */
    #[TentativeType]
    public function parse(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string,
        #[LanguageAware(['8.0' => 'int'], default: '')] $type = NumberFormatter::TYPE_DOUBLE,
        &$offset = null
    ): int|float|false {}

    /**
 * <div id="numberformatter.formatcurrency" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::formatCurrency</h1>  <h1 class="refname">numfmt_format_currency</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::formatCurrency</span> -- <span class="refname">numfmt_format_currency</span> — <span class="dc-title">Format a currency value</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.formatcurrency-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::formatCurrency</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$amount</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$currency</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_format_currency</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$amount</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$currency</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Format the currency value according to the formatter rules.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.formatcurrency-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">amount</span></dt>     <dd>      <p class="para">       The numeric currency value.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">currency</span></dt>     <dd>      <p class="para">       The 3-letter ISO 4217 currency code indicating the currency to use.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.formatcurrency-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   String representing the formatted currency value,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.formatcurrency-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2473">   <p><strong>示例 #1 <span class="function"><strong>numfmt_format_currency()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">numfmt_format_currency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format_currency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"RUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'ru_RU'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">numfmt_format_currency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format_currency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"RUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2474">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatCurrency</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatCurrency</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"RUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'ru_RU'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatCurrency</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">formatCurrency</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">, </span><span style="color: #DD0000">"RUR"</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1.234.567,89&nbsp;â¬<br>1.234.567,89&nbsp;RUR<br>1&nbsp;234&nbsp;567,89â¬<br>1&nbsp;234&nbsp;567,89Ñ.</blockquote></div>  </div> </div> <div class="refsect1 notes" id="refsect1-numberformatter.formatcurrency-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Formats achievable by this method of formatting cannot fully use the possibilities of underlying ICU library,    such as to format currency with narrow currency symbol.   </p>   <p class="para">    To fully utilize them use <span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function">msgfmt_format_message()</a></span>.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.formatcurrency-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.format.php" class="function" rel="rdfs-seeAlso">numfmt_format()</a> - Format a number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.parsecurrency.php" class="function" rel="rdfs-seeAlso">numfmt_parse_currency()</a> - Parse a currency number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function" rel="rdfs-seeAlso">msgfmt_format_message()</a> - Quick format message</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Format a currency value
     * @link https://php.net/manual/zh/numberformatter.formatcurrency.php
     * @param float $amount <p>
     * The numeric currency value.
     * </p>
     * @param string $currency <p>
     * The 3-letter ISO 4217 currency code indicating the currency to use.
     * </p>
     * @return string|false String representing the formatted currency value.
     */
    #[Pure]
    #[TentativeType]
    public function formatCurrency(
        #[LanguageAware(['8.0' => 'float'], default: '')] $amount,
        #[LanguageAware(['8.0' => 'string'], default: '')] $currency
    ): string|false {}

    /**
 * <div id="numberformatter.parsecurrency" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::parseCurrency</h1>  <h1 class="refname">numfmt_parse_currency</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::parseCurrency</span> -- <span class="refname">numfmt_parse_currency</span> — <span class="dc-title">Parse a currency number</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.parsecurrency-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::parseCurrency</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$currency</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_parse_currency</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$currency</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Parse a string into a float and a currency using the current formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.parsecurrency-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">currency</span></dt>     <dd>      <p class="para">       Parameter to receive the currency name (3-letter ISO 4217 currency       code).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Offset in the string at which to begin parsing. On return, this value       will hold the offset at which parsing ended.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.parsecurrency-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The parsed numeric value or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.parsecurrency-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2490">   <p><strong>示例 #1 <span class="function"><strong>numfmt_parse_currency()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$num </span><span style="color: #007700">= </span><span style="color: #DD0000">"1.234.567,89\xc2\xa0\$"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"We have "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_parse_currency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">\$num</span><span style="color: #007700">, </span><span style="color: #9876AA">\$curr</span><span style="color: #007700">).</span><span style="color: #DD0000">" in </span><span style="color: #9876AA">\$curr</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2491">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">CURRENCY </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$num </span><span style="color: #007700">= </span><span style="color: #DD0000">"1.234.567,89\xc2\xa0\$"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"We have "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parseCurrency</span><span style="color: #007700">(</span><span style="color: #9876AA">\$num</span><span style="color: #007700">, </span><span style="color: #9876AA">\$curr</span><span style="color: #007700">).</span><span style="color: #DD0000">" in </span><span style="color: #9876AA">\$curr</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">We&nbsp;have&nbsp;1234567.89&nbsp;in&nbsp;USD</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.parsecurrency-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.parse.php" class="function" rel="rdfs-seeAlso">numfmt_parse()</a> - Parse a number</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.formatcurrency.php" class="function" rel="rdfs-seeAlso">numfmt_format_currency()</a> - Format a currency value</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Parse a currency number
     * @link https://php.net/manual/zh/numberformatter.parsecurrency.php
     * @param string $string
     * @param string &$currency <p>
     * Parameter to receive the currency name (3-letter ISO 4217 currency
     * code).
     * </p>
     * @param int &$offset [optional] <p>
     * Offset in the string at which to begin parsing. On return, this value
     * will hold the offset at which parsing ended.
     * </p>
     * @return float|false The parsed numeric value or <b>FALSE</b> on error.
     */
    #[TentativeType]
    public function parseCurrency(#[LanguageAware(['8.0' => 'string'], default: '')] $string, &$currency, &$offset = null): float|false {}

    /**
 * <div id="numberformatter.setattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::setAttribute</h1>  <h1 class="refname">numfmt_set_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::setAttribute</span> -- <span class="refname">numfmt_set_attribute</span> — <span class="dc-title">Set an attribute</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.setattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::setAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_set_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set a numeric attribute associated with the formatter. An example of a   numeric attribute is the number of integer digits the formatter will   produce.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.setattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">       Attribute specifier - one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformatattribute" class="link">        numeric attribute</a> constants.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The attribute value.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.setattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.setattribute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2492">   <p><strong>示例 #1 <span class="function"><strong>numfmt_set_attribute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2493">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Digits:&nbsp;3<br>1.234.567,891<br>Digits:&nbsp;2<br>1.234.567,89</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.setattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="function" rel="rdfs-seeAlso">numfmt_get_attribute()</a> - Get an attribute</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.settextattribute.php" class="function" rel="rdfs-seeAlso">numfmt_set_text_attribute()</a> - Set a text attribute</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set an attribute
     * @link https://php.net/manual/zh/numberformatter.setattribute.php
     * @param int $attribute <p>
     * Attribute specifier - one of the
     * numeric attribute constants.
     * </p>
     * @param int $value <p>
     * The attribute value.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setAttribute(
        #[LanguageAware(['8.0' => 'int'], default: '')] $attribute,
        #[LanguageAware(['8.0' => 'int|float'], default: '')] $value
    ): bool {}

    /**
 * <div id="numberformatter.getattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getAttribute</h1>  <h1 class="refname">numfmt_get_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getAttribute</span> -- <span class="refname">numfmt_get_attribute</span> — <span class="dc-title">Get an attribute</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.getattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get a numeric attribute associated with the formatter. An example of a   numeric attribute is the number of integer digits the formatter will   produce.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.getattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">       Attribute specifier - one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformatattribute" class="link">        numeric attribute</a> constants.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.getattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return attribute value on success, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.getattribute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2475">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_attribute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2476">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Digits: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">MAX_FRACTION_DIGITS</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Digits:&nbsp;3<br>1.234.567,891<br>Digits:&nbsp;2<br>1.234.567,89</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.getattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.gettextattribute.php" class="function" rel="rdfs-seeAlso">numfmt_get_text_attribute()</a> - Get a text attribute</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="function" rel="rdfs-seeAlso">numfmt_set_attribute()</a> - Set an attribute</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get an attribute
     * @link https://php.net/manual/zh/numberformatter.getattribute.php
     * @param int $attribute <p>
     * Attribute specifier - one of the
     * numeric attribute constants.
     * </p>
     * @return int|float|false Return attribute value on success, or <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function getAttribute(#[LanguageAware(['8.0' => 'int'], default: '')] $attribute): int|float|false {}

    /**
 * <div id="numberformatter.settextattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::setTextAttribute</h1>  <h1 class="refname">numfmt_set_text_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::setTextAttribute</span> -- <span class="refname">numfmt_set_text_attribute</span> — <span class="dc-title">Set a text attribute</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.settextattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::setTextAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_set_text_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set a text attribute associated with the formatter. An example of a text   attribute is the suffix for positive numbers. If the formatter does not   understand the attribute,   <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.u-unsupported-error">U_UNSUPPORTED_ERROR</a></span></strong>   error is produced. Rule-based formatters only understand   <strong><span>{@link NumberFormatter::DEFAULT_RULESET}</span></strong> and   <strong><span>{@link NumberFormatter::PUBLIC_RULESETS}</span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.settextattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">       Attribute specifier - one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformattextattribute" class="link">text attribute</a>       constants.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       Text for the attribute value.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.settextattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.settextattribute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2498">   <p><strong>示例 #1 <span class="function"><strong>numfmt_set_text_attribute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, -</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">, </span><span style="color: #DD0000">"MINUS"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, -</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2499">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(-</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">, </span><span style="color: #DD0000">"MINUS"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(-</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Prefix:&nbsp;-<br>-1.234.567,891<br>Prefix:&nbsp;MINUS<br>MINUS1.234.567,891</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.settextattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.gettextattribute.php" class="function" rel="rdfs-seeAlso">numfmt_get_text_attribute()</a> - Get a text attribute</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.setattribute.php" class="function" rel="rdfs-seeAlso">numfmt_set_attribute()</a> - Set an attribute</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set a text attribute
     * @link https://php.net/manual/zh/numberformatter.settextattribute.php
     * @param int $attribute <p>
     * Attribute specifier - one of the
     * text attribute
     * constants.
     * </p>
     * @param string $value <p>
     * Text for the attribute value.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTextAttribute(
        #[LanguageAware(['8.0' => 'int'], default: '')] $attribute,
        #[LanguageAware(['8.0' => 'string'], default: '')] $value
    ): bool {}

    /**
 * <div id="numberformatter.gettextattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getTextAttribute</h1>  <h1 class="refname">numfmt_get_text_attribute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getTextAttribute</span> -- <span class="refname">numfmt_get_text_attribute</span> — <span class="dc-title">Get a text attribute</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.gettextattribute-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getTextAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_text_attribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$attribute</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get a text attribute associated with the formatter. An example of a text   attribute is the suffix for positive numbers. If the formatter does not   understand the attribute,   <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.u-unsupported-error">U_UNSUPPORTED_ERROR</a></span></strong>   error is produced. Rule-based formatters only understand   <strong><span>{@link NumberFormatter::DEFAULT_RULESET}</span></strong> and   <strong><span>{@link NumberFormatter::PUBLIC_RULESETS}</span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.gettextattribute-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">attribute</span></dt>     <dd>      <p class="para">       Attribute specifier - one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformattextattribute" class="link">        text attribute</a> constants.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.gettextattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return attribute value on success, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.gettextattribute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2486">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_text_attribute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, -</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">, </span><span style="color: #DD0000">"MINUS"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_text_attribute</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, -</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2487">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(-</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">, </span><span style="color: #DD0000">"MINUS"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Prefix: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTextAttribute</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NEGATIVE_PREFIX</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(-</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Prefix:&nbsp;-<br>-1.234.567,891<br>Prefix:&nbsp;MINUS<br>MINUS1.234.567,891</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.gettextattribute-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.getattribute.php" class="function" rel="rdfs-seeAlso">numfmt_get_attribute()</a> - Get an attribute</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.settextattribute.php" class="function" rel="rdfs-seeAlso">numfmt_set_text_attribute()</a> - Set a text attribute</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get a text attribute
     * @link https://php.net/manual/zh/numberformatter.gettextattribute.php
     * @param int $attribute <p>
     * Attribute specifier - one of the
     * text attribute constants.
     * </p>
     * @return string|false Return attribute value on success, or <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function getTextAttribute(#[LanguageAware(['8.0' => 'int'], default: '')] $attribute): string|false {}

    /**
 * <div id="numberformatter.setsymbol" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::setSymbol</h1>  <h1 class="refname">numfmt_set_symbol</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::setSymbol</span> -- <span class="refname">numfmt_set_symbol</span> — <span class="dc-title">Set a symbol value</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.setsymbol-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::setSymbol</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_set_symbol</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set a symbol associated with the formatter. The formatter uses symbols to   represent the special locale-dependent characters in a number, for example   the percent sign. This API is not supported for rule-based formatters.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.setsymbol-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">symbol</span></dt>     <dd>      <p class="para">       Symbol specifier, one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformatsymbol" class="link">        format symbol</a> constants.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       Text for the symbol.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.setsymbol-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.setsymbol-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2496">   <p><strong>示例 #1 <span class="function"><strong>numfmt_set_symbol()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">, </span><span style="color: #DD0000">"*"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2497">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">, </span><span style="color: #DD0000">"*"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Sep:&nbsp;.<br>1.234.567,891<br>Sep:&nbsp;*<br>1*234*567,891</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.setsymbol-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.getsymbol.php" class="function" rel="rdfs-seeAlso">numfmt_get_symbol()</a> - Get a symbol value</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set a symbol value
     * @link https://php.net/manual/zh/numberformatter.setsymbol.php
     * @param int $symbol <p>
     * Symbol specifier, one of the
     * format symbol constants.
     * </p>
     * @param string $value <p>
     * Text for the symbol.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setSymbol(
        #[LanguageAware(['8.0' => 'int'], default: '')] $symbol,
        #[LanguageAware(['8.0' => 'string'], default: '')] $value
    ): bool {}

    /**
 * <div id="numberformatter.getsymbol" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getSymbol</h1>  <h1 class="refname">numfmt_get_symbol</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getSymbol</span> -- <span class="refname">numfmt_get_symbol</span> — <span class="dc-title">Get a symbol value</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.getsymbol-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getSymbol</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_symbol</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$symbol</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get a symbol associated with the formatter. The formatter uses symbols to   represent the special locale-dependent characters in a number, for example   the percent sign. This API is not supported for rule-based formatters.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.getsymbol-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">symbol</span></dt>     <dd>      <p class="para">       Symbol specifier, one of the       <a href="https://php.net/manual/zh/class.numberformatter.php#intl.numberformatter-constants.unumberformatsymbol" class="link">        format symbol</a> constants.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.getsymbol-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The symbol string or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.getsymbol-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2484">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_symbol()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">, </span><span style="color: #DD0000">"*"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_symbol</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2485">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">, </span><span style="color: #DD0000">"*"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Sep: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSymbol</span><span style="color: #007700">(</span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GROUPING_SEPARATOR_SYMBOL</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Sep:&nbsp;.<br>1.234.567,891<br>Sep:&nbsp;*<br>1*234*567,891</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.getsymbol-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.setsymbol.php" class="function" rel="rdfs-seeAlso">numfmt_set_symbol()</a> - Set a symbol value</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get a symbol value
     * @link https://php.net/manual/zh/numberformatter.getsymbol.php
     * @param int $symbol <p>
     * Symbol specifier, one of the
     * format symbol constants.
     * </p>
     * @return string|false The symbol string or <b>FALSE</b> on error.
     */
    #[Pure]
    #[TentativeType]
    public function getSymbol(#[LanguageAware(['8.0' => 'int'], default: '')] $symbol): string|false {}

    /**
 * <div id="numberformatter.setpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::setPattern</h1>  <h1 class="refname">numfmt_set_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::setPattern</span> -- <span class="refname">numfmt_set_pattern</span> — <span class="dc-title">Set formatter pattern</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.setpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::setPattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_set_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set the pattern used by the formatter. Can not be used on a rule-based   formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.setpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       Pattern in syntax described in       <a href="https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classDecimalFormat.html" class="link external">»&nbsp;ICU DecimalFormat       documentation</a>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.setpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.setpattern-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2494">   <p><strong>示例 #1 <span class="function"><strong>numfmt_set_pattern()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"#0.# kg"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2495">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">"#0.# kg"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Pattern:&nbsp;#,##0.###<br>1.234.567,891<br>Pattern:&nbsp;#0.#&nbsp;kg<br>1234567,9&nbsp;kg</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.setpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.create.php" class="function" rel="rdfs-seeAlso">numfmt_create()</a> - Create a number formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.getpattern.php" class="function" rel="rdfs-seeAlso">numfmt_get_pattern()</a> - Get formatter pattern</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set formatter pattern
     * @link https://php.net/manual/zh/numberformatter.setpattern.php
     * @param string $pattern <p>
     * Pattern in syntax described in
     * ICU DecimalFormat
     * documentation.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setPattern(#[LanguageAware(['8.0' => 'string'], default: '')] $pattern): bool {}

    /**
 * <div id="numberformatter.getpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getPattern</h1>  <h1 class="refname">numfmt_get_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getPattern</span> -- <span class="refname">numfmt_get_pattern</span> — <span class="dc-title">Get formatter pattern</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.getpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getPattern</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Extract pattern used by the formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.getpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.getpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Pattern <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> that is used by the formatter, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error happens.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.getpattern-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2482">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_pattern()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">numfmt_set_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"#0.# kg"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">numfmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2483">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">"#0.# kg"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Pattern: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">().</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Pattern:&nbsp;#,##0.###<br>1.234.567,891<br>Pattern:&nbsp;#0.#&nbsp;kg<br>1234567,9&nbsp;kg</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.getpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.setpattern.php" class="function" rel="rdfs-seeAlso">numfmt_set_pattern()</a> - Set formatter pattern</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.create.php" class="function" rel="rdfs-seeAlso">numfmt_create()</a> - Create a number formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get formatter pattern
     * @link https://php.net/manual/zh/numberformatter.getpattern.php
     * @return string|false Pattern string that is used by the formatter, or <b>FALSE</b> if an error happens.
     */
    #[Pure]
    #[TentativeType]
    public function getPattern(): string|false {}

    /**
 * <div id="numberformatter.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getLocale</h1>  <h1 class="refname">numfmt_get_locale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getLocale</span> -- <span class="refname">numfmt_get_locale</span> — <span class="dc-title">Get formatter locale</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.getlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get formatter locale name.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.getlocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       You can choose between valid and actual locale (       <strong><span>{@link Locale::VALID_LOCALE}</span></strong>,       <strong><span>{@link Locale::ACTUAL_LOCALE}</span></strong>,       respectively). The default is the actual locale.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The locale name used to create the formatter, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.getlocale-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2481">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_locale()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$req     </span><span style="color: #007700">= </span><span style="color: #DD0000">'fr_FR_PARIS'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt     </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #9876AA">\$req</span><span style="color: #007700">,  </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res_val </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_get_locale</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">VALID_LOCALE </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res_act </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_get_locale</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">ACTUAL_LOCALE </span><span style="color: #007700">);<br></span><span style="color: #9876AA">printf</span><span style="color: #007700">( </span><span style="color: #DD0000">"Requested locale name: %s\nValid locale name: %s\nActual locale name: %s\n"</span><span style="color: #007700">,<br>         </span><span style="color: #9876AA">\$req</span><span style="color: #007700">, </span><span style="color: #9876AA">\$res_val</span><span style="color: #007700">, </span><span style="color: #9876AA">\$res_act </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Requested&nbsp;locale&nbsp;name:&nbsp;fr_FR_PARIS<br>Valid&nbsp;locale&nbsp;name:&nbsp;fr_FR<br>Actual&nbsp;locale&nbsp;name:&nbsp;fr</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.getlocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.create.php" class="function" rel="rdfs-seeAlso">numfmt_create()</a> - Create a number formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get formatter locale
     * @link https://php.net/manual/zh/numberformatter.getlocale.php
     * @param int $type [optional] <p>
     * You can choose between valid and actual locale (
     * <b>Locale::VALID_LOCALE</b>,
     * <b>Locale::ACTUAL_LOCALE</b>,
     * respectively). The default is the actual locale.
     * </p>
     * @return string|false The locale name used to create the formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Locale::VALID_LOCALE, Locale::ACTUAL_LOCALE])] $type = 0
    ): string|false {}

    /**
 * <div id="numberformatter.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getErrorCode</h1>  <h1 class="refname">numfmt_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getErrorCode</span> -- <span class="refname">numfmt_get_error_code</span> — <span class="dc-title">Get formatter's last error code</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get error code from the last function performed by the formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns error code from last formatter call.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.geterrorcode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2477">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_error_code()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt  </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$data </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">numfmt_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Formatter error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2478">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">())) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Formatter error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_message()</a> - Get formatter's last error message</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get formatter's last error code.
     * @link https://php.net/manual/zh/numberformatter.geterrorcode.php
     * @return int error code from last formatter call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="numberformatter.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">NumberFormatter::getErrorMessage</h1>  <h1 class="refname">numfmt_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">NumberFormatter::getErrorMessage</span> -- <span class="refname">numfmt_get_error_message</span> — <span class="dc-title">Get formatter's last error message</span></p> </div> <div class="refsect1 description" id="refsect1-numberformatter.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>NumberFormatter::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>numfmt_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.numberformatter.php" class="type NumberFormatter" style="color:#EAB766">NumberFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get error message from the last function performed by the formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-numberformatter.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.numberformatter.php" class="classname">NumberFormatter</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-numberformatter.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns error message from last formatter call.  </p> </div> <div class="refsect1 examples" id="refsect1-numberformatter.geterrormessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2479">   <p><strong>示例 #1 <span class="function"><strong>numfmt_get_error_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$data </span><span style="color: #007700">= </span><span style="color: #9876AA">numfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">numfmt_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2480">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">NumberFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">DECIMAL </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">1234567.891234567890000</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">numfmt_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-numberformatter.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get formatter's last error message.
     * @link https://php.net/manual/zh/numberformatter.geterrormessage.php
     * @return string error message from last formatter call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string {}
}

/**
 * <div id="class.normalizer" class="reference"> <h1 class="title">The Normalizer class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="normalizer.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Normalization is a process that involves transforming characters and    sequences of characters into a formally-defined underlying representation.    This process is most important when text needs to be compared for sorting    and searching, but it is also used when storing text to ensure that the    text is stored in a consistent representation.   </p>   <p class="para">    The Unicode Consortium has defined a number of normalization forms    reflecting the various needs of applications:    </p><ul class="simplelist">     <li>Normalization Form D (NFD) - Canonical Decomposition</li>     <li>      Normalization Form C (NFC) - Canonical Decomposition followed by      Canonical Composition     </li>     <li>      Normalization Form KD (NFKD) - Compatibility Decomposition     </li>     <li>      Normalization Form KC (NFKC) - Compatibility Decomposition followed by      Canonical Composition     </li>    </ul>    The different forms are defined in terms of a set of transformations on    the text, transformations that are expressed by both an algorithm and a    set of data files.     </div>    <div class="section" id="normalizer.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Normalizer</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.form-d"><var class="varname">FORM_D</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.nfd"><var class="varname">NFD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.form-kd"><var class="varname">FORM_KD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.nfkd"><var class="varname">NFKD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.form-c"><var class="varname">FORM_C</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.nfc"><var class="varname">NFC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.form-kc"><var class="varname">FORM_KC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.nfkc"><var class="varname">NFKC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.form-kc-cf"><var class="varname">FORM_KC_CF</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.normalizer.php#normalizer.constants.nfkc-cf"><var class="varname">NFKC_CF</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/normalizer.getrawdecomposition.php" class="methodname" style="color:#CC7832">getRawDecomposition</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/normalizer.isnormalized.php" class="methodname" style="color:#CC7832">isNormalized</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/normalizer.normalize.php" class="methodname" style="color:#CC7832">normalize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>     </div>    <div class="section" id="intl.normalizer-constants"> <h2 class="title">预定义常量</h2> <p class="para">  The following constants define the normalization form used by the  normalizer:  </p><dl>       <dt id="normalizer.constants.form-c">     <strong><span>{@link Normalizer::FORM_C}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      Normalization Form C (NFC) - Canonical Decomposition followed by      Canonical Composition     </span>    </dd>          <dt id="normalizer.constants.form-d">     <strong><span>{@link Normalizer::FORM_D}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Normalization Form D (NFD) - Canonical Decomposition</span>    </dd>          <dt id="normalizer.constants.nfd">     <strong><span>{@link Normalizer::NFD}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="normalizer.constants.form-kc">     <strong><span>{@link Normalizer::FORM_KC}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      Normalization Form KC (NFKC) - Compatibility Decomposition, followed by      Canonical Composition     </span>    </dd>          <dt id="normalizer.constants.nfkc">     <strong><span>{@link Normalizer::NFKC}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="normalizer.constants.form-kc-cf">     <strong><span>{@link Normalizer::FORM_KC_CF}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="normalizer.constants.form-kd">     <strong><span>{@link Normalizer::FORM_KD}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      Normalization Form KD (NFKD) - Compatibility Decomposition     </span>    </dd>          <dt id="normalizer.constants.nfkd">     <strong><span>{@link Normalizer::NFKD}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="normalizer.constants.nfc">     <strong><span>{@link Normalizer::NFC}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>          <dt id="normalizer.constants.nfkc-cf">     <strong><span>{@link Normalizer::NFKC_CF}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <p class="para"></p>    </dd>     </dl> </div>  <div class="section" id="normalizer.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="http://unicode.org/reports/tr15/" class="link external">»&nbsp;       Unicode Normalization      </a>     </li>     <li>      <a href="http://unicode.org/faq/normalization.html" class="link external">»&nbsp;       Unicode Normalization FAQ      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/transforms/normalization/" class="link external">»&nbsp;       ICU User Guide - Normalization      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/unorm_8h.html" class="link external">»&nbsp;       ICU API Reference - Normalization      </a>     </li>    </ul>     </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <strong><span>Normalizer::NONE</span></strong> has been removed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Normalizer::getRawDecomposition} — Gets the Decomposition_Mapping property for the given UTF-8 encoded code point</li><li>{@link Normalizer::isNormalized} — Checks if the provided string is already in the specified normalization   form</li><li>{@link Normalizer::normalize} — Normalizes the input provided and returns the normalized string</li></ul></div>
 */
class Normalizer
{
    public const NFKC_CF = 48;
    public const FORM_KC_CF = 48;

    /**
     * Default normalization options
     * @link https://secure.php.net/manual/en/class.normalizer.php
     */
    public const OPTION_DEFAULT = "";

    /**
     * No decomposition/composition
     * @link https://secure.php.net/manual/en/class.normalizer.php
     * @removed 8.0
     */
    public const NONE = "1";

    /**
     * Normalization Form D (NFD) - Canonical Decomposition
     * @link https://secure.php.net/manual/en/class.normalizer.php
     */
    public const FORM_D = 4;
    public const NFD = 4;

    /**
     * Normalization Form KD (NFKD) - Compatibility Decomposition
     * @link https://secure.php.net/manual/en/class.normalizer.php
     */
    public const FORM_KD = 8;
    public const NFKD = 8;

    /**
     * Normalization Form C (NFC) - Canonical Decomposition followed by
     * Canonical Composition
     * @link https://secure.php.net/manual/en/class.normalizer.php
     */
    public const FORM_C = 16;
    public const NFC = 16;

    /**
     * Normalization Form KC (NFKC) - Compatibility Decomposition, followed by
     * Canonical Composition
     * @link https://secure.php.net/manual/en/class.normalizer.php
     */
    public const FORM_KC = 32;
    public const NFKC = 32;

    /**
 * <div id="normalizer.normalize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Normalizer::normalize</h1>  <h1 class="refname">normalizer_normalize</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Normalizer::normalize</span> -- <span class="refname">normalizer_normalize</span> — <span class="dc-title">   Normalizes the input provided and returns the normalized string  </span></p> </div> <div class="refsect1 description" id="refsect1-normalizer.normalize-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Normalizer::normalize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>normalizer_normalize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">Normalizes the input provided and returns the normalized string</p> </div> <div class="refsect1 parameters" id="refsect1-normalizer.normalize-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">The input string to normalize</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">form</span></dt>     <dd>      <p class="para">One of the normalization forms.</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-normalizer.normalize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">The normalized string or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.</p> </div> <div class="refsect1 examples" id="refsect1-normalizer.normalize-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2538">   <p><strong>示例 #1     <span class="function"><strong>normalizer_normalize()</strong></span> example   </strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$char_A_ring </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3\x85"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER A WITH RING ABOVE' (U+00C5)<br></span><span style="color: #9876AA">\$char_combining_ring_above </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'COMBINING RING ABOVE' (U+030A)<br> <br></span><span style="color: #9876AA">\$char_1 </span><span style="color: #007700">= </span><span style="color: #9876AA">normalizer_normalize</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_A_ring</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$char_2 </span><span style="color: #007700">= </span><span style="color: #9876AA">normalizer_normalize</span><span style="color: #007700">( </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br> <br>echo </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_1</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">' '</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2539">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$char_A_ring </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3\x85"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER A WITH RING ABOVE' (U+00C5)<br></span><span style="color: #9876AA">\$char_combining_ring_above </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'COMBINING RING ABOVE' (U+030A)<br> <br></span><span style="color: #9876AA">\$char_1 </span><span style="color: #007700">= </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">normalize</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_A_ring</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$char_2 </span><span style="color: #007700">= </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">normalize</span><span style="color: #007700">( </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br> <br>echo </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_1</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">' '</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">   <div class="examplescode"><blockquote style="border:1px gray solid;">%C3%85&nbsp;%C3%85</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-normalizer.normalize-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/normalizer.isnormalized.php" class="function" rel="rdfs-seeAlso">normalizer_is_normalized()</a> - Checks if the provided string is already in the specified normalization   form</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Normalizes the input provided and returns the normalized string
     * @link https://php.net/manual/zh/normalizer.normalize.php
     * @param string $string <p>The input string to normalize</p>
     * @param int $form <p>One of the normalization forms.</p>
     * @return string|false The normalized string or <b>FALSE</b> if an error occurred.
     */
    #[TentativeType]
    public static function normalize(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string,
        #[ElementAvailable(from: '5.3', to: '5.6')] $form,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $form = Normalizer::FORM_C,
        #[ElementAvailable(from: '5.3', to: '5.6')] $arg3
    ): string|false {}

    /**
 * <div id="normalizer.isnormalized" class="refentry"> <div class="refnamediv">  <h1 class="refname">Normalizer::isNormalized</h1>  <h1 class="refname">normalizer_is_normalized</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Normalizer::isNormalized</span> -- <span class="refname">normalizer_is_normalized</span> — <span class="dc-title">   Checks if the provided string is already in the specified normalization   form  </span></p> </div> <div class="refsect1 description" id="refsect1-normalizer.isnormalized-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Normalizer::isNormalized</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>normalizer_is_normalized</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks if the provided string is already in the specified normalization   form.  </p> </div> <div class="refsect1 parameters" id="refsect1-normalizer.isnormalized-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">The input string to normalize</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">form</span></dt>     <dd>      <p class="para">       One of the normalization forms.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-normalizer.isnormalized-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"><strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if normalized, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise or if there an error</p> </div> <div class="refsect1 examples" id="refsect1-normalizer.isnormalized-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2536">   <p><strong>示例 #1     <span class="function"><strong>normalizer_is_normalized()</strong></span> example   </strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$char_A_ring </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3\x85"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER A WITH RING ABOVE' (U+00C5)<br></span><span style="color: #9876AA">\$char_combining_ring_above </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'COMBINING RING ABOVE' (U+030A)<br> <br></span><span style="color: #9876AA">\$char_orig </span><span style="color: #007700">= </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$char_norm </span><span style="color: #007700">= </span><span style="color: #9876AA">normalizer_normalize</span><span style="color: #007700">( </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br> <br>echo ( </span><span style="color: #9876AA">normalizer_is_normalized</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_orig</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C</span><span style="color: #007700">) ) ? </span><span style="color: #DD0000">"normalized" </span><span style="color: #007700">: </span><span style="color: #DD0000">"not normalized"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br>echo ( </span><span style="color: #9876AA">normalizer_is_normalized</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_norm</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C</span><span style="color: #007700">) ) ? </span><span style="color: #DD0000">"normalized" </span><span style="color: #007700">: </span><span style="color: #DD0000">"not normalized"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2537">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$char_A_ring </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3\x85"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER A WITH RING ABOVE' (U+00C5)<br></span><span style="color: #9876AA">\$char_combining_ring_above </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'COMBINING RING ABOVE' (U+030A)<br> <br></span><span style="color: #9876AA">\$char_orig </span><span style="color: #007700">= </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$char_norm </span><span style="color: #007700">= </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">normalize</span><span style="color: #007700">( </span><span style="color: #DD0000">'A' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_combining_ring_above</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C </span><span style="color: #007700">);<br> <br>echo ( </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">isNormalized</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_orig</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C</span><span style="color: #007700">) ) ? </span><span style="color: #DD0000">"normalized" </span><span style="color: #007700">: </span><span style="color: #DD0000">"not normalized"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br>echo ( </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">isNormalized</span><span style="color: #007700">(</span><span style="color: #9876AA">\$char_norm</span><span style="color: #007700">, </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">FORM_C</span><span style="color: #007700">) ) ? </span><span style="color: #DD0000">"normalized" </span><span style="color: #007700">: </span><span style="color: #DD0000">"not normalized"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">   <div class="examplescode"><blockquote style="border:1px gray solid;">not&nbsp;normalized;&nbsp;normalized</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-normalizer.isnormalized-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/normalizer.normalize.php" class="function" rel="rdfs-seeAlso">normalizer_normalize()</a> - Normalizes the input provided and returns the normalized string</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Checks if the provided string is already in the specified normalization form.
     * @link https://php.net/manual/zh/normalizer.isnormalized.php
     * @param string $string <p>The input string to normalize</p>
     * @param int $form <p>
     * One of the normalization forms.
     * </p>
     * @return bool <b>TRUE</b> if normalized, <b>FALSE</b> otherwise or if there an error
     */
    #[TentativeType]
    public static function isNormalized(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string,
        #[ElementAvailable(from: '5.3', to: '5.6')] $form,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $form = Normalizer::FORM_C,
        #[ElementAvailable(from: '5.3', to: '5.6')] $arg3
    ): bool {}

    /**
 * <div id="normalizer.getrawdecomposition" class="refentry"> <div class="refnamediv">  <h1 class="refname">Normalizer::getRawDecomposition</h1>  <h1 class="refname">normalizer_get_raw_decomposition</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3, PHP 8)</p><p class="refpurpose"><span class="refname">Normalizer::getRawDecomposition</span> -- <span class="refname">normalizer_get_raw_decomposition</span> — <span class="dc-title">Gets the Decomposition_Mapping property for the given UTF-8 encoded code point</span></p> </div> <div class="refsect1 description" id="refsect1-normalizer.getrawdecomposition-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Normalizer::getRawDecomposition</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>normalizer_get_raw_decomposition</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$form</span><span class="initializer"> = Normalizer::FORM_C</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the Decomposition_Mapping property, as specified in the   Unicode Character Database (UCD), for the given UTF-8 encoded code point.  </p> </div> <div class="refsect1 parameters" id="refsect1-normalizer.getrawdecomposition-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      The input string, which should be a single, UTF-8 encoded, code point.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-normalizer.getrawdecomposition-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> containing the Decomposition_Mapping property, if present in the UCD.  </p>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there is no Decomposition_Mapping property for the character.  </p> </div> <div class="refsect1 examples" id="refsect1-normalizer.getrawdecomposition-examples">  <h3 class="title">示例</h3>  <div class="example" id="normalizer.getrawdecomposition.example.basic">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Normalizer::getRawDecomposition()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$result </span><span style="color: #007700">= </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$strings </span><span style="color: #007700">= [<br>    </span><span style="color: #DD0000">"a"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"\u{FFDA}"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"\u{FDFA}"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">""</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"aa"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"\xF5"</span><span style="color: #007700">,<br>];<br><br>foreach (</span><span style="color: #9876AA">\$strings </span><span style="color: #007700">as </span><span style="color: #9876AA">\$string</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">\$decomposition </span><span style="color: #007700">= </span><span style="color: #9876AA">Normalizer</span><span style="color: #007700">::</span><span style="color: #9876AA">getRawDecomposition</span><span style="color: #007700">(</span><span style="color: #9876AA">\$string</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">// \$decomposition = normalizer_get_raw_decomposition(\$string); Procedural way<br><br>    </span><span style="color: #9876AA">\$error_code </span><span style="color: #007700">= </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>    </span><span style="color: #9876AA">\$error_message </span><span style="color: #007700">= </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br><br>    </span><span style="color: #9876AA">\$string_hex </span><span style="color: #007700">= </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$string</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$result </span><span style="color: #007700">.= </span><span style="color: #DD0000">"---------------------\n"</span><span style="color: #007700">;<br><br>    if (</span><span style="color: #9876AA">\$decomposition </span><span style="color: #007700">=== </span><span style="color: #9876AA">null</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$result </span><span style="color: #007700">.= </span><span style="color: #DD0000">"'</span><span style="color: #9876AA">\$string_hex</span><span style="color: #DD0000">' has no decomposition mapping\n" </span><span style="color: #007700">;<br>    } else {<br>        </span><span style="color: #9876AA">\$result </span><span style="color: #007700">.= </span><span style="color: #DD0000">"'</span><span style="color: #9876AA">\$string_hex</span><span style="color: #DD0000">' has the decomposition mapping '" </span><span style="color: #007700">. </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$decomposition</span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n" </span><span style="color: #007700">;<br>    }<br><br>    </span><span style="color: #9876AA">\$result </span><span style="color: #007700">.= </span><span style="color: #DD0000">"error info: '</span><span style="color: #9876AA">\$error_message</span><span style="color: #DD0000">' (</span><span style="color: #9876AA">\$error_code</span><span style="color: #DD0000">)\n"</span><span style="color: #007700">;<br>}<br><br>echo </span><span style="color: #9876AA">\$result</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">---------------------<br>'61'&nbsp;has&nbsp;no&nbsp;decomposition&nbsp;mapping<br>error&nbsp;info:&nbsp;'U_ZERO_ERROR'&nbsp;(0)<br>---------------------<br>'efbf9a'&nbsp;has&nbsp;the&nbsp;decomposition&nbsp;mapping&nbsp;'e385a1'<br>error&nbsp;info:&nbsp;'U_ZERO_ERROR'&nbsp;(0)<br>---------------------<br>'efb7ba'&nbsp;has&nbsp;the&nbsp;decomposition&nbsp;mapping&nbsp;'d8b5d984d98920d8a7d984d984d98720d8b9d984d98ad98720d988d8b3d984d985'<br>error&nbsp;info:&nbsp;'U_ZERO_ERROR'&nbsp;(0)<br>---------------------<br>''&nbsp;has&nbsp;no&nbsp;decomposition&nbsp;mapping<br>error&nbsp;info:&nbsp;'Input&nbsp;string&nbsp;must&nbsp;be&nbsp;exactly&nbsp;one&nbsp;UTF-8&nbsp;encoded&nbsp;code&nbsp;point&nbsp;long.:&nbsp;U_ILLEGAL_ARGUMENT_ERROR'&nbsp;(1)<br>---------------------<br>'6161'&nbsp;has&nbsp;no&nbsp;decomposition&nbsp;mapping<br>error&nbsp;info:&nbsp;'Input&nbsp;string&nbsp;must&nbsp;be&nbsp;exactly&nbsp;one&nbsp;UTF-8&nbsp;encoded&nbsp;code&nbsp;point&nbsp;long.:&nbsp;U_ILLEGAL_ARGUMENT_ERROR'&nbsp;(1)<br>---------------------<br>'f5'&nbsp;has&nbsp;no&nbsp;decomposition&nbsp;mapping<br>error&nbsp;info:&nbsp;'Code&nbsp;point&nbsp;out&nbsp;of&nbsp;range:&nbsp;U_ILLEGAL_ARGUMENT_ERROR'&nbsp;(1)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-normalizer.getrawdecomposition-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Normalizer::normalize()} - Normalizes the input provided and returns the normalized string</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Normalizer::isNormalized()} - Checks if the provided string is already in the specified normalization   form</span></li>  </ul> </div></div>
 * 
     * @param string $string <p>The input string to normalize</p>
     * @param int $form
     * @return string|null <p>Returns a string containing the Decomposition_Mapping property, if present in the UCD.
     * Returns null if there is no Decomposition_Mapping property for the character.</p>
     * @link https://www.php.net/manual/en/normalizer.getrawdecomposition.php
     * @since 7.3
     */
    #[TentativeType]
    public static function getRawDecomposition(
        string $string,
        #[ElementAvailable(from: '8.0')] int $form = 16
    ): ?string {}
}

/**
 * <div id="class.locale" class="reference"> <h1 class="title">The Locale class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="locale.intro">   <h2 class="title">简介</h2>   <p class="simpara">    A "Locale" is an identifier used to get language, culture, or    regionally-specific behavior from an API. PHP locales are organized and    identified the same way that the CLDR locales used by ICU (and many    vendors of Unix-like operating systems, the Mac, Java, and so forth) use.    Locales are identified using RFC 4646 language tags (which use hyphen, not    underscore) in addition to the more traditional underscore-using    identifiers. Unless otherwise noted the functions in this class are    tolerant of both formats.   </p>   <p class="para">    Examples of identifiers include:    </p><ul class="simplelist">     <li>en-US (English, United States)</li>     <li>zh-Hant-TW (Chinese, Traditional Script, Taiwan)</li>     <li>fr-CA, fr-FR (French for Canada and France respectively)</li>    </ul>      <p class="simpara">    The Locale class (and related procedural functions) are used to interact    with locale identifiers--to verify that an ID is well-formed, valid, etc.    The extensions used by CLDR in UAX #35 (and inherited by ICU) are valid    and used wherever they would be in ICU normally.   </p>   <p class="simpara">    Locales cannot be instantiated as objects. All of the functions/methods    provided are static.   </p>   <p class="simpara">    The null or empty string obtains the "root" locale. The "root" locale is    equivalent to "en_US_POSIX" in CLDR. Language tags (and thus locale    identifiers) are case insensitive. There exists a canonicalization    function to make case match the specification.   </p>  </div>    <div class="section" id="locale.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Locale</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.actual-locale"><var class="varname">ACTUAL_LOCALE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.valid-locale"><var class="varname">VALID_LOCALE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.default-locale"><var class="varname">DEFAULT_LOCALE</var></a></var><span class="initializer"> = null</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.lang-tag"><var class="varname">LANG_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.extlang-tag"><var class="varname">EXTLANG_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.script-tag"><var class="varname">SCRIPT_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.region-tag"><var class="varname">REGION_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.variant-tag"><var class="varname">VARIANT_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.grandfathered-lang-tag"><var class="varname">GRANDFATHERED_LANG_TAG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.locale.php#locale.constants.private-tag"><var class="varname">PRIVATE_TAG</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.acceptfromhttp.php" class="methodname" style="color:#CC7832">acceptFromHttp</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$header</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.canonicalize.php" class="methodname" style="color:#CC7832">canonicalize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.composelocale.php" class="methodname" style="color:#CC7832">composeLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$subtags</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.filtermatches.php" class="methodname" style="color:#CC7832">filterMatches</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getallvariants.php" class="methodname" style="color:#CC7832">getAllVariants</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdefault.php" class="methodname" style="color:#CC7832">getDefault</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdisplaylanguage.php" class="methodname" style="color:#CC7832">getDisplayLanguage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdisplayname.php" class="methodname" style="color:#CC7832">getDisplayName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdisplayregion.php" class="methodname" style="color:#CC7832">getDisplayRegion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdisplayscript.php" class="methodname" style="color:#CC7832">getDisplayScript</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getdisplayvariant.php" class="methodname" style="color:#CC7832">getDisplayVariant</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getkeywords.php" class="methodname" style="color:#CC7832">getKeywords</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getprimarylanguage.php" class="methodname" style="color:#CC7832">getPrimaryLanguage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getregion.php" class="methodname" style="color:#CC7832">getRegion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.getscript.php" class="methodname" style="color:#CC7832">getScript</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.lookup.php" class="methodname" style="color:#CC7832">lookup</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$defaultLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.parselocale.php" class="methodname" style="color:#CC7832">parseLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/locale.setdefault.php" class="methodname" style="color:#CC7832">setDefault</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>   }</div>     </div>    <div class="section" id="intl.locale-constants"> <h2 class="title">预定义常量</h2> <p class="para">  </p><dl>       <dt id="locale.constants.default-locale">     <strong><span>{@link Locale::DEFAULT_LOCALE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>    </dt>    <dd>     <span class="simpara">      Used as locale parameter with the methods of the various locale affected classes,      such as NumberFormatter. This constant would make the methods to use default      locale.      </span>    </dd>     </dl>  <p class="para">  These constants describe the choice of the locale for the getLocale method of  different classes.  </p><dl>       <dt id="locale.constants.actual-locale">     <strong><span>{@link Locale::ACTUAL_LOCALE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">This is locale the data actually comes from.</span>    </dd>          <dt id="locale.constants.valid-locale">     <strong><span>{@link Locale::VALID_LOCALE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">This is the most specific locale supported by ICU.</span>    </dd>     </dl>  <div class="section" id="intl.locale-constants.subtags">  <h2 class="title">Locale Subtags</h2>  <p class="para">   These constants define how the Locales are parsed or composed. They should   be used as keys in the argument array to <span class="function"><a href="https://php.net/manual/zh/locale.composelocale.php" class="function">locale_compose()</a></span>   and are returned from <span class="function"><a href="https://php.net/manual/zh/locale.parselocale.php" class="function">locale_parse()</a></span>   as keys of the returned associative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>.   </p><dl>         <dt id="locale.constants.lang-tag">      <strong><span>{@link Locale::LANG_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Language subtag</span>     </dd>             <dt id="locale.constants.extlang-tag">      <strong><span>{@link Locale::EXTLANG_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Extended language subtag</span>     </dd>             <dt id="locale.constants.script-tag">      <strong><span>{@link Locale::SCRIPT_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Script subtag</span>     </dd>             <dt id="locale.constants.region-tag">      <strong><span>{@link Locale::REGION_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Region subtag</span>     </dd>             <dt id="locale.constants.variant-tag">      <strong><span>{@link Locale::VARIANT_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Variant subtag</span>     </dd>             <dt id="locale.constants.grandfathered-lang-tag">      <strong><span>{@link Locale::GRANDFATHERED_LANG_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Grandfathered Language subtag</span>     </dd>             <dt id="locale.constants.private-tag">      <strong><span>{@link Locale::PRIVATE_TAG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>     </dt>     <dd>      <span class="simpara">Private subtag</span>     </dd>       </dl>   </div></div>  <div class="section" id="locale.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="https://datatracker.ietf.org/doc/html/rfc4646" class="link external">»&nbsp;RFC 4646 - Tags for Identifying Languages</a>     </li>     <li>      <a href="https://datatracker.ietf.org/doc/html/rfc4647" class="link external">»&nbsp;RFC 4647 - Matching of Language Tags</a>     </li>     <li>      <a href="http://www.unicode.org/cldr/" class="link external">»&nbsp;Unicode CLDR Project:Common Locale Data Repository</a>     </li>     <li>      <a href="http://www.iana.org/assignments/language-subtag-registry" class="link external">»&nbsp;IANA Language Subtags Registry</a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/locale/" class="link external">»&nbsp;ICU User Guide - Locale</a>     </li>     <li>      <a href="https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/uloc_8h.html" class="link external">»&nbsp;ICU Locale api</a>     </li>    </ul>     </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Locale::acceptFromHttp} — Tries to find out best available locale based on HTTP "Accept-Language" header</li><li>{@link Locale::canonicalize} — Canonicalize the locale string</li><li>{@link Locale::composeLocale} — Returns a correctly ordered and delimited locale ID</li><li>{@link Locale::filterMatches} — Checks if a language tag filter matches with locale</li><li>{@link Locale::getAllVariants} — Gets the variants for the input locale</li><li>{@link Locale::getDefault} — Gets the default locale value from the INTL global 'default_locale'</li><li>{@link Locale::getDisplayLanguage} — Returns an appropriately localized display name for language of the inputlocale</li><li>{@link Locale::getDisplayName} — Returns an appropriately localized display name for the input locale</li><li>{@link Locale::getDisplayRegion} — Returns an appropriately localized display name for region of the input locale</li><li>{@link Locale::getDisplayScript} — Returns an appropriately localized display name for script of the input locale</li><li>{@link Locale::getDisplayVariant} — Returns an appropriately localized display name for variants of the input locale</li><li>{@link Locale::getKeywords} — Gets the keywords for the input locale</li><li>{@link Locale::getPrimaryLanguage} — Gets the primary language for the input locale</li><li>{@link Locale::getRegion} — Gets the region for the input locale</li><li>{@link Locale::getScript} — Gets the script for the input locale</li><li>{@link Locale::lookup} — Searches the language tag list for the best match to the language</li><li>{@link Locale::parseLocale} — Returns a key-value array of locale ID subtag elements</li><li>{@link Locale::setDefault} — Sets the default runtime locale</li></ul></div>
 */
class Locale
{
    /**
     * This is locale the data actually comes from.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const ACTUAL_LOCALE = 0;

    /**
     * This is the most specific locale supported by ICU.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const VALID_LOCALE = 1;

    /**
     * Used as locale parameter with the methods of the various locale affected classes,
     * such as NumberFormatter. This constant would make the methods to use default
     * locale.
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const DEFAULT_LOCALE = null;

    /**
     * Language subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const LANG_TAG = "language";

    /**
     * Extended language subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const EXTLANG_TAG = "extlang";

    /**
     * Script subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const SCRIPT_TAG = "script";

    /**
     * Region subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const REGION_TAG = "region";

    /**
     * Variant subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const VARIANT_TAG = "variant";

    /**
     * Grandfathered Language subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const GRANDFATHERED_LANG_TAG = "grandfathered";

    /**
     * Private subtag
     * @link https://php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants
     */
    public const PRIVATE_TAG = "private";

    /**
 * <div id="locale.getdefault" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDefault</h1>  <h1 class="refname">locale_get_default</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDefault</span> -- <span class="refname">locale_get_default</span> — <span class="dc-title">Gets the default locale value from the INTL global 'default_locale'</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdefault-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDefault</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_default</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Gets the default locale value. At the PHP initialization this value is set   to 'intl.default_locale' value from <var class="filename">php.ini</var> if that value exists or    from ICU's function uloc_getDefault().  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdefault-parameters">  <h3 class="title">参数</h3>  <p class="para">  </p> </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdefault-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The current runtime locale  </p> </div> <div class="refsect1 examples" id="refsect1-locale.getdefault-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2509">   <p><strong>示例 #1 <span class="function"><strong>locale_get_default()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">locale_get_default</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br></span><span style="color: #9876AA">locale_set_default</span><span style="color: #007700">(</span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">locale_get_default</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2510">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDefault</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br></span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">setDefault</span><span style="color: #007700">(</span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDefault</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">de-DE;&nbsp;fr</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdefault-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.setdefault.php" class="function" rel="rdfs-seeAlso">locale_set_default()</a> - Sets the default runtime locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the default locale value from the INTL global 'default_locale'
     * @link https://php.net/manual/zh/locale.getdefault.php
     * @return string The current runtime locale
     */
    #[TentativeType]
    public static function getDefault(): string {}

    /**
 * <div id="locale.setdefault" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::setDefault</h1>  <h1 class="refname">locale_set_default</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::setDefault</span> -- <span class="refname">locale_set_default</span> — <span class="dc-title">Sets the default runtime locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.setdefault-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::setDefault</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_set_default</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets the default runtime locale to <span class="parameter" style="color:#3A95FF">locale</span>. This changes the value of INTL   global 'default_locale' locale identifier. UAX #35 extensions are accepted.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.setdefault-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       Is a BCP 47 compliant language tag.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.setdefault-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-locale.setdefault-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2533">   <p><strong>示例 #1 <span class="function"><strong>locale_set_default()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>locale_set_default</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">locale_get_default</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2534">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">setDefault</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDefault</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">de-DE</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.setdefault-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdefault.php" class="function" rel="rdfs-seeAlso">locale_get_default()</a> - Gets the default locale value from the INTL global 'default_locale'</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * sets the default runtime locale
     * @link https://php.net/manual/zh/locale.setdefault.php
     * @param string $locale <p>
     * Is a BCP 47 compliant language tag containing the
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public static function setDefault(#[LanguageAware(['8.0' => 'string'], default: '')] $locale) {}

    /**
 * <div id="locale.getprimarylanguage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getPrimaryLanguage</h1>  <h1 class="refname">locale_get_primary_language</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getPrimaryLanguage</span> -- <span class="refname">locale_get_primary_language</span> — <span class="dc-title">Gets the primary language for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getprimarylanguage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getPrimaryLanguage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_primary_language</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the primary language for the input locale  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getprimarylanguage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the primary language code from      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getprimarylanguage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The language code associated with the language.  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-locale.getprimarylanguage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2523">   <p><strong>示例 #1 <span class="function"><strong>locale_get_primary_language()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_primary_language</span><span style="color: #007700">(</span><span style="color: #DD0000">'zh-Hant'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2524">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getPrimaryLanguage</span><span style="color: #007700">(</span><span style="color: #DD0000">'zh-Hant'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">zh</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getprimarylanguage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getscript.php" class="function" rel="rdfs-seeAlso">locale_get_script()</a> - Gets the script for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getregion.php" class="function" rel="rdfs-seeAlso">locale_get_region()</a> - Gets the region for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getallvariants.php" class="function" rel="rdfs-seeAlso">locale_get_all_variants()</a> - Gets the variants for the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the primary language for the input locale
     * @link https://php.net/manual/zh/locale.getprimarylanguage.php
     * @param string $locale <p>
     * The locale to extract the primary language code from
     * </p>
     * @return string|null The language code associated with the language or <b>NULL</b> in case of error.
     */
    #[TentativeType]
    public static function getPrimaryLanguage(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?string {}

    /**
 * <div id="locale.getscript" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getScript</h1>  <h1 class="refname">locale_get_script</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getScript</span> -- <span class="refname">locale_get_script</span> — <span class="dc-title">Gets the script for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getscript-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getScript</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_script</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the script for the input locale.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getscript-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the script code from      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getscript-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The script subtag for the locale or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if not present  </p> </div> <div class="refsect1 examples" id="refsect1-locale.getscript-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2527">   <p><strong>示例 #1 <span class="function"><strong>locale_get_script()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_script</span><span style="color: #007700">(</span><span style="color: #DD0000">'sr-Cyrl'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2528">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getScript</span><span style="color: #007700">(</span><span style="color: #DD0000">'sr-Cyrl'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Cyrl</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getscript-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getprimarylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_primary_language()</a> - Gets the primary language for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getregion.php" class="function" rel="rdfs-seeAlso">locale_get_region()</a> - Gets the region for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getallvariants.php" class="function" rel="rdfs-seeAlso">locale_get_all_variants()</a> - Gets the variants for the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the script for the input locale
     * @link https://php.net/manual/zh/locale.getscript.php
     * @param string $locale <p>
     * The locale to extract the script code from
     * </p>
     * @return string|null The script subtag for the locale or <b>NULL</b> if not present
     */
    #[TentativeType]
    public static function getScript(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?string {}

    /**
 * <div id="locale.getregion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getRegion</h1>  <h1 class="refname">locale_get_region</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getRegion</span> -- <span class="refname">locale_get_region</span> — <span class="dc-title">Gets the region for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getregion-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getRegion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_region</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Gets the region for the input locale.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getregion-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the region code from      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getregion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The region subtag for the locale or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if not present  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-locale.getregion-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2525">   <p><strong>示例 #1 <span class="function"><strong>locale_get_region()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_region</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-CH-1901'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2526">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getRegion</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-CH-1901'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">CH</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getregion-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getprimarylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_primary_language()</a> - Gets the primary language for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getscript.php" class="function" rel="rdfs-seeAlso">locale_get_script()</a> - Gets the script for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getallvariants.php" class="function" rel="rdfs-seeAlso">locale_get_all_variants()</a> - Gets the variants for the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the region for the input locale
     * @link https://php.net/manual/zh/locale.getregion.php
     * @param string $locale <p>
     * The locale to extract the region code from
     * </p>
     * @return string|null The region subtag for the locale or <b>NULL</b> if not present
     */
    #[TentativeType]
    public static function getRegion(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?string {}

    /**
 * <div id="locale.getkeywords" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getKeywords</h1>  <h1 class="refname">locale_get_keywords</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getKeywords</span> -- <span class="refname">locale_get_keywords</span> — <span class="dc-title">Gets the keywords for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getkeywords-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getKeywords</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_keywords</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Gets the keywords for the input locale.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getkeywords-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the keywords from      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getkeywords-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Associative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing the keyword-value pairs for this locale  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-locale.getkeywords-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2521">   <p><strong>示例 #1 <span class="function"><strong>locale_get_keywords()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$keywords_arr </span><span style="color: #007700">= </span><span style="color: #9876AA">locale_get_keywords</span><span style="color: #007700">(</span><span style="color: #DD0000">'de_DE@currency=EUR;collation=PHONEBOOK'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$keywords_arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$keywords_arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> = </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2522">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$keywords_arr </span><span style="color: #007700">= </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getKeywords</span><span style="color: #007700">(</span><span style="color: #DD0000">'de_DE@currency=EUR;collation=PHONEBOOK'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$keywords_arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$keywords_arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> = </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">collation&nbsp;=&nbsp;PHONEBOOK<br>currency&nbsp;=&nbsp;EUR</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getkeywords-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getallvariants.php" class="function" rel="rdfs-seeAlso">locale_get_all_variants()</a> - Gets the variants for the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the keywords for the input locale
     * @link https://php.net/manual/zh/locale.getkeywords.php
     * @param string $locale <p>
     * The locale to extract the keywords from
     * </p>
     * @return array|false|null Associative array containing the keyword-value pairs for this locale
     */
    #[TentativeType]
    public static function getKeywords(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): array|false|null {}

    /**
 * <div id="locale.getdisplayscript" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDisplayScript</h1>  <h1 class="refname">locale_get_display_script</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDisplayScript</span> -- <span class="refname">locale_get_display_script</span> — <span class="dc-title">Returns an appropriately localized display name for script of the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdisplayscript-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDisplayScript</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_display_script</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an appropriately localized display name for script of the input   locale. If is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> then the default locale is used.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdisplayscript-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to return a display script for      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displayLocale</span></dt>     <dd>      <p class="para">       Optional format locale to use to display the script name      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdisplayscript-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Display name of the script for the <span class="parameter" style="color:#3A95FF">locale</span> in the format appropriate for   <span class="parameter" style="color:#3A95FF">displayLocale</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-locale.getdisplayscript-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">displayLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.getdisplayscript-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2517">   <p><strong>示例 #1 <span class="function"><strong>locale_get_display_script()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_display_script</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_script</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_script</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2518">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayScript</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayScript</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayScript</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Latin;<br>latin;<br>Lateinisch</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdisplayscript-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayname.php" class="function" rel="rdfs-seeAlso">locale_get_display_name()</a> - Returns an appropriately localized display name for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplaylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_display_language()</a> - Returns an appropriately localized display name for language of the inputlocale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayregion.php" class="function" rel="rdfs-seeAlso">locale_get_display_region()</a> - Returns an appropriately localized display name for region of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayvariant.php" class="function" rel="rdfs-seeAlso">locale_get_display_variant()</a> - Returns an appropriately localized display name for variants of the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns an appropriately localized display name for script of the input locale
     * @link https://php.net/manual/zh/locale.getdisplayscript.php
     * @param string $locale <p>
     * The locale to return a display script for
     * </p>
     * @param string $displayLocale <p>
     * Optional format locale to use to display the script name
     * </p>
     * @return string|false Display name of the script for the $locale in the format appropriate for
     * $in_locale.
     */
    #[TentativeType]
    public static function getDisplayScript(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $displayLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $displayLocale = null
    ): string|false {}

    /**
 * <div id="locale.getdisplayregion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDisplayRegion</h1>  <h1 class="refname">locale_get_display_region</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDisplayRegion</span> -- <span class="refname">locale_get_display_region</span> — <span class="dc-title">Returns an appropriately localized display name for region of the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdisplayregion-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDisplayRegion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_display_region</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an appropriately localized display name for region of the input   locale. If is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> then the default locale is used.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdisplayregion-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to return a display region for.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displayLocale</span></dt>     <dd>      <p class="para">       Optional format locale to use to display the region name      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdisplayregion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Display name of the region for the <span class="parameter" style="color:#3A95FF">locale</span> in the format appropriate for   <span class="parameter" style="color:#3A95FF">displayLocale</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-locale.getdisplayregion-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">displayLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.getdisplayregion-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2515">   <p><strong>示例 #1 <span class="function"><strong>locale_get_display_region()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_display_region</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_region</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_region</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2516">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayRegion</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayRegion</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayRegion</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Italy;<br>Italie;<br>Italien</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdisplayregion-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayname.php" class="function" rel="rdfs-seeAlso">locale_get_display_name()</a> - Returns an appropriately localized display name for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplaylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_display_language()</a> - Returns an appropriately localized display name for language of the inputlocale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayscript.php" class="function" rel="rdfs-seeAlso">locale_get_display_script()</a> - Returns an appropriately localized display name for script of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayvariant.php" class="function" rel="rdfs-seeAlso">locale_get_display_variant()</a> - Returns an appropriately localized display name for variants of the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns an appropriately localized display name for region of the input locale
     * @link https://php.net/manual/zh/locale.getdisplayregion.php
     * @param string $locale <p>
     * The locale to return a display region for.
     * </p>
     * @param string $displayLocale <p>
     * Optional format locale to use to display the region name
     * </p>
     * @return string|false display name of the region for the $locale in the format appropriate for
     * $in_locale.
     */
    #[TentativeType]
    public static function getDisplayRegion(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $displayLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $displayLocale = null
    ): string|false {}

    /**
 * <div id="locale.getdisplayname" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDisplayName</h1>  <h1 class="refname">locale_get_display_name</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDisplayName</span> -- <span class="refname">locale_get_display_name</span> — <span class="dc-title">Returns an appropriately localized display name for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdisplayname-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDisplayName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_display_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an appropriately localized display name for the input locale. If <span class="parameter" style="color:#3A95FF">locale</span> is   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> then the default locale is used.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdisplayname-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to return a display name for.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displayLocale</span></dt>     <dd>      <p class="para">optional format locale</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdisplayname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Display name of the locale in the format appropriate for <span class="parameter" style="color:#3A95FF">displayLocale</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-locale.getdisplayname-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">displayLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.getdisplayname-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2513">   <p><strong>示例 #1 <span class="function"><strong>locale_get_display_name()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_display_name</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_name</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_name</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2514">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayName</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayName</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayName</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Slovenian&nbsp;(Latin,&nbsp;Italy,&nbsp;Natisone&nbsp;dialect);<br>slov\xc3\xa8ne&nbsp;(latin,&nbsp;Italie,&nbsp;dialecte&nbsp;de&nbsp;Natisone;<br>Slowenisch&nbsp;(Lateinisch,&nbsp;Italien,&nbsp;NEDIS)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdisplayname-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplaylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_display_language()</a> - Returns an appropriately localized display name for language of the inputlocale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayscript.php" class="function" rel="rdfs-seeAlso">locale_get_display_script()</a> - Returns an appropriately localized display name for script of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayregion.php" class="function" rel="rdfs-seeAlso">locale_get_display_region()</a> - Returns an appropriately localized display name for region of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayvariant.php" class="function" rel="rdfs-seeAlso">locale_get_display_variant()</a> - Returns an appropriately localized display name for variants of the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns an appropriately localized display name for the input locale
     * @link https://php.net/manual/zh/locale.getdisplayname.php
     * @param string $locale <p>
     * The locale to return a display name for.
     * </p>
     * @param string $displayLocale <p>optional format locale</p>
     * @return string|false Display name of the locale in the format appropriate for $in_locale.
     */
    #[TentativeType]
    public static function getDisplayName(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $displayLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $displayLocale = null
    ): string|false {}

    /**
 * <div id="locale.getdisplaylanguage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDisplayLanguage</h1>  <h1 class="refname">locale_get_display_language</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDisplayLanguage</span> -- <span class="refname">locale_get_display_language</span> — <span class="dc-title">Returns an appropriately localized display name for language of the inputlocale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdisplaylanguage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDisplayLanguage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_display_language</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an appropriately localized display name for language of the input   locale. If is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> then the default locale is used.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdisplaylanguage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to return a display language for      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displayLocale</span></dt>     <dd>      <p class="para">       Optional format locale to use to display the language name      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdisplaylanguage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Display name of the language for the <span class="parameter" style="color:#3A95FF">locale</span> in the format appropriate for   <span class="parameter" style="color:#3A95FF">displayLocale</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-locale.getdisplaylanguage-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">displayLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.getdisplaylanguage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2511">   <p><strong>示例 #1 <span class="function"><strong>locale_get_display_language()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_display_language</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_language</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_language</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2512">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayLanguage</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayLanguage</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayLanguage</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Slovenian;<br>slov\xc3\xa8ne;<br>Slowenisch</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdisplaylanguage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayname.php" class="function" rel="rdfs-seeAlso">locale_get_display_name()</a> - Returns an appropriately localized display name for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayscript.php" class="function" rel="rdfs-seeAlso">locale_get_display_script()</a> - Returns an appropriately localized display name for script of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayregion.php" class="function" rel="rdfs-seeAlso">locale_get_display_region()</a> - Returns an appropriately localized display name for region of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayvariant.php" class="function" rel="rdfs-seeAlso">locale_get_display_variant()</a> - Returns an appropriately localized display name for variants of the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns an appropriately localized display name for language of the inputlocale
     * @link https://php.net/manual/zh/locale.getdisplaylanguage.php
     * @param string $locale <p>
     * The locale to return a display language for
     * </p>
     * @param string $displayLocale <p>
     * Optional format locale to use to display the language name
     * </p>
     * @return string|false display name of the language for the $locale in the format appropriate for
     * $in_locale.
     */
    #[TentativeType]
    public static function getDisplayLanguage(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $displayLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $displayLocale = null
    ): string|false {}

    /**
 * <div id="locale.getdisplayvariant" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getDisplayVariant</h1>  <h1 class="refname">locale_get_display_variant</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getDisplayVariant</span> -- <span class="refname">locale_get_display_variant</span> — <span class="dc-title">Returns an appropriately localized display name for variants of the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getdisplayvariant-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getDisplayVariant</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_display_variant</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$displayLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an appropriately localized display name for variants of the input   locale. If is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> then the default locale is used.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getdisplayvariant-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to return a display variant for      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displayLocale</span></dt>     <dd>      <p class="para">       Optional format locale to use to display the variant name      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getdisplayvariant-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Display name of the variant for the <span class="parameter" style="color:#3A95FF">locale</span> in the format appropriate for   <span class="parameter" style="color:#3A95FF">displayLocale</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-locale.getdisplayvariant-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">displayLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.getdisplayvariant-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2519">   <p><strong>示例 #1 <span class="function"><strong>locale_get_display_variant()</strong></span> example</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">locale_get_display_variant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_variant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">locale_get_display_variant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2520">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayVariant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayVariant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">";\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayVariant</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Natisone&nbsp;dialect;<br>dialecte&nbsp;de&nbsp;Natisone;<br>NEDIS</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getdisplayvariant-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayname.php" class="function" rel="rdfs-seeAlso">locale_get_display_name()</a> - Returns an appropriately localized display name for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplaylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_display_language()</a> - Returns an appropriately localized display name for language of the inputlocale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayscript.php" class="function" rel="rdfs-seeAlso">locale_get_display_script()</a> - Returns an appropriately localized display name for script of the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getdisplayregion.php" class="function" rel="rdfs-seeAlso">locale_get_display_region()</a> - Returns an appropriately localized display name for region of the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns an appropriately localized display name for variants of the input locale
     * @link https://php.net/manual/zh/locale.getdisplayvariant.php
     * @param string $locale <p>
     * The locale to return a display variant for
     * </p>
     * @param string $displayLocale <p>
     * Optional format locale to use to display the variant name
     * </p>
     * @return string|false Display name of the variant for the $locale in the format appropriate for
     * $in_locale.
     */
    #[TentativeType]
    public static function getDisplayVariant(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $displayLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $displayLocale = null
    ): string|false {}

    /**
 * <div id="locale.composelocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::composeLocale</h1>  <h1 class="refname">locale_compose</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::composeLocale</span> -- <span class="refname">locale_compose</span> — <span class="dc-title">Returns a correctly ordered and delimited locale ID</span></p> </div> <div class="refsect1 description" id="refsect1-locale.composelocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::composeLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$subtags</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_compose</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$subtags</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns a correctly ordered and delimited locale ID the keys identify the   particular locale ID subtags, and the values are the associated subtag   values.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.composelocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">subtags</span></dt>     <dd>      <p class="para">       An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing a list of key-value pairs, where the keys identify       the particular locale ID subtags, and the values are the associated       subtag values.       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         The <span class="literal">'variant'</span> and <span class="literal">'private'</span> subtags can take maximum 15 values         whereas <span class="literal">'extlang'</span> can take maximum 3 values. For instance, variants are allowed         with the suffix ranging from 0-14. Hence the keys for the input array         can be <span class="literal">variant0</span>, <span class="literal">variant1</span>, …,<span class="literal">variant14</span>. In the returned locale id,         the subtag is ordered by suffix resulting in <span class="literal">variant0</span> followed by         <span class="literal">variant1</span> followed by <span class="literal">variant2</span> and so on.        </p>        <p class="para">         Alternatively, the <span class="literal">'variant'</span>, <span class="literal">'private'</span> and <span class="literal">'extlang'</span> values can be specified         as array under specific key (e.g. <span class="literal">'variant'</span>).         In this case no limits on the number of recognized subtags apply.        </p>       </blockquote>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.composelocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The corresponding locale identifier, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> when <span class="parameter" style="color:#3A95FF">subtags</span> is empty.  </p> </div> <div class="refsect1 examples" id="refsect1-locale.composelocale-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2502">   <p><strong>示例 #1 <span class="function"><strong>locale_compose()</strong></span> example</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'language'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'en'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'script'  </span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'Hans'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'region'  </span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'CN'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'variant2'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'rozaj'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'variant1'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'nedis'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'private1'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'prv1'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'private2'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'prv2'</span><span style="color: #007700">,<br>);<br>echo </span><span style="color: #9876AA">locale_compose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2503">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'language'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'en' </span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'script'  </span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'Hans'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'region'  </span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'CN'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'variant2'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'rozaj'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'variant1'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'nedis'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'private1'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'prv1'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'private2'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'prv2'</span><span style="color: #007700">,<br>);<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">composeLocale</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Locale:&nbsp;en_Hans_CN_nedis_rozaj_x_prv1_prv2</blockquote></div>  </div>  <div class="example" id="locale.composelocale.example.limits">   <p><strong>示例 #3 Subtag limits</strong></p>   <div class="example-contents"><p>    If <span class="parameter" style="color:#3A95FF">subtags</span> are given as separate keys with numeric suffix,    unsupported keys are silently ignored (in this case <span class="literal">'extlang3'</span>),    and ordered in the result by numeric suffix.    There are no limits, if subtags are given as <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>; the order is as given.   </p></div>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'language' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'en'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'script'   </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Hans'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'region'   </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CN'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'extlang3' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'d'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'extlang2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'c'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'extlang1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'b'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'extlang0' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'a'</span><span style="color: #007700">,<br>);<br>echo </span><span style="color: #9876AA">locale_compose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'language' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'en'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'script'   </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Hans'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'region'   </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'CN'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'extlang'  </span><span style="color: #007700">=&gt; [</span><span style="color: #DD0000">'a'</span><span style="color: #007700">, </span><span style="color: #DD0000">'b'</span><span style="color: #007700">, </span><span style="color: #DD0000">'c'</span><span style="color: #007700">, </span><span style="color: #DD0000">'d'</span><span style="color: #007700">],<br>);<br>echo </span><span style="color: #9876AA">locale_compose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">en_a_b_c_Hans_CN<br>en_a_b_c_d_Hans_CN</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.composelocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.parselocale.php" class="function" rel="rdfs-seeAlso">locale_parse()</a> - Returns a key-value array of locale ID subtag elements</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns a correctly ordered and delimited locale ID
     * @link https://php.net/manual/zh/locale.composelocale.php
     * @param array $subtags <p>
     * an array containing a list of key-value pairs, where the keys identify
     * the particular locale ID subtags, and the values are the associated
     * subtag values.
     * <p>
     * The 'variant' and 'private' subtags can take maximum 15 values
     * whereas 'extlang' can take maximum 3 values.e.g. Variants are allowed
     * with the suffix ranging from 0-14. Hence the keys for the input array
     * can be variant0, variant1, ...,variant14. In the returned locale id,
     * the subtag is ordered by suffix resulting in variant0 followed by
     * variant1 followed by variant2 and so on.
     * </p>
     * <p>
     * The 'variant', 'private' and 'extlang' multiple values can be specified both
     * as array under specific key (e.g. 'variant') and as multiple numbered keys
     * (e.g. 'variant0', 'variant1', etc.).
     * </p>
     * </p>
     * @return string|false The corresponding locale identifier.
     */
    #[TentativeType]
    public static function composeLocale(array $subtags): string|false {}

    /**
 * <div id="locale.parselocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::parseLocale</h1>  <h1 class="refname">locale_parse</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::parseLocale</span> -- <span class="refname">locale_parse</span> — <span class="dc-title">Returns a key-value array of locale ID subtag elements</span></p> </div> <div class="refsect1 description" id="refsect1-locale.parselocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::parseLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   Returns a key-value array of locale ID subtag elements.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.parselocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the subtag array from. Note: The 'variant' and       'private' subtags can take maximum 15 values whereas 'extlang' can take       maximum 3 values.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.parselocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing a list of key-value pairs, where the keys   identify the particular locale ID subtags, and the values are the   associated subtag values. The array will be ordered as the locale id   subtags e.g. in the locale id if variants are '-varX-varY-varZ' then the   returned array will have variant0=&gt;varX , variant1=&gt;varY ,   variant2=&gt;varZ  </p>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> when the length of <span class="parameter" style="color:#3A95FF">locale</span> exceeds   <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-locale.parselocale-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2531">   <p><strong>示例 #1 <span class="function"><strong>locale_parse()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">locale_parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> , "</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2532">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">parseLocale</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl-Latn-IT-nedis'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> , "</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">language&nbsp;:&nbsp;sl&nbsp;,&nbsp;script&nbsp;:&nbsp;Latn&nbsp;,&nbsp;region&nbsp;:&nbsp;IT&nbsp;,&nbsp;variant0&nbsp;:&nbsp;NEDIS&nbsp;,</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.parselocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.composelocale.php" class="function" rel="rdfs-seeAlso">locale_compose()</a> - Returns a correctly ordered and delimited locale ID</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Returns a key-value array of locale ID subtag elements.
     * @link https://php.net/manual/zh/locale.parselocale.php
     * @param string $locale <p>
     * The locale to extract the subtag array from. Note: The 'variant' and
     * 'private' subtags can take maximum 15 values whereas 'extlang' can take
     * maximum 3 values.
     * </p>
     * @return array|null an array containing a list of key-value pairs, where the keys
     * identify the particular locale ID subtags, and the values are the
     * associated subtag values. The array will be ordered as the locale id
     * subtags e.g. in the locale id if variants are '-varX-varY-varZ' then the
     * returned array will have variant0=&gt;varX , variant1=&gt;varY ,
     * variant2=&gt;varZ
     */
    #[TentativeType]
    public static function parseLocale(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?array {}

    /**
 * <div id="locale.getallvariants" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::getAllVariants</h1>  <h1 class="refname">locale_get_all_variants</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::getAllVariants</span> -- <span class="refname">locale_get_all_variants</span> — <span class="dc-title">Gets the variants for the input locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.getallvariants-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::getAllVariants</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_get_all_variants</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">   Gets the variants for the input locale  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.getallvariants-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to extract the variants from      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.getallvariants-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing the list of all variants subtag for the locale   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if not present  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-locale.getallvariants-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2507">   <p><strong>示例 #1 <span class="function"><strong>locale_get_all_variants()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">locale_get_all_variants</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl_IT_NEDIS_ROJAZ_1901'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2508">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br> \$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getAllVariants</span><span style="color: #007700">(</span><span style="color: #DD0000">'sl_IT_NEDIS_ROJAZ_1901'</span><span style="color: #007700">);<br> </span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">\$arr </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;'NEDIS',<br>&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;'ROJAZ',<br>&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;'1901',<br>)</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.getallvariants-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.getprimarylanguage.php" class="function" rel="rdfs-seeAlso">locale_get_primary_language()</a> - Gets the primary language for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getscript.php" class="function" rel="rdfs-seeAlso">locale_get_script()</a> - Gets the script for the input locale</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/locale.getregion.php" class="function" rel="rdfs-seeAlso">locale_get_region()</a> - Gets the region for the input locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Gets the variants for the input locale
     * @link https://php.net/manual/zh/locale.getallvariants.php
     * @param string $locale <p>
     * The locale to extract the variants from
     * </p>
     * @return array|null The array containing the list of all variants subtag for the locale
     * or <b>NULL</b> if not present
     */
    #[TentativeType]
    public static function getAllVariants(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?array {}

    /**
 * <div id="locale.filtermatches" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::filterMatches</h1>  <h1 class="refname">locale_filter_matches</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::filterMatches</span> -- <span class="refname">locale_filter_matches</span> — <span class="dc-title">Checks if a language tag filter matches with locale</span></p> </div> <div class="refsect1 description" id="refsect1-locale.filtermatches-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::filterMatches</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_filter_matches</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   Checks if a <span class="parameter" style="color:#3A95FF">languageTag</span> filter matches with <span class="parameter" style="color:#3A95FF">locale</span> according to RFC 4647's   basic filtering algorithm  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.filtermatches-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">languageTag</span></dt>     <dd>      <p class="para">       The language tag to check      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The language range to check against      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">canonicalize</span></dt>     <dd>     <p class="para">      If true, the arguments will be converted to canonical form before      matching.     </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.filtermatches-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if <span class="parameter" style="color:#3A95FF">locale</span> matches <span class="parameter" style="color:#3A95FF">languageTag</span> <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 examples" id="refsect1-locale.filtermatches-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2505">   <p><strong>示例 #1 <span class="function"><strong>locale_filter_matches()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo (</span><span style="color: #9876AA">locale_filter_matches</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DEVA'</span><span style="color: #007700">,</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)) ? </span><span style="color: #DD0000">"Matches" </span><span style="color: #007700">: </span><span style="color: #DD0000">"Does not match"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br>echo (</span><span style="color: #9876AA">locale_filter_matches</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DE_1996'</span><span style="color: #007700">,</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)) ? </span><span style="color: #DD0000">"Matches" </span><span style="color: #007700">: </span><span style="color: #DD0000">"Does not match"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2506">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo (</span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">filterMatches</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DEVA'</span><span style="color: #007700">,</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)) ? </span><span style="color: #DD0000">"Matches" </span><span style="color: #007700">: </span><span style="color: #DD0000">"Does not match"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'; '</span><span style="color: #007700">;<br>echo (</span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">filterMatches</span><span style="color: #007700">(</span><span style="color: #DD0000">'de-DE-1996'</span><span style="color: #007700">,</span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)) ? </span><span style="color: #DD0000">"Matches" </span><span style="color: #007700">: </span><span style="color: #DD0000">"Does not match"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Does&nbsp;not&nbsp;match;&nbsp;Matches</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.filtermatches-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.lookup.php" class="function" rel="rdfs-seeAlso">locale_lookup()</a> - Searches the language tag list for the best match to the language</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Checks if a language tag filter matches with locale
     * @link https://php.net/manual/zh/locale.filtermatches.php
     * @param string $languageTag <p>
     * The language tag to check
     * </p>
     * @param string $locale <p>
     * The language range to check against
     * </p>
     * @param bool $canonicalize <p>
     * If true, the arguments will be converted to canonical form before
     * matching.
     * </p>
     * @return bool|null <b>TRUE</b> if $locale matches $langtag <b>FALSE</b> otherwise.
     */
    #[TentativeType]
    public static function filterMatches(
        #[LanguageAware(['8.0' => 'string'], default: '')] $languageTag,
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $canonicalize,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'bool'], default: '')] $canonicalize = false
    ): ?bool {}

    /**
 * <div id="locale.lookup" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::lookup</h1>  <h1 class="refname">locale_lookup</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::lookup</span> -- <span class="refname">locale_lookup</span> — <span class="dc-title">Searches the language tag list for the best match to the language</span></p> </div> <div class="refsect1 description" id="refsect1-locale.lookup-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::lookup</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$defaultLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_lookup</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$languageTag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$canonicalize</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$defaultLocale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   Searches the items in <span class="parameter" style="color:#3A95FF">languageTag</span> for the best match to   the language range specified in <span class="parameter" style="color:#3A95FF">locale</span> according to   RFC 4647's lookup algorithm.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.lookup-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">languageTag</span></dt>     <dd>      <p class="para">       An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing a list of language tags to compare to       <span class="parameter" style="color:#3A95FF">locale</span>. Maximum 100 items allowed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to use as the language range when matching.      </p>     </dd>                <dt>         <span class="parameter" style="color:#3A95FF">canonicalize</span>       </dt>       <dd>         <p class="para">           If true, the arguments will be converted to canonical form before           matching.         </p>       </dd>               <dt><span class="parameter" style="color:#3A95FF">defaultLocale</span></dt>     <dd>      <p class="para">       The locale to use if no match is found.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.lookup-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The closest matching language tag or default value.  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div> <div class="refsect1 changelog" id="refsect1-locale.lookup-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       <span class="parameter" style="color:#3A95FF">defaultLocale</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-locale.lookup-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2529">   <p><strong>示例 #1 <span class="function"><strong>locale_lookup()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'de-DEVA'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de-DE-1996'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de-De'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">locale_lookup</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">, </span><span style="color: #DD0000">'de-DE-1996-x-prv1-prv2'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2530">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$arr </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'de-DEVA'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de-DE-1996'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'de-De'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">lookup</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">, </span><span style="color: #DD0000">'de-DE-1996-x-prv1-prv2'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">de_de_1996</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.lookup-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.filtermatches.php" class="function" rel="rdfs-seeAlso">locale_filter_matches()</a> - Checks if a language tag filter matches with locale</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Searches the language tag list for the best match to the language
     * @link https://php.net/manual/zh/locale.lookup.php
     * @param array $languageTag <p>
     * An array containing a list of language tags to compare to
     * <i>locale</i>. Maximum 100 items allowed.
     * </p>
     * @param string $locale <p>
     * The locale to use as the language range when matching.
     * </p>
     * @param bool $canonicalize <p>
     * If true, the arguments will be converted to canonical form before
     * matching.
     * </p>
     * @param string $defaultLocale <p>
     * The locale to use if no match is found.
     * </p>
     * @return string|null The closest matching language tag or default value.
     */
    #[TentativeType]
    public static function lookup(
        array $languageTag,
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '5.6')] $canonicalize,
        #[ElementAvailable(from: '5.3', to: '5.6')] $defaultLocale,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'bool'], default: '')] $canonicalize = false,
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string|null'], default: '')] $defaultLocale = null
    ): ?string {}

    /**
 * <div id="locale.canonicalize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::canonicalize</h1>  <h1 class="refname">locale_canonicalize</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::canonicalize</span> -- <span class="refname">locale_canonicalize</span> — <span class="dc-title">Canonicalize the locale string</span></p> </div> <div class="refsect1 description" id="refsect1-locale.canonicalize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::canonicalize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-locale.canonicalize-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-locale.canonicalize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Canonicalized locale string.  </p>  <p class="para">当 <span class="parameter" style="color:#3A95FF">locale</span> 的长度超过 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong> 时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。</p> </div></div>
 * 
     * @link https://php.net/manual/zh/locale.canonicalize.php
     * @param string $locale
     * @return string|null
     */
    #[TentativeType]
    public static function canonicalize(#[LanguageAware(['8.0' => 'string'], default: '')] $locale): ?string {}

    /**
 * <div id="locale.acceptfromhttp" class="refentry"> <div class="refnamediv">  <h1 class="refname">Locale::acceptFromHttp</h1>  <h1 class="refname">locale_accept_from_http</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">Locale::acceptFromHttp</span> -- <span class="refname">locale_accept_from_http</span> — <span class="dc-title">Tries to find out best available locale based on HTTP "Accept-Language" header</span></p> </div> <div class="refsect1 description" id="refsect1-locale.acceptfromhttp-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Locale::acceptFromHttp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$header</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>locale_accept_from_http</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$header</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Tries to find locale that can satisfy the language list that is requested by the   HTTP "Accept-Language" header.  </p> </div> <div class="refsect1 parameters" id="refsect1-locale.acceptfromhttp-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">header</span></dt>     <dd>      <p class="para">       The string containing the "Accept-Language" header according to format in RFC 2616.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-locale.acceptfromhttp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The corresponding locale identifier.  </p>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> when the length of <span class="parameter" style="color:#3A95FF">header</span> exceeds   <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-max-locale-len">INTL_MAX_LOCALE_LEN</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-locale.acceptfromhttp-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2500">   <p><strong>示例 #1 <span class="function"><strong>locale_accept_from_http()</strong></span> example</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$locale </span><span style="color: #007700">= </span><span style="color: #9876AA">locale_accept_from_http</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'HTTP_ACCEPT_LANGUAGE'</span><span style="color: #007700">]);<br>echo </span><span style="color: #9876AA">\$locale</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2501">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$locale </span><span style="color: #007700">= </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">acceptFromHttp</span><span style="color: #007700">(</span><span style="color: #9876AA">\$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'HTTP_ACCEPT_LANGUAGE'</span><span style="color: #007700">]);<br>echo </span><span style="color: #9876AA">\$locale</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">en_US</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-locale.acceptfromhttp-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/locale.lookup.php" class="function" rel="rdfs-seeAlso">locale_lookup()</a> - Searches the language tag list for the best match to the language</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Tries to find out best available locale based on HTTP "Accept-Language" header
     * @link https://php.net/manual/zh/locale.acceptfromhttp.php
     * @param string $header <p>
     * The string containing the "Accept-Language" header according to format in RFC 2616.
     * </p>
     * @return string|false The corresponding locale identifier.
     */
    #[TentativeType]
    public static function acceptFromHttp(#[LanguageAware(['8.0' => 'string'], default: '')] $header): string|false {}
}

/**
 * <div id="class.messageformatter" class="reference"> <h1 class="title">The MessageFormatter class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="messageformatter.intro">   <h2 class="title">简介</h2>   <p class="simpara">    MessageFormatter is a concrete class that enables users to produce    concatenated, language-neutral messages. The methods supplied in this    class are used to build all the messages that are seen by end users.   </p>   <p class="simpara">    The MessageFormatter class assembles messages from various fragments (such    as text fragments, numbers, and dates) supplied by the program. Because of    the MessageFormatter class, the program does not need to know the order of    the fragments. The class uses the formatting specifications for the    fragments to assemble them into a message that is contained in a single    string within a resource bundle. For example, MessageFormatter enables you    to print the phrase "Finished printing x out of y files..." in a manner    that still allows for flexibility in translation.   </p>   <p class="simpara">    Previously, an end user message was created as a sentence and handled as a    string. This procedure created problems for localizers because the    sentence structure, word order, number format and so on are very different    from language to language. The language-neutral way to create messages    keeps each part of the message separate and provides keys to the data.    Using these keys, the MessageFormatter class can concatenate the parts of    the message, localize them, and display a well-formed string to the end    user.   </p>   <p class="simpara">    MessageFormatter takes a set of objects, formats them, and then inserts    the formatted strings into the pattern at the appropriate places. Choice    formats can be used in conjunction with MessageFormatter to handle    plurals, match numbers, and select from an array of items. Typically, the    message format will come from resources and the arguments will be    dynamically set at runtime.   </p>  </div>    <div class="section" id="messageformatter.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">MessageFormatter</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.create.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.create.php" class="methodname" style="color:#CC7832">create</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="methodname" style="color:#CC7832">formatMessage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.getpattern.php" class="methodname" style="color:#CC7832">getPattern</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.parse.php" class="methodname" style="color:#CC7832">parse</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.parsemessage.php" class="methodname" style="color:#CC7832">parseMessage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/messageformatter.setpattern.php" class="methodname" style="color:#CC7832">setPattern</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>     </div>  <div class="section" id="messageformatter.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/" class="link external">»&nbsp;       ICU formatting documentation      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/messages/" class="link external">»&nbsp;       ICU message formatting description      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/messages/" class="link external">»&nbsp;ICU message formatters</a>     </li>     <li>      <a href="https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classChoiceFormat.html" class="link external">»&nbsp;ICU choice formatters</a>     </li>    </ul>     </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link MessageFormatter::create} — Constructs a new Message Formatter</li><li>{@link MessageFormatter::format} — Format the message</li><li>{@link MessageFormatter::formatMessage} — Quick format message</li><li>{@link MessageFormatter::getErrorCode} — Get the error code from last operation</li><li>{@link MessageFormatter::getErrorMessage} — Get the error text from the last operation</li><li>{@link MessageFormatter::getLocale} — Get the locale for which the formatter was created</li><li>{@link MessageFormatter::getPattern} — Get the pattern used by the formatter</li><li>{@link MessageFormatter::parse} — Parse input string according to pattern</li><li>{@link MessageFormatter::parseMessage} — Quick parse input string</li><li>{@link MessageFormatter::setPattern} — Set the pattern used by the formatter</li></ul></div>
 */
class MessageFormatter
{
    /**
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Constructs a new Message Formatter
     * @link https://php.net/manual/en/messageformatter.create.php
     * @param string $locale <p>
     * The locale to use when formatting arguments
     * </p>
     * @param string $pattern <p>
     * The pattern string to stick arguments into.
     * The pattern uses an 'apostrophe-friendly' syntax; it is run through
     * umsg_autoQuoteApostrophe
     * before being interpreted.
     * </p>
     * @throws IntlException on failure.
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string'], default: '')] $pattern
    ) {}

    /**
 * <div id="messageformatter.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::create</h1>  <h1 class="refname">MessageFormatter::__construct</h1>  <h1 class="refname">msgfmt_create</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::create</span> -- <span class="refname">MessageFormatter::__construct</span> -- <span class="refname">msgfmt_create</span> — <span class="dc-title">Constructs a new Message Formatter</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.create-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格 (method)  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span></span></div>  <p class="para rdfs-comment">   面向对象风格 (constructor):  </p>  <div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::__construct</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>)</div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span></span></div>  <p class="para rdfs-comment">   Constructs a new Message Formatter  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to use when formatting arguments      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The pattern string to stick arguments into.        The pattern uses an 'apostrophe-friendly' syntax;       see <a href="https://unicode-org.github.io/icu/userguide/format_parse/messages/#quotingescaping" class="link external">»&nbsp;Quoting/Escaping</a> for details.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The formatter <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 errors" id="refsect1-messageformatter.create-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   When invoked as constructor, on failure an <span class="classname"><a href="https://php.net/manual/zh/class.intlexception.php" class="classname">IntlException</a></span>   is thrown.  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.create-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2540">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2541">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">   <div class="examplescode"><blockquote style="border:1px gray solid;">4,560&nbsp;monkeys&nbsp;on&nbsp;123&nbsp;trees&nbsp;make&nbsp;37.073&nbsp;monkeys&nbsp;per&nbsp;tree<br>4.560&nbsp;Affen&nbsp;auf&nbsp;123&nbsp;BÃ¤umen&nbsp;sind&nbsp;37,073&nbsp;Affen&nbsp;pro&nbsp;Baum</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.format.php" class="function" rel="rdfs-seeAlso">msgfmt_format()</a> - Format the message</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.parse.php" class="function" rel="rdfs-seeAlso">msgfmt_parse()</a> - Parse input string according to pattern</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_message()</a> - Get the error text from the last operation</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Constructs a new Message Formatter
     * @link https://php.net/manual/zh/messageformatter.create.php
     * @param string $locale <p>
     * The locale to use when formatting arguments
     * </p>
     * @param string $pattern <p>
     * The pattern string to stick arguments into.
     * The pattern uses an 'apostrophe-friendly' syntax; it is run through
     * umsg_autoQuoteApostrophe
     * before being interpreted.
     * </p>
     * @return MessageFormatter|null The formatter object
     */
    #[TentativeType]
    public static function create(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string'], default: '')] $pattern
    ): ?MessageFormatter {}

    /**
 * <div id="messageformatter.format" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::format</h1>  <h1 class="refname">msgfmt_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::format</span> -- <span class="refname">msgfmt_format</span> — <span class="dc-title">Format the message</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.format-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Format the message by substituting the data into the format string   according to the locale rules  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.format-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       Arguments to insert into the format string      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The formatted string, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.format-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2542">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_format()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2543">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">4,560&nbsp;monkeys&nbsp;on&nbsp;123&nbsp;trees&nbsp;make&nbsp;37.073&nbsp;monkeys&nbsp;per&nbsp;tree<br>4.560&nbsp;Affen&nbsp;auf&nbsp;123&nbsp;BÃ¤umen&nbsp;sind&nbsp;37,073&nbsp;Affen&nbsp;pro&nbsp;Baum</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.format-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.parse.php" class="function" rel="rdfs-seeAlso">msgfmt_parse()</a> - Parse input string according to pattern</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function" rel="rdfs-seeAlso">msgfmt_format_message()</a> - Quick format message</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_message()</a> - Get the error text from the last operation</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Format the message
     * @link https://php.net/manual/zh/messageformatter.format.php
     * @param array $values <p>
     * Arguments to insert into the format string
     * </p>
     * @return string|false The formatted string, or <b>FALSE</b> if an error occurred
     */
    #[Pure]
    #[TentativeType]
    public function format(array $values): string|false {}

    /**
 * <div id="messageformatter.formatmessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::formatMessage</h1>  <h1 class="refname">msgfmt_format_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::formatMessage</span> -- <span class="refname">msgfmt_format_message</span> — <span class="dc-title">Quick format message</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.formatmessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::formatMessage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_format_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$values</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Quick formatting function that formats the string without having to   explicitly create the formatter object. Use this function when the format   operation is done only once and does not need any parameters or state to be   kept or when wanting to customize the output by providing additional context to ICU directly.  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.formatmessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to use for formatting locale-dependent parts      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The pattern <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to insert things into.       The pattern uses an 'apostrophe-friendly' syntax;       see <a href="https://unicode-org.github.io/icu/userguide/format_parse/messages/#quotingescaping" class="link external">»&nbsp;Quoting/Escaping</a> for details.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of values to insert into the format <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.formatmessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The formatted pattern string or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.formatmessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2544">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_format_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree\n"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum\n"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"en"</span><span style="color: #007700">, </span><span style="color: #DD0000">'You finished {place, selectordinal, one {#st} two {#nd} few {#rd} other {#th}}!'</span><span style="color: #007700">, [</span><span style="color: #DD0000">'place' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">3</span><span style="color: #007700">]), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"en"</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">"There {apple, plural,<br>            =0 {are no apples}<br>            =1 {is one apple...}<br>            other {are # apples!}<br>        }"</span><span style="color: #007700">,<br>    [</span><span style="color: #DD0000">'apple' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">]<br>), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2545">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree\n"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">"de"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum\n"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">4560</span><span style="color: #007700">, </span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">4560</span><span style="color: #007700">/</span><span style="color: #9876AA">123</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">"en"</span><span style="color: #007700">, </span><span style="color: #DD0000">'You finished {place, selectordinal, one {#st} two {#nd} few {#rd} other {#th}}!'</span><span style="color: #007700">, [</span><span style="color: #DD0000">'place' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">3</span><span style="color: #007700">]), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">"en"</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">"There {apple, plural,<br>            =0 {are no apples}<br>            =1 {is one apple...}<br>            other {are # apples!}<br>        }"</span><span style="color: #007700">,<br>    [</span><span style="color: #DD0000">'apple' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">]<br>), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">4,560&nbsp;monkeys&nbsp;on&nbsp;123&nbsp;trees&nbsp;make&nbsp;37.073&nbsp;monkeys&nbsp;per&nbsp;tree<br>4.560&nbsp;Affen&nbsp;auf&nbsp;123&nbsp;BÃ¤umen&nbsp;sind&nbsp;37,073&nbsp;Affen&nbsp;pro&nbsp;Baum<br>You&nbsp;finished&nbsp;3rd!<br>There&nbsp;are&nbsp;no&nbsp;apples</blockquote></div>  </div>  <div class="example" id="example-2546">   <p><strong>示例 #3 Instructing ICU to format currency with common and with narrow currency symbol</strong></p>   <div class="example-contents"><p>Requires ICU ≥ 67.</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"cs_CZ"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number, :: currency/CAD}"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123.45</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">msgfmt_format_message</span><span style="color: #007700">(</span><span style="color: #DD0000">"cs_CZ"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number, :: currency/CAD unit-width-narrow}"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123.45</span><span style="color: #007700">));</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">123,45Â&nbsp;CA\$<br>123,45Â&nbsp;\$</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.formatmessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.parse.php" class="function" rel="rdfs-seeAlso">msgfmt_parse()</a> - Parse input string according to pattern</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_message()</a> - Get the error text from the last operation</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Quick format message
     * @link https://php.net/manual/zh/messageformatter.formatmessage.php
     * @param string $locale <p>
     * The locale to use for formatting locale-dependent parts
     * </p>
     * @param string $pattern <p>
     * The pattern string to insert things into.
     * The pattern uses an 'apostrophe-friendly' syntax; it is run through
     * umsg_autoQuoteApostrophe
     * before being interpreted.
     * </p>
     * @param array $values <p>
     * The array of values to insert into the format string
     * </p>
     * @return string|false The formatted pattern string or <b>FALSE</b> if an error occurred
     */
    #[TentativeType]
    public static function formatMessage(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string'], default: '')] $pattern,
        array $values
    ): string|false {}

    /**
 * <div id="messageformatter.parse" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::parse</h1>  <h1 class="refname">msgfmt_parse</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::parse</span> -- <span class="refname">msgfmt_parse</span> — <span class="dc-title">Parse input string according to pattern</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.parse-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Parses input <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> and return any extracted items as an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.parse-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to parse      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.parse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing the items extracted, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.parse-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2553">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_parse()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"4,560 monkeys on 123 trees make 37.073 monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$res</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'de'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"4.560 Affen auf 123 Bäumen sind 37,073 Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$res</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2554">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">"4,560 monkeys on 123 trees make 37.073 monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$res</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">'de'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$res </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">"4.560 Affen auf 123 Bäumen sind 37,073 Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$res</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;4560,<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;123,<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;37.073,<br>)<br>array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;4560,<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;123,<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;37.073,<br>)</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.parse-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.format.php" class="function" rel="rdfs-seeAlso">msgfmt_format()</a> - Format the message</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.parsemessage.php" class="function" rel="rdfs-seeAlso">msgfmt_parse_message()</a> - Quick parse input string</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Parse input string according to pattern
     * @link https://php.net/manual/zh/messageformatter.parse.php
     * @param string $string <p>
     * The string to parse
     * </p>
     * @return array|false An array containing the items extracted, or <b>FALSE</b> on error
     */
    #[Pure]
    #[TentativeType]
    public function parse(#[LanguageAware(['8.0' => 'string'], default: '')] $string): array|false {}

    /**
 * <div id="messageformatter.parsemessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::parseMessage</h1>  <h1 class="refname">msgfmt_parse_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::parseMessage</span> -- <span class="refname">msgfmt_parse_message</span> — <span class="dc-title">Quick parse input string</span></p> </div>  <div class="refsect1 description" id="refsect1-messageformatter.parsemessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::parseMessage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_parse_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Parses input string without explicitly creating the formatter object. Use   this function when the format operation is done only once and does not need   any parameters or state to be kept.  </p> </div>  <div class="refsect1 parameters" id="refsect1-messageformatter.parsemessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       The locale to use for parsing locale-dependent parts      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The pattern with which to parse the <span class="parameter" style="color:#3A95FF">message</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">message</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to parse, conforming to the <span class="parameter" style="color:#3A95FF">pattern</span>.      </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-messageformatter.parsemessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> containing items extracted, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error  </p> </div>  <div class="refsect1 examples" id="refsect1-messageformatter.parsemessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2555">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_parse_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_parse_message</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">,<br>                            </span><span style="color: #DD0000">"4,560 monkeys on 123 trees make 37.073 monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_parse_message</span><span style="color: #007700">(</span><span style="color: #DD0000">'de'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">, <br>                            </span><span style="color: #DD0000">"4.560 Affen auf 123 Bäumen sind 37,073 Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2556">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">parseMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} monkeys on {1,number,integer} trees make {2,number} monkeys per tree"</span><span style="color: #007700">,<br>                            </span><span style="color: #DD0000">"4,560 monkeys on 123 trees make 37.073 monkeys per tree"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">parseMessage</span><span style="color: #007700">(</span><span style="color: #DD0000">'de'</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0,number,integer} Affen auf {1,number,integer} Bäumen sind {2,number} Affen pro Baum"</span><span style="color: #007700">, <br>                            </span><span style="color: #DD0000">"4.560 Affen auf 123 Bäumen sind 37,073 Affen pro Baum"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;4560,<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;123,<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;37.073,<br>)<br>array&nbsp;(<br>&nbsp;&nbsp;0&nbsp;=&gt;&nbsp;4560,<br>&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;123,<br>&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;37.073,<br>)</blockquote></div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-messageformatter.parsemessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.formatmessage.php" class="function" rel="rdfs-seeAlso">msgfmt_format_message()</a> - Quick format message</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.parse.php" class="function" rel="rdfs-seeAlso">msgfmt_parse()</a> - Parse input string according to pattern</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Quick parse input string
     * @link https://php.net/manual/zh/messageformatter.parsemessage.php
     * @param string $locale <p>
     * The locale to use for parsing locale-dependent parts
     * </p>
     * @param string $pattern <p>
     * The pattern with which to parse the <i>value</i>.
     * </p>
     * @param string $message <p>
     * The string to parse, conforming to the <i>pattern</i>.
     * </p>
     * @return array|false An array containing items extracted, or <b>FALSE</b> on error
     */
    #[TentativeType]
    public static function parseMessage(
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string'], default: '')] $pattern,
        #[LanguageAware(['8.0' => 'string'], default: '')] $message
    ): array|false {}

    /**
 * <div id="messageformatter.setpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::setPattern</h1>  <h1 class="refname">msgfmt_set_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::setPattern</span> -- <span class="refname">msgfmt_set_pattern</span> — <span class="dc-title">Set the pattern used by the formatter</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.setpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::setPattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_set_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set the pattern used by the formatter  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.setpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The pattern <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to use in this message formatter.       The pattern uses an 'apostrophe-friendly' syntax;       see <a href="https://unicode-org.github.io/icu/userguide/format_parse/messages/#quotingescaping" class="link external">»&nbsp;Quoting/Escaping</a> for details.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.setpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.setpattern-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2557">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_set_pattern()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Default pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_get_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatting result: " </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">) ) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">msgfmt_set_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} trees hosting {1, number} monkeys" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"New pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_get_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatted number: " </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">) ) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2558">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Default pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">() . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatting result: " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">"{0, number} trees hosting {1, number} monkeys" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"New pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">() . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatted number: " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Default&nbsp;pattern:&nbsp;'{0,number}&nbsp;monkeys&nbsp;on&nbsp;{1,number}&nbsp;trees'<br>Formatting&nbsp;result:&nbsp;123&nbsp;monkeys&nbsp;on&nbsp;456&nbsp;trees<br>New&nbsp;pattern:&nbsp;'{0,number}&nbsp;trees&nbsp;hosting&nbsp;{1,number}&nbsp;monkeys'<br>Formatted&nbsp;number:&nbsp;123&nbsp;trees&nbsp;hosting&nbsp;456&nbsp;monkeys</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.setpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.getpattern.php" class="function" rel="rdfs-seeAlso">msgfmt_get_pattern()</a> - Get the pattern used by the formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set the pattern used by the formatter
     * @link https://php.net/manual/zh/messageformatter.setpattern.php
     * @param string $pattern <p>
     * The pattern string to use in this message formatter.
     * The pattern uses an 'apostrophe-friendly' syntax; it is run through
     * umsg_autoQuoteApostrophe
     * before being interpreted.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setPattern(#[LanguageAware(['8.0' => 'string'], default: '')] $pattern): bool {}

    /**
 * <div id="messageformatter.getpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::getPattern</h1>  <h1 class="refname">msgfmt_get_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::getPattern</span> -- <span class="refname">msgfmt_get_pattern</span> — <span class="dc-title">Get the pattern used by the formatter</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.getpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::getPattern</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_get_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get the pattern used by the formatter  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.getpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.getpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The pattern <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> for this message formatter,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.getpattern-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2551">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_get_pattern()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Default pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_get_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatting result: " </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">) ) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">msgfmt_set_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} trees hosting {1, number} monkeys" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"New pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_get_pattern</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">) . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatted number: " </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">) ) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2552">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Default pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">() . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatting result: " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">"{0, number} trees hosting {1, number} monkeys" </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"New pattern: '" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">() . </span><span style="color: #DD0000">"'\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"Formatted number: " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array(</span><span style="color: #9876AA">123</span><span style="color: #007700">, </span><span style="color: #9876AA">456</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Default&nbsp;pattern:&nbsp;'{0,number}&nbsp;monkeys&nbsp;on&nbsp;{1,number}&nbsp;trees'<br>Formatting&nbsp;result:&nbsp;123&nbsp;monkeys&nbsp;on&nbsp;456&nbsp;trees<br>New&nbsp;pattern:&nbsp;'{0,number}&nbsp;trees&nbsp;hosting&nbsp;{1,number}&nbsp;monkeys'<br>Formatted&nbsp;number:&nbsp;123&nbsp;trees&nbsp;hosting&nbsp;456&nbsp;monkeys</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.getpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.setpattern.php" class="function" rel="rdfs-seeAlso">msgfmt_set_pattern()</a> - Set the pattern used by the formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the pattern used by the formatter
     * @link https://php.net/manual/zh/messageformatter.getpattern.php
     * @return string|false The pattern string for this message formatter
     */
    #[Pure]
    #[TentativeType]
    public function getPattern(): string|false {}

    /**
 * <div id="messageformatter.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::getLocale</h1>  <h1 class="refname">msgfmt_get_locale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::getLocale</span> -- <span class="refname">msgfmt_get_locale</span> — <span class="dc-title">Get the locale for which the formatter was created</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.getlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::getLocale</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_get_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get the locale for which the formatter was created.  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.getlocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The locale name  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.getlocale-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2549">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_get_locale()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"Number {0,number}"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">msgfmt_get_locale</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2550">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">"Number {0,number}"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">en_US</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.getlocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.create.php" class="function" rel="rdfs-seeAlso">msgfmt_create()</a> - Constructs a new Message Formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the locale for which the formatter was created.
     * @link https://php.net/manual/zh/messageformatter.getlocale.php
     * @return string The locale name
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(): string {}

    /**
 * <div id="messageformatter.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::getErrorCode</h1>  <h1 class="refname">msgfmt_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::getErrorCode</span> -- <span class="refname">msgfmt_get_error_code</span> — <span class="dc-title">Get the error code from last operation</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get the error code from last operation.  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.  </p> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_message()</a> - Get the error text from the last operation</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the error code from last operation
     * @link https://php.net/manual/zh/messageformatter.geterrorcode.php
     * @return int The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="messageformatter.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">MessageFormatter::getErrorMessage</h1>  <h1 class="refname">msgfmt_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">MessageFormatter::getErrorMessage</span> -- <span class="refname">msgfmt_get_error_message</span> — <span class="dc-title">Get the error text from the last operation</span></p> </div> <div class="refsect1 description" id="refsect1-messageformatter.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>MessageFormatter::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>msgfmt_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.messageformatter.php" class="type MessageFormatter" style="color:#EAB766">MessageFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get the error text from the last operation.  </p> </div> <div class="refsect1 parameters" id="refsect1-messageformatter.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The message formatter      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-messageformatter.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Description of the last error.  </p> </div> <div class="refsect1 examples" id="refsect1-messageformatter.geterrormessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2547">   <p><strong>示例 #1 <span class="function"><strong>msgfmt_get_error_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_create</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">msgfmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, array());<br>if(!</span><span style="color: #9876AA">\$str</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"ERROR: "</span><span style="color: #007700">.</span><span style="color: #9876AA">msgfmt_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">) . </span><span style="color: #DD0000">" (" </span><span style="color: #007700">. </span><span style="color: #9876AA">msgfmt_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">) . </span><span style="color: #DD0000">")\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2548">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">MessageFormatter</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #DD0000">"{0, number} monkeys on {1, number} trees"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(array());<br>if(!</span><span style="color: #9876AA">\$str</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"ERROR: "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">() . </span><span style="color: #DD0000">" (" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">() . </span><span style="color: #DD0000">")\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">ERROR:&nbsp;msgfmt_format:&nbsp;not&nbsp;enough&nbsp;parameters:&nbsp;U_ILLEGAL_ARGUMENT_ERROR&nbsp;(1)</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-messageformatter.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/messageformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">msgfmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the error text from the last operation
     * @link https://php.net/manual/zh/messageformatter.geterrormessage.php
     * @return string Description of the last error.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string {}
}

/**
 * <div id="class.intldateformatter" class="reference"> <h1 class="title">The IntlDateFormatter class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p>    <div class="section" id="intldateformatter.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Date Formatter is a concrete class that enables locale-dependent formatting/parsing     of dates using pattern strings and/or canned patterns.   </p>    <p class="simpara">    This class represents the ICU date formatting functionality.     It allows users to display dates in a localized format or to parse strings     into PHP date values using pattern strings and/or canned patterns.   </p>   </div>    <div class="section" id="intldateformatter.synopsis">   <h2 class="title">Class synopsis</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlDateFormatter</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.full"><var class="varname">FULL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.long"><var class="varname">LONG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.medium"><var class="varname">MEDIUM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.short"><var class="varname">SHORT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.none"><var class="varname">NONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.relative-full"><var class="varname">RELATIVE_FULL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.relative-long"><var class="varname">RELATIVE_LONG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.relative-medium"><var class="varname">RELATIVE_MEDIUM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.relative-short"><var class="varname">RELATIVE_SHORT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.gregorian"><var class="varname">GREGORIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intldateformatter.php#intldateformatter.constants.traditional"><var class="varname">TRADITIONAL</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dateType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="methodname" style="color:#CC7832">create</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dateType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.formatobject.php" class="methodname" style="color:#CC7832">formatObject</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$format</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.getcalendar.php" class="methodname" style="color:#CC7832">getCalendar</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.getdatetype.php" class="methodname" style="color:#CC7832">getDateType</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.getpattern.php" class="methodname" style="color:#CC7832">getPattern</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.gettimetype.php" class="methodname" style="color:#CC7832">getTimeType</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.gettimezoneid.php" class="methodname" style="color:#CC7832">getTimeZoneId</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.getcalendarobject.php" class="methodname" style="color:#CC7832">getCalendarObject</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.gettimezone.php" class="methodname" style="color:#CC7832">getTimeZone</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.islenient.php" class="methodname" style="color:#CC7832">isLenient</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.localtime.php" class="methodname" style="color:#CC7832">localtime</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.parse.php" class="methodname" style="color:#CC7832">parse</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.setcalendar.php" class="methodname" style="color:#CC7832">setCalendar</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.setlenient.php" class="methodname" style="color:#CC7832">setLenient</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.setpattern.php" class="methodname" style="color:#CC7832">setPattern</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intldateformatter.settimezone.php" class="methodname" style="color:#CC7832">setTimeZone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>     </div>  <div class="section" id="intldateformatter.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="https://unicode-org.github.io/icu-docs/apidoc/dev/icu4c/udat_8h.html" class="link external">»&nbsp;ICU Date formatter</a>     </li>    </ul>    <ul class="simplelist">     <li>      <a href="https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax" class="link external">»&nbsp;ICU Date formats</a>     </li>    </ul>     </div>  <div class="section" id="intl.intldateformatter-constants"> <h2 class="title">预定义常量</h2> <p class="para">  These constants are used to specify different formats  in the constructor for DateType and TimeType.  </p><dl>       <dt id="intldateformatter.constants.none">     <strong><span>{@link IntlDateFormatter::NONE}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Do not include this element</span>    </dd>          <dt id="intldateformatter.constants.full">     <strong><span>{@link IntlDateFormatter::FULL}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Completely specified style (Tuesday, April 12, 1952 AD or 3:30:42pm PST)</span>    </dd>          <dt id="intldateformatter.constants.long">     <strong><span>{@link IntlDateFormatter::LONG}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Long style (January 12, 1952 or 3:30:32pm)</span>    </dd>          <dt id="intldateformatter.constants.medium">     <strong><span>{@link IntlDateFormatter::MEDIUM}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Medium style (Jan 12, 1952)</span>    </dd>          <dt id="intldateformatter.constants.short">     <strong><span>{@link IntlDateFormatter::SHORT}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Most abbreviated style, only essential data (12/13/52 or 3:30pm)</span>    </dd>          <dt id="intldateformatter.constants.relative-full">     <strong><span>{@link IntlDateFormatter::RELATIVE_FULL}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      The same as <strong><span>{@link IntlDateFormatter::FULL}</span></strong>, but yesterday, today, and tomorrow      show as <span class="literal">yesterday</span>, <span class="literal">today</span>, and <span class="literal">tomorrow</span>,      respectively.  Available as of PHP 8.0.0, for <span class="parameter" style="color:#3A95FF">dateType</span> only.     </span>    </dd>          <dt id="intldateformatter.constants.relative-long">     <strong><span>{@link IntlDateFormatter::RELATIVE_LONG}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      The same as <strong><span>{@link IntlDateFormatter::LONG}</span></strong>, but yesterday, today, and tomorrow      show as <span class="literal">yesterday</span>, <span class="literal">today</span>, and <span class="literal">tomorrow</span>,      respectively.  Available as of PHP 8.0.0, for <span class="parameter" style="color:#3A95FF">dateType</span> only.     </span>    </dd>          <dt id="intldateformatter.constants.relative-medium">     <strong><span>{@link IntlDateFormatter::RELATIVE_MEDIUM}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      The same as <strong><span>{@link IntlDateFormatter::MEDIUM}</span></strong>, but yesterday, today, and tomorrow      show as <span class="literal">yesterday</span>, <span class="literal">today</span>, and <span class="literal">tomorrow</span>,      respectively.  Available as of PHP 8.0.0, for <span class="parameter" style="color:#3A95FF">dateType</span> only.     </span>    </dd>          <dt id="intldateformatter.constants.relative-short">     <strong><span>{@link IntlDateFormatter::RELATIVE_SHORT}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">      The same as <strong><span>{@link IntlDateFormatter::SHORT}</span></strong>, but yesterday, today, and tomorrow      show as <span class="literal">yesterday</span>, <span class="literal">today</span>, and <span class="literal">tomorrow</span>,      respectively.  Available as of PHP 8.0.0, for <span class="parameter" style="color:#3A95FF">dateType</span> only.     </span>    </dd>     </dl>  <p class="para" id="intl.intldateformatter-constants.calendartypes">  The following int constants are used to specify the calendar.   These calendars are all based directly on the Gregorian calendar.  Non-Gregorian calendars need to be specified in locale.   Examples might include locale="hi@calendar=BUDDHIST".  </p><dl>           <dt id="intldateformatter.constants.traditional">     <strong><span>{@link IntlDateFormatter::TRADITIONAL}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Non-Gregorian Calendar</span>    </dd>          <dt id="intldateformatter.constants.gregorian">     <strong><span>{@link IntlDateFormatter::GREGORIAN}</span></strong>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>    </dt>    <dd>     <span class="simpara">Gregorian Calendar</span>    </dd>     </dl> </div>    <div class="section" id="intldateformatter.changelog">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlDateFormatter::create} — Create a date formatter</li><li>{@link IntlDateFormatter::format} — Format the date/time value as a string</li><li>{@link IntlDateFormatter::formatObject} — Formats an object</li><li>{@link IntlDateFormatter::getCalendar} — Get the calendar type used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::getDateType} — Get the datetype used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::getErrorCode} — Get the error code from last operation</li><li>{@link IntlDateFormatter::getErrorMessage} — Get the error text from the last operation</li><li>{@link IntlDateFormatter::getLocale} — Get the locale used by formatter</li><li>{@link IntlDateFormatter::getPattern} — Get the pattern used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::getTimeType} — Get the timetype used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::getTimeZoneId} — Get the timezone-id used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::getCalendarObject} — Get copy of formatterʼs calendar object</li><li>{@link IntlDateFormatter::getTimeZone} — Get formatterʼs timezone</li><li>{@link IntlDateFormatter::isLenient} — Get the lenient used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::localtime} — Parse string to a field-based time value</li><li>{@link IntlDateFormatter::parse} — Parse string to a timestamp value</li><li>{@link IntlDateFormatter::setCalendar} — Sets the calendar type used by the formatter</li><li>{@link IntlDateFormatter::setLenient} — Set the leniency of the parser</li><li>{@link IntlDateFormatter::setPattern} — Set the pattern used for the IntlDateFormatter</li><li>{@link IntlDateFormatter::setTimeZone} — Sets formatterʼs timezone</li></ul></div>
 */
class IntlDateFormatter
{
    /**
     * Completely specified style (Tuesday, April 12, 1952 AD or 3:30:42pm PST)
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const FULL = 0;

    /**
     * Long style (January 12, 1952 or 3:30:32pm)
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const LONG = 1;

    /**
     * Medium style (Jan 12, 1952)
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const MEDIUM = 2;

    /**
     * Most abbreviated style, only essential data (12/13/52 or 3:30pm)
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const SHORT = 3;

    /**
     * Do not include this element
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const NONE = -1;

    /**
     * Gregorian Calendar
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const GREGORIAN = 1;

    /**
     * Non-Gregorian Calendar
     * @link https://php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants
     */
    public const TRADITIONAL = 0;
    public const RELATIVE_FULL = 128;
    public const RELATIVE_LONG = 129;
    public const RELATIVE_MEDIUM = 130;
    public const RELATIVE_SHORT = 131;
    public const PATTERN = -2;

    /**
     * @param string|null $locale
     * @param int $dateType
     * @param int $timeType
     * @param mixed|null $timezone [optional]
     * @param mixed|null $calendar [optional]
     * @param string $pattern [optional]
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '8.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $dateType,
        #[ElementAvailable(from: '5.3', to: '8.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $timeType,
        #[ElementAvailable(from: '8.1')] int $dateType = 0,
        #[ElementAvailable(from: '8.1')] int $timeType = 0,
        $timezone = null,

        $calendar = null,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $pattern = null
    ) {}

    /**
 * <div id="intldateformatter.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::create</h1>  <h1 class="refname">datefmt_create</h1>  <h1 class="refname">IntlDateFormatter::__construct</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::create</span> -- <span class="refname">datefmt_create</span> -- <span class="refname">IntlDateFormatter::__construct</span> — <span class="dc-title">Create a date formatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.create-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::create</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dateType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span></span></div>  <p class="para rdfs-comment">   面向对象风格 (constructor)  </p>  <div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::__construct</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dateType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>)</div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_create</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dateType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeType</span><span class="initializer"> = IntlDateFormatter::FULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$pattern</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span></span></div>  <p class="para rdfs-comment">   Create a date formatter.  </p> </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       Locale to use when formatting or parsing or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> to use the value       specified in the ini setting <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.default-locale" class="link">intl.default_locale</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">dateType</span></dt>     <dd>      <p class="para">       Format of the date determined by one of the       <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants" class="link">IntlDateFormatter       constants</a>. The default value is       <strong><span>{@link IntlDateFormatter::FULL}</span></strong>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timeType</span></dt>     <dd>      <p class="para">       Format of the time determined by one of the       <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants" class="link">IntlDateFormatter       constants</a>. The default value is       <strong><span>{@link IntlDateFormatter::FULL}</span></strong>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>     <dd>      <p class="para">       Time zone ID. The default (and the one used if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> is given) is the       one returned by <span class="function">{@link date_default_timezone_get()}</span> or, if       applicable, that of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object passed       for the <span class="parameter" style="color:#3A95FF">calendar</span> parameter. This ID must be a       valid identifier on ICUʼs database or an ID representing an       explicit offset, such as <span class="literal">GMT-05:30</span>.      </p>      <p class="para">       This can also be an <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span> or a       <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>     <dd>      <p class="para">       Calendar to use for formatting or parsing. The default value is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>,       which corresponds to <strong><span>{@link IntlDateFormatter::GREGORIAN}</span></strong>.       This can either be one of the       <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants.calendartypes" class="link">IntlDateFormatter       calendar constants</a> or an <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span>. Any       <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object passed will be clone; it will       not be changed by the <span class="classname"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="classname">IntlDateFormatter</a></span>. This will       determine the calendar type used (gregorian, islamic, persian, etc.) and,       if <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> is given for the <span class="parameter" style="color:#3A95FF">timezone</span> parameter,       also the timezone used.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       Optional pattern to use when formatting or parsing.       Possible patterns are documented at <a href="https://unicode-org.github.io/icu/userguide/format_parse/datetime/" class="link external">»&nbsp;https://unicode-org.github.io/icu/userguide/format_parse/datetime/</a>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-intldateformatter.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The created <span class="classname"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="classname">IntlDateFormatter</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> in case of   failure.  </p> </div> <div class="refsect1 errors" id="refsect1-intldateformatter.create-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if   <span class="parameter" style="color:#3A95FF">locale</span> is invalid.  </p> </div> <div class="refsect1 changelog" id="refsect1-intldateformatter.create-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        <span class="simpara">         A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if         <span class="parameter" style="color:#3A95FF">locale</span> is invalid.        </span>       </td>      </tr>      <tr>       <td>8.1.0</td>       <td>        <p class="para">         Parameters <span class="parameter" style="color:#3A95FF">dateType</span> and         <span class="parameter" style="color:#3A95FF">timeType</span> are now optional.        </p>       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intldateformatter.create-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2597">   <p><strong>示例 #1 <span class="function"><strong>datefmt_create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"First Formatted output is "</span><span style="color: #007700">.</span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"de-DE" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Second Formatted output is "</span><span style="color: #007700">.</span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">,</span><span style="color: #DD0000">"MM/dd/yyyy"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"First Formatted output with pattern is "</span><span style="color: #007700">.</span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">( </span><span style="color: #DD0000">"de-DE" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">,</span><span style="color: #DD0000">"MM/dd/yyyy"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Second Formatted output with pattern is "</span><span style="color: #007700">.</span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">( </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2598">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"First Formatted output is "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"de-DE" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Second Formatted output is "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"en_US" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  </span><span style="color: #007700">,</span><span style="color: #DD0000">"MM/dd/yyyy"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"First Formatted output with pattern is "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">( </span><span style="color: #DD0000">"de-DE" </span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>      </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN </span><span style="color: #007700">, </span><span style="color: #DD0000">"MM/dd/yyyy"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Second Formatted output with pattern is "</span><span style="color: #007700">.</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>   <div class="example" id="example-2599">    <p><strong>示例 #3 Example of invalid locale handling</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">try {<br>    </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>        </span><span style="color: #DD0000">'invalid_locale'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">'dunno'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    );<br>} catch (</span><span style="color: #9876AA">\Error \$e</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// ...<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00:00&nbsp;PM&nbsp;PT<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Mittwoch,&nbsp;31.&nbsp;Dezember&nbsp;1969&nbsp;16:00&nbsp;Uhr&nbsp;GMT-08:00<br>First&nbsp;Formatted&nbsp;output&nbsp;with&nbsp;pattern&nbsp;is&nbsp;12/31/1969<br>Second&nbsp;Formatted&nbsp;output&nbsp;with&nbsp;pattern&nbsp;is&nbsp;12/31/1969</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.format.php" class="function" rel="rdfs-seeAlso">datefmt_format()</a> - Format the date/time value as a string</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.parse.php" class="function" rel="rdfs-seeAlso">datefmt_parse()</a> - Parse string to a timestamp value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_message()</a> - Get the error text from the last operation</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Create a date formatter
     * @link https://php.net/manual/zh/intldateformatter.create.php
     * @param string $locale <p>
     * Locale to use when formatting or parsing; default is specified in the ini setting intl.default_locale.
     * </p>
     * @param int $dateType <p>
     * Date type to use (<b>none</b>,
     * <b>short</b>, <b>medium</b>,
     * <b>long</b>, <b>full</b>).
     * This is one of the
     * IntlDateFormatter constants.
     * </p>
     * @param int $timeType <p>
     * Time type to use (<b>none</b>,
     * <b>short</b>, <b>medium</b>,
     * <b>long</b>, <b>full</b>).
     * This is one of the
     * IntlDateFormatter constants.
     * </p>
     * @param string $timezone [optional] <p>
     * Time zone ID, default is system default.
     * </p>
     * @param int $calendar [optional] <p>
     * Calendar to use for formatting or parsing; default is Gregorian.
     * This is one of the
     * IntlDateFormatter calendar constants.
     * </p>
     * @param string $pattern [optional] <p>
     * Optional pattern to use when formatting or parsing.
     * Possible patterns are documented at http://userguide.icu-project.org/formatparse/datetime.
     * </p>
     * @return IntlDateFormatter|null
     */
    #[TentativeType]
    public static function create(
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale,
        #[ElementAvailable(from: '5.3', to: '8.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $dateType,
        #[ElementAvailable(from: '5.3', to: '8.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $timeType,
        #[ElementAvailable(from: '8.1')] int $dateType = 0,
        #[ElementAvailable(from: '8.1')] int $timeType = 0,
        $timezone = null,
        #[LanguageAware(['8.0' => 'IntlCalendar|int|null'], default: '')] $calendar = null,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $pattern = null
    ): ?IntlDateFormatter {}

    /**
 * <div id="intldateformatter.getdatetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getDateType</h1>  <h1 class="refname">datefmt_get_datetype</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getDateType</span> -- <span class="refname">datefmt_get_datetype</span> — <span class="dc-title">Get the datetype used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.getdatetype-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getDateType</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_datetype</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">     Returns date type used by the formatter.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.getdatetype-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.getdatetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The current <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants" class="link">date type</a> value of the formatter,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.getdatetype-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2607">    <p><strong>示例 #1 <span class="function"><strong>datefmt_get_datetype()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'datetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_datetype</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output with datetype is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now datetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_datetype</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output with datetype is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2608">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'datetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDateType</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now datetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDateType</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">datetype&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;0<br>First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00:00&nbsp;PM&nbsp;PT<br>Now&nbsp;datetype&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;2<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;12/31/69&nbsp;4:00:00&nbsp;PM&nbsp;PT</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.getdatetype-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.gettimetype.php" class="function" rel="rdfs-seeAlso">datefmt_get_timetype()</a> - Get the timetype used for the IntlDateFormatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the datetype used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.getdatetype.php
     * @return int|false The current date type value of the formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getDateType(): int|false {}

    /**
 * <div id="intldateformatter.gettimetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getTimeType</h1>  <h1 class="refname">datefmt_get_timetype</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getTimeType</span> -- <span class="refname">datefmt_get_timetype</span> — <span class="dc-title">Get the timetype used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.gettimetype-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getTimeType</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_timetype</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Return time type used by the formatter.  </p>  </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.gettimetype-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.            </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-intldateformatter.gettimetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The current <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants" class="link">date type</a> value of the formatter,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.gettimetype-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2617">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_timetype()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'timetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_timetype</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output with timetype is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now timetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_timetype</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output with timetype is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <div class="example" id="example-2618">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'timetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeType</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">SHORT</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now timetype of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeType</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">timetype&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;0<br>First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00:00&nbsp;PM&nbsp;PT<br>Now&nbsp;timetype&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;3<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00&nbsp;PM</blockquote></div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.gettimetype-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.getdatetype.php" class="function" rel="rdfs-seeAlso">datefmt_get_datetype()</a> - Get the datetype used for the IntlDateFormatter</span></li>     <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the timetype used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.gettimetype.php
     * @return int|false The current date type value of the formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getTimeType(): int|false {}

    /**
 * <div id="intldateformatter.getcalendar" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getCalendar</h1>  <h1 class="refname">datefmt_get_calendar</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getCalendar</span> -- <span class="refname">datefmt_get_calendar</span> — <span class="dc-title">Get the calendar type used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.getcalendar-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getCalendar</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_calendar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.getcalendar-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource            </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.getcalendar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants.calendartypes" class="link">calendar   type</a> being used by the formatter. Either   <strong><span>{@link IntlDateFormatter::TRADITIONAL}</span></strong> or   <strong><span>{@link IntlDateFormatter::GREGORIAN}</span></strong>.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.getcalendar-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2604">    <p><strong>示例 #1 <span class="function"><strong>datefmt_get_calendar()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">datefmt_set_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TRADITIONAL</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2605">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendar</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TRADITIONAL</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendar</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2606">    <p><strong>示例 #3 Example of invalid locale handling</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">try {<br>    </span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>        </span><span style="color: #DD0000">'invalid_locale'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">'dunno'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    );<br>    </span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendar</span><span style="color: #007700">();<br>} catch (</span><span style="color: #9876AA">\Error \$e</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// ...<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">calendar&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;1<br>Now&nbsp;calendar&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;0</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.getcalendar-seealso">  <h3 class="title">参见</h3>  <p class="para">  </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.getcalendarobject.php" class="function" rel="rdfs-seeAlso">datefmt_get_calendar_object()</a> - Get copy of formatterʼs calendar object</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.setcalendar.php" class="function" rel="rdfs-seeAlso">datefmt_set_calendar()</a> - Sets the calendar type used by the formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>  </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the calendar used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.getcalendar.php
     * @return int|false The calendar being used by the formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getCalendar(): int|false {}

    /**
 * <div id="intldateformatter.setcalendar" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::setCalendar</h1>  <h1 class="refname">datefmt_set_calendar</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::setCalendar</span> -- <span class="refname">datefmt_set_calendar</span> — <span class="dc-title">Sets the calendar type used by the formatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.setcalendar-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::setCalendar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_set_calendar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets the calendar or calendar type used by the formatter.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.setcalendar-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>     <dd>      <p class="para">       This can either be: the <a href="https://php.net/manual/zh/class.intldateformatter.php#intl.intldateformatter-constants.calendartypes" class="link">calendar       type</a> to use (default is       <strong><span>{@link IntlDateFormatter::GREGORIAN}</span></strong>, which is also used if       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> is specified) or an       <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object.     </p>     <p class="para">      Any <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object passed in will be cloned;      no modifications will be made to the argument object.     </p>     <p class="para">      The timezone of the formatter will only be kept if an      <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object is not passed, otherwise the      new timezone will be that of the passed object.     </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.setcalendar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 changelog" id="refsect1-intldateformatter.setcalendar-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL intl 3.0.0</td>       <td>        It became possible to pass an <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span>        object.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intldateformatter.setcalendar-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2629">    <p><strong>示例 #1 <span class="function"><strong>datefmt_set_calendar()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">datefmt_set_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TRADITIONAL</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_calendar</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2630">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN  <br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendar</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TRADITIONAL</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now calendar of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendar</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <p class="para">以上示例会输出：</p>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">calendar&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;1<br>Now&nbsp;calendar&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;0</blockquote></div>   </div>  <div class="example" id="example-2631">  <p><strong>示例 #3 Example with <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> argument</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$time </span><span style="color: #007700">= </span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2013-03-03 00:00:00 UTC"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">"Europe/Amsterdam"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"before: "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// note that the calendar's locale is not used! <br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(<br>               </span><span style="color: #DD0000">"America/New_York"</span><span style="color: #007700">, </span><span style="color: #DD0000">"pt_PT@calendar=islamic"</span><span style="color: #007700">));<br><br>echo </span><span style="color: #DD0000">"after:  "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">before:&nbsp;Sunday,&nbsp;March&nbsp;3,&nbsp;2013&nbsp;at&nbsp;1:00:00&nbsp;AM&nbsp;Central&nbsp;European&nbsp;Standard&nbsp;Time<br>after:&nbsp;&nbsp;Saturday,&nbsp;RabiÊ»&nbsp;II&nbsp;20,&nbsp;1434&nbsp;at&nbsp;7:00:00&nbsp;PM&nbsp;Eastern&nbsp;Standard&nbsp;Time</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.setcalendar-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.getcalendar.php" class="function" rel="rdfs-seeAlso">datefmt_get_calendar()</a> - Get the calendar type used for the IntlDateFormatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.getcalendarobject.php" class="function" rel="rdfs-seeAlso">datefmt_get_calendar_object()</a> - Get copy of formatterʼs calendar object</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * sets the calendar used to the appropriate calendar, which must be
     * @link https://php.net/manual/zh/intldateformatter.setcalendar.php
     * @param int $calendar <p>
     * The calendar to use.
     * Default is <b>IntlDateFormatter::GREGORIAN</b>.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setCalendar(#[LanguageAware(['8.0' => 'IntlCalendar|int|null'], default: '')] $calendar): bool {}

    /**
 * <div id="intldateformatter.gettimezoneid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getTimeZoneId</h1>  <h1 class="refname">datefmt_get_timezone_id</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getTimeZoneId</span> -- <span class="refname">datefmt_get_timezone_id</span> — <span class="dc-title">Get the timezone-id used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.gettimezoneid-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getTimeZoneId</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_timezone_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get the timezone-id used for the IntlDateFormatter.  </p>  </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.gettimezoneid-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.            </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-intldateformatter.gettimezoneid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   ID string for the time zone used by this formatter,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.gettimezoneid-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2619">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_timezone_id()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'timezone_id of the formatter is: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_timezone_id</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">datefmt_set_timezone</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Madrid'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now timezone_id of the formatter is: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_timezone_id</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <div class="example" id="example-2620">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'timezone_id of the formatter is: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimezoneId</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimezone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Madrid'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now timezone_id of the formatter is: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimezoneId</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">timezone_id&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is:&nbsp;America/Los_Angeles<br>Now&nbsp;timezone_id&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is:&nbsp;Europe/Madrid</blockquote></div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.gettimezoneid-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.settimezone.php" class="function" rel="rdfs-seeAlso">datefmt_set_timezone()</a> - Sets formatterʼs timezone</span></li>     <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the timezone-id used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.gettimezoneid.php
     * @return string|false ID string for the time zone used by this formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getTimeZoneId(): string|false {}

    /**
 * <div id="intldateformatter.getcalendarobject" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getCalendarObject</h1>  <h1 class="refname">datefmt_get_calendar_object</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL intl &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getCalendarObject</span> -- <span class="refname">datefmt_get_calendar_object</span> — <span class="dc-title">Get copy of formatterʼs calendar object</span></p> </div>  <div class="refsect1 description" id="refsect1-intldateformatter.getcalendarobject-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getCalendarObject</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_calendar_object</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>    <p class="para rdfs-comment">   Obtain a copy of the calendar object used internally by this formatter. This   calendar will have a type (as in gregorian, japanese, buddhist, roc, persian,   islamic, etc.) and a timezone that match the type and timezone used by the   formatter. The date/time of the object is unspecified.  </p>   </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.getcalendarobject-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-intldateformatter.getcalendarobject-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A copy of the internal calendar object used by this formatter,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if none has been set,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>   <div class="refsect1 examples" id="refsect1-intldateformatter.getcalendarobject-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2621">    <p><strong>示例 #1 <span class="function"><strong>IntlDateFormatter::getCalendarObject()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"fr_FR@calendar=islamic"</span><span style="color: #007700">, <br>    </span><span style="color: #9876AA">NULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">NULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"GMT-01:00"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">TRADITIONAL<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCalendarObject</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getType</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">(</span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">VALID_LOCALE</span><span style="color: #007700">)<br>);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(7)&nbsp;"islamic"<br>object(IntlTimeZone)#3&nbsp;(4)&nbsp;{<br>&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["id"]=&gt;<br>&nbsp;&nbsp;string(9)&nbsp;"GMT-01:00"<br>&nbsp;&nbsp;["rawOffset"]=&gt;<br>&nbsp;&nbsp;int(-3600000)<br>&nbsp;&nbsp;["currentOffset"]=&gt;<br>&nbsp;&nbsp;int(-3600000)<br>}<br>string(5)&nbsp;"fr_FR"</blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.getcalendarobject-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlDateFormatter::getCalendar()} - Get the calendar type used for the IntlDateFormatter</span></li>    <li><span class="function">{@link IntlDateFormatter::setCalendar()} - Sets the calendar type used by the formatter</span></li>    <li><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
     * Get copy of formatter's calendar object
     * @link https://secure.php.net/manual/en/intldateformatter.getcalendarobject.php
     * @return IntlCalendar|false|null A copy of the internal calendar object used by this formatter.
     */
    #[Pure]
    #[TentativeType]
    public function getCalendarObject(): IntlCalendar|false|null {}

    /**
 * <div id="intldateformatter.gettimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getTimeZone</h1>  <h1 class="refname">datefmt_get_timezone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL intl &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getTimeZone</span> -- <span class="refname">datefmt_get_timezone</span> — <span class="dc-title">Get formatterʼs timezone</span></p> </div>  <div class="refsect1 description" id="refsect1-intldateformatter.gettimezone-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getTimeZone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_timezone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <p class="para rdfs-comment">   Returns an <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span> object representing the   timezone that will be used by this object to format dates and times. When   formatting <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> and   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> objects with this   <span class="classname"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="classname">IntlDateFormatter</a></span>, the timezone used will be the one   returned by this method, not the one associated with the objects being   formatted.  </p>   </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.gettimezone-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div>  <div class="refsect1 returnvalues" id="refsect1-intldateformatter.gettimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The associated <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span>   object 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.gettimezone-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2622">    <p><strong>示例 #1 <span class="function"><strong>IntlDateFormatter::getTimeZone()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$madrid </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Madrid'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$lisbon </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$madrid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimezone</span><span style="color: #007700">());<br>echo </span><span style="color: #9876AA">\$madrid</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimezone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getDisplayName</span><span style="color: #007700">(<br>        </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">DISPLAY_GENERIC_LOCATION</span><span style="color: #007700">, </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$lisbon</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">//The id can also be retrieved with -&gt;getTimezoneId()<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$lisbon</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZoneId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(IntlTimeZone)#4&nbsp;(4)&nbsp;{<br>&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["id"]=&gt;<br>&nbsp;&nbsp;string(13)&nbsp;"Europe/Madrid"<br>&nbsp;&nbsp;["rawOffset"]=&gt;<br>&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;["currentOffset"]=&gt;<br>&nbsp;&nbsp;int(7200000)<br>}<br>Spain&nbsp;Time<br>Europe/Lisbon<br>Europe/Lisbon</blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.gettimezone-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlDateFormatter::getTimeZoneId()} - Get the timezone-id used for the IntlDateFormatter</span></li>    <li><span class="function">{@link IntlDateFormatter::setTimeZone()} - Sets formatterʼs timezone</span></li>    <li><span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span></li>   </ul>   </div> </div>
 * 
     * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
     *  Get formatter's timezone
     * @link https://secure.php.net/manual/en/intldateformatter.gettimezone.php
     * @return IntlTimeZone|false The associated IntlTimeZone object or FALSE on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getTimeZone(): IntlTimeZone|false {}

    /**
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Sets the time zone to use
     * @link https://php.net/manual/en/intldateformatter.settimezoneid.php
     * @param string $zone <p>
     * The time zone ID string of the time zone to use.
     * If <b>NULL</b> or the empty string, the default time zone for the runtime is used.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     * @removed 7.0
     * @see IntlDateFormatter::setTimeZone()
     */
    #[Deprecated(replacement: "%class%->setTimeZone(%parametersList%)", since: "5.5")]
    public function setTimeZoneId($zone) {}

    /**
 * <div id="intldateformatter.settimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::setTimeZone</h1>  <h1 class="refname">datefmt_set_timezone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL intl &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::setTimeZone</span> -- <span class="refname">datefmt_set_timezone</span> — <span class="dc-title">Sets formatterʼs timezone</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.settimezone-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::setTimeZone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_set_timezone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets the timezone used for the IntlDateFormatter.   object.  </p> </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.settimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>    <dd>     <p class="para">    The formatter resource.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      The timezone to use for this formatter. This can be specified in the      following forms:     </p>     <ul class="itemizedlist"> <li class="listitem">  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, in which case the default timezone will be used, as specified in   the ini setting <a href="https://php.net/manual/zh/datetime.configuration.php#ini.date.timezone" class="link">date.timezone</a> or   through the function <span class="function">{@link date_default_timezone_set()}</span> and as   returned by <span class="function">{@link date_default_timezone_get()}</span>.  </p> </li> <li class="listitem">  <p class="para">   An <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span>, which will be used directly.  </p> </li> <li class="listitem">  <p class="para">   A <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span>. Its identifier will be extracted   and an ICU timezone object will be created; the timezone will be backed   by ICUʼs database, not PHPʼs.  </p> </li> <li class="listitem">  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, which should be a valid ICU timezone identifier.   See <span class="function">{@link IntlTimeZone::createTimeZoneIDEnumeration()}</span>. Raw   offsets such as <span class="literal">"GMT+08:30"</span> are also accepted.  </p> </li></ul>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intldateformatter.settimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intldateformatter.settimezone-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        This function now returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success; previously it returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intldateformatter.settimezone-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2636">   <p><strong>示例 #1 <span class="function"><strong>IntlDateFormatter::setTimeZone()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Amsterdam'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTC"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"NULL\n    "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">createTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"IntlTimeZone\n    "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Paris'</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"DateTimeZone\n    "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Rome'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"String\n    "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'GMT+00:30'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">NULL<br>&nbsp;&nbsp;&nbsp;&nbsp;Europe/Amsterdam<br>IntlTimeZone<br>&nbsp;&nbsp;&nbsp;&nbsp;Europe/Lisbon<br>DateTimeZone<br>&nbsp;&nbsp;&nbsp;&nbsp;Europe/Paris<br>String<br>&nbsp;&nbsp;&nbsp;&nbsp;Europe/Rome<br>IntlTimeZone&nbsp;Object<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[valid]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[id]&nbsp;=&gt;&nbsp;GMT+00:30<br>&nbsp;&nbsp;&nbsp;&nbsp;[rawOffset]&nbsp;=&gt;&nbsp;1800000<br>&nbsp;&nbsp;&nbsp;&nbsp;[currentOffset]&nbsp;=&gt;&nbsp;1800000<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.settimezone-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link IntlDateFormatter::getTimeZone()} - Get formatterʼs timezone</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
     * Sets formatter's timezone
     * @link https://php.net/manual/zh/intldateformatter.settimezone.php
     * @param mixed $timezone <p>
     * The timezone to use for this formatter. This can be specified in the
     * following forms:
     * <ul>
     * <li>
     * <p>
     * <b>NULL</b>, in which case the default timezone will be used, as specified in
     * the ini setting {@link "https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone" date.timezone} or
     * through the function  {@link "https://secure.php.net/manual/en/function.date-default-timezone-set.php" date_default_timezone_set()} and as
     * returned by {@link "https://secure.php.net/manual/en/function.date-default-timezone-get.php" date_default_timezone_get()}.
     * </p>
     * </li>
     * <li>
     * <p>
     * An {@link "https://secure.php.net/manual/en/class.intltimezone.php" IntlTimeZone}, which will be used directly.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link "https://secure.php.net/manual/en/class.datetimezone.php" DateTimeZone}. Its identifier will be extracted
     * and an ICU timezone object will be created; the timezone will be backed
     * by ICU's database, not PHP's.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link "https://secure.php.net/manual/en/language.types.string.php" string}, which should be a valid ICU timezone identifier.
     * See <b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw offsets such as <em>"GMT+08:30"</em> are also accepted.
     * </p>
     * </li>
     * </ul>
     * </p>
     * @return bool|null <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    #[LanguageAware(['8.3' => 'bool'], default: 'bool|null')]
    public function setTimeZone($timezone) {}

    /**
 * <div id="intldateformatter.setpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::setPattern</h1>  <h1 class="refname">datefmt_set_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::setPattern</span> -- <span class="refname">datefmt_set_pattern</span> — <span class="dc-title">Set the pattern used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.setpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::setPattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_set_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$pattern</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Set the pattern used for the IntlDateFormatter.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.setpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">     The formatter resource.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       New pattern string to use.       Possible patterns are documented at <a href="https://unicode-org.github.io/icu/userguide/format_parse/datetime/" class="link external">»&nbsp;https://unicode-org.github.io/icu/userguide/format_parse/datetime/</a>.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.setpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   Bad formatstrings are usually the cause of the failure.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.setpattern-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2634">    <p><strong>示例 #1 <span class="function"><strong>datefmt_set_pattern()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Pattern of the formatter is : '</span><span style="color: #007700">, </span><span style="color: #9876AA">datefmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'First Formatted output with pattern is '</span><span style="color: #007700">, </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">datefmt_set_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'yyyyMMdd hh:mm:ss z'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now pattern of the formatter is : '</span><span style="color: #007700">, </span><span style="color: #9876AA">datefmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Second Formatted output with pattern is '</span><span style="color: #007700">, </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2635">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Pattern of the formatter is : '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">(), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'First Formatted output is '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">'yyyyMMdd hh:mm:ss z'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now pattern of the formatter is : '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">(), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">'Second Formatted output is '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <p class="para">以上示例会输出：</p>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Pattern&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;MM/dd/yyyy<br>First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;12/31/1969<br>Now&nbsp;pattern&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;yyyyMMdd&nbsp;hh:mm:ss&nbsp;z<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;19691231&nbsp;04:00:00&nbsp;PST</blockquote></div>   </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.setpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.getpattern.php" class="function" rel="rdfs-seeAlso">datefmt_get_pattern()</a> - Get the pattern used for the IntlDateFormatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set the pattern used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.setpattern.php
     * @param string $pattern <p>
     * New pattern string to use.
     * Possible patterns are documented at http://userguide.icu-project.org/formatparse/datetime.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     * Bad formatstrings are usually the cause of the failure.
     */
    #[TentativeType]
    public function setPattern(#[LanguageAware(['8.0' => 'string'], default: '')] $pattern): bool {}

    /**
 * <div id="intldateformatter.getpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getPattern</h1>  <h1 class="refname">datefmt_get_pattern</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getPattern</span> -- <span class="refname">datefmt_get_pattern</span> — <span class="dc-title">Get the pattern used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.getpattern-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getPattern</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_pattern</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get pattern used by the formatter.  </p>  </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.getpattern-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.            </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-intldateformatter.getpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The pattern string being used to format/parse,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.getpattern-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2615">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_pattern()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'pattern of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output with pattern is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">datefmt_set_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">,</span><span style="color: #DD0000">'yyyymmdd hh:mm:ss z'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now pattern of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_pattern</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output with pattern is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <div class="example" id="example-2616">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'pattern of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">'yyyymmdd hh:mm:ss z'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now pattern of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPattern</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">pattern&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;MM/dd/yyyy<br>First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;12/31/1969<br>Now&nbsp;pattern&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;yyyymmdd&nbsp;hh:mm:ss&nbsp;z<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;19690031&nbsp;04:00:00&nbsp;PST</blockquote></div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.getpattern-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.setpattern.php" class="function" rel="rdfs-seeAlso">datefmt_set_pattern()</a> - Set the pattern used for the IntlDateFormatter</span></li>     <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the pattern used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.getpattern.php
     * @return string|false The pattern string being used to format/parse.
     */
    #[Pure]
    #[TentativeType]
    public function getPattern(): string|false {}

    /**
 * <div id="intldateformatter.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getLocale</h1>  <h1 class="refname">datefmt_get_locale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getLocale</span> -- <span class="refname">datefmt_get_locale</span> — <span class="dc-title">Get the locale used by formatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.getlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.uloc-actual-locale">ULOC_ACTUAL_LOCALE</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get locale used by the formatter.  </p>  </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.getlocale-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource            </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       You can choose between valid and actual locale (       <strong><span>{@link Locale::VALID_LOCALE}</span></strong>,       <strong><span>{@link Locale::ACTUAL_LOCALE}</span></strong>,       respectively). The default is the actual locale.      </p>     </dd>       </dl>   </div>   <div class="refsect1 returnvalues" id="refsect1-intldateformatter.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The locale of this formatter,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.getlocale-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2613">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_locale()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'locale of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_locale</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'locale of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_get_locale</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <div class="example" id="example-2614">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'locale of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'locale of the formatter is : ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">locale&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;en<br>First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00:00&nbsp;PM&nbsp;PT<br>locale&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;de<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Mittwoch,&nbsp;31.&nbsp;Dezember&nbsp;1969&nbsp;16:00&nbsp;Uhr&nbsp;GMT-08:00</blockquote></div>  </div> </div>  <div class="refsect1 seealso" id="refsect1-intldateformatter.getlocale-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the locale used by formatter
     * @link https://php.net/manual/zh/intldateformatter.getlocale.php
     * @param int $type [optional]
     * @return string|false the locale of this formatter or 'false' if error
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(
        #[ElementAvailable(from: '8.0')] #[LanguageAware(['8.0' => 'int'], default: '')] $type = 0
    ): string|false {}

    /**
 * <div id="intldateformatter.setlenient" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::setLenient</h1>  <h1 class="refname">datefmt_set_lenient</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::setLenient</span> -- <span class="refname">datefmt_set_lenient</span> — <span class="dc-title">Set the leniency of the parser</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.setlenient-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::setLenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_set_lenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  Define if the parser is strict or lenient in interpreting inputs that do not match the pattern exactly.  Enabling lenient parsing allows the parser to accept otherwise flawed date or   time patterns, parsing as much as possible to obtain a value.  Extra space, unrecognized tokens, or invalid values ("February 30th") are not accepted.    </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.setlenient-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource            </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">lenient</span></dt>     <dd>      <p class="para">       Sets whether the parser is lenient or not, default is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> (lenient).      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.setlenient-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.setlenient-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2632">    <p><strong>示例 #1 <span class="function"><strong>datefmt_set_lenient()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, <br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, <br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">, <br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">, <br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">, <br>    </span><span style="color: #DD0000">'dd/MM/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'lenient of the formatter is : '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br></span><span style="color: #9876AA">datefmt_set_lenient</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\nNow lenient of the formatter is : "</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\nTrying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : "</span><span style="color: #007700">.</span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : "</span><span style="color: #007700">.</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2633">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'dd/MM/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'lenient of the formatter is : '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setLenient</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\nNow lenient of the formatter is : "</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">lenient&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;TRUE<br>Trying&nbsp;to&nbsp;do&nbsp;parse('35/13/1971').<br>Result&nbsp;is&nbsp;:&nbsp;66038400<br>Now&nbsp;lenient&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;FALSE<br>Trying&nbsp;to&nbsp;do&nbsp;parse('35/13/1971').<br>Result&nbsp;is&nbsp;:&nbsp;<br>Error_msg&nbsp;is&nbsp;:&nbsp;Date&nbsp;parsing&nbsp;failed:&nbsp;U_PARSE_ERROR<br>Error_code&nbsp;is&nbsp;:&nbsp;9</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.setlenient-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.islenient.php" class="function" rel="rdfs-seeAlso">datefmt_is_lenient()</a> - Get the lenient used for the IntlDateFormatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Set the leniency of the parser
     * @link https://php.net/manual/zh/intldateformatter.setlenient.php
     * @param bool $lenient <p>
     * Sets whether the parser is lenient or not, default is <b>TRUE</b> (lenient).
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setLenient(#[LanguageAware(['8.0' => 'bool'], default: '')] $lenient): void {}

    /**
 * <div id="intldateformatter.islenient" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::isLenient</h1>  <h1 class="refname">datefmt_is_lenient</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::isLenient</span> -- <span class="refname">datefmt_is_lenient</span> — <span class="dc-title">Get the lenient used for the IntlDateFormatter</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.islenient-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::isLenient</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_is_lenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    Check if the parser is strict or lenient in interpreting inputs that do not match the pattern exactly.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.islenient-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.islenient-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if parser is lenient, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if parser is strict. By default the parser is lenient.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.islenient-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2623">    <p><strong>示例 #1 <span class="function"><strong>datefmt_is_lenient()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'dd/mm/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'lenient of the formatter is : '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br></span><span style="color: #9876AA">datefmt_set_lenient</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">,</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now lenient of the formatter is : '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').Result is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2624">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"dd/mm/yyyy"<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"lenient of the formatter is : "</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">){<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setLenient</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Now lenient of the formatter is : '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()) {<br>    echo </span><span style="color: #DD0000">'TRUE'</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">'FALSE'</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"\n Trying to do parse('35/13/1971').\nResult is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'35/13/1971'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"\nError_msg is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">();<br>    echo </span><span style="color: #DD0000">"\nError_code is : " </span><span style="color: #007700">. </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">lenient&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;TRUE<br>Trying&nbsp;to&nbsp;do&nbsp;parse('35/13/1971').<br>Result&nbsp;is&nbsp;:&nbsp;-2147483<br>Now&nbsp;lenient&nbsp;of&nbsp;the&nbsp;formatter&nbsp;is&nbsp;:&nbsp;FALSE<br>Trying&nbsp;to&nbsp;do&nbsp;parse('35/13/1971').<br>Result&nbsp;is&nbsp;:&nbsp;<br>Error_msg&nbsp;is&nbsp;:&nbsp;Date&nbsp;parsing&nbsp;failed:&nbsp;U_PARSE_ERROR&nbsp;<br>Error_code&nbsp;is&nbsp;:&nbsp;9</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.islenient-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.setlenient.php" class="function" rel="rdfs-seeAlso">datefmt_set_lenient()</a> - Set the leniency of the parser</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the lenient used for the IntlDateFormatter
     * @link https://php.net/manual/zh/intldateformatter.islenient.php
     * @return bool <b>TRUE</b> if parser is lenient, <b>FALSE</b> if parser is strict. By default the parser is lenient.
     */
    #[Pure]
    #[TentativeType]
    public function isLenient(): bool {}

    /**
 * <div id="intldateformatter.format" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::format</h1>  <h1 class="refname">datefmt_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::format</span> -- <span class="refname">datefmt_format</span> — <span class="dc-title">Format the date/time value as a string</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.format-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Formats the time value as a string.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.format-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The date formatter resource.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>     <dd>      <p class="para">       Value to format. This may be a <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> object, an       <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object, a <span class="type" style="color:#EAB766">numeric</span> type       representing a (possibly fractional) number of seconds since epoch or an       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> in the format output by       <span class="function">{@link localtime()}</span>.      </p>      <p class="para">       If a <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> or an       <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object is passed, its timezone is not       considered. The object will be formatted using the formaterʼs configured       timezone. If one wants to use the timezone of the object to be formatted,       <span class="function">{@link IntlDateFormatter::setTimeZone()}</span> must be called before       with the objectʼs timezone. Alternatively, the static function       <span class="function">{@link IntlDateFormatter::formatObject()}</span> may be used instead.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The formatted string or, if an error occurred, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.     </p> </div>  <div class="refsect1 changelog" id="refsect1-intldateformatter.format-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.1.5</td>       <td>        Support for providing general <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> objects to the        <span class="parameter" style="color:#3A95FF">datetime</span> parameter was added. Formerly, only proper        <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> objects were supported.       </td>      </tr>      <tr>       <td>PECL intl 3.0.0</td>       <td>        Support for providing <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> objects to the        <span class="parameter" style="color:#3A95FF">datetime</span> parameter was added.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intldateformatter.format-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2600">    <p><strong>示例 #1 <span class="function"><strong>datefmt_format()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output with pattern is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Second Formatted output with pattern is " </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2601">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First Formatted output with pattern is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'MM/dd/yyyy'<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second Formatted output with pattern is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">First&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Wednesday,&nbsp;December&nbsp;31,&nbsp;1969&nbsp;4:00:00&nbsp;PM&nbsp;PT<br>Second&nbsp;Formatted&nbsp;output&nbsp;is&nbsp;Mittwoch,&nbsp;31.&nbsp;Dezember&nbsp;1969&nbsp;16:00&nbsp;Uhr&nbsp;GMT-08:00<br>First&nbsp;Formatted&nbsp;output&nbsp;with&nbsp;pattern&nbsp;is&nbsp;12/31/1969<br>Second&nbsp;Formatted&nbsp;output&nbsp;with&nbsp;pattern&nbsp;is&nbsp;12/31/1969</blockquote></div>     </div>   <div class="example" id="example-2602">   <p><strong>示例 #3 With <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$tz </span><span style="color: #007700">= </span><span style="color: #9876AA">reset</span><span style="color: #007700">(</span><span style="color: #9876AA">iterator_to_array</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">createEnumeration</span><span style="color: #007700">(</span><span style="color: #DD0000">'FR'</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'fr_FR'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$tz</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tz</span><span style="color: #007700">, </span><span style="color: #DD0000">'@calendar=islamic-civil'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">); </span><span style="color: #FF8000">//9th month, Ramadan<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">); </span><span style="color: #FF8000">//1st day<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MINUTE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_SECOND</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MILLISECOND</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"In this islamic year, Ramadan started/will start on:\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">//Itʼs the formatterʼs timezone that is used:<br></span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Asia/Tokyo'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"After changing timezone:\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">In&nbsp;this&nbsp;islamic&nbsp;year,&nbsp;Ramadan&nbsp;started/will&nbsp;start&nbsp;on:<br>&nbsp;&nbsp;&nbsp;&nbsp;mardi&nbsp;9&nbsp;juillet&nbsp;2013&nbsp;19:00:00&nbsp;heure&nbsp;avancÃ©e&nbsp;dâEurope&nbsp;centrale<br>After&nbsp;changing&nbsp;timezone:<br>&nbsp;&nbsp;&nbsp;&nbsp;mercredi&nbsp;10&nbsp;juillet&nbsp;2013&nbsp;02:00:00&nbsp;heure&nbsp;normale&nbsp;du&nbsp;Japon</blockquote></div>    </div>   </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.format-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.parse.php" class="function" rel="rdfs-seeAlso">datefmt_parse()</a> - Parse string to a timestamp value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_message()</a> - Get the error text from the last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.formatobject.php" class="function" rel="rdfs-seeAlso">datefmt_format_object()</a> - Formats an object</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Format the date/time value as a string
     * @link https://php.net/manual/zh/intldateformatter.format.php
     * @param mixed $datetime <p>
     * Value to format. This may be a <b>DateTime</b> object,
     * an integer representing a Unix timestamp value (seconds
     * since epoch, UTC) or an array in the format output by
     * <b>localtime</b>.
     * </p>
     * @return string|false The formatted string or, if an error occurred, <b>FALSE</b>.
     */
    #[TentativeType]
    public function format(
        #[ElementAvailable(from: '5.3', to: '7.4')] $datetime = null,
        #[ElementAvailable(from: '8.0')] $datetime,
        #[ElementAvailable(from: '5.3', to: '7.4')] $array = null
    ): string|false {}

    /**
 * <div id="intldateformatter.formatobject" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::formatObject</h1>  <h1 class="refname">datefmt_format_object</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL intl &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::formatObject</span> -- <span class="refname">datefmt_format_object</span> — <span class="dc-title">Formats an object</span></p> </div>  <div class="refsect1 description" id="refsect1-intldateformatter.formatobject-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::formatObject</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$format</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_format_object</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$format</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <p class="para rdfs-comment">   This function allows formatting an <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> or   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object without first explicitly creating a   <span class="classname"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="classname">IntlDateFormatter</a></span> object.  </p>  <p class="para">   The temporary <span class="classname"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="classname">IntlDateFormatter</a></span> that will be created   will take the timezone from the passed in object. The timezone database   bundled with PHP will not be used – ICU's will be used instead. The timezone   identifier used in <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> objects must therefore   also exist in ICU's database.  </p>   </div>  <div class="refsect1 parameters" id="refsect1-intldateformatter.formatobject-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>    <dd>     <p class="para">      An object of type <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> or      <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>. The timezone information in the object      will be used.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">format</span></dt>    <dd>     <p class="para">      How to format the date/time. This can either be an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with      two elements (first the date style, then the time style, these being one      of the constants <strong><span>{@link IntlDateFormatter::NONE}</span></strong>,      <strong><span>{@link IntlDateFormatter::SHORT}</span></strong>,      <strong><span>{@link IntlDateFormatter::MEDIUM}</span></strong>,      <strong><span>{@link IntlDateFormatter::LONG}</span></strong>,      <strong><span>{@link IntlDateFormatter::FULL}</span></strong>), an <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> with      the value of one of these constants (in which case it will be used both      for the time and the date) or a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> with the format      described in <a href="https://unicode-org.github.io/icu/userguide/format_parse/datetime/#datetime-format-syntax" class="link external">»&nbsp;the ICU      documentation</a>. If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, the default style will be used.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">      The locale to use, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> to use the <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.default-locale" class="link">default one</a>.     </p>    </dd>     </dl> </div>  <div class="refsect1 returnvalues" id="refsect1-intldateformatter.formatobject-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string with result 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>   <div class="refsect1 examples" id="refsect1-intldateformatter.formatobject-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2603">    <p><strong>示例 #1 <span class="function"><strong>IntlDateFormatter::formatObject()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// default timezone is irrelevant; timezone taken from the object <br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// default locale is taken from this ini setting <br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr_FR'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2013-06-06 17:05:06 Europe/Dublin"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"default:\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">),<br>        </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"long \\$format (full):\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">),<br>        </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"array \\$format (none, full):\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, array(<br>                </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">NONE</span><span style="color: #007700">,<br>                </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">)),<br>        </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"string \\$format (d 'of' MMMM y):\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #DD0000">"d 'of' MMMM y"</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">),<br>        </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"with DateTime:\n\t"</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(<br>                new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2013-09-09 09:09:09 Europe/Madrid"</span><span style="color: #007700">),<br>                </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">),<br>        </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">default:<br>&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;juin&nbsp;2013&nbsp;17:05:06<br>long&nbsp;\$format&nbsp;(full):<br>&nbsp;&nbsp;&nbsp;&nbsp;jeudi&nbsp;6&nbsp;juin&nbsp;2013&nbsp;17:05:06&nbsp;heure&nbsp;dâÃ©tÃ©&nbsp;irlandaise<br>array&nbsp;\$format&nbsp;(none,&nbsp;full):<br>&nbsp;&nbsp;&nbsp;&nbsp;17:05:06&nbsp;heure&nbsp;dâÃ©tÃ©&nbsp;irlandaise<br>string&nbsp;\$format&nbsp;(d&nbsp;'of'&nbsp;MMMM&nbsp;y):<br>&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;of&nbsp;June&nbsp;2013<br>with&nbsp;DateTime:<br>&nbsp;&nbsp;&nbsp;&nbsp;lunes,&nbsp;9&nbsp;de&nbsp;septiembre&nbsp;de&nbsp;2013&nbsp;09:09:09&nbsp;Hora&nbsp;de&nbsp;verano&nbsp;de&nbsp;Europa&nbsp;central</blockquote></div>    </div>   </div>   </div> </div>
 * 
     * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
     * Formats an object
     * @link https://secure.php.net/manual/en/intldateformatter.formatobject.php
     * @param object $datetime <p>
     * An object of type {@link "https://secure.php.net/manual/en/class.intlcalendar.php" IntlCalendar} or {@link "https://secure.php.net/manual/en/class.datetime.php" DateTime}. The timezone information in the object will be used.
     * </p>
     * @param mixed $format [optional] <p>
     * How to format the date/time. This can either be an {@link "https://secure.php.net/manual/en/language.types.array.php" array} with
     * two elements (first the date style, then the time style, these being one
     * of the constants <b>IntlDateFormatter::NONE</b>,
     * <b>IntlDateFormatter::SHORT</b>,
     * <b>IntlDateFormatter::MEDIUM</b>,
     * <b>IntlDateFormatter::LONG</b>,
     * <b>IntlDateFormatter::FULL</b>), a long with
     * the value of one of these constants (in which case it will be used both
     * for the time and the date) or a {@link "https://secure.php.net/manual/en/language.types.string.php" string} with the format
     * described in {@link "http://www.icu-project.org/apiref/icu4c/classSimpleDateFormat.html#details" the ICU documentation}.
     * If <b>NULL</b>, the default style will be used.
     * </p>
     * @param string|null $locale [optional] <p>
     * The locale to use, or <b>NULL</b> to use the {@link "https://secure.php.net/manual/en/intl.configuration.php#ini.intl.default-locale" default one}.</p>
     * @return string|false A string with result or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public static function formatObject($datetime, $format = null, #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale = null): string|false {}

    /**
 * <div id="intldateformatter.parse" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::parse</h1>  <h1 class="refname">datefmt_parse</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::parse</span> -- <span class="refname">datefmt_parse</span> — <span class="dc-title">Parse string to a timestamp value</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.parse-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Converts <span class="parameter" style="color:#3A95FF">string</span> to an incremental time value, starting at    <span class="parameter" style="color:#3A95FF">offset</span> and consuming as much of the input value as possible.  </p>   </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.parse-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource            </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       string to convert to a time       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Position at which to start the parsing in <span class="parameter" style="color:#3A95FF">string</span> (zero-based).       If no error occurs before <span class="parameter" style="color:#3A95FF">string</span> is consumed, <span class="parameter" style="color:#3A95FF">offset</span> will contain -1       otherwise it will contain the position at which parsing ended (and the error occurred).       This variable will contain the end position if the parse fails.       If <span class="parameter" style="color:#3A95FF">offset</span> &gt; <span class="code">strlen(\$string)</span>, the parse fails immediately.     </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-intldateformatter.parse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Timestamp of parsed value, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if value cannot be parsed.  </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.parse-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2627">    <p><strong>示例 #1 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First parsed output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">'Wednesday, December 20, 1989 4:00:00 PM PT'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2628">    <p><strong>示例 #2 <span class="function"><strong>datefmt_parse()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First parsed output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'Wednesday, December 20, 1989 4:00:00 PM PT'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'de-DE'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'Second parsed output is ' </span><span style="color: #007700">. </span><span style="color: #9876AA">datefmt_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'Mittwoch, 20. Dezember 1989 16:00 Uhr GMT-08:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">First&nbsp;parsed&nbsp;output&nbsp;is&nbsp;630201600<br>Second&nbsp;parsed&nbsp;output&nbsp;is&nbsp;630201600</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.parse-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.format.php" class="function" rel="rdfs-seeAlso">datefmt_format()</a> - Format the date/time value as a string</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.localtime.php" class="function" rel="rdfs-seeAlso">datefmt_localtime()</a> - Parse string to a field-based time value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_message()</a> - Get the error text from the last operation</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Parse string to a timestamp value
     * @link https://php.net/manual/zh/intldateformatter.parse.php
     * @param string $string <p>
     * string to convert to a time
     * </p>
     * @param int &$offset [optional] <p>
     * Position at which to start the parsing in $value (zero-based).
     * If no error occurs before $value is consumed, $parse_pos will contain -1
     * otherwise it will contain the position at which parsing ended (and the error occurred).
     * This variable will contain the end position if the parse fails.
     * If $parse_pos > strlen($value), the parse fails immediately.
     * </p>
     * @return int|float|false timestamp parsed value
     */
    #[TentativeType]
    public function parse(#[LanguageAware(['8.0' => 'string'], default: '')] $string, &$offset = null): int|float|false {}

    /**
 * <div id="intldateformatter.localtime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::localtime</h1>  <h1 class="refname">datefmt_localtime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::localtime</span> -- <span class="refname">datefmt_localtime</span> — <span class="dc-title">Parse string to a field-based time value</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.localtime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::localtime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_localtime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Converts string \$value to a field-based time value ( an array of various fields), starting at\$parse_pos and consuming as much of the input value as possible.  </p>  </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.localtime-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       string to convert to a time      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Position at which to start the parsing in \$value (zero-based).       If no error occurs before \$value is consumed, \$parse_pos will contain -1       otherwise it will contain the position at which parsing ended .       If \$parse_pos &gt; strlen(\$value), the parse fails immediately.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-intldateformatter.localtime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Localtime compatible array of integers  : contains 24 hour clock value in tm_hour field,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.   </p> </div>  <div class="refsect1 examples" id="refsect1-intldateformatter.localtime-examples">  <h3 class="title">示例</h3>   <div class="example" id="example-2625">    <p><strong>示例 #1 <span class="function"><strong>datefmt_localtime()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_localtime</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #DD0000">'Wednesday, December 31, 1969 at 4:00:00 PM Pacific Standard Time'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$offset</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First parsed output is '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> , "</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-2626">    <p><strong>示例 #2 OO example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">localtime</span><span style="color: #007700">(</span><span style="color: #DD0000">'Wednesday, December 31, 1969 at 4:00:00 PM Pacific Standard Time'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$offset</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">'First parsed output is '</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">) {<br>    foreach (</span><span style="color: #9876AA">\$arr </span><span style="color: #007700">as </span><span style="color: #9876AA">\$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$key</span><span style="color: #DD0000"> : </span><span style="color: #9876AA">\$value</span><span style="color: #DD0000"> , "</span><span style="color: #007700">;<br>    }<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     <p class="para">以上示例会输出：</p>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">         <div class="examplescode"><blockquote style="border:1px gray solid;">First&nbsp;parsed&nbsp;output&nbsp;is&nbsp;tm_sec&nbsp;:&nbsp;0&nbsp;,&nbsp;tm_min&nbsp;:&nbsp;0&nbsp;,&nbsp;tm_hour&nbsp;:&nbsp;16&nbsp;,&nbsp;tm_year&nbsp;:&nbsp;69&nbsp;,<br>tm_mday&nbsp;:&nbsp;31&nbsp;,&nbsp;tm_wday&nbsp;:&nbsp;3&nbsp;,&nbsp;tm_yday&nbsp;:&nbsp;365&nbsp;,&nbsp;tm_mon&nbsp;:&nbsp;11&nbsp;,&nbsp;tm_isdst&nbsp;:&nbsp;0&nbsp;,</blockquote></div>     </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.localtime-seealso">  <h3 class="title">参见</h3>  <p class="para">    </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.create.php" class="function" rel="rdfs-seeAlso">datefmt_create()</a> - Create a date formatter</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.format.php" class="function" rel="rdfs-seeAlso">datefmt_format()</a> - Format the date/time value as a string</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.parse.php" class="function" rel="rdfs-seeAlso">datefmt_parse()</a> - Parse string to a timestamp value</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_message()</a> - Get the error text from the last operation</span></li>    </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Parse string to a field-based time value
     * @link https://php.net/manual/zh/intldateformatter.localtime.php
     * @param string $string <p>
     * string to convert to a time
     * </p>
     * @param int &$offset [optional] <p>
     * Position at which to start the parsing in $value (zero-based).
     * If no error occurs before $value is consumed, $parse_pos will contain -1
     * otherwise it will contain the position at which parsing ended .
     * If $parse_pos > strlen($value), the parse fails immediately.
     * </p>
     * @return array|false Localtime compatible array of integers : contains 24 hour clock value in tm_hour field
     */
    #[TentativeType]
    public function localtime(#[LanguageAware(['8.0' => 'string'], default: '')] $string, &$offset = null): array|false {}

    /**
 * <div id="intldateformatter.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getErrorCode</h1>  <h1 class="refname">datefmt_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getErrorCode</span> -- <span class="refname">datefmt_get_error_code</span> — <span class="dc-title">Get the error code from last operation</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the error code from the last formatting operation.  </p> </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-intldateformatter.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.  </p> </div> <div class="refsect1 examples" id="refsect1-intldateformatter.geterrorcode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2609">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_error_code()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"ERROR: %s (%d)\n"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">datefmt_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">datefmt_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">)<br>);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2610">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"ERROR: %s (%d)\n"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">()<br>);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">ERROR:&nbsp;U_ZERO_ERROR&nbsp;(0)</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_message()</a> - Get the error text from the last operation</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the error code from last operation
     * @link https://php.net/manual/zh/intldateformatter.geterrorcode.php
     * @return int The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="intldateformatter.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlDateFormatter::getErrorMessage</h1>  <h1 class="refname">datefmt_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">IntlDateFormatter::getErrorMessage</span> -- <span class="refname">datefmt_get_error_message</span> — <span class="dc-title">Get the error text from the last operation</span></p> </div> <div class="refsect1 description" id="refsect1-intldateformatter.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlDateFormatter::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>datefmt_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intldateformatter.php" class="type IntlDateFormatter" style="color:#EAB766">IntlDateFormatter</a></span> <span class="parameter" style="color:#3A95FF">\$formatter</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get the error text from the last operation.  </p> </div> <div class="refsect1 parameters" id="refsect1-intldateformatter.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">formatter</span></dt>     <dd>      <p class="para">       The formatter resource.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-intldateformatter.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Description of the last error.  </p> </div> <div class="refsect1 examples" id="refsect1-intldateformatter.geterrormessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2611">   <p><strong>示例 #1 <span class="function"><strong>datefmt_get_error_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$fmt </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_create</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">datefmt_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"ERROR: %s (%d)\n"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">datefmt_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">datefmt_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">)<br>);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2612">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$fmt </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'America/Los_Angeles'</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">GREGORIAN<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$str </span><span style="color: #007700">= </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"ERROR: %s (%d)\n"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$fmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">()<br>);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">ERROR:&nbsp;U_ZERO_ERROR&nbsp;(0)</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-intldateformatter.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/intldateformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">datefmt_get_error_code()</a> - Get the error code from last operation</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
     * Get the error text from the last operation.
     * @link https://php.net/manual/zh/intldateformatter.geterrormessage.php
     * @return string Description of the last error.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string {}

    /**
     * @since 8.4
     */
    public function parseToCalendar(string $string, &$offset = null): int|float|false {}
}

/**
 * <div id="class.resourcebundle" class="reference"> <h1 class="title">The ResourceBundle class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p>    <div class="section" id="resourcebundle.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Localized software products often require sets of data that are to be customized    depending on current locale, e.g.: messages, labels, formatting patterns. ICU     resource mechanism allows to define sets of resources that the application can     load on locale basis, while accessing them in unified locale-independent fashion.   </p>   <p class="simpara">    This class implements access to ICU resource data files. These files are binary data    arrays which ICU uses to store the localized data.    </p>   <p class="simpara">    ICU resource bundle can hold simple resources and complex resources. Complex resources    are containers which can be either integer-indexed or string-indexed (just like PHP arrays).    Simple resources can be of the following types: string, integer, binary data field     or integer array.   </p>   <p class="simpara">    <span class="classname"><strong class="classname">ResourceBundle</strong></span> supports direct access to the data through array access    pattern and iteration via <a href="https://php.net/manual/zh/control-structures.foreach.php" class="link">foreach</a>,    as well as access via class methods. The result will be PHP value for simple resources and    <span class="classname"><strong class="classname">ResourceBundle</strong></span> object for complex ones. All resources are read-only.   </p>  </div>    <div class="section" id="resourcebundle.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">ResourceBundle</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a>,     <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.create.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.create.php" class="methodname" style="color:#CC7832">create</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.get.php" class="methodname" style="color:#CC7832">get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/resourcebundle.locales.php" class="methodname" style="color:#CC7832">getLocales</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>      <div class="section">    <h2 class="title">更新日志</h2>    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.0.0</td>        <td>         <span class="classname"><strong class="classname">ResourceBundle</strong></span> implements         <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span> now.         Previously, <span class="interfacename"><a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span> was implemented instead.        </td>       </tr>       <tr>        <td>7.4.0</td>        <td>         <span class="classname"><strong class="classname">ResourceBundle</strong></span> implements         <span class="interfacename"><a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span> now.        </td>       </tr>      </tbody>         </table>   </div>  </div>  <div class="section" id="resourcebundle.seealso">   <h2 class="title">参见</h2>   <p class="para">    </p><ul class="simplelist">     <li>      <a href="https://unicode-org.github.io/icu/userguide/locale/resources.html" class="link external">»&nbsp;       ICU Resource Management      </a>     </li>     <li>      <a href="https://unicode-org.github.io/icu/userguide/icu_data/" class="link external">»&nbsp;ICU Data</a>     </li>    </ul>     </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ResourceBundle::count} — Get number of elements in the bundle</li><li>{@link ResourceBundle::create} — Create a resource bundle</li><li>{@link ResourceBundle::get} — Get data from the bundle</li><li>{@link ResourceBundle::getErrorCode} — Get bundle's last error code</li><li>{@link ResourceBundle::getErrorMessage} — Get bundle's last error message</li><li>{@link ResourceBundle::getLocales} — Get supported locales</li></ul></div>
 */
class ResourceBundle implements IteratorAggregate, Countable
{
    /**
     * @link https://www.php.net/manual/en/resourcebundle.create.php
     * @param string $locale <p>Locale for which the resources should be loaded (locale name, e.g. en_CA).</p>
     * @param string $bundle <p>The directory where the data is stored or the name of the .dat file.</p>
     * @param bool $fallback [optional] <p>Whether locale should match exactly or fallback to parent locale is allowed.</p>
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $bundle,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $fallback = true
    ) {}

    /**
 * <div id="resourcebundle.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">ResourceBundle::create</h1>  <h1 class="refname">resourcebundle_create</h1>  <h1 class="refname">ResourceBundle::__construct</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">ResourceBundle::create</span> -- <span class="refname">resourcebundle_create</span> -- <span class="refname">ResourceBundle::__construct</span> — <span class="dc-title">Create a resource bundle</span></p> </div> <div class="refsect1 description" id="refsect1-resourcebundle.create-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格 (method)  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>resourcebundle_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span></span></div>  <p class="para rdfs-comment">   面向对象风格 (constructor):  </p>   <div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::__construct</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>)</div>  <p class="para rdfs-comment">   Creates a resource bundle.  </p> </div> <div class="refsect1 parameters" id="refsect1-resourcebundle.create-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>     <dd>      <p class="para">       Locale for which the resources should be loaded (locale name, e.g. en_CA).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bundle</span></dt>     <dd>      <p class="para">       The directory where the data is stored or the name of the .dat file.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fallback</span></dt>     <dd>      <p class="para">       Whether locale should match exactly or fallback to parent locale is allowed.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-resourcebundle.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-resourcebundle.create-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2639">   <p><strong>示例 #1 <span class="function"><strong>resourcebundle_create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">resourcebundle_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'teststring'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2640">   <p><strong>示例 #2 <span class="function"><strong>ResourceBundle::create()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'teststring'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Â¡Hola,&nbsp;mundo!</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-resourcebundle.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/resourcebundle.get.php" class="function" rel="rdfs-seeAlso">resourcebundle_get()</a> - Get data from the bundle</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Create a resource bundle
     * @link https://php.net/manual/zh/resourcebundle.create.php
     * @param string $locale <p>
     * Locale for which the resources should be loaded (locale name, e.g. en_CA).
     * </p>
     * @param string $bundle <p>
     * The directory where the data is stored or the name of the .dat file.
     * </p>
     * @param bool $fallback [optional] <p>
     * Whether locale should match exactly or fallback to parent locale is allowed.
     * </p>
     * @return ResourceBundle|null <b>ResourceBundle</b> object or <b>null</b> on error.
     */
    #[TentativeType]
    public static function create(
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $bundle,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $fallback = true
    ): ?ResourceBundle {}

    /**
 * <div id="resourcebundle.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">ResourceBundle::get</h1>  <h1 class="refname">resourcebundle_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">ResourceBundle::get</span> -- <span class="refname">resourcebundle_get</span> — <span class="dc-title">Get data from the bundle</span></p> </div> <div class="refsect1 description" id="refsect1-resourcebundle.get-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>resourcebundle_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$index</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$fallback</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   Get the data from the bundle by index or string key.  </p> </div> <div class="refsect1 parameters" id="refsect1-resourcebundle.get-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">bundle</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       Data index, must be string or integer.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fallback</span></dt>     <dd>      <p class="para">       Whether locale should match exactly or fallback to parent locale is allowed.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-resourcebundle.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the data located at the index or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on error. Strings, integers and binary data strings   are returned as corresponding PHP types, integer array is returned as PHP array. Complex types are   returned as <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object.  </p> </div> <div class="refsect1 errors" id="refsect1-resourcebundle.get-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   A <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> is thrown if   the offset type is invalid.  </p>  <p class="simpara">   A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if   if <span class="parameter" style="color:#3A95FF">index</span> is a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>   and is empty or is a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> and does not   fit into a 32 bit integer type.  </p> </div> <div class="refsect1 changelog" id="refsect1-resourcebundle.get-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="simpara">        A <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> is thrown if        the offset type is invalid.        A <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> is thrown if        if <span class="parameter" style="color:#3A95FF">index</span> is a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>        and is empty or is a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> and does not        fit into a 32 bit integer type.       </span>      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-resourcebundle.get-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2641">   <p><strong>示例 #1 <span class="function"><strong>resourcebundle_get()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">resourcebundle_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">resourcebundle_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">, </span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2642">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= new </span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  <div class="example-contents"><p>以上示例会输出：</p></div>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">?Hola,&nbsp;mundo!</blockquote></div>  </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-resourcebundle.get-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/resourcebundle.count.php" class="function" rel="rdfs-seeAlso">resourcebundle_count()</a> - Get number of elements in the bundle</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Get data from the bundle
     * @link https://php.net/manual/zh/resourcebundle.get.php
     * @param string|int $index <p>
     * Data index, must be string or integer.
     * </p>
     * @param bool $fallback
     * @return mixed the data located at the index or <b>NULL</b> on error. Strings, integers and binary data strings
     * are returned as corresponding PHP types, integer array is returned as PHP array. Complex types are
     * returned as <b>ResourceBundle</b> object.
     */
    #[Pure]
    #[TentativeType]
    #[LanguageAware(['8.4' => 'ResourceBundle|array|string|int|null'], default: 'mixed')]
    public function get(#[LanguageAware(['8.4' => 'string|int'], default: '')] $index, #[LanguageAware(['8.0' => 'bool'], default: '')] $fallback = true) {}

    /**
 * <div id="resourcebundle.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">ResourceBundle::count</h1>  <h1 class="refname">resourcebundle_count</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">ResourceBundle::count</span> -- <span class="refname">resourcebundle_count</span> — <span class="dc-title">Get number of elements in the bundle</span></p> </div> <div class="refsect1 description" id="refsect1-resourcebundle.count-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>resourcebundle_count</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get the number of elements in the bundle.  </p> </div> <div class="refsect1 parameters" id="refsect1-resourcebundle.count-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">bundle</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-resourcebundle.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns number of elements in the bundle.  </p> </div> <div class="refsect1 examples" id="refsect1-resourcebundle.count-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2637">   <p><strong>示例 #1 <span class="function"><strong>resourcebundle_count()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">resourcebundle_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">resourcebundle_count</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2638">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= new </span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">count</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  <div class="example-contents"><p>以上示例会输出：</p></div>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">42</blockquote></div>  </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-resourcebundle.count-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/resourcebundle.get.php" class="function" rel="rdfs-seeAlso">resourcebundle_get()</a> - Get data from the bundle</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Get number of elements in the bundle
     * @link https://php.net/manual/zh/resourcebundle.count.php
     * @return int<0,max> number of elements in the bundle.
     */
    #[Pure]
    #[TentativeType]
    public function count(): int {}

    /**
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Get supported locales
     * @link https://php.net/manual/en/resourcebundle.locales.php
     * @param string $bundle <p>
     * Path of ResourceBundle for which to get available locales, or
     * empty string for default locales list.
     * </p>
     * @return array|false the list of locales supported by the bundle.
     */
    #[TentativeType]
    public static function getLocales(#[LanguageAware(['8.0' => 'string'], default: '')] $bundle): array|false {}

    /**
 * <div id="resourcebundle.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">ResourceBundle::getErrorCode</h1>  <h1 class="refname">resourcebundle_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">ResourceBundle::getErrorCode</span> -- <span class="refname">resourcebundle_get_error_code</span> — <span class="dc-title">Get bundle's last error code</span></p> </div> <div class="refsect1 description" id="refsect1-resourcebundle.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>resourcebundle_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get error code from the last function performed by the bundle object.  </p> </div> <div class="refsect1 parameters" id="refsect1-resourcebundle.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">bundle</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-resourcebundle.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns error code from last bundle object call.  </p> </div> <div class="refsect1 examples" id="refsect1-resourcebundle.geterrorcode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2643">   <p><strong>示例 #1 <span class="function"><strong>resourcebundle_get_error_code()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">resourcebundle_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">];<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">resourcebundle_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Bundle error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2644">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= new </span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">];<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">::</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Bundle error"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-resourcebundle.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/resourcebundle.geterrormessage.php" class="function" rel="rdfs-seeAlso">resourcebundle_get_error_message()</a> - Get bundle's last error message</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Get bundle's last error code.
     * @link https://php.net/manual/zh/resourcebundle.geterrorcode.php
     * @return int error code from last bundle object call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="resourcebundle.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">ResourceBundle::getErrorMessage</h1>  <h1 class="refname">resourcebundle_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.2, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">ResourceBundle::getErrorMessage</span> -- <span class="refname">resourcebundle_get_error_message</span> — <span class="dc-title">Get bundle's last error message</span></p> </div> <div class="refsect1 description" id="refsect1-resourcebundle.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ResourceBundle::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>resourcebundle_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="type ResourceBundle" style="color:#EAB766">ResourceBundle</a></span> <span class="parameter" style="color:#3A95FF">\$bundle</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get error message from the last function performed by the bundle object.  </p> </div> <div class="refsect1 parameters" id="refsect1-resourcebundle.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">bundle</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.resourcebundle.php" class="classname">ResourceBundle</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-resourcebundle.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns error message from last bundle object's call.  </p> </div> <div class="refsect1 examples" id="refsect1-resourcebundle.geterrormessage-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2645">   <p><strong>示例 #1 <span class="function"><strong>resourcebundle_get_error_message()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= </span><span style="color: #9876AA">resourcebundle_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">];<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">resourcebundle_get_error_code</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Bundle error: "</span><span style="color: #007700">.</span><span style="color: #9876AA">resourcebundle_get_error_message</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">));<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2646">   <p><strong>示例 #2 OO example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$r </span><span style="color: #007700">= new </span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">( </span><span style="color: #DD0000">'es'</span><span style="color: #007700">, </span><span style="color: #DD0000">"/usr/share/data/myapp"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$r</span><span style="color: #007700">[</span><span style="color: #DD0000">'somestring'</span><span style="color: #007700">];<br>if(</span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">(</span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">::</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">))) {<br>    </span><span style="color: #9876AA">report_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"Bundle error: "</span><span style="color: #007700">.</span><span style="color: #9876AA">ResourceBundle</span><span style="color: #007700">::</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">(</span><span style="color: #9876AA">\$r</span><span style="color: #007700">));<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-resourcebundle.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function"><a href="https://php.net/manual/zh/resourcebundle.geterrorcode.php" class="function" rel="rdfs-seeAlso">resourcebundle_get_error_code()</a> - Get bundle's last error code</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
     * Get bundle's last error message.
     * @link https://php.net/manual/zh/resourcebundle.geterrormessage.php
     * @return string error message from last bundle object's call.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string {}

    /**
     * @return Iterator
     * @since 8.0
     */
    #[Pure]
    public function getIterator(): Iterator {}
}

/**
 * <div id="class.transliterator" class="reference"> <h1 class="title">The Transliterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p>    <div class="section" id="transliterator.intro">   <h2 class="title">简介</h2>   <p class="simpara">    Transliterator provides transliteration of strings.   </p>  </div>    <div class="section" id="transliterator.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Transliterator</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.transliterator.php#transliterator.constants.forward"><var class="varname">FORWARD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.transliterator.php#transliterator.constants.reverse"><var class="varname">REVERSE</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.transliterator.php#transliterator.props.id">\$<var class="varname">id</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.create.php" class="methodname" style="color:#CC7832">create</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.createfromrules.php" class="methodname" style="color:#CC7832">createFromRules</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$rules</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.createinverse.php" class="methodname" style="color:#CC7832">createInverse</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.listids.php" class="methodname" style="color:#CC7832">listIDs</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/transliterator.transliterate.php" class="methodname" style="color:#CC7832">transliterate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$end</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>     </div>      <div class="section" id="transliterator.props">   <h2 class="title">属性</h2>   <dl>         <dt id="transliterator.props.id"><var class="varname">id</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>        <div class="section" id="transliterator.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="transliterator.constants.forward">      <strong><span>{@link Transliterator::FORWARD}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="transliterator.constants.reverse">      <strong><span>{@link Transliterator::REVERSE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>      <tr>       <td>8.2.0</td>       <td>        The <var class="varname">id</var> property is now readonly.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Transliterator::__construct} — Private constructor to deny instantiation</li><li>{@link Transliterator::create} — Create a transliterator</li><li>{@link Transliterator::createFromRules} — Create transliterator from rules</li><li>{@link Transliterator::createInverse} — Create an inverse transliterator</li><li>{@link Transliterator::getErrorCode} — Get last error code</li><li>{@link Transliterator::getErrorMessage} — Get last error message</li><li>{@link Transliterator::listIDs} — Get transliterator IDs</li><li>{@link Transliterator::transliterate} — Transliterate a string</li></ul></div>
 * 
 * @since 5.4
 */
class Transliterator
{
    public const FORWARD = 0;
    public const REVERSE = 1;

    /**
     * Starting 8.2 $id is readonly to unlock subclassing it
     */
    #[LanguageAware(['8.1' => 'string'], default: '')]
    public readonly string $id;

    /**
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Private constructor to deny instantiation
     * @link https://php.net/manual/en/transliterator.construct.php
     */
    final private function __construct() {}

    /**
 * <div id="transliterator.create" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::create</h1>  <h1 class="refname">transliterator_create</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::create</span> -- <span class="refname">transliterator_create</span> — <span class="dc-title">Create a transliterator</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.create-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">   Opens a Transliterator by ID.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-transliterator.create-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">id</span></dt>    <dd>     <p class="para">      The ID. A list of all registered transliterator IDs can be retrieved by using      <span class="methodname" style="color:#CC7832">{@link Transliterator::listIDs()}</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">direction</span></dt>    <dd>     <p class="para">      The direction, defaults to       {@link Transliterator::FORWARD}.      May also be set to      {@link Transliterator::REVERSE}.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.transliterator.php" class="classname">Transliterator</a></span> object on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 seealso" id="refsect1-transliterator.create-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::__construct()} - Private constructor to deny instantiation</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Create a transliterator
     * @link https://php.net/manual/zh/transliterator.create.php
     * @param string $id <p>
     * The id.
     * </p>
     * @param int $direction [optional] <p>
     * The direction, defaults to
     * Transliterator::FORWARD.
     * May also be set to
     * Transliterator::REVERSE.
     * </p>
     * @return Transliterator|null a <b>Transliterator</b> object on success,
     * or <b>NULL</b> on failure.
     */
    #[TentativeType]
    public static function create(
        #[LanguageAware(['8.0' => 'string'], default: '')] $id,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Transliterator::FORWARD, Transliterator::REVERSE])] $direction = 0
    ): ?Transliterator {}

    /**
 * <div id="transliterator.createfromrules" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::createFromRules</h1>  <h1 class="refname">transliterator_create_from_rules</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::createFromRules</span> -- <span class="refname">transliterator_create_from_rules</span> — <span class="dc-title">Create transliterator from rules</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.createfromrules-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::createFromRules</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$rules</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_create_from_rules</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$rules</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$direction</span><span class="initializer"> = Transliterator::FORWARD</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">   Creates a Transliterator from rules.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-transliterator.createfromrules-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">rules</span></dt>    <dd>     <p class="para">      The rules as defined in Transform Rules Syntax of UTS #35: Unicode LDML.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">direction</span></dt>    <dd>     <p class="para">      The direction, defaults to       {@link Transliterator::FORWARD}.      May also be set to      {@link Transliterator::REVERSE}.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.createfromrules-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.transliterator.php" class="classname">Transliterator</a></span> object on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div> <div class="refsect1 seealso" id="refsect1-transliterator.createfromrules-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::create()} - Create a transliterator</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Create transliterator from rules
     * @link https://php.net/manual/zh/transliterator.createfromrules.php
     * @param string $rules <p>
     * The rules.
     * </p>
     * @param int $direction [optional] <p>
     * The direction, defaults to
     * {@see Transliterator::FORWARD}.
     * May also be set to
     * {@see Transliterator::REVERSE}.
     * </p>
     * @return Transliterator|null a <b>Transliterator</b> object on success,
     * or <b>NULL</b> on failure.
     */
    #[TentativeType]
    public static function createFromRules(
        #[LanguageAware(['8.0' => 'string'], default: '')] $rules,
        #[LanguageAware(['8.0' => 'int'], default: '')] #[EV([Transliterator::FORWARD, Transliterator::REVERSE])] $direction = 0
    ): ?Transliterator {}

    /**
 * <div id="transliterator.createinverse" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::createInverse</h1>  <h1 class="refname">transliterator_create_inverse</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::createInverse</span> -- <span class="refname">transliterator_create_inverse</span> — <span class="dc-title">Create an inverse transliterator</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.createinverse-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::createInverse</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_create_inverse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span> <span class="parameter" style="color:#3A95FF">\$transliterator</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span></span></div>  <p class="para rdfs-comment">   Opens the inverse transliterator.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-transliterator.createinverse-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.createinverse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.transliterator.php" class="classname">Transliterator</a></span> object on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure  </p> </div> <div class="refsect1 seealso" id="refsect1-transliterator.createinverse-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::create()} - Create a transliterator</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Create an inverse transliterator
     * @link https://php.net/manual/zh/transliterator.createinverse.php
     * @return Transliterator|null a <b>Transliterator</b> object on success,
     * or <b>NULL</b> on failure
     */
    #[Pure]
    #[TentativeType]
    public function createInverse(): ?Transliterator {}

    /**
 * <div id="transliterator.listids" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::listIDs</h1>  <h1 class="refname">transliterator_list_ids</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::listIDs</span> -- <span class="refname">transliterator_list_ids</span> — <span class="dc-title">Get transliterator IDs</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.listids-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::listIDs</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_list_ids</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an array with the registered transliterator IDs.  </p> </div> <div class="refsect1 parameters" id="refsect1-transliterator.listids-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.listids-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of registered transliterator IDs on success,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-transliterator.listids-examples">  <h3 class="title">示例</h3>  <div class="example" id="transliterator.listids.example.basic">   <p><strong>示例 #1 Retrieving the registered transliterator IDs</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">Transliterator</span><span style="color: #007700">::</span><span style="color: #9876AA">listIDs</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;ASCII-Latin<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Accents-Any<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Amharic-Latin/BGN<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;Any-Accents<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;Any-Publishing<br>...<br>&nbsp;&nbsp;&nbsp;&nbsp;[650]&nbsp;=&gt;&nbsp;Any-ps_Latn/BGN<br>&nbsp;&nbsp;&nbsp;&nbsp;[651]&nbsp;=&gt;&nbsp;Any-tk/BGN<br>&nbsp;&nbsp;&nbsp;&nbsp;[652]&nbsp;=&gt;&nbsp;Any-ch_FONIPA<br>&nbsp;&nbsp;&nbsp;&nbsp;[653]&nbsp;=&gt;&nbsp;Any-cs_FONIPA<br>&nbsp;&nbsp;&nbsp;&nbsp;[654]&nbsp;=&gt;&nbsp;Any-cy_FONIPA<br>)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-transliterator.listids-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::transliterate()} - Transliterate a string</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Get transliterator IDs
     * @link https://php.net/manual/zh/transliterator.listids.php
     * @return array|false An array of registered transliterator IDs on success,
     * or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public static function listIDs(): array|false {}

    /**
 * <div id="transliterator.transliterate" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::transliterate</h1>  <h1 class="refname">transliterator_transliterate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::transliterate</span> -- <span class="refname">transliterator_transliterate</span> — <span class="dc-title">Transliterate a string</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.transliterate-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::transliterate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$end</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_transliterate</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$transliterator</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$end</span><span class="initializer"> = -1</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Transforms a string or part thereof using an ICU transliterator.  </p> </div> <div class="refsect1 parameters" id="refsect1-transliterator.transliterate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">transliterator</span></dt>    <dd>     <p class="para">      In the procedural version, either a <span class="classname"><a href="https://php.net/manual/zh/class.transliterator.php" class="classname">Transliterator</a></span>      or a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> from which a      <span class="classname"><a href="https://php.net/manual/zh/class.transliterator.php" class="classname">Transliterator</a></span> can be built.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      The string to be transformed.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">start</span></dt>    <dd>     <p class="para">      The start index (in UTF-16 code units) from which the string will start      to be transformed, inclusive. Indexing starts at 0. The text before will      be left as is.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">end</span></dt>    <dd>     <p class="para">      The end index (in UTF-16 code units) until which the string will be      transformed, exclusive. Indexing starts at 0. The text after will be      left as is.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.transliterate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The transformed string on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-transliterator.transliterate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2652">    <p><strong>示例 #1 Converting escaped UTF-16 code units</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$s </span><span style="color: #007700">= </span><span style="color: #DD0000">"\u304A\u65E9\u3046\u3054\u3056\u3044\u307E\u3059"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">transliterator_transliterate</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hex-Any/Java"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$s</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">//now the reverse operation with a supplementary character<br></span><span style="color: #9876AA">\$supplChar </span><span style="color: #007700">= </span><span style="color: #9876AA">html_entity_decode</span><span style="color: #007700">(</span><span style="color: #DD0000">'&amp;#x1D11E;'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">mb_strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$supplChar</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$encSupplChar </span><span style="color: #007700">= </span><span style="color: #9876AA">transliterator_transliterate</span><span style="color: #007700">(</span><span style="color: #DD0000">"Any-Hex/Java"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$supplChar</span><span style="color: #007700">);<br></span><span style="color: #FF8000">//echoes two encoded UTF-16 code units<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$encSupplChar</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">//and back<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">transliterator_transliterate</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hex-Any/Java"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$encSupplChar</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">ãæ©ããããã¾ã<br>1<br>\uD834\uDD1E<br>ð</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-transliterator.transliterate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::__construct()} - Private constructor to deny instantiation</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Transliterate a string
     * @link https://php.net/manual/zh/transliterator.transliterate.php
     * @param string $string <p>
     * The string to be transformed.
     * </p>
     * @param int $start [optional] <p>
     * The start index (in UTF-16 code units) from which the string will start
     * to be transformed, inclusive. Indexing starts at 0. The text before will
     * be left as is.
     * </p>
     * @param int $end [optional] <p>
     * The end index (in UTF-16 code units) until which the string will be
     * transformed, exclusive. Indexing starts at 0. The text after will be
     * left as is.
     * </p>
     * @return string|false The transfomed string on success, or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function transliterate(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string,
        #[LanguageAware(['8.0' => 'int'], default: '')] $start = 0,
        #[LanguageAware(['8.0' => 'int'], default: '')] $end = -1
    ): string|false {}

    /**
 * <div id="transliterator.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::getErrorCode</h1>  <h1 class="refname">transliterator_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::getErrorCode</span> -- <span class="refname">transliterator_get_error_code</span> — <span class="dc-title">Get last error code</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span> <span class="parameter" style="color:#3A95FF">\$transliterator</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the last error code for this transliterator.  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-transliterator.geterrorcode-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">transliterator</span></dt>    <dd>     <p class="para">     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The error code on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if none exists, or on failure.  </p> </div> <div class="refsect1 seealso" id="refsect1-transliterator.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorMessage()} - Get last error message</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::listIDs()} - Get transliterator IDs</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Get last error code
     * @link https://php.net/manual/zh/transliterator.geterrorcode.php
     * @return int|false The error code on success,
     * or <b>FALSE</b> if none exists, or on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int|false {}

    /**
 * <div id="transliterator.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Transliterator::getErrorMessage</h1>  <h1 class="refname">transliterator_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Transliterator::getErrorMessage</span> -- <span class="refname">transliterator_get_error_message</span> — <span class="dc-title">Get last error message</span></p> </div> <div class="refsect1 description" id="refsect1-transliterator.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Transliterator::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>transliterator_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.transliterator.php" class="type Transliterator" style="color:#EAB766">Transliterator</a></span> <span class="parameter" style="color:#3A95FF">\$transliterator</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the last error message for this transliterator.  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-transliterator.geterrormessage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">transliterator</span></dt>    <dd>     <p class="para">     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-transliterator.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The error message on success,   or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if none exists, or on failure.  </p> </div> <div class="refsect1 seealso" id="refsect1-transliterator.geterrormessage-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::getErrorCode()} - Get last error code</span></li>    <li><span class="methodname" style="color:#CC7832">{@link Transliterator::listIDs()} - Get transliterator IDs</span></li>   </ul>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Get last error message
     * @link https://php.net/manual/zh/transliterator.geterrormessage.php
     * @return string|false The error code on success,
     * or <b>FALSE</b> if none exists, or on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string|false {}
}

/**
 * <div id="class.spoofchecker" class="reference"> <h1 class="title">The Spoofchecker class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p>  <div class="section" id="spoofchecker.intro">   <h2 class="title">简介</h2>   <p class="para">    This class is provided because Unicode contains large number of characters    and incorporates the varied writing systems of the world and their incorrect    usage can expose programs or systems to possible security attacks using    characters similarity.   </p>   <p class="para">    Provided methods allow to check whether an individual string is likely an attempt    at confusing the reader (<span class="literal">spoof detection</span>), such as  "pаypаl"    spelled with Cyrillic 'а' characters.   </p>  </div>  <div class="section" id="spoofchecker.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Spoofchecker</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.single-script-confusable"><var class="varname">SINGLE_SCRIPT_CONFUSABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.mixed-script-confusable"><var class="varname">MIXED_SCRIPT_CONFUSABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.whole-script-confusable"><var class="varname">WHOLE_SCRIPT_CONFUSABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.any-case"><var class="varname">ANY_CASE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.single-script"><var class="varname">SINGLE_SCRIPT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.invisible"><var class="varname">INVISIBLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.char-limit"><var class="varname">CHAR_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.ascii"><var class="varname">ASCII</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.highly-restrictive"><var class="varname">HIGHLY_RESTRICTIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.moderately-restrictive"><var class="varname">MODERATELY_RESTRICTIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.minimally-restrictive"><var class="varname">MINIMALLY_RESTRICTIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.unrestrictive"><var class="varname">UNRESTRICTIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.single-script-restrictive"><var class="varname">SINGLE_SCRIPT_RESTRICTIVE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.mixed-numbers"><var class="varname">MIXED_NUMBERS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.spoofchecker.php#spoofchecker.constants.hidden-overlay"><var class="varname">HIDDEN_OVERLAY</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.areconfusable.php" class="methodname" style="color:#CC7832">areConfusable</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$errorCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.issuspicious.php" class="methodname" style="color:#CC7832">isSuspicious</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$errorCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.setallowedlocales.php" class="methodname" style="color:#CC7832">setAllowedLocales</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locales</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.setchecks.php" class="methodname" style="color:#CC7832">setChecks</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$checks</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/spoofchecker.setrestrictionlevel.php" class="methodname" style="color:#CC7832">setRestrictionLevel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$level</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section" id="spoofchecker.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="spoofchecker.constants.single-script-confusable">      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT_CONFUSABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.mixed-script-confusable">      <strong><span>{@link Spoofchecker::MIXED_SCRIPT_CONFUSABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.whole-script-confusable">      <strong><span>{@link Spoofchecker::WHOLE_SCRIPT_CONFUSABLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.any-case">      <strong><span>{@link Spoofchecker::ANY_CASE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.single-script">      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.invisible">      <strong><span>{@link Spoofchecker::INVISIBLE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.char-limit">      <strong><span>{@link Spoofchecker::CHAR_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.ascii">      <strong><span>{@link Spoofchecker::ASCII}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.highly-restrictive">      <strong><span>{@link Spoofchecker::HIGHLY_RESTRICTIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.moderately-restrictive">      <strong><span>{@link Spoofchecker::MODERATELY_RESTRICTIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.minimally-restrictive">      <strong><span>{@link Spoofchecker::MINIMALLY_RESTRICTIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.unrestrictive">      <strong><span>{@link Spoofchecker::UNRESTRICTIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.single-script-restrictive">      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT_RESTRICTIVE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.mixed-numbers">      <strong><span>{@link Spoofchecker::MIXED_NUMBERS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="spoofchecker.constants.hidden-overlay">      <strong><span>{@link Spoofchecker::HIDDEN_OVERLAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">  <h2 class="title">更新日志</h2>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       The class constants are now typed.      </td>     </tr>     <tr>      <td>7.3.0</td>      <td>       Class constants used by <span class="function">{@link Spoofchecker::setRestrictionLevel()}</span> such as <strong><span>{@link Spoofchecker::ASCII}</span></strong>, <strong><span>{@link Spoofchecker::HIGHLY_RESTRICTIVE}</span></strong>, <strong><span>{@link Spoofchecker::MODERATELY_RESTRICTIVE}</span></strong>, <strong><span>{@link Spoofchecker::MINIMALLY_RESTRICTIVE}</span></strong>, <strong><span>{@link Spoofchecker::UNRESTRICTIVE}</span></strong>, <strong><span>{@link Spoofchecker::SINGLE_SCRIPT_RESTRICTIVE}</span></strong> has been added.      </td>     </tr>    </tbody>     </table> </div>   </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Spoofchecker::areConfusable} — Checks if given strings can be confused</li><li>{@link Spoofchecker::__construct} — Constructor</li><li>{@link Spoofchecker::isSuspicious} — Checks if a given text contains any suspicious characters</li><li>{@link Spoofchecker::setAllowedLocales} — Locales to use when running checks</li><li>{@link Spoofchecker::setChecks} — Set the checks to run</li><li>{@link Spoofchecker::setRestrictionLevel} — Set the restriction level</li></ul></div>
 * 
 * @link https://php.net/manual/zh/class.spoofchecker.php
 */
class Spoofchecker
{
    public const SINGLE_SCRIPT_CONFUSABLE = 1;
    public const MIXED_SCRIPT_CONFUSABLE = 2;
    public const WHOLE_SCRIPT_CONFUSABLE = 4;
    public const ANY_CASE = 8;
    public const SINGLE_SCRIPT = 16;
    public const INVISIBLE = 32;
    public const CHAR_LIMIT = 64;
    public const ASCII = 268435456;
    public const HIGHLY_RESTRICTIVE = 805306368;
    public const MODERATELY_RESTRICTIVE = 1073741824;
    public const MINIMALLY_RESTRICTIVE = 1342177280;
    public const UNRESTRICTIVE = 1610612736;
    public const SINGLE_SCRIPT_RESTRICTIVE = 536870912;
    public const MIXED_NUMBERS = 1;
    public const HIDDEN_OVERLAY = 2;

    /**
     * @since 8.4
     */
    public const IGNORE_SPACE = 1;

    /**
     * @since 8.4
     */
    public const CASE_INSENSITIVE = 2;

    /**
     * @since 8.4
     */
    public const ADD_CASE_MAPPINGS = 4;

    /**
     * @since 8.4
     */
    public const SIMPLE_CASE_INSENSITIVE = 6;

    /**
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Constructor
     * @link https://php.net/manual/en/spoofchecker.construct.php
     */
    #[Pure]
    public function __construct() {}

    /**
 * <div id="spoofchecker.issuspicious" class="refentry"> <div class="refnamediv">  <h1 class="refname">Spoofchecker::isSuspicious</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Spoofchecker::isSuspicious</span> — <span class="dc-title">Checks if a given text contains any suspicious characters</span></p> </div> <div class="refsect1 description" id="refsect1-spoofchecker.issuspicious-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Spoofchecker::isSuspicious</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$errorCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks if given string contains any suspicious characters like letters which   are almost identical visually, but are Unicode characters from different sets.  </p> </div> <div class="refsect1 parameters" id="refsect1-spoofchecker.issuspicious-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      String to test.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">errorCode</span></dt>    <dd>     <p class="para">      This variable is set by-reference to <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> containing an error, if there      was any.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-spoofchecker.issuspicious-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if there are suspicious characters, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-spoofchecker.issuspicious-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2650">    <p><strong>示例 #1 <span class="function"><strong>Spoofchecker::isSuspicious()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$checker </span><span style="color: #007700">= new </span><span style="color: #9876AA">Spoofchecker</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$checker</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSuspicious</span><span style="color: #007700">(</span><span style="color: #DD0000">'google.com'</span><span style="color: #007700">); </span><span style="color: #FF8000">// FALSE: only ASCII characters<br><br></span><span style="color: #9876AA">\$checker</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSuspicious</span><span style="color: #007700">(</span><span style="color: #DD0000">'Рaypal.com'</span><span style="color: #007700">); </span><span style="color: #FF8000">// TRUE<br>// The first letter is from Cyrylic, not a regular latin "P"</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Checks if a given text contains any suspicious characters
     * @link https://php.net/manual/zh/spoofchecker.issuspicious.php
     * @param string $string <p>
     * </p>
     * @param string &$errorCode [optional] <p>
     * </p>
     * @return bool
     */
    #[TentativeType]
    public function isSuspicious(#[LanguageAware(['8.0' => 'string'], default: '')] $string, &$errorCode = null): bool {}

    /**
 * <div id="spoofchecker.areconfusable" class="refentry"> <div class="refnamediv">  <h1 class="refname">Spoofchecker::areConfusable</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Spoofchecker::areConfusable</span> — <span class="dc-title">Checks if given strings can be confused</span></p> </div> <div class="refsect1 description" id="refsect1-spoofchecker.areconfusable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Spoofchecker::areConfusable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$errorCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks whether two given strings can easily be mistaken.  </p> </div> <div class="refsect1 parameters" id="refsect1-spoofchecker.areconfusable-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>    <dd>     <p class="para">      First string to check.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>    <dd>     <p class="para">      Second string to check.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">errorCode</span></dt>    <dd>     <p class="para">      This variable is set by-reference to <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> containing an error, if there      was any.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-spoofchecker.areconfusable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if two given strings can be confused, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-spoofchecker.areconfusable-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2649">    <p><strong>示例 #1 <span class="function"><strong>Spoofchecker::areConfusable()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$checker </span><span style="color: #007700">= new </span><span style="color: #9876AA">Spoofchecker</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$checker</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">areConfusable</span><span style="color: #007700">(</span><span style="color: #DD0000">'google.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'goog1e.com'</span><span style="color: #007700">); </span><span style="color: #FF8000">// true<br>// Lower l can be confused with digit one<br><br></span><span style="color: #9876AA">\$checker</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">areConfusable</span><span style="color: #007700">(</span><span style="color: #DD0000">'google.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'g00g1e.com'</span><span style="color: #007700">); </span><span style="color: #FF8000">// false<br>// Zero (0) cannot be easily confused with "o" letter</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Checks if a given text contains any confusable characters
     * @link https://php.net/manual/zh/spoofchecker.areconfusable.php
     * @param string $string1 <p>
     * </p>
     * @param string $string2 <p>
     * </p>
     * @param int &$errorCode [optional] <p>
     * </p>
     * @return bool
     */
    #[TentativeType]
    public function areConfusable(
        #[LanguageAware(['8.0' => 'string'], default: '')] $string1,
        #[LanguageAware(['8.0' => 'string'], default: '')] $string2,
        &$errorCode = null
    ): bool {}

    /**
 * <div id="spoofchecker.setallowedlocales" class="refentry"> <div class="refnamediv">  <h1 class="refname">Spoofchecker::setAllowedLocales</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Spoofchecker::setAllowedLocales</span> — <span class="dc-title">Locales to use when running checks</span></p> </div> <div class="refsect1 description" id="refsect1-spoofchecker.setallowedlocales-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Spoofchecker::setAllowedLocales</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locales</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-spoofchecker.setallowedlocales-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locales</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-spoofchecker.setallowedlocales-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Locales to use when running checks
     * @link https://php.net/manual/zh/spoofchecker.setallowedlocales.php
     * @param string $locales <p>
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setAllowedLocales(#[LanguageAware(['8.0' => 'string'], default: '')] $locales): void {}

    /**
 * <div id="spoofchecker.setchecks" class="refentry"> <div class="refnamediv">  <h1 class="refname">Spoofchecker::setChecks</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8, PECL intl &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">Spoofchecker::setChecks</span> — <span class="dc-title">Set the checks to run</span></p> </div> <div class="refsect1 description" id="refsect1-spoofchecker.setchecks-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Spoofchecker::setChecks</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$checks</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Sets the checks that will be performed by <span class="methodname" style="color:#CC7832">{@link SpoofChecker::isSuspicious()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-spoofchecker.setchecks-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">checks</span></dt>    <dd>     <p class="para">      The checks that will be performed by <span class="methodname" style="color:#CC7832">{@link SpoofChecker::isSuspicious()}</span>.      A bitmask of      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT_CONFUSABLE}</span></strong>,      <strong><span>{@link Spoofchecker::MIXED_SCRIPT_CONFUSABLE}</span></strong>,      <strong><span>{@link Spoofchecker::WHOLE_SCRIPT_CONFUSABLE}</span></strong>,      <strong><span>{@link Spoofchecker::ANY_CASE}</span></strong>,      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT}</span></strong>,      <strong><span>{@link Spoofchecker::INVISIBLE}</span></strong>, or      <strong><span>{@link Spoofchecker::CHAR_LIMIT}</span></strong>.      Defaults to all checks as of ICU 58; prior to that version,      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT}</span></strong> was excluded.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-spoofchecker.setchecks-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
     * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
     * Set the checks to run
     * @link https://php.net/manual/zh/spoofchecker.setchecks.php
     * @param int $checks <p>
     * </p>
     * @return void
     */
    #[TentativeType]
    public function setChecks(#[LanguageAware(['8.0' => 'int'], default: '')] $checks): void {}

    /**
 * <div id="spoofchecker.setrestrictionlevel" class="refentry"> <div class="refnamediv">  <h1 class="refname">Spoofchecker::setRestrictionLevel</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3.0, PHP 8)</p><p class="refpurpose"><span class="refname">Spoofchecker::setRestrictionLevel</span> — <span class="dc-title">Set the restriction level</span></p> </div> <div class="refsect1 description" id="refsect1-spoofchecker.setrestrictionlevel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Spoofchecker::setRestrictionLevel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$level</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Sets the restriction level of <span class="methodname" style="color:#CC7832">{@link SpoofChecker::isSuspicious()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-spoofchecker.setrestrictionlevel-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">level</span></dt>    <dd>     <p class="para">      The restriction level of <span class="methodname" style="color:#CC7832">{@link SpoofChecker::isSuspicious()}</span>.      One of      <strong><span>{@link Spoofchecker::ASCII}</span></strong>,      <strong><span>{@link Spoofchecker::SINGLE_SCRIPT_RESTRICTIVE}</span></strong>,      <strong><span>{@link Spoofchecker::HIGHLY_RESTRICTIVE}</span></strong>,      <strong><span>{@link Spoofchecker::MODERATELY_RESTRICTIVE}</span></strong>,      <strong><span>{@link Spoofchecker::MINIMALLY_RESTRICTIVE}</span></strong>, or      <strong><span>{@link Spoofchecker::UNRESTRICTIVE}</span></strong>.      Defaults to <strong><span>{@link Spoofchecker::HIGHLY_RESTRICTIVE}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-spoofchecker.setrestrictionlevel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
     * @param int $level
     */
    #[TentativeType]
    public function setRestrictionLevel(#[LanguageAware(['8.0' => 'int'], default: '')] $level): void {}

    /**
     * @since 8.4
     */
    public function setAllowedChars(string $pattern, int $patternOptions = 0): void {}
}

/**
 * <div id="class.intlgregoriancalendar" class="reference"> <h1 class="title">The IntlGregorianCalendar class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intlgregoriancalendar.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="intlgregoriancalendar.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlGregorianCalendar</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_ERA}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_YEAR}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_MONTH}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_WEEK_OF_YEAR}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_WEEK_OF_MONTH}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DATE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DAY_OF_YEAR}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DAY_OF_WEEK}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DAY_OF_WEEK_IN_MONTH}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_AM_PM}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_HOUR}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_HOUR_OF_DAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_MINUTE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_SECOND}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_MILLISECOND}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_ZONE_OFFSET}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DST_OFFSET}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_YEAR_WOY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DOW_LOCAL}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_EXTENDED_YEAR}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_JULIAN_DAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_MILLISECONDS_IN_DAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_IS_LEAP_MONTH}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_FIELD_COUNT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::FIELD_DAY_OF_MONTH}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_SUNDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_MONDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_TUESDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_WEDNESDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_THURSDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_FRIDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_SATURDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_TYPE_WEEKDAY}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_TYPE_WEEKEND}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::WALLTIME_FIRST}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::WALLTIME_LAST}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlCalendar::WALLTIME_NEXT_VALID}</var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$tz</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = ?</span></span>)</div><div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeZoneOrYear</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$localeOrMonth</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>)</div><div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timeZoneOrYear</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$localeOrMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = ?</span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.createfromdate.php" class="methodname" style="color:#CC7832">createFromDate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>): <span class="type" style="color:#EAB766">static</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.createfromdatetime.php" class="methodname" style="color:#CC7832">createFromDateTime</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766">static</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.getgregorianchange.php" class="methodname" style="color:#CC7832">getGregorianChange</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.isleapyear.php" class="methodname" style="color:#CC7832">isLeapYear</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlgregoriancalendar.setgregorianchange.php" class="methodname" style="color:#CC7832">setGregorianChange</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::add}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::after}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::before}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::clear}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$field</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::createInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::equals}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::fieldDifference}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::fromDateTime}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMaximum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMinimum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getAvailableLocales}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getDayOfWeekType}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getErrorCode}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getErrorMessage}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getFirstDayOfWeek}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getGreatestMinimum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getKeywordValuesForLocale}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$keyword</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$onlyCommon</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getLeastMaximum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getLocale}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMaximum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMinimalDaysInFirstWeek}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMinimum}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getNow}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getRepeatedWallTimeOption}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getSkippedWallTimeOption}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getTime}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getTimeZone}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getType}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::getWeekendTransition}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::inDaylightTime}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::isEquivalentTo}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::isLenient}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::isSet}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::isWeekend}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::roll}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::set}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::set}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDate}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDateTime}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setFirstDayOfWeek}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setLenient}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setMinimalDaysInFirstWeek}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$days</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setRepeatedWallTimeOption}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setSkippedWallTimeOption}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setTime}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setTimeZone}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlCalendar::toDateTime}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>  </div>   </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlGregorianCalendar::__construct} — Create the Gregorian Calendar class</li><li>{@link IntlGregorianCalendar::createFromDate} — Create a new IntlGregorianCalendar instance from date</li><li>{@link IntlGregorianCalendar::createFromDateTime} — Create a new IntlGregorianCalendar instance from date and time</li><li>{@link IntlGregorianCalendar::getGregorianChange} — Get the Gregorian Calendar change date</li><li>{@link IntlGregorianCalendar::isLeapYear} — Determine if the given year is a leap year</li><li>{@link IntlGregorianCalendar::setGregorianChange} — Set the Gregorian Calendar the change date</li></ul></div>
 * 
 * @since 5.5
 */
class IntlGregorianCalendar extends IntlCalendar
{
    /**
     * @link https://www.php.net/manual/en/intlgregoriancalendar.construct
     * @param int $timezoneOrYear [optional]
     * @param int $localeOrMonth [optional]
     * @param int $day [optional]
     * @param int $hour [optional]
     * @param int $minute [optional]
     * @param int $second [optional]
     */
    public function __construct($timezoneOrYear, $localeOrMonth, $day, $hour, $minute, $second) {}

    /**
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * @param mixed $timeZone
     * @param string $locale
     * @return IntlGregorianCalendar
     */
    public static function createInstance($timeZone = null, $locale = null) {}

    /**
 * <div id="intlgregoriancalendar.setgregorianchange" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlGregorianCalendar::setGregorianChange</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlGregorianCalendar::setGregorianChange</span> — <span class="dc-title">Set the Gregorian Calendar the change date</span></p> </div> <div class="refsect1 description" id="refsect1-intlgregoriancalendar.setgregorianchange-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::setGregorianChange</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlgregoriancalendar.setgregorianchange-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlgregoriancalendar.setgregorianchange-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
     * @param float $timestamp
     */
    #[TentativeType]
    public function setGregorianChange(#[LanguageAware(['8.0' => 'float'], default: '')] $timestamp): bool {}

    /**
 * <div id="intlgregoriancalendar.getgregorianchange" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlGregorianCalendar::getGregorianChange</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlGregorianCalendar::getGregorianChange</span> — <span class="dc-title">Get the Gregorian Calendar change date</span></p> </div> <div class="refsect1 description" id="refsect1-intlgregoriancalendar.getgregorianchange-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::getGregorianChange</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlgregoriancalendar.getgregorianchange-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlgregoriancalendar.getgregorianchange-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the change date.  </p> </div></div>
 * 
     * @return float
     */
    #[Pure]
    #[TentativeType]
    public function getGregorianChange(): float {}

    /**
 * <div id="intlgregoriancalendar.isleapyear" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlGregorianCalendar::isLeapYear</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlGregorianCalendar::isLeapYear</span> — <span class="dc-title">Determine if the given year is a leap year</span></p> </div> <div class="refsect1 description" id="refsect1-intlgregoriancalendar.isleapyear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::isLeapYear</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlgregoriancalendar.isleapyear-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlgregoriancalendar.isleapyear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for leap years, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise and on failure.  </p> </div></div>
 * 
     * @param int $year
     * @return bool
     */
    #[Pure]
    #[TentativeType]
    public function isLeapYear(#[LanguageAware(['8.0' => 'int'], default: '')] $year): bool {}

    /**
 * <div id="intlgregoriancalendar.createfromdate" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlGregorianCalendar::createFromDate</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">IntlGregorianCalendar::createFromDate</span> — <span class="dc-title">Create a new IntlGregorianCalendar instance from date</span></p> </div> <div class="refsect1 description" id="refsect1-intlgregoriancalendar.createfromdate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::createFromDate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>): <span class="type" style="color:#EAB766">static</span></div>  <p class="para rdfs-comment">   Creates a new <span class="classname"><a href="https://php.net/manual/zh/class.intlgregoriancalendar.php" class="classname">IntlGregorianCalendar</a></span> instance from date.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlgregoriancalendar.createfromdate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_YEAR</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_MONTH</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_DAY_OF_MONTH</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlgregoriancalendar.createfromdate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.intlgregoriancalendar.php" class="classname">IntlGregorianCalendar</a></span> instance.  </p> </div> <div class="refsect1 examples" id="refsect1-intlgregoriancalendar.createfromdate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2595">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::createFromDate()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$intlCalendar </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2023</span><span style="color: #007700">, </span><span style="color: #9876AA">11</span><span style="color: #007700">, </span><span style="color: #9876AA">23</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$intlCalendar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(IntlGregorianCalendar)#1&nbsp;(5)&nbsp;{<br>&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["type"]=&gt;<br>&nbsp;&nbsp;string(9)&nbsp;"gregorian"<br>&nbsp;&nbsp;["timeZone"]=&gt;<br>&nbsp;&nbsp;array(4)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;&nbsp;&nbsp;["id"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(16)&nbsp;"Europe/Amsterdam"<br>&nbsp;&nbsp;&nbsp;&nbsp;["rawOffset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;&nbsp;&nbsp;["currentOffset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;["locale"]=&gt;<br>&nbsp;&nbsp;string(11)&nbsp;"en_US_POSIX"<br>&nbsp;&nbsp;["fields"]=&gt;<br>&nbsp;&nbsp;array(23)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["era"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;&nbsp;&nbsp;["year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(11)<br>&nbsp;&nbsp;&nbsp;&nbsp;["week&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(51)<br>&nbsp;&nbsp;&nbsp;&nbsp;["week&nbsp;of&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(357)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(23)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;week"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(7)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;week&nbsp;in&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;["AM/PM"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["hour"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["hour&nbsp;of&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["minute"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["second"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["millisecond"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["zone&nbsp;offset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;&nbsp;&nbsp;["DST&nbsp;offset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["year&nbsp;for&nbsp;week&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["localized&nbsp;day&nbsp;of&nbsp;week"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(7)<br>&nbsp;&nbsp;&nbsp;&nbsp;["extended&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["julian&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2460302)<br>&nbsp;&nbsp;&nbsp;&nbsp;["milliseconds&nbsp;in&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["is&nbsp;leap&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlgregoriancalendar.createfromdate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlGregorianCalendar::createFromDateTime()} - Create a new IntlGregorianCalendar instance from date and time</span></li>   </ul>   </div></div>
 * 
     * @since 8.3
     */
    public static function createFromDate(int $year, int $month, int $dayOfMonth): static {}

    /**
 * <div id="intlgregoriancalendar.createfromdatetime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlGregorianCalendar::createFromDateTime</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">IntlGregorianCalendar::createFromDateTime</span> — <span class="dc-title">Create a new IntlGregorianCalendar instance from date and time</span></p> </div> <div class="refsect1 description" id="refsect1-intlgregoriancalendar.createfromdatetime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::createFromDateTime</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766">static</span></div>  <p class="para rdfs-comment">   Creates a new <span class="classname"><a href="https://php.net/manual/zh/class.intlgregoriancalendar.php" class="classname">IntlGregorianCalendar</a></span> instance from date and time.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlgregoriancalendar.createfromdatetime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_YEAR</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_MONTH</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_DAY_OF_MONTH</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_HOUR_OF_DAY</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_MINUTE</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      The new value for <strong><span>IntlGregorianCalendar::FIELD_SECOND</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlgregoriancalendar.createfromdatetime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.intlgregoriancalendar.php" class="classname">IntlGregorianCalendar</a></span> instance.  </p> </div> <div class="refsect1 examples" id="refsect1-intlgregoriancalendar.createfromdatetime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2596">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>IntlGregorianCalendar::createFromDateTime()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$intlCalendar </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateTime</span><span style="color: #007700">(</span><span style="color: #9876AA">2023</span><span style="color: #007700">, </span><span style="color: #9876AA">11</span><span style="color: #007700">, </span><span style="color: #9876AA">23</span><span style="color: #007700">, </span><span style="color: #9876AA">12</span><span style="color: #007700">, </span><span style="color: #9876AA">00</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$intlCalendar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(IntlGregorianCalendar)#1&nbsp;(5)&nbsp;{<br>&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["type"]=&gt;<br>&nbsp;&nbsp;string(9)&nbsp;"gregorian"<br>&nbsp;&nbsp;["timeZone"]=&gt;<br>&nbsp;&nbsp;array(4)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["valid"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;&nbsp;&nbsp;["id"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(16)&nbsp;"Europe/Amsterdam"<br>&nbsp;&nbsp;&nbsp;&nbsp;["rawOffset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;&nbsp;&nbsp;["currentOffset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;["locale"]=&gt;<br>&nbsp;&nbsp;string(11)&nbsp;"en_US_POSIX"<br>&nbsp;&nbsp;["fields"]=&gt;<br>&nbsp;&nbsp;array(23)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;["era"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;&nbsp;&nbsp;["year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(11)<br>&nbsp;&nbsp;&nbsp;&nbsp;["week&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(51)<br>&nbsp;&nbsp;&nbsp;&nbsp;["week&nbsp;of&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(357)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(23)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;week"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(7)<br>&nbsp;&nbsp;&nbsp;&nbsp;["day&nbsp;of&nbsp;week&nbsp;in&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(4)<br>&nbsp;&nbsp;&nbsp;&nbsp;["AM/PM"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;&nbsp;&nbsp;["hour"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["hour&nbsp;of&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(12)<br>&nbsp;&nbsp;&nbsp;&nbsp;["minute"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["second"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["millisecond"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["zone&nbsp;offset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(3600000)<br>&nbsp;&nbsp;&nbsp;&nbsp;["DST&nbsp;offset"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;&nbsp;&nbsp;["year&nbsp;for&nbsp;week&nbsp;of&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["localized&nbsp;day&nbsp;of&nbsp;week"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(7)<br>&nbsp;&nbsp;&nbsp;&nbsp;["extended&nbsp;year"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2023)<br>&nbsp;&nbsp;&nbsp;&nbsp;["julian&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(2460302)<br>&nbsp;&nbsp;&nbsp;&nbsp;["milliseconds&nbsp;in&nbsp;day"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(43200000)<br>&nbsp;&nbsp;&nbsp;&nbsp;["is&nbsp;leap&nbsp;month"]=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;}<br>}</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlgregoriancalendar.createfromdatetime-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlGregorianCalendar::createFromDate()} - Create a new IntlGregorianCalendar instance from date</span></li>   </ul>   </div></div>
 * 
     * @since 8.3
     */
    public static function createFromDateTime(int $year, int $month, int $dayOfMonth, int $hour, int $minute, ?int $second = null): static {}
}

/**
 * <div id="class.intlcalendar" class="reference"> <h1 class="title">The IntlCalendar class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p>  <div class="section" id="intlcalendar.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="intlcalendar.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlCalendar</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-era"><var class="varname">FIELD_ERA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-year"><var class="varname">FIELD_YEAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-month"><var class="varname">FIELD_MONTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-week-of-year"><var class="varname">FIELD_WEEK_OF_YEAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-week-of-month"><var class="varname">FIELD_WEEK_OF_MONTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-date"><var class="varname">FIELD_DATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-day-of-year"><var class="varname">FIELD_DAY_OF_YEAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-day-of-week"><var class="varname">FIELD_DAY_OF_WEEK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-day-of-week-in-month"><var class="varname">FIELD_DAY_OF_WEEK_IN_MONTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-am-pm"><var class="varname">FIELD_AM_PM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-hour"><var class="varname">FIELD_HOUR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-hour-of-day"><var class="varname">FIELD_HOUR_OF_DAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-minute"><var class="varname">FIELD_MINUTE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-second"><var class="varname">FIELD_SECOND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-millisecond"><var class="varname">FIELD_MILLISECOND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-zone-offset"><var class="varname">FIELD_ZONE_OFFSET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-dst-offset"><var class="varname">FIELD_DST_OFFSET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-year-woy"><var class="varname">FIELD_YEAR_WOY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-dow-local"><var class="varname">FIELD_DOW_LOCAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-extended-year"><var class="varname">FIELD_EXTENDED_YEAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-julian-day"><var class="varname">FIELD_JULIAN_DAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-milliseconds-in-day"><var class="varname">FIELD_MILLISECONDS_IN_DAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-is-leap-month"><var class="varname">FIELD_IS_LEAP_MONTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-field-count"><var class="varname">FIELD_FIELD_COUNT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-day-of-month"><var class="varname">FIELD_DAY_OF_MONTH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-sunday"><var class="varname">DOW_SUNDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-monday"><var class="varname">DOW_MONDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-tuesday"><var class="varname">DOW_TUESDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-wednesday"><var class="varname">DOW_WEDNESDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-thursday"><var class="varname">DOW_THURSDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-friday"><var class="varname">DOW_FRIDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-saturday"><var class="varname">DOW_SATURDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-type-weekday"><var class="varname">DOW_TYPE_WEEKDAY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-type-weekend"><var class="varname">DOW_TYPE_WEEKEND</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-type-weekend-offset"><var class="varname">DOW_TYPE_WEEKEND_OFFSET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.dow-type-weekend-cease"><var class="varname">DOW_TYPE_WEEKEND_CEASE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.walltime-first"><var class="varname">WALLTIME_FIRST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.walltime-last"><var class="varname">WALLTIME_LAST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.walltime-next-valid"><var class="varname">WALLTIME_NEXT_VALID</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.add.php" class="methodname" style="color:#CC7832">add</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.after.php" class="methodname" style="color:#CC7832">after</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.before.php" class="methodname" style="color:#CC7832">before</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$field</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.createinstance.php" class="methodname" style="color:#CC7832">createInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.equals.php" class="methodname" style="color:#CC7832">equals</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.fielddifference.php" class="methodname" style="color:#CC7832">fieldDifference</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.fromdatetime.php" class="methodname" style="color:#CC7832">fromDateTime</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.get.php" class="methodname" style="color:#CC7832">get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getactualmaximum.php" class="methodname" style="color:#CC7832">getActualMaximum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getactualminimum.php" class="methodname" style="color:#CC7832">getActualMinimum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getavailablelocales.php" class="methodname" style="color:#CC7832">getAvailableLocales</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getdayofweektype.php" class="methodname" style="color:#CC7832">getDayOfWeekType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getfirstdayofweek.php" class="methodname" style="color:#CC7832">getFirstDayOfWeek</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getgreatestminimum.php" class="methodname" style="color:#CC7832">getGreatestMinimum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getkeywordvaluesforlocale.php" class="methodname" style="color:#CC7832">getKeywordValuesForLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$keyword</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$onlyCommon</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getleastmaximum.php" class="methodname" style="color:#CC7832">getLeastMaximum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getmaximum.php" class="methodname" style="color:#CC7832">getMaximum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getminimaldaysinfirstweek.php" class="methodname" style="color:#CC7832">getMinimalDaysInFirstWeek</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getminimum.php" class="methodname" style="color:#CC7832">getMinimum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getnow.php" class="methodname" style="color:#CC7832">getNow</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getrepeatedwalltimeoption.php" class="methodname" style="color:#CC7832">getRepeatedWallTimeOption</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getskippedwalltimeoption.php" class="methodname" style="color:#CC7832">getSkippedWallTimeOption</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.gettime.php" class="methodname" style="color:#CC7832">getTime</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.gettimezone.php" class="methodname" style="color:#CC7832">getTimeZone</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.gettype.php" class="methodname" style="color:#CC7832">getType</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.getweekendtransition.php" class="methodname" style="color:#CC7832">getWeekendTransition</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.indaylighttime.php" class="methodname" style="color:#CC7832">inDaylightTime</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.isequivalentto.php" class="methodname" style="color:#CC7832">isEquivalentTo</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.islenient.php" class="methodname" style="color:#CC7832">isLenient</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.isset.php" class="methodname" style="color:#CC7832">isSet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.isweekend.php" class="methodname" style="color:#CC7832">isWeekend</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.roll.php" class="methodname" style="color:#CC7832">roll</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.set.php" class="methodname" style="color:#CC7832">set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.set.php" class="methodname" style="color:#CC7832">set</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setdate.php" class="methodname" style="color:#CC7832">setDate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setdatetime.php" class="methodname" style="color:#CC7832">setDateTime</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setfirstdayofweek.php" class="methodname" style="color:#CC7832">setFirstDayOfWeek</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setlenient.php" class="methodname" style="color:#CC7832">setLenient</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setminimaldaysinfirstweek.php" class="methodname" style="color:#CC7832">setMinimalDaysInFirstWeek</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$days</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setrepeatedwalltimeoption.php" class="methodname" style="color:#CC7832">setRepeatedWallTimeOption</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.setskippedwalltimeoption.php" class="methodname" style="color:#CC7832">setSkippedWallTimeOption</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.settime.php" class="methodname" style="color:#CC7832">setTime</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.settimezone.php" class="methodname" style="color:#CC7832">setTimeZone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcalendar.todatetime.php" class="methodname" style="color:#CC7832">toDateTime</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>  </div>    <div class="section" id="intlcalendar.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="intlcalendar.constants.field-era">      <strong><span>{@link IntlCalendar::FIELD_ERA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field numerically representing an era, for instance       <span class="literal">1</span> for AD and <span class="literal">0</span> for BC in the       Gregorian/Julian calendars and <span class="literal">235</span> for the Heisei       (平成) era in the Japanese calendar. Not all calendars have more than       one era.      </p>     </dd>             <dt id="intlcalendar.constants.field-year">      <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the year. This is not unique across eras.  If the       calendar type has more than one era, generally the minimum value for       this field will be <span class="literal">1</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-month">      <strong><span>{@link IntlCalendar::FIELD_MONTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the month. The month sequence is zero-based, so       January (here used to signify the first month of the calendar; this       may be called another name, such as Muharram in the Islamic calendar)       is represented by <span class="literal">0</span>, February by       <span class="literal">1</span>, …, December by <span class="literal">11</span> and, for       calendars that have it, the 13th or leap month by       <span class="literal">12</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-week-of-year">      <strong><span>{@link IntlCalendar::FIELD_WEEK_OF_YEAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the number of the week of the year. This depends on       which day of the week is <a href="https://php.net/manual/zh/intlcalendar.getfirstdayofweek.php" class="link">deemed to start the       week</a> and the <a href="https://php.net/manual/zh/intlcalendar.getminimaldaysinfirstweek.php" class="link">minimal number of days       in a week</a>.      </p>     </dd>             <dt id="intlcalendar.constants.field-week-of-month">      <strong><span>{@link IntlCalendar::FIELD_WEEK_OF_MONTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the number of the week of the month. This depends on       which day of the week is <a href="https://php.net/manual/zh/intlcalendar.getfirstdayofweek.php" class="link">deemed to start the       week</a> and the <a href="https://php.net/manual/zh/intlcalendar.getminimaldaysinfirstweek.php" class="link">minimal number of days       in a week</a>.      </p>     </dd>             <dt id="intlcalendar.constants.field-date">      <strong><span>{@link IntlCalendar::FIELD_DATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the day of the month. The same as       <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>, which has a       clearer name.      </p>     </dd>             <dt id="intlcalendar.constants.field-day-of-year">      <strong><span>{@link IntlCalendar::FIELD_DAY_OF_YEAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the day of the year. For the Gregorian calendar,       starts with <span class="literal">1</span> and ends with       <span class="literal">365</span> or <span class="literal">366</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-day-of-week">      <strong><span>{@link IntlCalendar::FIELD_DAY_OF_WEEK}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the day of the week. Its values start with       <span class="literal">1</span> (Sunday, see {@link IntlCalendar::DOW_SUNDAY}       and subsequent constants) and the last valid value is 7 (Saturday).      </p>     </dd>             <dt id="intlcalendar.constants.field-day-of-week-in-month">      <strong><span>{@link IntlCalendar::FIELD_DAY_OF_WEEK_IN_MONTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Given a day of the week (Sunday, Monday, …), this calendar       field assigns an ordinal to such a day of the week in a specific month.       Thus, if the value of this field is <span class="literal">1</span> and the value of the day of the       week is <span class="literal">2</span> (Monday), then the set day of the month is the 1st Monday of the       month; the maximum value is <span class="literal">5</span>.      </p>      <p class="para">       Additionally, the value <span class="literal">0</span> and negative values are       also allowed. The value <span class="literal">0</span> encompasses the seven days       that occur immediately before the first seven days of a month (which       therefore have a ‘day of week in month’ with value       <span class="literal">1</span>). Negative values starts counting from the end of       the month – <span class="literal">-1</span> points to the last occurrence of a       day of the week in a month, <span class="literal">-2</span> to the second last,       and so on.      </p>      <p class="para">       Unlike {@link IntlCalendar::FIELD_WEEK_OF_MONTH}       and  {@link IntlCalendar::FIELD_WEEK_OF_YEAR},       this value does not depend on       <span class="function">{@link IntlCalendar::getFirstDayOfWeek()}</span> or on       <span class="function">{@link IntlCalendar::getMinimalDaysInFirstWeek()}</span>. The first       Monday is the first Monday, even if it occurs in a week that belongs to       the previous month.      </p>     </dd>             <dt id="intlcalendar.constants.field-am-pm">      <strong><span>{@link IntlCalendar::FIELD_AM_PM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field indicating whether a time is before noon (value       <span class="literal">0</span>, AM) or after (<span class="literal">1</span>). Midnight is       AM, noon is PM.      </p>     </dd>             <dt id="intlcalendar.constants.field-hour">      <strong><span>{@link IntlCalendar::FIELD_HOUR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the hour, without specifying whether itʼs in the       morning or in the afternoon. Valid values are <span class="literal">0</span> to       <span class="literal">11</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-hour-of-day">      <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the full (24h) hour of the day. Valid values are       <span class="literal">0</span> to <span class="literal">23</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-minute">      <strong><span>{@link IntlCalendar::FIELD_MINUTE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the minutes component of the time.      </p>     </dd>             <dt id="intlcalendar.constants.field-second">      <strong><span>{@link IntlCalendar::FIELD_SECOND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the seconds component of the time.      </p>     </dd>             <dt id="intlcalendar.constants.field-millisecond">      <strong><span>{@link IntlCalendar::FIELD_MILLISECOND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field the milliseconds component of the time.      </p>     </dd>             <dt id="intlcalendar.constants.field-zone-offset">      <strong><span>{@link IntlCalendar::FIELD_ZONE_OFFSET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field indicating the raw offset of the timezone, in       milliseconds. The raw offset is the timezone offset, excluding any       offset due to daylight saving time.      </p>     </dd>             <dt id="intlcalendar.constants.field-dst-offset">      <strong><span>{@link IntlCalendar::FIELD_DST_OFFSET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the daylight saving time offset of the calendarʼs       timezone, in milliseconds, if active for calendarʼs time.      </p>     </dd>             <dt id="intlcalendar.constants.field-year-woy">      <strong><span>{@link IntlCalendar::FIELD_YEAR_WOY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field representing the year for <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-week-of-year" class="link">week of year</a>       purposes.      </p>     </dd>             <dt id="intlcalendar.constants.field-dow-local">      <strong><span>{@link IntlCalendar::FIELD_DOW_LOCAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for the localized day of the week. This is a value       between <span class="literal">1</span> and <span class="literal">7</span>,       <span class="literal">1</span> being used for the day of the week that matches       the value returned by       <span class="function">{@link IntlCalendar::getFirstDayOfWeek()}</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-extended-year">      <strong><span>{@link IntlCalendar::FIELD_EXTENDED_YEAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for a year number representation that is continuous       across eras. For the Gregorian calendar, the value of this field       matches that of <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong> for AD       years; a BC year <span class="literal">y</span> is represented by <span class="literal">-y +       1</span>.      </p>     </dd>             <dt id="intlcalendar.constants.field-julian-day">      <strong><span>{@link IntlCalendar::FIELD_JULIAN_DAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field for a modified Julian day number. It is different from a       conventional Julian day number in that its transitions occur at local       zone midnight rather than at noon UTC. It uniquely identifies a date.      </p>     </dd>             <dt id="intlcalendar.constants.field-milliseconds-in-day">      <strong><span>{@link IntlCalendar::FIELD_MILLISECONDS_IN_DAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field encompassing the information in       <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>,       <strong><span>{@link IntlCalendar::FIELD_MINUTE}</span></strong>,       <strong><span>{@link IntlCalendar::FIELD_SECOND}</span></strong> and       <strong><span>{@link IntlCalendar::FIELD_MILLISECOND}</span></strong>. Range is from the       <span class="literal">0</span> to <span class="literal">24 * 3600 * 1000 - 1</span>. It is       not the amount of milliseconds elapsed in the day since on DST       transitions it will have discontinuities analog to those of the wall       time.      </p>     </dd>             <dt id="intlcalendar.constants.field-is-leap-month">      <strong><span>{@link IntlCalendar::FIELD_IS_LEAP_MONTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Calendar field whose value is <span class="literal">1</span> for indicating a       leap month and <span class="literal">0</span> otherwise.      </p>     </dd>             <dt id="intlcalendar.constants.field-field-count">      <strong><span>{@link IntlCalendar::FIELD_FIELD_COUNT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       The total number of fields.      </p>     </dd>             <dt id="intlcalendar.constants.field-day-of-month">      <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Alias for {@link IntlCalendar::FIELD_DATE}.      </p>     </dd>             <dt id="intlcalendar.constants.dow-sunday">      <strong><span>{@link IntlCalendar::DOW_SUNDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Sunday.</p>     </dd>             <dt id="intlcalendar.constants.dow-monday">      <strong><span>{@link IntlCalendar::DOW_MONDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Monday.</p>     </dd>             <dt id="intlcalendar.constants.dow-tuesday">      <strong><span>{@link IntlCalendar::DOW_TUESDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Tuesday.</p>     </dd>             <dt id="intlcalendar.constants.dow-wednesday">      <strong><span>{@link IntlCalendar::DOW_WEDNESDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Wednesday.</p>     </dd>             <dt id="intlcalendar.constants.dow-thursday">      <strong><span>{@link IntlCalendar::DOW_THURSDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Thursday.</p>     </dd>             <dt id="intlcalendar.constants.dow-friday">      <strong><span>{@link IntlCalendar::DOW_FRIDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Friday.</p>     </dd>             <dt id="intlcalendar.constants.dow-saturday">      <strong><span>{@link IntlCalendar::DOW_SATURDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">Saturday.</p>     </dd>             <dt id="intlcalendar.constants.dow-type-weekday">      <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKDAY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span>       indicating a day of week is a weekday.      </p>     </dd>             <dt id="intlcalendar.constants.dow-type-weekend">      <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span>       indicating a day of week belongs to the weekend.      </p>     </dd>             <dt id="intlcalendar.constants.dow-type-weekend-offset">      <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span>       indicating the weekend begins during the given day of week.      </p>     </dd>             <dt id="intlcalendar.constants.dow-type-weekend-cease">      <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span>       indicating the weekend ends during the given day of week.      </p>     </dd>             <dt id="intlcalendar.constants.walltime-first">      <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getSkippedWallTimeOption()}</span>       indicating that wall times in the skipped range should refer to the       same instant as wall times with one hour less and of       <span class="function">{@link IntlCalendar::getRepeatedWallTimeOption()}</span>       indicating the wall times in the repeated range should refer to the       instant of the first occurrence of such wall time.      </p>     </dd>             <dt id="intlcalendar.constants.walltime-last">      <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getSkippedWallTimeOption()}</span>       indicating that wall times in the skipped range should refer to the       same instant as wall times with one hour after and of       <span class="function">{@link IntlCalendar::getRepeatedWallTimeOption()}</span>       indicating the wall times in the repeated range should refer to the       instant of the second occurrence of such wall time.      </p>     </dd>             <dt id="intlcalendar.constants.walltime-next-valid">      <strong><span>{@link IntlCalendar::WALLTIME_NEXT_VALID}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">       Output of <span class="function">{@link IntlCalendar::getSkippedWallTimeOption()}</span>       indicating that wall times in the skipped range should refer to the       instant when the daylight saving time transition occurs (begins).      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlCalendar::add} — Add a (signed) amount of time to a field</li><li>{@link IntlCalendar::after} — Whether this objectʼs time is after that of the passed object</li><li>{@link IntlCalendar::before} — Whether this objectʼs time is before that of the passed object</li><li>{@link IntlCalendar::clear} — Clear a field or all fields</li><li>{@link IntlCalendar::__construct} — Private constructor for disallowing instantiation</li><li>{@link IntlCalendar::createInstance} — Create a new IntlCalendar</li><li>{@link IntlCalendar::equals} — Compare time of two IntlCalendar objects for equality</li><li>{@link IntlCalendar::fieldDifference} — Calculate difference between given time and this objectʼs time</li><li>{@link IntlCalendar::fromDateTime} — Create an IntlCalendar from a DateTime object or string</li><li>{@link IntlCalendar::get} — Get the value for a field</li><li>{@link IntlCalendar::getActualMaximum} — The maximum value for a field, considering the objectʼs current time</li><li>{@link IntlCalendar::getActualMinimum} — The minimum value for a field, considering the objectʼs current time</li><li>{@link IntlCalendar::getAvailableLocales} — Get array of locales for which there is data</li><li>{@link IntlCalendar::getDayOfWeekType} — Tell whether a day is a weekday, weekend or a day that has a transition between the two</li><li>{@link IntlCalendar::getErrorCode} — Get last error code on the object</li><li>{@link IntlCalendar::getErrorMessage} — Get last error message on the object</li><li>{@link IntlCalendar::getFirstDayOfWeek} — Get the first day of the week for the calendarʼs locale</li><li>{@link IntlCalendar::getGreatestMinimum} — Get the largest local minimum value for a field</li><li>{@link IntlCalendar::getKeywordValuesForLocale} — Get set of locale keyword values</li><li>{@link IntlCalendar::getLeastMaximum} — Get the smallest local maximum for a field</li><li>{@link IntlCalendar::getLocale} — Get the locale associated with the object</li><li>{@link IntlCalendar::getMaximum} — Get the global maximum value for a field</li><li>{@link IntlCalendar::getMinimalDaysInFirstWeek} — Get minimal number of days the first week in a year or month can have</li><li>{@link IntlCalendar::getMinimum} — Get the global minimum value for a field</li><li>{@link IntlCalendar::getNow} — Get number representing the current time</li><li>{@link IntlCalendar::getRepeatedWallTimeOption} — Get behavior for handling repeating wall time</li><li>{@link IntlCalendar::getSkippedWallTimeOption} — Get behavior for handling skipped wall time</li><li>{@link IntlCalendar::getTime} — Get time currently represented by the object</li><li>{@link IntlCalendar::getTimeZone} — Get the objectʼs timezone</li><li>{@link IntlCalendar::getType} — Get the calendar type</li><li>{@link IntlCalendar::getWeekendTransition} — Get time of the day at which weekend begins or ends</li><li>{@link IntlCalendar::inDaylightTime} — Whether the objectʼs time is in Daylight Savings Time</li><li>{@link IntlCalendar::isEquivalentTo} — Whether another calendar is equal but for a different time</li><li>{@link IntlCalendar::isLenient} — Whether date/time interpretation is in lenient mode</li><li>{@link IntlCalendar::isSet} — Whether a field is set</li><li>{@link IntlCalendar::isWeekend} — Whether a certain date/time is in the weekend</li><li>{@link IntlCalendar::roll} — Add value to field without carrying into more significant fields</li><li>{@link IntlCalendar::set} — Set a time field or several common fields at once</li><li>{@link IntlCalendar::setDate} — Set a date fields</li><li>{@link IntlCalendar::setDateTime} — Set a date and time fields</li><li>{@link IntlCalendar::setFirstDayOfWeek} — Set the day on which the week is deemed to start</li><li>{@link IntlCalendar::setLenient} — Set whether date/time interpretation is to be lenient</li><li>{@link IntlCalendar::setMinimalDaysInFirstWeek} — Set minimal number of days the first week in a year or month can have</li><li>{@link IntlCalendar::setRepeatedWallTimeOption} — Set behavior for handling repeating wall times at negative timezone offset transitions</li><li>{@link IntlCalendar::setSkippedWallTimeOption} — Set behavior for handling skipped wall times at positive timezone offset transitions</li><li>{@link IntlCalendar::setTime} — Set the calendar time in milliseconds since the epoch</li><li>{@link IntlCalendar::setTimeZone} — Set the timezone used by this calendar</li><li>{@link IntlCalendar::toDateTime} — Convert an IntlCalendar into a DateTime object</li></ul></div>
 * 
 * @since 5.5
 */
class IntlCalendar
{
    /* Constants */
    public const FIELD_ERA = 0;
    public const FIELD_YEAR = 1;
    public const FIELD_MONTH = 2;
    public const FIELD_WEEK_OF_YEAR = 3;
    public const FIELD_WEEK_OF_MONTH = 4;
    public const FIELD_DATE = 5;
    public const FIELD_DAY_OF_YEAR = 6;
    public const FIELD_DAY_OF_WEEK = 7;
    public const FIELD_DAY_OF_WEEK_IN_MONTH = 8;
    public const FIELD_AM_PM = 9;
    public const FIELD_HOUR = 10;
    public const FIELD_HOUR_OF_DAY = 11;
    public const FIELD_MINUTE = 12;
    public const FIELD_SECOND = 13;
    public const FIELD_MILLISECOND = 14;
    public const FIELD_ZONE_OFFSET = 15;
    public const FIELD_DST_OFFSET = 16;
    public const FIELD_YEAR_WOY = 17;
    public const FIELD_DOW_LOCAL = 18;
    public const FIELD_EXTENDED_YEAR = 19;
    public const FIELD_JULIAN_DAY = 20;
    public const FIELD_MILLISECONDS_IN_DAY = 21;
    public const FIELD_IS_LEAP_MONTH = 22;
    public const FIELD_FIELD_COUNT = 23;
    public const FIELD_DAY_OF_MONTH = 5;
    public const DOW_SUNDAY = 1;
    public const DOW_MONDAY = 2;
    public const DOW_TUESDAY = 3;
    public const DOW_WEDNESDAY = 4;
    public const DOW_THURSDAY = 5;
    public const DOW_FRIDAY = 6;
    public const DOW_SATURDAY = 7;
    public const DOW_TYPE_WEEKDAY = 0;
    public const DOW_TYPE_WEEKEND = 1;
    public const DOW_TYPE_WEEKEND_OFFSET = 2;
    public const DOW_TYPE_WEEKEND_CEASE = 3;
    public const WALLTIME_FIRST = 1;
    public const WALLTIME_LAST = 0;
    public const WALLTIME_NEXT_VALID = 2;

    /* Methods */

    /**
 * <div id="intlcalendar.add" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::add</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::add</span> — <span class="dc-title">Add a (signed) amount of time to a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.add-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Add a signed amount to a field. Adding a positive amount allows advances in   time, even if the numeric value of the field decreases (e.g. when working   with years in BC dates).  </p>  <p class="para">   Other fields may need to adjusted – for instance, adding a month to the 31st   of January will result in the 28th (or 29th) of February. Contrary to   <span class="function">{@link IntlCalendar::roll()}</span>, when a value wraps around, more   significant fields may change. For instance, adding a day to the 31st of   January will result in the 1st of February, not the 1st of January.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.add-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The signed amount to add to the current field. If the amount is positive,      the instant will be moved forward; if it is negative, the instant will be      moved into the past. The unit is implicit to the field type. For instance,      hours for <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.add-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2559">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::add()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr_FR'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2012</span><span style="color: #007700">, </span><span style="color: #9876AA">0 </span><span style="color: #FF8000">// January </span><span style="color: #007700">, </span><span style="color: #9876AA">31</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">31&nbsp;janv.&nbsp;2012&nbsp;00:00:00<br>29&nbsp;fÃ©vr.&nbsp;2012&nbsp;00:00:00<br>1&nbsp;mars&nbsp;2012&nbsp;00:00:00</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Add a (signed) amount of time to a field
     * @link https://secure.php.net/manual/en/intlcalendar.add.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
     * These are integer values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @param int $value <p>The signed amount to add to the current field. If the amount is positive, the instant will be moved forward; if it is negative, the instant wil be moved into the past. The unit is implicit to the field type.
     * For instance, hours for <b>IntlCalendar::FIELD_HOUR_OF_DAY</b>.</p>
     * @return bool Returns TRUE on success or FALSE on failure.
     */
    #[TentativeType]
    public function add(
        #[LanguageAware(['8.0' => 'int'], default: '')] $field,
        #[LanguageAware(['8.0' => 'int'], default: '')] $value
    ): bool {}

    /**
 * <div id="intlcalendar.after" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::after</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::after</span> — <span class="dc-title">Whether this objectʼs time is after that of the passed object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.after-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::after</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_after</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether this objectʼs time succeeds the argumentʼs time.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.after-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">      The calendar whose time will be checked against the primary objectʼs time.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.after-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if this objectʼs current time is after that of the   <span class="parameter" style="color:#3A95FF">calendar</span> argumentʼs time. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p>  <p class="para">On failure <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is also returned. To detect error conditions use <span class="function">{@link intl_get_error_code()}</span>, or set up Intl to throw <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">exceptions</a>.</p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.after-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2560">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::after()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= clone </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">), </span><span style="color: #FF8000">//false<br>        </span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">)); </span><span style="color: #FF8000">//false<br><br></span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">roll</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MILLISECOND</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">), </span><span style="color: #FF8000">//true<br>        </span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">after</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">)); </span><span style="color: #FF8000">//false</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether this object's time is after that of the passed object
     * https://secure.php.net/manual/en/intlcalendar.after.php
     * @param IntlCalendar $other <p>The calendar whose time will be checked against this object's time.</p>
     * @return bool
     * Returns <b>TRUE</b> if this object's current time is after that of the
     * <em>calendar</em> argument's time. Returns <b>FALSE</b> otherwise.
     * Also returns <b>FALSE</b> on failure. You can use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or
     * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to detect error conditions.
     */
    #[Pure]
    #[TentativeType]
    public function after(IntlCalendar $other): bool {}

    /**
 * <div id="intlcalendar.before" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::before</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::before</span> — <span class="dc-title">Whether this objectʼs time is before that of the passed object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.before-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::before</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_before</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether this objectʼs time precedes the argumentʼs time.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.before-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">      The calendar whose time will be checked against the primary objectʼs time.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.before-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if this objectʼs current time is before that of the   <span class="parameter" style="color:#3A95FF">calendar</span> argumentʼs time. Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p>  <p class="para">On failure <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is also returned. To detect error conditions use <span class="function">{@link intl_get_error_code()}</span>, or set up Intl to throw <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">exceptions</a>.</p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether this object's time is before that of the passed object
     * @link https://secure.php.net/manual/en/intlcalendar.before.php
     * @param IntlCalendar $other <p> The calendar whose time will be checked against this object's time.</p>
     * @return bool
     * Returns <b>TRUE</B> if this object's current time is before that of the
     * <em>calendar</em> argument's time. Returns <b>FALSE</b> otherwise.
     * Also returns <b>FALSE</b> on failure. You can use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or
     * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to detect error conditions.
     */
    #[Pure]
    #[TentativeType]
    public function before(IntlCalendar $other): bool {}

    /**
 * <div id="intlcalendar.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::clear</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::clear</span> — <span class="dc-title">Clear a field or all fields</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.clear-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::clear</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$field</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_clear</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$field</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Clears either all of the fields or a specific field. A cleared field is   marked as unset, giving it the lowest priority against overlapping fields or   even default values when calculating the time. Additionally, its value is set   to <span class="literal">0</span>, though given the fieldʼs low priority, its value may   have been internally set to another value by the time the field has finished   been queried.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.clear-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.clear-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlcalendar.clear-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2561">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::clear()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$fields </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'FIELD_ERA'                  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_YEAR'                 </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_MONTH'                </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_WEEK_OF_YEAR'         </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">3</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_WEEK_OF_MONTH'        </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">4</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DATE'                 </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">5</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DAY_OF_YEAR'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">6</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DAY_OF_WEEK'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">7</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DAY_OF_WEEK_IN_MONTH' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">8</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_AM_PM'                </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">9</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_HOUR'                 </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_HOUR_OF_DAY'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">11</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_MINUTE'               </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">12</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_SECOND'               </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">13</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_MILLISECOND'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">14</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_ZONE_OFFSET'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">15</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DST_OFFSET'           </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">16</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_YEAR_WOY'             </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">17</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_DOW_LOCAL'            </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">18</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_EXTENDED_YEAR'        </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">19</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_JULIAN_DAY'           </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_MILLISECONDS_IN_DAY'  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">21</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_IS_LEAP_MONTH'        </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">22</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'FIELD_FIELD_COUNT'          </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">23</span><span style="color: #007700">,<br>);<br>function </span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar \$cal</span><span style="color: #007700">) {<br>    global </span><span style="color: #9876AA">\$fields</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">\$ret </span><span style="color: #007700">= array();<br>    foreach (</span><span style="color: #9876AA">\$fields </span><span style="color: #007700">as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$value</span><span style="color: #007700">) {<br>        if (</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">)) {<br>            </span><span style="color: #9876AA">\$ret</span><span style="color: #007700">[] = </span><span style="color: #9876AA">\$name</span><span style="color: #007700">;<br>        }<br>    }<br>    return </span><span style="color: #9876AA">\$ret</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">2 </span><span style="color: #FF8000">// March </span><span style="color: #007700">, </span><span style="color: #9876AA">15</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"After GregorianCalendar creation\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"After the formatter requested the extended year\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"After the year has been cleared, the date stays the same\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"because FIELD_EXTENDED_YEAR is still set\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"After the extended year has been cleared\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"After the fields are recalculated,\n"<br>        </span><span style="color: #007700">. </span><span style="color: #DD0000">" extended year is set again (to 1970)\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">"After calling variant with no arguments\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">getSetFields</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">After&nbsp;GregorianCalendar&nbsp;creation<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;FIELD_ERA<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;FIELD_YEAR<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;FIELD_MONTH<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;FIELD_DATE<br>)<br><br>15/03/2013&nbsp;00:00:00<br>After&nbsp;the&nbsp;formatter&nbsp;requested&nbsp;the&nbsp;extended&nbsp;year<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;FIELD_ERA<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;FIELD_YEAR<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;FIELD_MONTH<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;FIELD_DATE<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;FIELD_EXTENDED_YEAR<br>)<br><br>After&nbsp;the&nbsp;year&nbsp;has&nbsp;been&nbsp;cleared,&nbsp;the&nbsp;date&nbsp;stays&nbsp;the&nbsp;same<br>15/03/2013&nbsp;00:00:00<br>because&nbsp;FIELD_EXTENDED_YEAR&nbsp;is&nbsp;still&nbsp;set<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;FIELD_ERA<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;FIELD_MONTH<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;FIELD_DATE<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;FIELD_EXTENDED_YEAR<br>)<br><br>bool(true)<br>After&nbsp;the&nbsp;extended&nbsp;year&nbsp;has&nbsp;been&nbsp;cleared<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;FIELD_ERA<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;FIELD_MONTH<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;FIELD_DATE<br>)<br>15/03/1970&nbsp;00:00:00<br><br>After&nbsp;the&nbsp;fields&nbsp;are&nbsp;recalculated,<br>&nbsp;extended&nbsp;year&nbsp;is&nbsp;set&nbsp;again&nbsp;(to&nbsp;1970)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;FIELD_ERA<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;FIELD_MONTH<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;FIELD_DATE<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;FIELD_EXTENDED_YEAR<br>)<br><br>After&nbsp;calling&nbsp;variant&nbsp;with&nbsp;no&nbsp;arguments<br>Array<br>(<br>)<br>01/01/1970&nbsp;00:00:00</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Clear a field or all fields
     * @link https://secure.php.net/manual/en/intlcalendar.clear.php
     * @param int $field [optional] <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure. Failure can only occur is invalid arguments are provided.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function clear(#[LanguageAware(['8.0' => 'int|null'], default: '')] $field = null) {}

    /**
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Private constructor for disallowing instantiation
     * @link https://secure.php.net/manual/en/intlcalendar.construct.php
     */
    private function __construct() {}

    /**
 * <div id="intlcalendar.createinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::createInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::createInstance</span> — <span class="dc-title">Create a new IntlCalendar</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.createinstance-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::createInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_create_instance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div>  <p class="para rdfs-comment">   Given a timezone and locale, this method creates an   <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object. This factory method may return   a subclass of <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span>.  </p>  <p class="para">   The calendar created will represent the time instance at which it was   created, based on the system time. The fields can all be cleared by calling   <span class="function"><strong>IntCalendar::clear()</strong></span> with no arguments. See also   <span class="function">{@link IntlGregorianCalendar::__construct()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.createinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      The timezone to use.     </p>     <ul class="itemizedlist"> <li class="listitem">  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, in which case the default timezone will be used, as specified in   the ini setting <a href="https://php.net/manual/zh/datetime.configuration.php#ini.date.timezone" class="link">date.timezone</a> or   through the function <span class="function">{@link date_default_timezone_set()}</span> and as   returned by <span class="function">{@link date_default_timezone_get()}</span>.  </p> </li> <li class="listitem">  <p class="para">   An <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span>, which will be used directly.  </p> </li> <li class="listitem">  <p class="para">   A <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span>. Its identifier will be extracted   and an ICU timezone object will be created; the timezone will be backed   by ICUʼs database, not PHPʼs.  </p> </li> <li class="listitem">  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, which should be a valid ICU timezone identifier.   See <span class="function">{@link IntlTimeZone::createTimeZoneIDEnumeration()}</span>. Raw   offsets such as <span class="literal">"GMT+08:30"</span> are also accepted.  </p> </li></ul>    </dd>          <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">      A locale to use or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> to use <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.default-locale" class="link">the default locale</a>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.createinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The created <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> instance or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on   failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.createinstance-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2562">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::createInstance()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Madrid'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">();<br>echo </span><span style="color: #DD0000">"No arguments\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">),<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"Explicit timezone\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">getGMT</span><span style="color: #007700">());<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">),<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">));<br>echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>echo </span><span style="color: #DD0000">"Explicit locale (with calendar)\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES@calendar=persian'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">),<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">No&nbsp;arguments<br>string(21)&nbsp;"IntlGregorianCalendar"<br>string(68)&nbsp;"martes&nbsp;18&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;14:11:02&nbsp;Hora&nbsp;de&nbsp;verano&nbsp;de&nbsp;Europa&nbsp;Central"<br><br>Explicit&nbsp;timezone<br>string(21)&nbsp;"IntlGregorianCalendar"<br>string(45)&nbsp;"martes&nbsp;18&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;12:11:02&nbsp;GMT+00:00"<br><br>Explicit&nbsp;locale&nbsp;(with&nbsp;calendar)<br>string(12)&nbsp;"IntlCalendar"<br>string(70)&nbsp;"martes&nbsp;28&nbsp;de&nbsp;Khordad&nbsp;de&nbsp;1392&nbsp;14:11:02&nbsp;Hora&nbsp;de&nbsp;verano&nbsp;de&nbsp;Europa&nbsp;Central"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.createinstance-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlGregorianCalendar::__construct()} - Create the Gregorian Calendar class</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Create a new IntlCalendar
     * @link https://secure.php.net/manual/en/intlcalendar.createinstance.php
     * @param mixed $timezone [optional] <p> <p>
     * The timezone to use.
     * </p>
     *
     * <ul>
     * <li>
     * <p>
     * <b>NULL</b>, in which case the default timezone will be used, as specified in
     * the ini setting {@link https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone date.timezone} or
     * through the function  {@link https://secure.php.net/manual/en/function.date-default-timezone-set.php date_default_timezone_set()} and as
     * returned by {@link https://secure.php.net/manual/en/function.date-default-timezone-get.php date_default_timezone_get()}.
     * </p>
     * </li>
     * <li>
     * <p>
     * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone}, which will be used directly.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone}. Its identifier will be extracted
     * and an ICU timezone object will be created; the timezone will be backed
     * by ICU's database, not PHP's.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link https://secure.php.net/manual/en/language.types.string.php string}, which should be a valid ICU timezone identifier.
     * See  <b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw
     * offsets such as <em>"GMT+08:30"</em> are also accepted.
     * </p>
     * </li>
     * </ul>
     * </p>
     * @param string|null $locale [optional] <p>
     * A locale to use or <b>NULL</b> to use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.default-locale the default locale}.
     * </p>
     * @return IntlCalendar|null
     * The created {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} instance or <b>NULL</b> on
     * failure.
     */
    #[TentativeType]
    public static function createInstance($timezone = null, #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale = null): ?IntlCalendar {}

    /**
 * <div id="intlcalendar.equals" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::equals</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::equals</span> — <span class="dc-title">Compare time of two IntlCalendar objects for equality</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.equals-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::equals</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_equals</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns true if this calendar and the given calendar have the same time.   The settings, calendar types and field states do not have to be the same.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.equals-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">      The calendar to compare with the primary object.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.equals-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the current time of both this and the passed in   <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object are the same, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>   otherwise.  </p>  <p class="para">On failure <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is also returned. To detect error conditions use <span class="function">{@link intl_get_error_code()}</span>, or set up Intl to throw <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">exceptions</a>.</p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.equals-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2563">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::equals()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= clone </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">//TRUE<br><br>//The locale is not included in the comparison<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">());<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">//TRUE<br><br>//And set fields state is not included as well<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSet</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">) ==<br>        </span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSet</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">)); </span><span style="color: #FF8000">//FALSE<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">//TRUE<br><br>//Neither is the calendar type<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES@calendar=islamic'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">());<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">//TRUE<br><br>//Only the time is<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= clone </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() + </span><span style="color: #9876AA">1.</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">//FALSE</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Compare time of two IntlCalendar objects for equality
     * @link https://secure.php.net/manual/en/intlcalendar.equals.php
     * @param IntlCalendar $other
     * @return bool <p>
     * Returns <b>TRUE</b> if the current time of both this and the passed in
     * {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} object are the same, or <b>FALSE</b>
     * otherwise. The value <b>FALSE</b> can also be returned on failure. This can only
     * happen if bad arguments are passed in. In any case, the two cases can be
     * distinguished by calling  {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()}.
     * </p>
     */
    #[Pure]
    #[TentativeType]
    public function equals(#[LanguageAware(['8.0' => 'IntlCalendar'], default: '')] $other): bool {}

    /**
 * <div id="intlcalendar.fielddifference" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::fieldDifference</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::fieldDifference</span> — <span class="dc-title">Calculate difference between given time and this objectʼs time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.fielddifference-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::fieldDifference</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_field_difference</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Return the difference between the given time and the time this object is   set to, with respect to the quantity specified the   <span class="parameter" style="color:#3A95FF">field</span> parameter.  </p>  <p class="para">   This method is meant to be called successively, first with the most   significant field of interest down to the least significant field. To this   end, as a side effect, this calendarʼs value for the field specified is   advanced by the amount returned.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.fielddifference-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">      The time against which to compare the quantity represented by the      <span class="parameter" style="color:#3A95FF">field</span>. For the result to be positive, the time      given for this parameter must be ahead of the time of the object the      method is being invoked on.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para">      The field that represents the quantity being compared.     </p>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.fielddifference-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a (signed) difference of time in the unit associated with the   specified field 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.fielddifference-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2564">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::fieldDifference()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr_FR'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2012-02-29 09:00:11'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-03-01 09:19:29'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$time </span><span style="color: #007700">= </span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">"Time before: "</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">"The difference in time is %d year(s), %d month(s), "<br>  </span><span style="color: #007700">. </span><span style="color: #DD0000">"%d day(s), %d hour(s) and %d minute(s)\n"</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MONTH</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MINUTE</span><span style="color: #007700">)<br>);<br><br></span><span style="color: #FF8000">//now it was advanced to the target time, exception for the seconds,<br>//for which we did not measure the difference<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">"Time after: "</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Time&nbsp;before:&nbsp;29&nbsp;fÃ©vr.&nbsp;2012&nbsp;09:00:11<br>The&nbsp;difference&nbsp;in&nbsp;time&nbsp;is&nbsp;1&nbsp;year(s),&nbsp;0&nbsp;month(s),&nbsp;1&nbsp;day(s),&nbsp;0&nbsp;hour(s)&nbsp;and&nbsp;19&nbsp;minute(s)<br>Time&nbsp;after:&nbsp;1&nbsp;mars&nbsp;2013&nbsp;09:19:11</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Calculate difference between given time and this object's time
     * @link https://secure.php.net/manual/en/intlcalendar.fielddifference.php
     * @param float $timestamp <p>
     * The time against which to compare the quantity represented by the
     * <em>field</em>. For the result to be positive, the time
     * given for this parameter must be ahead of the time of the object the
     * method is being invoked on.
     * </p>
     * @param int $field <p>
     * The field that represents the quantity being compared.
     * </p>
     *
     * <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false Returns a (signed) difference of time in the unit associated with the
     * specified field or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function fieldDifference(
        #[LanguageAware(['8.0' => 'float'], default: '')] $timestamp,
        #[LanguageAware(['8.0' => 'int'], default: '')] $field
    ): int|false {}

    /**
 * <div id="intlcalendar.fromdatetime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::fromDateTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a2)</p><p class="refpurpose"><span class="refname">IntlCalendar::fromDateTime</span> — <span class="dc-title">Create an IntlCalendar from a DateTime object or string</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.fromdatetime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::fromDateTime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_from_date_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span></span></div>  <p class="para rdfs-comment">   Creates an <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object either from a   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object or from a string from which a   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object can be built.  </p>  <p class="para">   The new calendar will represent not only the same instant as the   given <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> (subject to precision loss for dates   very far into the past or future), but also the same timezone (subject to   the caveat that different timezone databases will be used, and therefore   the results may differ).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.fromdatetime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>    <dd>     <p class="para">      A <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object or a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> that      can be passed to <span class="function">{@link DateTime::__construct()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.fromdatetime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The created <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> object or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> in case of   failure. If a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> is passed, any exception that occurs   inside the <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> constructor is propagated.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.fromdatetime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2565">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::fromDateTime()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//same as IntlCalendar::fromDateTime(new DateTime(...))<br></span><span style="color: #9876AA">\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-02-28 00:01:02 Europe/Berlin'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//Note the timezone is Europe/Berlin, not the default Europe/Lisbon<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">, </span><span style="color: #DD0000">'yyyy MMMM d HH:mm:ss VVVV'</span><span style="color: #007700">, </span><span style="color: #DD0000">'de_DE'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2013&nbsp;Februar&nbsp;28&nbsp;00:01:02&nbsp;Deutschland&nbsp;Zeit</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a2)<br/>
     * Create an IntlCalendar from a DateTime object or string
     * @link https://secure.php.net/manual/en/intlcalendar.fromdatetime.php
     * @param mixed $datetime <p>
     * A {@link https://secure.php.net/manual/en/class.datetime.php DateTime} object or a {@link https://secure.php.net/manual/en/language.types.string.php string} that
     * can be passed to  {@link https://secure.php.net/manual/en/datetime.construct.php DateTime::__construct()}.
     * </p>
     * @param $locale [optional]
     * @return IntlCalendar|null
     * The created {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} object or <b>NULL</b> in case of
     * failure. If a {@link https://secure.php.net/manual/en/language.types.string.php string} is passed, any exception that occurs
     * inside the {@link https://secure.php.net/manual/en/class.datetime.php DateTime} constructor is propagated.
     */
    #[TentativeType]
    public static function fromDateTime(
        #[LanguageAware(['8.0' => 'DateTime|string'], default: '')] $datetime,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] #[ElementAvailable(from: '8.0')] $locale
    ): ?IntlCalendar {}

    /**
 * <div id="intlcalendar.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::get</span> — <span class="dc-title">Get the value for a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.get-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the value for a specific field.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An integer with the value of the time field.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.get-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2566">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::get()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$class </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionClass</span><span style="color: #007700">(</span><span style="color: #DD0000">'IntlCalendar'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$fields </span><span style="color: #007700">= array();<br>foreach (</span><span style="color: #9876AA">\$class</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getConstants</span><span style="color: #007700">() as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$val</span><span style="color: #007700">) {<br>    if (</span><span style="color: #9876AA">strpos</span><span style="color: #007700">(</span><span style="color: #9876AA">\$name</span><span style="color: #007700">, </span><span style="color: #DD0000">'FIELD_'</span><span style="color: #007700">) !== </span><span style="color: #9876AA">0 </span><span style="color: #007700">|| </span><span style="color: #9876AA">\$val </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">22</span><span style="color: #007700">)<br>        continue;<br>    </span><span style="color: #9876AA">\$fields</span><span style="color: #007700">[</span><span style="color: #9876AA">\$val</span><span style="color: #007700">] = </span><span style="color: #9876AA">\$name</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(); </span><span style="color: #FF8000">// current time<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br>foreach (</span><span style="color: #9876AA">\$fields </span><span style="color: #007700">as </span><span style="color: #9876AA">\$val </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$name</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$val</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">\$name</span><span style="color: #DD0000">)"</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n    "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$val</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(23)&nbsp;"Jul&nbsp;1,&nbsp;2013,&nbsp;4:44:44&nbsp;AM"<br>0&nbsp;(FIELD_ERA)<br>&nbsp;&nbsp;&nbsp;&nbsp;1<br>1&nbsp;(FIELD_YEAR)<br>&nbsp;&nbsp;&nbsp;&nbsp;2013<br>2&nbsp;(FIELD_MONTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;6<br>3&nbsp;(FIELD_WEEK_OF_YEAR)<br>&nbsp;&nbsp;&nbsp;&nbsp;27<br>4&nbsp;(FIELD_WEEK_OF_MONTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;1<br>5&nbsp;(FIELD_DAY_OF_MONTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;1<br>6&nbsp;(FIELD_DAY_OF_YEAR)<br>&nbsp;&nbsp;&nbsp;&nbsp;182<br>7&nbsp;(FIELD_DAY_OF_WEEK)<br>&nbsp;&nbsp;&nbsp;&nbsp;2<br>8&nbsp;(FIELD_DAY_OF_WEEK_IN_MONTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;1<br>9&nbsp;(FIELD_AM_PM)<br>&nbsp;&nbsp;&nbsp;&nbsp;0<br>10&nbsp;(FIELD_HOUR)<br>&nbsp;&nbsp;&nbsp;&nbsp;4<br>11&nbsp;(FIELD_HOUR_OF_DAY)<br>&nbsp;&nbsp;&nbsp;&nbsp;4<br>12&nbsp;(FIELD_MINUTE)<br>&nbsp;&nbsp;&nbsp;&nbsp;44<br>13&nbsp;(FIELD_SECOND)<br>&nbsp;&nbsp;&nbsp;&nbsp;44<br>14&nbsp;(FIELD_MILLISECOND)<br>&nbsp;&nbsp;&nbsp;&nbsp;551<br>15&nbsp;(FIELD_ZONE_OFFSET)<br>&nbsp;&nbsp;&nbsp;&nbsp;0<br>16&nbsp;(FIELD_DST_OFFSET)<br>&nbsp;&nbsp;&nbsp;&nbsp;3600000<br>17&nbsp;(FIELD_YEAR_WOY)<br>&nbsp;&nbsp;&nbsp;&nbsp;2013<br>18&nbsp;(FIELD_DOW_LOCAL)<br>&nbsp;&nbsp;&nbsp;&nbsp;2<br>19&nbsp;(FIELD_EXTENDED_YEAR)<br>&nbsp;&nbsp;&nbsp;&nbsp;2013<br>20&nbsp;(FIELD_JULIAN_DAY)<br>&nbsp;&nbsp;&nbsp;&nbsp;2456475<br>21&nbsp;(FIELD_MILLISECONDS_IN_DAY)<br>&nbsp;&nbsp;&nbsp;&nbsp;17084551<br>22&nbsp;(FIELD_IS_LEAP_MONTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;0</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the value for a field
     * @link https://secure.php.net/manual/en/intlcalendar.get.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false An integer with the value of the time field.
     */
    #[Pure]
    #[TentativeType]
    public function get(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getactualmaximum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getActualMaximum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getActualMaximum</span> — <span class="dc-title">The maximum value for a field, considering the objectʼs current time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getactualmaximum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getActualMaximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_actual_maximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns a fieldʼs relative maximum value around the current time. The exact   semantics vary by field, but in the general case this is the value that   would be obtained if one would set the field value into the   <a href="https://php.net/manual/zh/intlcalendar.getleastmaximum.php" class="link">smallest relative maximum</a> for   the field and would increment it until reaching the   <a href="https://php.net/manual/zh/intlcalendar.getmaximum.php" class="link">global maximum</a> or the field value   wraps around, in which the value returned would be the global maximum   or the value before the wrapping, respectively.  </p>  <p class="para">   For instance, in the gregorian calendar, the actual maximum value for the   <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants.field-day-of-month" class="link">day of   month</a> would vary between <span class="literal">28</span> and   <span class="literal">31</span>, depending on the month and year of the current time.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getactualmaximum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getactualmaximum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing the maximum value in the units associated   with the given <span class="parameter" style="color:#3A95FF">field</span> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getactualmaximum-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2567">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getActualMaximum()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-02-15'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getActualMaximum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">)); </span><span style="color: #FF8000">//28<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getActualMaximum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">)); </span><span style="color: #FF8000">//29</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(28)<br>int(29)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getactualmaximum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMaximum()} - Get the global maximum value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getLeastMaximum()} - Get the smallest local maximum for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMinimum()} - The minimum value for a field, considering the objectʼs current time</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * The maximum value for a field, considering the object's current time
     * @link https://secure.php.net/manual/en/intlcalendar.getactualmaximum.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false
     * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing the maximum value in the units associated
     * with the given <em>field</em> or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getActualMaximum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getactualminimum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getActualMinimum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getActualMinimum</span> — <span class="dc-title">The minimum value for a field, considering the objectʼs current time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getactualminimum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getActualMinimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_actual_minimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns a fieldʼs relative minimum value around the current time. The exact   semantics vary by field, but in the general case this is the value that   would be obtained if one would set the field value into the   <a href="https://php.net/manual/zh/intlcalendar.getgreatestminimum.php" class="link">greatest relative minimum</a>   for the field and would decrement it until reaching the   <a href="https://php.net/manual/zh/intlcalendar.getminimum.php" class="link">global minimum</a> or the field value   wraps around, in which the value returned would be the global minimum or   the value before the wrapping, respectively.  </p>  <p class="para">   For the Gregorian calendar, this is always the same as   <span class="function">{@link IntlCalendar::getMinimum()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getactualminimum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getactualminimum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing the minimum value in the fieldʼs   unit 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getactualminimum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMinimum()} - Get the global minimum value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getGreatestMinimum()} - Get the largest local minimum value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMaximum()} - The maximum value for a field, considering the objectʼs current time</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * The minimum value for a field, considering the object's current time
     * @link https://secure.php.net/manual/en/intlcalendar.getactualminimum.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
     * These are integer values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false
     * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing the minimum value in the field's
     * unit or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getActualMinimum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getavailablelocales" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getAvailableLocales</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getAvailableLocales</span> — <span class="dc-title">Get array of locales for which there is data</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getavailablelocales-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getAvailableLocales</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_available_locales</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Gives the list of locales for which calendars are installed. As of ICU 51,   this is the list of all installed ICU locales.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getavailablelocales-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getavailablelocales-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>s, one for which locale.   </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getavailablelocales-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2568">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getAvailableLocales()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">getAvailableLocales</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;af<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;af_NA<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;af_ZA<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;agq<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;agq_CM<br>&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;ak<br>&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;ak_GH<br>&nbsp;&nbsp;&nbsp;&nbsp;[7]&nbsp;=&gt;&nbsp;am<br>&nbsp;&nbsp;&nbsp;&nbsp;[8]&nbsp;=&gt;&nbsp;am_ET<br>&nbsp;&nbsp;&nbsp;&nbsp;[9]&nbsp;=&gt;&nbsp;ar<br>&nbsp;&nbsp;&nbsp;&nbsp;[10]&nbsp;=&gt;&nbsp;ar_001<br>&nbsp;&nbsp;&nbsp;&nbsp;[11]&nbsp;=&gt;&nbsp;ar_AE<br>&nbsp;&nbsp;&nbsp;&nbsp;[12]&nbsp;=&gt;&nbsp;ar_BH<br>&nbsp;&nbsp;&nbsp;&nbsp;[13]&nbsp;=&gt;&nbsp;ar_DJ<br>&nbsp;&nbsp;&nbsp;&nbsp;â¦&nbsp;output&nbsp;abbreviated&nbsp;â¦<br>&nbsp;&nbsp;&nbsp;&nbsp;[595]&nbsp;=&gt;&nbsp;zh_Hant_HK<br>&nbsp;&nbsp;&nbsp;&nbsp;[596]&nbsp;=&gt;&nbsp;zh_Hant_MO<br>&nbsp;&nbsp;&nbsp;&nbsp;[597]&nbsp;=&gt;&nbsp;zh_Hant_TW<br>&nbsp;&nbsp;&nbsp;&nbsp;[598]&nbsp;=&gt;&nbsp;zu<br>&nbsp;&nbsp;&nbsp;&nbsp;[599]&nbsp;=&gt;&nbsp;zu_ZA<br>)</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get array of locales for which there is data
     * @link https://secure.php.net/manual/en/intlcalendar.getavailablelocales.php
     * @return string[] An array of strings, one for which locale.
     */
    #[TentativeType]
    public static function getAvailableLocales(): array {}

    /**
 * <div id="intlcalendar.getdayofweektype" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getDayOfWeekType</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getDayOfWeekType</span> — <span class="dc-title">Tell whether a day is a weekday, weekend or a day that has a transition between the two</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getdayofweektype-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getDayOfWeekType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_day_of_week_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns whether the passed day is a weekday   (<strong><span>{@link IntlCalendar::DOW_TYPE_WEEKDAY}</span></strong>), a weekend day   (<strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND}</span></strong>), a day during which a   transition occurs into the weekend   (<strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</span></strong>) or a day during   which the weekend ceases   (<strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</span></strong>).  </p>  <p class="para">   If the return is either   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</span></strong> or   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</span></strong>, then   <span class="function">{@link IntlCalendar::getWeekendTransition()}</span> can be called to   obtain the time of the transition.  </p>  <p class="para">   This function requires ICU 4.4 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getdayofweektype-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfWeek</span></dt>    <dd>     <p class="para">      One of the constants <strong><span>{@link IntlCalendar::DOW_SUNDAY}</span></strong>,      <strong><span>{@link IntlCalendar::DOW_MONDAY}</span></strong>, …,      <strong><span>{@link IntlCalendar::DOW_SATURDAY}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getdayofweektype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns one of the constants    <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKDAY}</span></strong>,   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND}</span></strong>,   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</span></strong> or   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</span></strong> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getdayofweektype-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2569">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getDayOfWeekType()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">foreach (array(</span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ar_SA'</span><span style="color: #007700">) as </span><span style="color: #9876AA">\$locale</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"Locale: "</span><span style="color: #007700">, </span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">getDisplayName</span><span style="color: #007700">(</span><span style="color: #9876AA">\$locale</span><span style="color: #007700">, </span><span style="color: #DD0000">"en_US"</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br>    </span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$locale</span><span style="color: #007700">);<br><br>    for (</span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">DOW_SUNDAY</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt;= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">DOW_SATURDAY</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i</span><span style="color: #007700">++) {<br>        </span><span style="color: #9876AA">\$type </span><span style="color: #007700">= </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDayOfWeekType</span><span style="color: #007700">(</span><span style="color: #9876AA">\$i</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">\$transition </span><span style="color: #007700">= (</span><span style="color: #9876AA">\$type </span><span style="color: #007700">!== </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">DOW_TYPE_WEEKDAY</span><span style="color: #007700">)<br>            ? </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWeekendTransition</span><span style="color: #007700">(</span><span style="color: #9876AA">\$i</span><span style="color: #007700">)<br>            : </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br>        echo </span><span style="color: #9876AA">\$i</span><span style="color: #007700">, </span><span style="color: #DD0000">" "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$type</span><span style="color: #007700">, </span><span style="color: #DD0000">" "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$transition</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>    }<br>    echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Locale:&nbsp;English&nbsp;(United&nbsp;States)<br>1&nbsp;1&nbsp;86400000<br>2&nbsp;0<br>3&nbsp;0<br>4&nbsp;0<br>5&nbsp;0<br>6&nbsp;0<br>7&nbsp;1&nbsp;0<br><br>Locale:&nbsp;Arabic&nbsp;(Saudi&nbsp;Arabia)<br>1&nbsp;0<br>2&nbsp;0<br>3&nbsp;0<br>4&nbsp;0<br>5&nbsp;0<br>6&nbsp;1&nbsp;0<br>7&nbsp;1&nbsp;86400000</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Tell whether a day is a weekday, weekend or a day that has a transition between the two
     * @param int $dayOfWeek <p>
     * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
     * <b>IntlCalendar::DOW_MONDAY</b>, ...,
     * <b>IntlCalendar::DOW_SATURDAY</b>.
     * </p>
     * @return int|false
     * Returns one of the constants
     * <b>IntlCalendar::DOW_TYPE_WEEKDAY</b>,
     * <b>IntlCalendar::DOW_TYPE_WEEKEND</b>,
     * <b>IntlCalendar::DOW_TYPE_WEEKEND_OFFSET</b> or
     * <b>IntlCalendar::DOW_TYPE_WEEKEND_CEASE</b> or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getDayOfWeekType(#[LanguageAware(['8.0' => 'int'], default: '')] $dayOfWeek): int|false {}

    /**
 * <div id="intlcalendar.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getErrorCode</h1>  <h1 class="refname">intlcal_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getErrorCode</span> -- <span class="refname">intlcal_get_error_code</span> — <span class="dc-title">Get last error code on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the numeric ICU error code for the last call on this object   (including cloning) or the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> given for   the <span class="parameter" style="color:#3A95FF">calendar</span> parameter (in the procedural‒style   version). This may indicate only a warning (negative error code) or no   error at all (<strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.u-zero-error">U_ZERO_ERROR</a></span></strong>). The actual presence of an   error can be tested with <span class="function">{@link intl_is_failure()}</span>.  </p>  <p class="para">   Invalid arguments detected on the PHP side (before invoking functions of the   ICU library) are not recorded for the purposes of this function.  </p>  <p class="para">   The last error that occurred in any call to a function of the intl   extension, including early argument errors, can be obtained with   <span class="function">{@link intl_get_error_code()}</span>. This function resets the global   error code, but not the objectʼs error code.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.geterrorcode-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para">      The calendar object, on the procedural style interface.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An ICU error code indicating either success, failure or a warning.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.geterrorcode-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2570">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getErrorCode()</strong></span> and   <span class="function">{@link IntlCalendar::getErrorMessage()}</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">"intl.error_level"</span><span style="color: #007700">, </span><span style="color: #9876AA">E_WARNING</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">"intl.default_locale"</span><span style="color: #007700">, </span><span style="color: #DD0000">"nl"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$intlcal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2012</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">29</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$intlcal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$intlcal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">()<br>);<br></span><span style="color: #9876AA">\$intlcal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fieldDifference</span><span style="color: #007700">(-</span><span style="color: #9876AA">1e100</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_SECOND</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$intlcal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorCode</span><span style="color: #007700">(),<br>    </span><span style="color: #9876AA">\$intlcal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">()<br>);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(0)<br>string(12)&nbsp;"U_ZERO_ERROR"<br><br>Warning:&nbsp;IntlCalendar::fieldDifference():&nbsp;intlcal_field_difference:&nbsp;Call&nbsp;to&nbsp;ICU&nbsp;method&nbsp;has&nbsp;failed&nbsp;in&nbsp;/home/glopes/php/ws/example.php&nbsp;on&nbsp;line&nbsp;10<br>int(1)<br>string(81)&nbsp;"intlcal_field_difference:&nbsp;Call&nbsp;to&nbsp;ICU&nbsp;method&nbsp;has&nbsp;failed:&nbsp;U_ILLEGAL_ARGUMENT_ERROR"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.geterrorcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getErrorMessage()} - Get last error message on the object</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intl_error_name()} - Get symbolic name for a given error code</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intl_get_error_message()} - Get description of the last error</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get last error code on the object
     * @link https://secure.php.net/manual/en/intlcalendar.geterrorcode.php
     * @return int|false An ICU error code indicating either success, failure or a warning.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int|false {}

    /**
 * <div id="intlcalendar.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getErrorMessage</h1>  <h1 class="refname">intlcal_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getErrorMessage</span> -- <span class="refname">intlcal_get_error_message</span> — <span class="dc-title">Get last error message on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the error message (if any) associated with the error reported by   <span class="function">{@link IntlCalendar::getErrorCode()}</span> or   <span class="function"><a href="https://php.net/manual/zh/intlcalendar.geterrorcode.php" class="function">intlcal_get_error_code()</a></span>. If there is no associated   error message, only the string representation of the name of the error   constant will be returned.  Otherwise, the message also includes a message   set on the side of the PHP binding.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.geterrormessage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para">      The calendar object, on the procedural style interface.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The error message associated with last error that occurred in a function call   on this object, or a string indicating the non-existence of an error.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.geterrormessage-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2571">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getErrorMessage()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getWeekendTransition</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">DOW_WEDNESDAY</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getErrorMessage</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(12)&nbsp;"U_ZERO_ERROR"<br>string(82)&nbsp;"intlcal_get_weekend_transition:&nbsp;Error&nbsp;calling&nbsp;ICU&nbsp;method:&nbsp;U_ILLEGAL_ARGUMENT_ERROR"</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get last error message on the object
     * @link https://secure.php.net/manual/en/intlcalendar.geterrormessage.php
     * @return string|false The error message associated with last error that occurred in a function call on this object, or a string indicating the non-existance of an error.
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string|false {}

    /**
 * <div id="intlcalendar.getfirstdayofweek" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getFirstDayOfWeek</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getFirstDayOfWeek</span> — <span class="dc-title">Get the first day of the week for the calendarʼs locale</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getfirstdayofweek-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getFirstDayOfWeek</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_first_day_of_week</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   The week day deemed to start a week, either the default value for this   locale or the value set with   <span class="function">{@link IntlCalendar::setFirstDayOfWeek()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getfirstdayofweek-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getfirstdayofweek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   One of the constants <strong><span>{@link IntlCalendar::DOW_SUNDAY}</span></strong>,   <strong><span>{@link IntlCalendar::DOW_MONDAY}</span></strong>, …,   <strong><span>{@link IntlCalendar::DOW_SATURDAY}</span></strong> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getfirstdayofweek-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2572">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getFirstDayOfWeek()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayOfWeek</span><span style="color: #007700">()); </span><span style="color: #FF8000">// Monday<br></span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">1 </span><span style="color: #FF8000">// February </span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// a Sunday<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_WEEK_OF_YEAR</span><span style="color: #007700">)); </span><span style="color: #FF8000">// 5<br><br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayOfWeek</span><span style="color: #007700">()); </span><span style="color: #FF8000">// Sunday<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">1 </span><span style="color: #FF8000">// February </span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">); </span><span style="color: #FF8000">// a Sunday<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_WEEK_OF_YEAR</span><span style="color: #007700">)); </span><span style="color: #FF8000">// 6</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(2)<br>int(5)<br>int(1)<br>int(6)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getfirstdayofweek-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setFirstDayOfWeek()} - Set the day on which the week is deemed to start</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the first day of the week for the calendar's locale
     * @link https://secure.php.net/manual/en/intlcalendar.getfirstdayofweek.php
     * @return int|false
     * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
     * <b>IntlCalendar::DOW_MONDAY</b>, ...,
     * <b>IntlCalendar::DOW_SATURDAY</b> or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getFirstDayOfWeek(): int|false {}

    /**
 * <div id="intlcalendar.getgreatestminimum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getGreatestMinimum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getGreatestMinimum</span> — <span class="dc-title">Get the largest local minimum value for a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getgreatestminimum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getGreatestMinimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_greatest_minimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the largest local minimum for a field. This should be a value   larger or equal to that returned by   <span class="function">{@link IntlCalendar::getActualMinimum()}</span>, which is in its turn   larger or equal to that returned by   <span class="function">{@link IntlCalendar::getMinimum()}</span>. All these three functions   return the same value for the Gregorian calendar.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getgreatestminimum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getgreatestminimum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing a field value, in the fieldʼs   unit, 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the largest local minimum value for a field
     * @link https://secure.php.net/manual/en/intlcalendar.getgreatestminimum.php
     * @param int $field
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * @return int|false
     * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing a field value, in the field's
     * unit, or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getGreatestMinimum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getkeywordvaluesforlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getKeywordValuesForLocale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getKeywordValuesForLocale</span> — <span class="dc-title">Get set of locale keyword values</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getkeywordvaluesforlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getKeywordValuesForLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$keyword</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$onlyCommon</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_keyword_values_for_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$keyword</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$locale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$onlyCommon</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   For a given locale key, get the set of values for that key that would result   in a different behavior. For now, only the <span class="literal">'calendar'</span>   keyword is supported.  </p>  <p class="para">   This function requires ICU 4.2 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getkeywordvaluesforlocale-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">keyword</span></dt>    <dd>     <p class="para">      The locale keyword for which relevant values are to be queried. Only      <span class="literal">'calendar'</span> is supported.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">      The locale onto which the keyword/value pair are to be appended.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">onlyCommon</span></dt>    <dd>     <p class="para">      Whether to show only the values commonly used for the specified locale.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getkeywordvaluesforlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An iterator that yields strings with the locale keyword   values 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getkeywordvaluesforlocale-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2573">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getKeyworkValuesForLocale()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(<br>        </span><span style="color: #9876AA">iterator_to_array</span><span style="color: #007700">(<br>                </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">getKeywordValuesForLocale</span><span style="color: #007700">(<br>                        </span><span style="color: #DD0000">'calendar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fa_IR'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(<br>        </span><span style="color: #9876AA">iterator_to_array</span><span style="color: #007700">(<br>                </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">getKeywordValuesForLocale</span><span style="color: #007700">(<br>                        </span><span style="color: #DD0000">'calendar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fa_IR'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">)));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;persian<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;gregorian<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;islamic<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;islamic-civil<br>)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;persian<br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;gregorian<br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;islamic<br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;islamic-civil<br>&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;japanese<br>&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;buddhist<br>&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;roc<br>&nbsp;&nbsp;&nbsp;&nbsp;[7]&nbsp;=&gt;&nbsp;hebrew<br>&nbsp;&nbsp;&nbsp;&nbsp;[8]&nbsp;=&gt;&nbsp;chinese<br>&nbsp;&nbsp;&nbsp;&nbsp;[9]&nbsp;=&gt;&nbsp;indian<br>&nbsp;&nbsp;&nbsp;&nbsp;[10]&nbsp;=&gt;&nbsp;coptic<br>&nbsp;&nbsp;&nbsp;&nbsp;[11]&nbsp;=&gt;&nbsp;ethiopic<br>&nbsp;&nbsp;&nbsp;&nbsp;[12]&nbsp;=&gt;&nbsp;ethiopic-amete-alem<br>)</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get set of locale keyword values
     * @param string $keyword <p>
     * The locale keyword for which relevant values are to be queried. Only
     * <em>'calendar'</em> is supported.
     * </p>
     * @param string $locale <p>
     * The locale onto which the keyword/value pair are to be appended.
     * </p>
     * @param bool $onlyCommon
     * <p>
     * Whether to show only the values commonly used for the specified locale.
     * </p>
     * @return Iterator|false An iterator that yields strings with the locale keyword values or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public static function getKeywordValuesForLocale(
        #[LanguageAware(['8.0' => 'string'], default: '')] $keyword,
        #[LanguageAware(['8.0' => 'string'], default: '')] $locale,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $onlyCommon
    ): IntlIterator|false {}

    /**
 * <div id="intlcalendar.getleastmaximum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getLeastMaximum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getLeastMaximum</span> — <span class="dc-title">Get the smallest local maximum for a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getleastmaximum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getLeastMaximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_least_maximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the smallest local maximumw for a field. This should be a value   smaller or equal to that returned by   <span class="function"><strong>IntlCalendar::getActualMaxmimum()</strong></span>, which is in its turn   smaller or equal to that returned by   <span class="function">{@link IntlCalendar::getMaximum()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getleastmaximum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getleastmaximum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing a field value in the fieldʼs   unit 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getleastmaximum-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2574">   <p><strong>示例 #1 Maxima examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'it_IT'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">3 </span><span style="color: #FF8000">// April </span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLeastMaximum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">),  </span><span style="color: #FF8000">// 28<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getActualMaximum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">), </span><span style="color: #FF8000">// 30<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMaximum</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">)        </span><span style="color: #FF8000">// 31<br></span><span style="color: #007700">);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(28)<br>int(30)<br>int(31)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getleastmaximum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMaximum()} - The maximum value for a field, considering the objectʼs current time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMaximum()} - Get the global maximum value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getGreatestMinimum()} - Get the largest local minimum value for a field</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the smallest local maximum for a field
     * @link https://secure.php.net/manual/en/intlcalendar.getleastmaximum.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false
     * An {@link https://secure.php.net/manual/en/language.types.integer.ph int} representing a field value in the field's
     * unit or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getLeastMaximum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getLocale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getLocale</span> — <span class="dc-title">Get the locale associated with the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getlocale-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_locale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the locale used by this calendar object.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getlocale-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Whether to fetch the actual locale (the locale from which the calendar      data originates, with <strong><span>{@link Locale::ACTUAL_LOCALE}</span></strong>) or the      valid locale, i.e., the most specific locale supported by ICU relatively      to the requested locale – see <strong><span>{@link Locale::VALID_LOCALE}</span></strong>.      From the most general to the most specific, the locales are ordered in      this fashion – actual locale, valid locale, requested locale.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A locale string 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getlocale-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2575">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getLocale()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">getGMT</span><span style="color: #007700">(), </span><span style="color: #DD0000">'en_US_CALIFORNIA'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">(</span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">ACTUAL_LOCALE</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocale</span><span style="color: #007700">(</span><span style="color: #9876AA">Locale</span><span style="color: #007700">::</span><span style="color: #9876AA">VALID_LOCALE</span><span style="color: #007700">)<br>);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(2)&nbsp;"en"<br>string(5)&nbsp;"en_US"</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the locale associated with the object
     * @link https://secure.php.net/manual/en/intlcalendar.getlocale.php
     * @param int $type <p>
     * Whether to fetch the actual locale (the locale from which the calendar
     * data originates, with <b>Locale::ACTUAL_LOCALE</b>) or the
     * valid locale, i.e., the most specific locale supported by ICU relatively
     * to the requested locale – see <b>Locale::VALID_LOCALE</b>.
     * From the most general to the most specific, the locales are ordered in
     * this fashion – actual locale, valid locale, requested locale.
     * </p>
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(#[LanguageAware(['8.0' => 'int'], default: '')] $type): string|false {}

    /**
 * <div id="intlcalendar.getmaximum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getMaximum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getMaximum</span> — <span class="dc-title">Get the global maximum value for a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getmaximum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getMaximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_maximum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the global maximum for a field, in this specific calendar. This value   is larger or equal to that returned by   <span class="function">{@link IntlCalendar::getActualMaximum()}</span>, which is in its turn   larger or equal to that returned by   <span class="function">{@link IntlCalendar::getLeastMaximum()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getmaximum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getmaximum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing a field value in the fieldʼs   unit 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getmaximum-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getActualMaximum()} - The maximum value for a field, considering the objectʼs current time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getLeastMaximum()} - Get the smallest local maximum for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getMinimum()} - Get the global minimum value for a field</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the global maximum value for a field
     * @link https://secure.php.net/manual/en/intlcalendar.getmaximum.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false
     */
    #[Pure]
    #[TentativeType]
    public function getMaximum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getminimaldaysinfirstweek" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getMinimalDaysInFirstWeek</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getMinimalDaysInFirstWeek</span> — <span class="dc-title">Get minimal number of days the first week in a year or month can have</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getminimaldaysinfirstweek-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getMinimalDaysInFirstWeek</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_minimal_days_in_first_week</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the smallest number of days the first week of a year or month must   have in the new year or month.  For instance, in the Gregorian calendar, if   this value is 1, then the first week of the year will necessarily include   January 1st, while if this value is 7, then the week with January 1st will   be the first week of the year only if the day of the week for January 1st   matches the day of the week returned by   <span class="function">{@link IntlCalendar::getFirstDayOfWeek()}</span>; otherwise it will be   the previous yearʼs last week.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getminimaldaysinfirstweek-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getminimaldaysinfirstweek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing a number of days 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getminimaldaysinfirstweek-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2576">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getMinimalDaysInFirstWeek()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">0 </span><span style="color: #FF8000">// January </span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #DD0000">'cccc'</span><span style="color: #007700">)); </span><span style="color: #FF8000">// Wednesday<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMinimalDaysInFirstWeek</span><span style="color: #007700">(), </span><span style="color: #FF8000">// 1<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayofWeek</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 1 (Sunday)<br><br>// Week 1 of 2013<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #DD0000">"'Week 'w' of 'Y"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setMinimalDaysInFirstWeek</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// Still Week 1 of 2013 (1st week has 5 days in the new year)<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #DD0000">"'Week 'w' of 'Y"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setMinimalDaysInFirstWeek</span><span style="color: #007700">(</span><span style="color: #9876AA">6</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// Week 53 of 2012<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #DD0000">"'Week 'w' of 'Y"</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(9)&nbsp;"Wednesday"<br>int(1)<br>int(1)<br>string(14)&nbsp;"Week&nbsp;1&nbsp;of&nbsp;2013"<br>string(14)&nbsp;"Week&nbsp;1&nbsp;of&nbsp;2013"<br>string(15)&nbsp;"Week&nbsp;53&nbsp;of&nbsp;2012"</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get minimal number of days the first week in a year or month can have
     * @link https://secure.php.net/manual/en/intlcalendar.getminimaldaysinfirstweek.php
     * @return int|false
     * An {@link https://secure.php.net/manual/en/language.types.integer.php  int} representing a number of days or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getMinimalDaysInFirstWeek(): int|false {}

    /**
 * <div id="intlcalendar.getminimum" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getMinimum</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getMinimum</span> — <span class="dc-title">Get the global minimum value for a field</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getminimum-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getMinimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_minimum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the global minimum for a field, in this specific calendar. This value   is smaller or equal to that returned by   <span class="function">{@link IntlCalendar::getActualMinimum()}</span>, which is in its turn   smaller or equal to that returned by   <span class="function">{@link IntlCalendar::getGreatestMinimum()}</span>. For the Gregorian   calendar, these three functions always return the same value (for each   field).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getminimum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getminimum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> representing a value for the given   field in the fieldʼs unit 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the global minimum value for a field
     * @link https://secure.php.net/manual/en/intlcalendar.getminimum.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return int|false
     * An int representing a value for the given field in the field's unit or FALSE on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getMinimum(#[LanguageAware(['8.0' => 'int'], default: '')] $field): int|false {}

    /**
 * <div id="intlcalendar.getnow" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getNow</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getNow</span> — <span class="dc-title">Get number representing the current time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getnow-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getNow</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_now</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></div>  <p class="para rdfs-comment">   The number of milliseconds  that have passed since the reference date. This   number is derived from the system time.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getnow-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getnow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> representing a number of milliseconds since the epoch,   not counting leap seconds.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getnow-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2577">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getNow()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(</span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">'Europe/Madrid'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$val </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNow</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$val</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">getNow</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000.</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">float(1371425814666)<br>lunes,&nbsp;17&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;01:36:54&nbsp;Hora&nbsp;de&nbsp;verano&nbsp;de&nbsp;Europa&nbsp;central</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get number representing the current time
     * @return float A float representing a number of milliseconds since the epoch, not counting leap seconds.
     */
    #[TentativeType]
    public static function getNow(): float {}

    /**
 * <div id="intlcalendar.getrepeatedwalltimeoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getRepeatedWallTimeOption</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getRepeatedWallTimeOption</span> — <span class="dc-title">Get behavior for handling repeating wall time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getrepeatedwalltimeoption-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getRepeatedWallTimeOption</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_repeated_wall_time_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the current strategy for dealing with wall times that are repeated   whenever the clock is set back during dailight saving time end transitions.   The default value is <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong>.  </p>  <p class="para">   This function requires ICU 4.9 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getrepeatedwalltimeoption-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getrepeatedwalltimeoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   One of the constants <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong> or   <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getrepeatedwalltimeoption-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2578">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getRepeatedWallTimeOption()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.error_level'</span><span style="color: #007700">, </span><span style="color: #9876AA">E_WARNING</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//On October 27th at 0200, the clock goes back 1 hour and from GMT+01 to GMT+00<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">9 </span><span style="color: #FF8000">// October </span><span style="color: #007700">, </span><span style="color: #9876AA">27</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRepeatedWalltimeOption</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 0 WALLTIME_LAST<br><br></span><span style="color: #9876AA">\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">NULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'UTC'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000.</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRepeatedWalltimeOption</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">WALLTIME_FIRST</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRepeatedWalltimeOption</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 1 WALLTIME_FIRST<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000.</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(0)<br>string(42)&nbsp;"Sunday,&nbsp;October&nbsp;27,&nbsp;2013&nbsp;at&nbsp;1:30:00&nbsp;AM&nbsp;GMT"<br>int(1)<br>string(43)&nbsp;"Sunday,&nbsp;October&nbsp;27,&nbsp;2013&nbsp;at&nbsp;12:30:00&nbsp;AM&nbsp;GMT"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getrepeatedwalltimeoption-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getSkippedWallTimeOption()} - Get behavior for handling skipped wall time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setSkippedWallTimeOption()} - Set behavior for handling skipped wall times at positive timezone offset transitions</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setRepeatedWallTimeOption()} - Set behavior for handling repeating wall times at negative timezone offset transitions</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get behavior for handling repeating wall time
     * @link https://secure.php.net/manual/en/intlcalendar.getrepeatedwalltimeoption.php
     * @return int
     * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b> or
     * <b>IntlCalendar::WALLTIME_LAST</b>.
     */
    #[Pure]
    #[TentativeType]
    public function getRepeatedWallTimeOption(): int {}

    /**
 * <div id="intlcalendar.getskippedwalltimeoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getSkippedWallTimeOption</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getSkippedWallTimeOption</span> — <span class="dc-title">Get behavior for handling skipped wall time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getskippedwalltimeoption-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getSkippedWallTimeOption</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_skipped_wall_time_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the current strategy for dealing with wall times that are skipped   whenever the clock is forwarded during dailight saving time start transitions.   The default value is <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong>.  </p>  <p class="para">   The calendar must be <a href="https://php.net/manual/zh/intlcalendar.setlenient.php" class="link">lenient</a> for this option to have   any effect, otherwise attempting to set a non-existing time will cause an   error.  </p>  <p class="para">   This function requires ICU 4.9 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getskippedwalltimeoption-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getskippedwalltimeoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   One of the constants <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong>,   <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong> or   <strong><span>{@link IntlCalendar::WALLTIME_NEXT_VALID}</span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getskippedwalltimeoption-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2579">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getSkippedWallTimeOption()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.error_level'</span><span style="color: #007700">, </span><span style="color: #9876AA">E_WARNING</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//On March 31st at 0100, the clock goes forward 1 hour and from GMT+00 to GMT+01<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">2 </span><span style="color: #FF8000">// March </span><span style="color: #007700">, </span><span style="color: #9876AA">31</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">(),               </span><span style="color: #FF8000">// true<br>    </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSkippedWalltimeOption</span><span style="color: #007700">() </span><span style="color: #FF8000">// 0 WALLTIME_LAST<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$formatter </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">create</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">NULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'UTC'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSkippedWallTimeOption</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">WALLTIME_FIRST</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSkippedWalltimeOption</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 1 WALLTIME_FIRST<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSkippedWallTimeOption</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">WALLTIME_NEXT_VALID</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSkippedWalltimeOption</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 2 WALLTIME_NEXT_VALID<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$formatter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">() / </span><span style="color: #9876AA">1000</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>int(0)<br>string(40)&nbsp;"Sunday,&nbsp;March&nbsp;31,&nbsp;2013&nbsp;at&nbsp;1:30:00&nbsp;AM&nbsp;GMT"<br>int(1)<br>string(41)&nbsp;"Sunday,&nbsp;March&nbsp;31,&nbsp;2013&nbsp;at&nbsp;12:30:00&nbsp;AM&nbsp;GMT"<br>int(2)<br>string(40)&nbsp;"Sunday,&nbsp;March&nbsp;31,&nbsp;2013&nbsp;at&nbsp;1:00:00&nbsp;AM&nbsp;GMT"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.getskippedwalltimeoption-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getRepeatedWallTimeOption()} - Get behavior for handling repeating wall time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setSkippedWallTimeOption()} - Set behavior for handling skipped wall times at positive timezone offset transitions</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setRepeatedWallTimeOption()} - Set behavior for handling repeating wall times at negative timezone offset transitions</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get behavior for handling skipped wall time
     * @link https://secure.php.net/manual/en/intlcalendar.getskippedwalltimeoption.php
     * @return int
     * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b>,
     * <b>IntlCalendar::WALLTIME_LAST</b> or
     * <b>IntlCalendar::WALLTIME_NEXT_VALID</b>.
     */
    #[Pure]
    #[TentativeType]
    public function getSkippedWallTimeOption(): int {}

    /**
 * <div id="intlcalendar.gettime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getTime</span> — <span class="dc-title">Get time currently represented by the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.gettime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getTime</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the time associated with this object, expressed as the number of   milliseconds since the epoch.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.gettime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.gettime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> representing the number of milliseconds elapsed since the   reference time (1 Jan 1970 00:00:00 UTC), 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.gettime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2580">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getTime()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">4 </span><span style="color: #FF8000">// May </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$time </span><span style="color: #007700">= </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">();<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$time</span><span style="color: #007700">, </span><span style="color: #9876AA">\$time </span><span style="color: #007700">/ </span><span style="color: #9876AA">1000 </span><span style="color: #007700">== </span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-05-01 00:00:00'</span><span style="color: #007700">)); </span><span style="color: #FF8000">//true</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">float(1367362800000)<br>bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.gettime-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getNow()} - Get number representing the current time</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get time currently represented by the object
     * @return float|false
     * A {@link https://secure.php.net/manual/en/language.types.float.php float} representing the number of milliseconds elapsed since the
     * reference time (1 Jan 1970 00:00:00 UTC).
     */
    #[Pure]
    #[TentativeType]
    public function getTime(): float|false {}

    /**
 * <div id="intlcalendar.gettimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getTimeZone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getTimeZone</span> — <span class="dc-title">Get the objectʼs timezone</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.gettimezone-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getTimeZone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_time_zone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span> object associated with this   calendar.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.gettimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.gettimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span> object corresponding to the one used   internally in this object.  Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.gettimezone-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2581">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getTimeZone()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">fromDateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2012-01-01 00:00:00 GMT+03:33'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimeZone</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">IntlTimeZone&nbsp;Object<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[valid]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[id]&nbsp;=&gt;&nbsp;Europe/Lisbon<br>&nbsp;&nbsp;&nbsp;&nbsp;[rawOffset]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;[currentOffset]&nbsp;=&gt;&nbsp;3600000<br>)<br>IntlTimeZone&nbsp;Object<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[valid]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[id]&nbsp;=&gt;&nbsp;UTC<br>&nbsp;&nbsp;&nbsp;&nbsp;[rawOffset]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;[currentOffset]&nbsp;=&gt;&nbsp;0<br>)<br>IntlTimeZone&nbsp;Object<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[valid]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[id]&nbsp;=&gt;&nbsp;GMT+03:33<br>&nbsp;&nbsp;&nbsp;&nbsp;[rawOffset]&nbsp;=&gt;&nbsp;12780000<br>&nbsp;&nbsp;&nbsp;&nbsp;[currentOffset]&nbsp;=&gt;&nbsp;12780000<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.gettimezone-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::setTimeZone()} - Set the timezone used by this calendar</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::createInstance()} - Create a new IntlCalendar</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlGregorianCalendar::__construct()} - Create the Gregorian Calendar class</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the object's timezone
     * @link https://secure.php.net/manual/en/intlcalendar.gettimezone.php
     * @return IntlTimeZone|false
     * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone} object corresponding to the one used
     * internally in this object.
     */
    #[Pure]
    #[TentativeType]
    public function getTimeZone(): IntlTimeZone|false {}

    /**
 * <div id="intlcalendar.gettype" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getType</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getType</span> — <span class="dc-title">Get the calendar type</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.gettype-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getType</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   A string describing the type of this calendar. This is one of the <a href="https://php.net/manual/zh/intlcalendar.getkeywordvaluesforlocale.php" class="link">valid values</a> for   the calendar keyword value <span class="literal">'calendar'</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.gettype-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.gettype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> representing the calendar type, such as   <span class="literal">'gregorian'</span>, <span class="literal">'islamic'</span>, etc.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.gettype-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2582">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::getType()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'@calendar=ethiopic-amete-alem'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getType</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">();<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getType</span><span style="color: #007700">());</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(19)&nbsp;"ethiopic-amete-alem"<br>string(9)&nbsp;"gregorian"</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the calendar type
     * @link https://secure.php.net/manual/en/intlcalendar.gettype.php
     * @return string
     * A {@link https://secure.php.net/manual/en/language.types.string.php string} representing the calendar type, such as
     * <em>'gregorian'</em>, <em>'islamic'</em>, etc.
     */
    #[Pure]
    #[TentativeType]
    public function getType(): string {}

    /**
 * <div id="intlcalendar.getweekendtransition" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::getWeekendTransition</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::getWeekendTransition</span> — <span class="dc-title">Get time of the day at which weekend begins or ends</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.getweekendtransition-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::getWeekendTransition</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_get_weekend_transition</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns the number of milliseconds after midnight at which the weekend   begins or ends.  </p>  <p class="para">   This is only applicable for days of the week for which   <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span> returns either   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_OFFSET}</span></strong> or   <strong><span>{@link IntlCalendar::DOW_TYPE_WEEKEND_CEASE}</span></strong>. Calling this   function for other days of the week is an error condition.  </p>  <p class="para">   This function requires ICU 4.4 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.getweekendtransition-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfWeek</span></dt>    <dd>     <p class="para">      One of the constants <strong><span>{@link IntlCalendar::DOW_SUNDAY}</span></strong>,      <strong><span>{@link IntlCalendar::DOW_MONDAY}</span></strong>, …,      <strong><span>{@link IntlCalendar::DOW_SATURDAY}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.getweekendtransition-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The number of milliseconds into the day at which the weekend begins or   ends 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.getweekendtransition-examples">  <h3 class="title">示例</h3>  <p class="para">   See example on <span class="function">{@link IntlCalendar::getDayOfWeekType()}</span>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get time of the day at which weekend begins or ends
     * @link https://secure.php.net/manual/en/intlcalendar.getweekendtransition.php
     * @param string $dayOfWeek <p>
     * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
     * <b>IntlCalendar::DOW_MONDAY</b>, ...,
     * <b>IntlCalendar::DOW_SATURDAY</b>.
     * </p>
     * @return int|false
     * The number of milliseconds into the day at which the the weekend begins or
     * ends or <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function getWeekendTransition(#[LanguageAware(['8.0' => 'int'], default: '')] $dayOfWeek): int|false {}

    /**
 * <div id="intlcalendar.indaylighttime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::inDaylightTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::inDaylightTime</span> — <span class="dc-title">Whether the objectʼs time is in Daylight Savings Time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.indaylighttime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::inDaylightTime</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_in_daylight_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Whether, for the instant represented by this object and for this objectʼs   timezone, daylight saving time is in place.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.indaylighttime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.indaylighttime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the date is in Daylight Savings Time, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p>  <p class="para">On failure <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is also returned. To detect error conditions use <span class="function">{@link intl_get_error_code()}</span>, or set up Intl to throw <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">exceptions</a>.</p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.indaylighttime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2583">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::inDaylightTime()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">56</span><span style="color: #007700">, </span><span style="color: #9876AA">31</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">inDaylightTime</span><span style="color: #007700">()); </span><span style="color: #FF8000">// true<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">11 </span><span style="color: #FF8000">// December </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">inDaylightTime</span><span style="color: #007700">()); </span><span style="color: #FF8000">// false<br><br>//DST end transition on 2013-10-27 at 0200 (wall time back 1 hour)<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">9 </span><span style="color: #FF8000">// October </span><span style="color: #007700">, </span><span style="color: #9876AA">27</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">inDaylightTime</span><span style="color: #007700">()); </span><span style="color: #FF8000">// false (default WALLTIME_LAST)<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRepeatedWallTimeOption</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">WALLTIME_FIRST</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_HOUR_OF_DAY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">); </span><span style="color: #FF8000">// force time recalculation<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">inDaylightTime</span><span style="color: #007700">()); </span><span style="color: #FF8000">// true</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether the object's time is in Daylight Savings Time
     * @link https://secure.php.net/manual/en/intlcalendar.indaylighttime.php
     * @return bool
     * Returns <b>TRUE</b> if the date is in Daylight Savings Time, <b>FALSE</b> otherwise.
     * The value <b>FALSE</b> may also be returned on failure, for instance after
     * specifying invalid field values on non-lenient mode; use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or query
     * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to disambiguate.
     */
    #[Pure]
    #[TentativeType]
    public function inDaylightTime(): bool {}

    /**
 * <div id="intlcalendar.isequivalentto" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::isEquivalentTo</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::isEquivalentTo</span> — <span class="dc-title">Whether another calendar is equal but for a different time</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.isequivalentto-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::isEquivalentTo</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_is_equivalent_to</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether this and the given object are equivalent for all purposes   except as to the time they have set. The locales do not have to match, as   long as no change in behavior results from such mismatch. This includes the <a href="https://php.net/manual/zh/intlcalendar.gettimezone.php" class="link">timezone</a>, whether   the <a href="https://php.net/manual/zh/intlcalendar.islenient.php" class="link">lenient mode</a> is set,   the <a href="https://php.net/manual/zh/intlcalendar.getrepeatedwalltimeoption.php" class="link">repeated</a>   and <a href="https://php.net/manual/zh/intlcalendar.getskippedwalltimeoption.php" class="link">skipped</a> wall time settings,   the <a href="https://php.net/manual/zh/intlcalendar.getdayofweektype.php" class="link">days of the week when the   weekend starts and ceases</a> and the <a href="https://php.net/manual/zh/intlcalendar.getweekendtransition.php" class="link">times where such transitions   occur</a>. It may also include other calendar specific settings, such as   the Gregorian/Julian transition instant.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.isequivalentto-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">      The other calendar against which the comparison is to be made.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.isequivalentto-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Assuming there are no argument errors, returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the calendars are   equivalent except possibly for their set time.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.isequivalentto-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2584">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::isEquivalentTo()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$cal1 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isEquivalentTo</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal2</span><span style="color: #007700">)); </span><span style="color: #FF8000">// true<br><br></span><span style="color: #9876AA">\$cal3 </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isEquivalentTo</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal3</span><span style="color: #007700">)); </span><span style="color: #FF8000">// false<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayOfWeek</span><span style="color: #007700">(),    </span><span style="color: #FF8000">// 2 (Monday)<br></span><span style="color: #9876AA">\$cal3</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayOfWeek</span><span style="color: #007700">());            </span><span style="color: #FF8000">// 1 (Sunday)</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)<br>int(2)<br>int(1)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.isequivalentto-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::equals()} - Compare time of two IntlCalendar objects for equality</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether another calendar is equal but for a different time
     * @link https://secure.php.net/manual/en/intlcalendar.isequivalentto.php
     * @param IntlCalendar $other The other calendar against which the comparison is to be made.
     * @return bool
     * Assuming there are no argument errors, returns <b>TRUE</b> iif the calendars are equivalent except possibly for their set time.
     */
    #[Pure]
    #[TentativeType]
    public function isEquivalentTo(IntlCalendar $other): bool {}

    /**
 * <div id="intlcalendar.islenient" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::isLenient</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::isLenient</span> — <span class="dc-title">Whether date/time interpretation is in lenient mode</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.islenient-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::isLenient</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_is_lenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether the current date/time interpretations is lenient (the   default). If that is case, some out of range values for fields will be   accepted instead of raising an error.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.islenient-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.islenient-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> representing whether the calendar is set to lenient mode.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.islenient-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2585">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::isLenient()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.use_exceptions'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">), </span><span style="color: #FF8000">// 01/07/2013, 00:00:00<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()); </span><span style="color: #FF8000">// true<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">33</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">)); </span><span style="color: #FF8000">// 02/08/2013, 00:00:00<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setLenient</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isLenient</span><span style="color: #007700">()); </span><span style="color: #FF8000">// false<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">33</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">)); </span><span style="color: #FF8000">// error</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(20)&nbsp;"01/07/2013,&nbsp;00:00:00"<br>bool(true)<br>string(20)&nbsp;"02/08/2013,&nbsp;00:00:00"<br>bool(false)<br><br>Fatal&nbsp;error:&nbsp;Uncaught&nbsp;exception&nbsp;'IntlException'&nbsp;with&nbsp;message&nbsp;'datefmt_format_object:&nbsp;error&nbsp;obtaining&nbsp;instant&nbsp;from&nbsp;IntlCalendar'&nbsp;in&nbsp;/home/foobar/example.php:16<br>Stack&nbsp;trace:<br>#0&nbsp;/home/foobar/example.php(16):&nbsp;IntlDateFormatter::formatObject(Object(IntlGregorianCalendar))<br>#1&nbsp;{main}<br>&nbsp;&nbsp;thrown&nbsp;in&nbsp;/home/foobar/example.php&nbsp;on&nbsp;line&nbsp;16</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether date/time interpretation is in lenient mode
     * @link https://secure.php.net/manual/en/intlcalendar.islenient.php
     * @return bool
     * A {@link https://secure.php.net/manual/en/language.types.boolean.php bool} representing whether the calendar is set to lenient mode.
     */
    #[Pure]
    #[TentativeType]
    public function isLenient(): bool {}

    /**
 * <div id="intlcalendar.isweekend" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::isWeekend</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::isWeekend</span> — <span class="dc-title">Whether a certain date/time is in the weekend</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.isweekend-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::isWeekend</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_is_weekend</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether either the obejctʼs current time or the provided timestamp   occur during a weekend in this objectʼs calendar system.  </p>  <p class="para">   This function requires ICU 4.4 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.isweekend-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">      An optional timestamp representing the number of milliseconds since the      epoch, excluding leap seconds. If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, this objectʼs current time is      used instead.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.isweekend-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> indicating whether the given or this objectʼs time occurs   in a weekend.  </p>  <p class="para">On failure <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is also returned. To detect error conditions use <span class="function">{@link intl_get_error_code()}</span>, or set up Intl to throw <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">exceptions</a>.</p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.isweekend-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2586">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::isWeekend()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'en_US'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">); </span><span style="color: #FF8000">// a Sunday <br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isWeekend</span><span style="color: #007700">()); </span><span style="color: #FF8000">// true<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isWeekend</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-07-01 00:00:00'</span><span style="color: #007700">))); </span><span style="color: #FF8000">// false, Monday<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">'ar_SA'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">); </span><span style="color: #FF8000">// a Sunday <br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isWeekend</span><span style="color: #007700">()); </span><span style="color: #FF8000">// false, Sunday not in weekend in this calendar</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.isweekend-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getDayOfWeekType()} - Tell whether a day is a weekday, weekend or a day that has a transition between the two</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getWeekendTransition()} - Get time of the day at which weekend begins or ends</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether a certain date/time is in the weekend
     * @link https://secure.php.net/manual/en/intlcalendar.isweekend.php
     * @param float|null $timestamp [optional] <p>
     * An optional timestamp representing the number of milliseconds since the
     * epoch, excluding leap seconds. If <b>NULL</b>, this object's current time is
     * used instead.
     * </p>
     * @return bool
     * <p> A {@link https://secure.php.net/manual/en/language.types.boolean.php bool} indicating whether the given or this object's time occurs
     * in a weekend.
     * </p>
     * <p>
     * The value <b>FALSE</b> may also be returned on failure, for instance after giving
     * a date out of bounds on non-lenient mode; use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or query
     * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to disambiguate.</p>
     */
    #[Pure]
    #[TentativeType]
    public function isWeekend(#[LanguageAware(['8.0' => 'float|null'], default: '')] $timestamp = null): bool {}

    /**
 * <div id="intlcalendar.roll" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::roll</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::roll</span> — <span class="dc-title">Add value to field without carrying into more significant fields</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.roll-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::roll</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_roll</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Adds a (signed) amount to a field. The difference with respect to   <span class="function">{@link IntlCalendar::add()}</span> is that when the field value   overflows, it does not carry into more significant fields.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.roll-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The (signed) amount to add to the field, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> for rolling up (adding      <span class="literal">1</span>), or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> for rolling down (subtracting      <span class="literal">1</span>).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.roll-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.roll-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2587">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::roll()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">5 </span><span style="color: #FF8000">// June </span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">)); </span><span style="color: #FF8000">// "01/07/2013, 00:00:00"<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">5 </span><span style="color: #FF8000">// June </span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">roll</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_DAY_OF_MONTH</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">); </span><span style="color: #FF8000">// roll up, same as rolling +1<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">)); </span><span style="color: #FF8000">// "01/06/2013, 00:00:00"</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(20)&nbsp;"01/07/2013,&nbsp;00:00:00"<br>string(20)&nbsp;"01/06/2013,&nbsp;00:00:00"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.roll-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::add()} - Add a (signed) amount of time to a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::set()} - Set a time field or several common fields at once</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Add value to field without carrying into more significant fields
     * @link https://secure.php.net/manual/en/intlcalendar.roll.php
     * @param int $field
     * <p>One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time
     * {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @param mixed $value <p>
     * The (signed) amount to add to the field, <b>TRUE</b> for rolling up (adding
     * <em>1</em>), or <b>FALSE</b> for rolling down (subtracting
     * <em>1</em>).
     * </p>
     * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function roll(#[LanguageAware(['8.0' => 'int'], default: '')] $field, $value): bool {}

    /**
 * <div id="intlcalendar.isset" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::isSet</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::isSet</span> — <span class="dc-title">Whether a field is set</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.isset-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::isSet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_is_set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Returns whether a field is set (as opposed to <a href="https://php.net/manual/zh/intlcalendar.clear.php" class="link">clear</a>). Set fields take priority over   unset fields and their default values when the date/time is being   calculated. Fields set later take priority over fields set earlier.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.isset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.isset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Assuming there are no argument errors, returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the field is set.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.isset-examples">  <h3 class="title">示例</h3>  <p class="para">   See the example on <span class="function">{@link IntlCalendar::clear()}</span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.isset-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::clear()} - Clear a field or all fields</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::set()} - Set a time field or several common fields at once</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Whether a field is set
     * @link https://secure.php.net/manual/en/intlcalendar.isset.php
     * @param int $field <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time
     * {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
     * These are integer values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @return bool Assuming there are no argument errors, returns <b>TRUE</b> iif the field is set.
     */
    #[TentativeType]
    public function PS_UNRESERVE_PREFIX_isSet(#[LanguageAware(['8.0' => 'int'], default: '')] $field): bool {}

    /**
 * <div id="intlcalendar.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::set</span> — <span class="dc-title">Set a time field or several common fields at once</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.set-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::set</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$cal</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$cal</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets either a specific field to the given value, or sets at once several   common fields. The range of values that are accepted depend on whether the   calendar is using the <a href="https://php.net/manual/zh/intlcalendar.setlenient.php" class="link">lenient   mode</a>.  </p>  <p class="para">   For fields that conflict, the fields that are set later have priority.  </p>  <p class="para">   This method cannot be called with exactly four arguments.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">cal</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The new value of the given field.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MONTH}</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>.      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MINUTE}</span></strong>.      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_SECOND}</span></strong>.       </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.set-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     <tr>      <td>8.4.0</td>      <td>       This had been deprecated in favor of the methods       <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDate()}</span> and       <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDateTime()}</span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.set-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2588">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::set()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//Calls made later have priority<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2012</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2011</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br><br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2012</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2011</span><span style="color: #007700">);<br></span><span style="color: #FF8000">//the time has not been recalculated yet. If we clear the extended year,<br>//the year set before will be used<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(20)&nbsp;"01/07/2011,&nbsp;00:00:00"<br>string(20)&nbsp;"01/07/2012,&nbsp;00:00:00"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.set-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::get()} - Get the value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::add()} - Add a (signed) amount of time to a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::roll()} - Add value to field without carrying into more significant fields</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set a time field or several common fields at once
     * @link https://secure.php.net/manual/en/intlcalendar.set.php
     * @param int $year <p>
     * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
     * values between <em>0</em> and
     * <b>IntlCalendar::FIELD_COUNT</b>.
     * </p>
     * @param int $month <p>
     * The new value for <b>IntlCalendar::FIELD_MONTH</b>.
     * </p>
     * @param int $dayOfMonth [optional] <p>
     * The new value for <b>IntlCalendar::FIELD_DAY_OF_MONTH</b>.
     * The month sequence is zero-based, i.e., January is represented by 0,
     * February by 1, ..., December is 11 and Undecember (if the calendar has
     * it) is 12.
     * </p>
     * @param int $hour [optional]
     * <p>
     * The new value for <b>IntlCalendar::FIELD_HOUR_OF_DAY</b>.
     * </p>
     * @param int $minute [optional]
     * <p>
     * The new value for <b>IntlCalendar::FIELD_MINUTE</b>.
     * </p>
     * @param int $second [optional] <p>
     * The new value for <b>IntlCalendar::FIELD_SECOND</b>.
     * </p>
     * @return bool Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
     */
    public function set($year, $month, $dayOfMonth = null, $hour = null, $minute = null, $second = null) {}

    /**
 * <div id="intlcalendar.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::set</span> — <span class="dc-title">Set a time field or several common fields at once</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.set-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::set</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$cal</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$field</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$cal</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span><span class="initializer"> = NULL</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = NULL</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets either a specific field to the given value, or sets at once several   common fields. The range of values that are accepted depend on whether the   calendar is using the <a href="https://php.net/manual/zh/intlcalendar.setlenient.php" class="link">lenient   mode</a>.  </p>  <p class="para">   For fields that conflict, the fields that are set later have priority.  </p>  <p class="para">   This method cannot be called with exactly four arguments.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">cal</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field</span></dt>    <dd>     <p class="para"> One of the <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> date/time <a href="https://php.net/manual/zh/class.intlcalendar.php#intlcalendar.constants" class="link">field constants</a>. These are integer values between <span class="literal">0</span> and <strong><span>IntlCalendar::FIELD_COUNT</span></strong>.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The new value of the given field.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MONTH}</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>.      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MINUTE}</span></strong>.      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_SECOND}</span></strong>.       </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.set-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     <tr>      <td>8.4.0</td>      <td>       This had been deprecated in favor of the methods       <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDate()}</span> and       <span class="methodname" style="color:#CC7832">{@link IntlCalendar::setDateTime()}</span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.set-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2588">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::set()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//Calls made later have priority<br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2012</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2011</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));<br><br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">6 </span><span style="color: #FF8000">// July </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2012</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">, </span><span style="color: #9876AA">2011</span><span style="color: #007700">);<br></span><span style="color: #FF8000">//the time has not been recalculated yet. If we clear the extended year,<br>//the year set before will be used<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">FIELD_EXTENDED_YEAR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">));</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(20)&nbsp;"01/07/2011,&nbsp;00:00:00"<br>string(20)&nbsp;"01/07/2012,&nbsp;00:00:00"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.set-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::get()} - Get the value for a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::add()} - Add a (signed) amount of time to a field</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::roll()} - Add value to field without carrying into more significant fields</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 >= 5.5.0 PECL intl >= 3.0.0a1)<br/>
     * Set a time field or several common fields at once
     * @link https://secure.php.net/manual/en/intlcalendar.set.php
     * @param int $field One of the IntlCalendar date/time field constants. These are integer values between 0 and IntlCalendar::FIELD_COUNT.
     * @param int $value The new value of the given field.
     * @return bool Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
     * @since 5.5
     */
    public function set($field, $value) {}

    /**
 * <div id="intlcalendar.setfirstdayofweek" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setFirstDayOfWeek</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setFirstDayOfWeek</span> — <span class="dc-title">Set the day on which the week is deemed to start</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setfirstdayofweek-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setFirstDayOfWeek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_first_day_of_week</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Defines the day of week deemed to start the week. This affects the behavior   of fields that depend on the concept of week start and end such as   <strong><span>{@link IntlCalendar::FIELD_WEEK_OF_YEAR}</span></strong> and   <strong><span>{@link IntlCalendar::FIELD_YEAR_WOY}</span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setfirstdayofweek-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfWeek</span></dt>    <dd>     <p class="para">      One of the constants <strong><span>{@link IntlCalendar::DOW_SUNDAY}</span></strong>,      <strong><span>{@link IntlCalendar::DOW_MONDAY}</span></strong>, …,      <strong><span>{@link IntlCalendar::DOW_SATURDAY}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setfirstdayofweek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.setfirstdayofweek-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setfirstdayofweek-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2591">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::setFirstDayOfWeek()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">5 </span><span style="color: #FF8000">// June </span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">); </span><span style="color: #FF8000">// A Sunday<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFirstDayOfWeek</span><span style="color: #007700">()); </span><span style="color: #FF8000">// 2 (Monday)<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000">'local day of week: 'cc'<br>week of month    : 'W'<br>week of year     : 'ww<br></span><span style="color: #007700">EOD<br>), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFirstDayOfWeek</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">DOW_SUNDAY</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000">'local day of week: 'cc'<br>week of month    : 'W'<br>week of year     : 'ww<br></span><span style="color: #007700">EOD<br>), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(2)<br>local&nbsp;day&nbsp;of&nbsp;week:&nbsp;7<br>week&nbsp;of&nbsp;month&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;4<br>week&nbsp;of&nbsp;year&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;26<br>local&nbsp;day&nbsp;of&nbsp;week:&nbsp;1<br>week&nbsp;of&nbsp;month&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;5<br>week&nbsp;of&nbsp;year&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;27</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set the day on which the week is deemed to start
     * @link https://secure.php.net/manual/en/intlcalendar.setfirstdayofweek.php
     * @param int $dayOfWeek <p>
     * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
     * <b>IntlCalendar::DOW_MONDAY</b>, ...,
     * <b>IntlCalendar::DOW_SATURDAY</b>.
     * </p>
     * @return bool Returns TRUE on success. Failure can only happen due to invalid parameters.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setFirstDayOfWeek(#[LanguageAware(['8.0' => 'int'], default: '')] $dayOfWeek) {}

    /**
 * <div id="intlcalendar.setlenient" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setLenient</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setLenient</span> — <span class="dc-title">Set whether date/time interpretation is to be lenient</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setlenient-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setLenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_lenient</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$lenient</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Defines whether the calendar is ‘lenient mode’. In such a mode, some of   out-of-bounds values for some fields are accepted, the behavior being   similar to that of <span class="function">{@link IntlCalendar::add()}</span> (i.e., the value   wraps around, carrying into more significant fields each time). If the   lenient mode is off, then such values will generate an error.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setlenient-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">lenient</span></dt>    <dd>     <p class="para">      Use <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> to activate the lenient mode; <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setlenient-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.setlenient-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setlenient-examples">  <h3 class="title">示例</h3>  <p class="para">   See the example in <span class="function">{@link IntlCalendar::isLenient()}</span>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set whether date/time interpretation is to be lenient
     * @link https://secure.php.net/manual/en/intlcalendar.setlenient.php
     * @param bool $lenient <p>
     * Use <b>TRUE</b> to activate the lenient mode; <b>FALSE</b> otherwise.
     * </p>
     * @return bool Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setLenient(#[LanguageAware(['8.0' => 'bool'], default: '')] $lenient) {}

    /**
 * <div id="intlcalendar.setrepeatedwalltimeoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setRepeatedWallTimeOption</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setRepeatedWallTimeOption</span> — <span class="dc-title">Set behavior for handling repeating wall times at negative timezone offset transitions</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setrepeatedwalltimeoption-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setRepeatedWallTimeOption</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_repeated_wall_time_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets the current strategy for dealing with wall times that are repeated   whenever the clock is set back during dailight saving time end transitions.   The default value is <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong> (take   the post-DST instant). The other possible value is   <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong> (take the instant that   occurs during DST).  </p>  <p class="para">   This function requires ICU 4.9 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setrepeatedwalltimeoption-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">option</span></dt>    <dd>     <p class="para">      One of the constants <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong> or      <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setrepeatedwalltimeoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.setrepeatedwalltimeoption-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setrepeatedwalltimeoption-examples">  <h3 class="title">示例</h3>  <p class="para">   See the example on   <span class="function">{@link IntlCalendar::getRepeatedWallTimeOption()}</span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.setrepeatedwalltimeoption-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::getRepeatedWallTimeOption()} - Get behavior for handling repeating wall time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::setSkippedWallTimeOption()} - Set behavior for handling skipped wall times at positive timezone offset transitions</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::getSkippedWallTimeOption()} - Get behavior for handling skipped wall time</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set behavior for handling repeating wall times at negative timezone offset transitions
     * @link https://secure.php.net/manual/en/intlcalendar.setrepeatedwalltimeoption.php
     * @param int $option <p>
     * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b> or
     * <b>IntlCalendar::WALLTIME_LAST</b>.
     * </p>
     * @return bool
     * Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setRepeatedWallTimeOption(#[LanguageAware(['8.0' => 'int'], default: '')] $option) {}

    /**
 * <div id="intlcalendar.setskippedwalltimeoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setSkippedWallTimeOption</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setSkippedWallTimeOption</span> — <span class="dc-title">Set behavior for handling skipped wall times at positive timezone offset transitions</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setskippedwalltimeoption-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setSkippedWallTimeOption</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_skipped_wall_time_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$option</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets the current strategy for dealing with wall times that are skipped   whenever the clock is forwarded during dailight saving time start transitions.   The default value is <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong> (take   it as being the same instant as the one when the wall time is one hour   more).  Alternative values are   <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong> (same instant as the one   with a wall time of one hour less) and   <strong><span>{@link IntlCalendar::WALLTIME_NEXT_VALID}</span></strong> (same instant as   when DST begins).  </p>  <p class="para">   This affects only the instant represented by the calendar (as reported by   <span class="function">{@link IntlCalendar::getTime()}</span>), the field values will not be   rewritten accordingly.  </p>  <p class="para">   The calendar must be <a href="https://php.net/manual/zh/intlcalendar.setlenient.php" class="link">lenient</a> for this option to have   any effect, otherwise attempting to set a non-existing time will cause an   error.  </p>  <p class="para">   This function requires ICU 4.9 or later.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setskippedwalltimeoption-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">option</span></dt>    <dd>     <p class="para">      One of the constants <strong><span>{@link IntlCalendar::WALLTIME_FIRST}</span></strong>,      <strong><span>{@link IntlCalendar::WALLTIME_LAST}</span></strong> or      <strong><span>{@link IntlCalendar::WALLTIME_NEXT_VALID}</span></strong>.          </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setskippedwalltimeoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.setskippedwalltimeoption-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr> <td>8.2.0</td> <td>  现在返回类型为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>；之前是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。 </td></tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setskippedwalltimeoption-examples">  <h3 class="title">示例</h3>  <p class="para">   See the example on   <span class="function">{@link IntlCalendar::getSkippedWallTimeOption()}</span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.setskippedwalltimeoption-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::getSkippedWallTimeOption()} - Get behavior for handling skipped wall time</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::setRepeatedWallTimeOption()} - Set behavior for handling repeating wall times at negative timezone offset transitions</span></li>    <li><span class="methodname" style="color:#CC7832">{@link intlCalendar::getRepeatedWallTimeOption()} - Get behavior for handling repeating wall time</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set behavior for handling skipped wall times at positive timezone offset transitions
     * @link https://secure.php.net/manual/en/intlcalendar.setskippedwalltimeoption.php
     * @param int $option <p>
     * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b>,
     * <b>IntlCalendar::WALLTIME_LAST</b> or
     * <b>IntlCalendar::WALLTIME_NEXT_VALID</b>.
     * </p>
     * @return bool
     * <p>
     * Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
     * </p>
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setSkippedWallTimeOption(#[LanguageAware(['8.0' => 'int'], default: '')] $option) {}

    /**
 * <div id="intlcalendar.settime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setTime</span> — <span class="dc-title">Set the calendar time in milliseconds since the epoch</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.settime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setTime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets the instant represented by this object. The instant is represented by   a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> whose value should be an integer number of   milliseconds since the epoch (1 Jan 1970 00:00:00.000 UTC), ignoring leap   seconds. All the field values will be recalculated accordingly.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.settime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">      An instant represented by the number of number of milliseconds between      such instant and the epoch, ignoring leap seconds.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.settime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.settime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2592">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::setTime()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'fr_FR'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">5 </span><span style="color: #FF8000">// May </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">12</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// In Europe/Lisbon, on 2013-10-27 at 0200, the clock goes back one hour and<br>   the timezone from UTC+01 to UTC+00 <br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-10-27 00:30:00 UTC'</span><span style="color: #007700">) * </span><span style="color: #9876AA">1000.</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">strtotime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2013-10-27 01:30:00 UTC'</span><span style="color: #007700">) * </span><span style="color: #9876AA">1000.</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">samedi&nbsp;1&nbsp;juin&nbsp;2013&nbsp;12:00:00&nbsp;heure&nbsp;avancÃ©e&nbsp;dâEurope&nbsp;de&nbsp;lâOuest<br>dimanche&nbsp;27&nbsp;octobre&nbsp;2013&nbsp;01:30:00&nbsp;heure&nbsp;avancÃ©e&nbsp;dâEurope&nbsp;de&nbsp;lâOuest<br>dimanche&nbsp;27&nbsp;octobre&nbsp;2013&nbsp;01:30:00&nbsp;heure&nbsp;normale&nbsp;dâEurope&nbsp;de&nbsp;lâOuest</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set the calendar time in milliseconds since the epoch
     * @link https://secure.php.net/manual/en/intlcalendar.settime.php
     * @param float $timestamp <p>
     * An instant represented by the number of number of milliseconds between
     * such instant and the epoch, ignoring leap seconds.
     * </p>
     * @return bool
     * Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTime(#[LanguageAware(['8.0' => 'float'], default: '')] $timestamp): bool {}

    /**
 * <div id="intlcalendar.settimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setTimeZone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlCalendar::setTimeZone</span> — <span class="dc-title">Set the timezone used by this calendar</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.settimezone-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setTimeZone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_time_zone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Defines a new timezone for this calendar. The time represented by the   object is preserved to the detriment of the field values.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.settimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      The new timezone to be used by this calendar. It can be specified in the      following ways:      </p><ul class="itemizedlist"> <li class="listitem">  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, in which case the default timezone will be used, as specified in   the ini setting <a href="https://php.net/manual/zh/datetime.configuration.php#ini.date.timezone" class="link">date.timezone</a> or   through the function <span class="function">{@link date_default_timezone_set()}</span> and as   returned by <span class="function">{@link date_default_timezone_get()}</span>.  </p> </li> <li class="listitem">  <p class="para">   An <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span>, which will be used directly.  </p> </li> <li class="listitem">  <p class="para">   A <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span>. Its identifier will be extracted   and an ICU timezone object will be created; the timezone will be backed   by ICUʼs database, not PHPʼs.  </p> </li> <li class="listitem">  <p class="para">   A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, which should be a valid ICU timezone identifier.   See <span class="function">{@link IntlTimeZone::createTimeZoneIDEnumeration()}</span>. Raw   offsets such as <span class="literal">"GMT+08:30"</span> are also accepted.  </p> </li></ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.settimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> on success and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.settimezone-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2593">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::setTimeZone()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'es_ES'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= new </span><span style="color: #9876AA">IntlGregorianCalendar</span><span style="color: #007700">(</span><span style="color: #9876AA">2013</span><span style="color: #007700">, </span><span style="color: #9876AA">5 </span><span style="color: #FF8000">// May </span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">12</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"(instant </span><span style="color: #007700">{</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">()}</span><span style="color: #DD0000">)\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #9876AA">IntlTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">getGMT</span><span style="color: #007700">());<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"(instant </span><span style="color: #007700">{</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">()}</span><span style="color: #DD0000">)\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'GMT+03:33'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">formatObject</span><span style="color: #007700">(</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">, </span><span style="color: #9876AA">IntlDateFormatter</span><span style="color: #007700">::</span><span style="color: #9876AA">FULL</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"(instant </span><span style="color: #007700">{</span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTime</span><span style="color: #007700">()}</span><span style="color: #DD0000">)\n"</span><span style="color: #007700">;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">sÃ¡bado,&nbsp;1&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;12:00:00&nbsp;Hora&nbsp;de&nbsp;verano&nbsp;de&nbsp;Europa&nbsp;occidental<br>(instant&nbsp;1370084400000)<br>sÃ¡bado,&nbsp;1&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;11:00:00&nbsp;GMT<br>(instant&nbsp;1370084400000)<br>sÃ¡bado,&nbsp;1&nbsp;de&nbsp;junio&nbsp;de&nbsp;2013&nbsp;14:33:00&nbsp;GMT+03:33<br>(instant&nbsp;1370084400000)</blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Set the timezone used by this calendar
     * @link https://secure.php.net/manual/en/intlcalendar.settimezone.php
     * @param mixed $timezone <p>
     * The new timezone to be used by this calendar. It can be specified in the
     * following ways:
     *
     * </p><ul>
     * <li>
     * <p>
     * <b>NULL</b>, in which case the default timezone will be used, as specified in
     * the ini setting {@link https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone date.timezone} or
     * through the function  {@link https://secure.php.net/manual/en/function.date-default-timezone-set.php date_default_timezone_set()} and as
     * returned by  {@link https://secure.php.net/manual/en/function.date-default-timezone-get.php date_default_timezone_get()}.
     * </p>
     * </li>
     * <li>
     * <p>
     * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone}, which will be used directly.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone}. Its identifier will be extracted
     * and an ICU timezone object will be created; the timezone will be backed
     * by ICU's database, not PHP's.
     * </p>
     * </li>
     * <li>
     * <p>
     * A {@link https://secure.php.net/manual/en/language.types.string.php string}, which should be a valid ICU timezone identifier.
     * See  b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw
     * offsets such as <em>"GMT+08:30"</em> are also accepted.
     * </p>
     * </li>
     * </ul>
     * @return bool Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTimeZone($timezone): bool {}

    /**
 * <div id="intlcalendar.todatetime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::toDateTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a2)</p><p class="refpurpose"><span class="refname">IntlCalendar::toDateTime</span> — <span class="dc-title">Convert an IntlCalendar into a DateTime object</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.todatetime-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::toDateTime</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_to_date_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Create a <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object that represents the same   instant (up to second precision, with a rounding error of less than 1   second) and has an analog timezone to this object (the difference being   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>ʼs timezone will be backed by PHPʼs timezone   while <span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span>ʼs timezone is backed by ICUʼs).  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.todatetime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.todatetime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object with the same timezone as this   object (though using PHPʼs database instead of ICUʼs) and the same time,   except for the smaller precision (second precision instead of millisecond).   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure.  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.todatetime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2594">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::toDateTime()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'date.timezone'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'intl.default_locale'</span><span style="color: #007700">, </span><span style="color: #DD0000">'pt_PT'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$cal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/Lisbon'</span><span style="color: #007700">); </span><span style="color: #FF8000">//current time<br><br></span><span style="color: #9876AA">\$dt </span><span style="color: #007700">= </span><span style="color: #9876AA">\$cal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">toDateTime</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dt</span><span style="color: #007700">);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">DateTime&nbsp;Object<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[date]&nbsp;=&gt;&nbsp;2013-07-02&nbsp;00:29:13<br>&nbsp;&nbsp;&nbsp;&nbsp;[timezone_type]&nbsp;=&gt;&nbsp;3<br>&nbsp;&nbsp;&nbsp;&nbsp;[timezone]&nbsp;=&gt;&nbsp;Europe/Lisbon<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-intlcalendar.todatetime-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::fromDateTime()} - Create an IntlCalendar from a DateTime object or string</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::getTime()} - Get time currently represented by the object</span></li>    <li><span class="methodname" style="color:#CC7832">{@link IntlCalendar::createInstance()} - Create a new IntlCalendar</span></li>    <li><span class="methodname" style="color:#CC7832">{@link DateTime::__construct()} - 返回新的 DateTime 对象</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a2)<br/>
     * Convert an IntlCalendar into a DateTime object
     * @link https://secure.php.net/manual/en/intlcalendar.todatetime.php
     * @return DateTime|false
     * A {@link https://secure.php.net/manual/en/class.datetime.php DateTime} object with the same timezone as this
     * object (though using PHP's database instead of ICU's) and the same time,
     * except for the smaller precision (second precision instead of millisecond).
     * Returns <b>FALSE</b> on failure.
     */
    #[Pure]
    #[TentativeType]
    public function toDateTime(): DateTime|false {}

    /**
 * <div id="intlcalendar.setminimaldaysinfirstweek" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setMinimalDaysInFirstWeek</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.1, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlCalendar::setMinimalDaysInFirstWeek</span> — <span class="dc-title">Set minimal number of days the first week in a year or month can have</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setminimaldaysinfirstweek-description">  <h3 class="title">说明</h3>  <p class="para">   面向对象风格  </p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setMinimalDaysInFirstWeek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$days</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   过程化风格  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intlcal_set_minimal_days_in_first_week</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="type IntlCalendar" style="color:#EAB766">IntlCalendar</a></span> <span class="parameter" style="color:#3A95FF">\$calendar</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$days</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets the smallest number of days the first week of a year or month must   have in the new year or month.  For instance, in the Gregorian calendar, if   this value is 1, then the first week of the year will necessarily include   January 1st, while if this value is 7, then the week with January 1st will   be the first week of the year only if the day of the week for January 1st   matches the day of the week returned by   <span class="function">{@link IntlCalendar::getFirstDayOfWeek()}</span>; otherwise it will be   the previous yearʼs last week.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setminimaldaysinfirstweek-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">calendar</span></dt>    <dd>     <p class="para"><span class="classname"><a href="https://php.net/manual/zh/class.intlcalendar.php" class="classname">IntlCalendar</a></span> 实例。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">days</span></dt>    <dd>     <p class="para">      The number of minimal days to set.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setminimaldaysinfirstweek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-intlcalendar.setminimaldaysinfirstweek-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> if <span class="parameter" style="color:#3A95FF">days</span> is out of range   (less than <span class="literal">1</span> or more than <span class="literal">7</span>).  </p> </div> <div class="refsect1 changelog" id="refsect1-intlcalendar.setminimaldaysinfirstweek-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        A <span class="classname"><a href="https://php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> is now thrown on invalid input.  Previously, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> was returned.       </td>      </tr>     </tbody>       </table>   </div></div>
 * 
     * @link https://www.php.net/manual/en/intlcalendar.setminimaldaysinfirstweek.php
     * @param int $days
     * @return bool
     */
    #[LanguageAware(['8.4' => 'true'], default: 'bool')]
    #[TentativeType]
    public function setMinimalDaysInFirstWeek(#[LanguageAware(['8.0' => 'int'], default: '')] $days) {}

    /**
 * <div id="intlcalendar.setdate" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setDate</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">IntlCalendar::setDate</span> — <span class="dc-title">Set a date fields</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setdate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setDate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Sets a date fields to the given value.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setdate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MONTH}</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setdate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setdate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2589">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::setDate()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$intlCal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$intlCal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2012</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">29</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * @since 8.3
     */
    public function setDate(int $year, int $month, int $dayOfMonth): void {}

    /**
 * <div id="intlcalendar.setdatetime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCalendar::setDateTime</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">IntlCalendar::setDateTime</span> — <span class="dc-title">Set a date and time fields</span></p> </div> <div class="refsect1 description" id="refsect1-intlcalendar.setdatetime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCalendar::setDateTime</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfMonth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Sets a date and time fields to the given value.  </p> </div> <div class="refsect1 parameters" id="refsect1-intlcalendar.setdatetime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_YEAR}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MONTH}</span></strong>.      The month sequence is zero-based, i.e., January is represented by 0,      February by 1, …, December is 11 and Undecember (if the calendar has      it) is 12.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfMonth</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_DAY_OF_MONTH}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_HOUR_OF_DAY}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_MINUTE}</span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      The new value for <strong><span>{@link IntlCalendar::FIELD_SECOND}</span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlcalendar.setdatetime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-intlcalendar.setdatetime-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2590">   <p><strong>示例 #1 <span class="function"><strong>IntlCalendar::setDateTime()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$intlCal </span><span style="color: #007700">= </span><span style="color: #9876AA">IntlCalendar</span><span style="color: #007700">::</span><span style="color: #9876AA">createInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$intlCal</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDateTime</span><span style="color: #007700">(</span><span style="color: #9876AA">2012</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">29</span><span style="color: #007700">, </span><span style="color: #9876AA">23</span><span style="color: #007700">, </span><span style="color: #9876AA">58</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * @since 8.3
     */
    public function setDateTime(int $year, int $month, int $dayOfMonth, int $hour, int $minute, ?int $second = null): void {}
}

/**
 * <div id="class.intliterator" class="reference"> <h1 class="title">The IntlIterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intliterator.intro">   <h2 class="title">简介</h2>   <p class="para">    This class represents iterator objects throughout the intl extension    whenever the iterator cannot be identified with any other object provided    by the extension. The distinct iterator object used internally by the    <a href="https://php.net/manual/zh/control-structures.foreach.php" class="link"><span class="literal">foreach</span>    construct</a> can only be obtained (in the relevant part here) from    objects, so objects of this class serve the purpose of providing the hook    through which this internal object can be obtained. As a convenience, this    class also implements the <span class="classname"><a href="https://php.net/manual/zh/class.iterator.php" class="classname">Iterator</a></span> interface,    allowing the collection of values to be navigated using the methods    defined in that interface. Both these methods and the internal iterator    objects provided to <span class="literal">foreach</span> are backed by the same    state (e.g. the position of the iterator and its current value).   </p>   <p class="para">    Subclasses may provide richer functionality.   </p>  </div>  <div class="section" id="intliterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlIterator</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intliterator.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intliterator.key.php" class="methodname" style="color:#CC7832">key</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intliterator.next.php" class="methodname" style="color:#CC7832">next</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intliterator.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intliterator.valid.php" class="methodname" style="color:#CC7832">valid</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlIterator::current} — Get the current element</li><li>{@link IntlIterator::key} — Get the current key</li><li>{@link IntlIterator::next} — Move forward to the next element</li><li>{@link IntlIterator::rewind} — Rewind the iterator to the first element</li><li>{@link IntlIterator::valid} — Check if current position is valid</li></ul></div>
 * 
 * @since 5.5
 */
class IntlIterator implements Iterator
{
/**
 * <div id="intliterator.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlIterator::current</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlIterator::current</span> — <span class="dc-title">Get the current element</span></p> </div> <div class="refsect1 description" id="refsect1-intliterator.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlIterator::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intliterator.current-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intliterator.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 */
    public function current(): mixed {}

/**
 * <div id="intliterator.key" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlIterator::key</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlIterator::key</span> — <span class="dc-title">Get the current key</span></p> </div> <div class="refsect1 description" id="refsect1-intliterator.key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlIterator::key</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intliterator.key-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intliterator.key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 */
    public function key(): mixed {}

/**
 * <div id="intliterator.next" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlIterator::next</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlIterator::next</span> — <span class="dc-title">Move forward to the next element</span></p> </div> <div class="refsect1 description" id="refsect1-intliterator.next-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlIterator::next</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intliterator.next-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intliterator.next-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 */
    public function next(): void {}

/**
 * <div id="intliterator.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlIterator::rewind</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlIterator::rewind</span> — <span class="dc-title">Rewind the iterator to the first element</span></p> </div> <div class="refsect1 description" id="refsect1-intliterator.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlIterator::rewind</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intliterator.rewind-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intliterator.rewind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 */
    public function rewind(): void {}

/**
 * <div id="intliterator.valid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlIterator::valid</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlIterator::valid</span> — <span class="dc-title">Check if current position is valid</span></p> </div> <div class="refsect1 description" id="refsect1-intliterator.valid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlIterator::valid</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intliterator.valid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intliterator.valid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 */
    public function valid(): bool {}
}

/**
 * <div id="class.intlexception" class="reference"> <h1 class="title">Exception class for intl errors</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt; 5.5.0, PHP 7, PHP 8, PECL intl &gt; 3.0.0a1)</p>  <div class="section" id="intlexception.intro">   <h2 class="title">简介</h2>   <p class="para">    This class is used for generating exceptions when errors occur inside intl    functions. Such exceptions are only generated when <a href="https://php.net/manual/zh/intl.configuration.php#ini.intl.use-exceptions" class="link">intl.use_exceptions</a> is enabled.   </p>  </div>  <div class="section" id="intlexception.synopsis">   <h2 class="title">类摘要</h2><p class="para"></p>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">IntlException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> </div>
 * 
 * @since 5.5
 */
class IntlException extends Exception {}

/**
 * <div id="class.intltimezone" class="reference"> <h1 class="title">The IntlTimeZone class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p>  <div class="section" id="intltimezone.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="intltimezone.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlTimeZone</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-short"><var class="varname">DISPLAY_SHORT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-long"><var class="varname">DISPLAY_LONG</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-short-generic"><var class="varname">DISPLAY_SHORT_GENERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-long-generic"><var class="varname">DISPLAY_LONG_GENERIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-short-gmt"><var class="varname">DISPLAY_SHORT_GMT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-long-gmt"><var class="varname">DISPLAY_LONG_GMT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-short-commonly-used"><var class="varname">DISPLAY_SHORT_COMMONLY_USED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.display-generic-location"><var class="varname">DISPLAY_GENERIC_LOCATION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.type-any"><var class="varname">TYPE_ANY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.type-canonical"><var class="varname">TYPE_CANONICAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intltimezone.php#intltimezone.constants.type-canonical-location"><var class="varname">TYPE_CANONICAL_LOCATION</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.countequivalentids.php" class="methodname" style="color:#CC7832">countEquivalentIDs</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.createdefault.php" class="methodname" style="color:#CC7832">createDefault</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.createenumeration.php" class="methodname" style="color:#CC7832">createEnumeration</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryOrRawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.createtimezone.php" class="methodname" style="color:#CC7832">createTimeZone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.createtimezoneidenumeration.php" class="methodname" style="color:#CC7832">createTimeZoneIDEnumeration</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$rawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.fromdatetimezone.php" class="methodname" style="color:#CC7832">fromDateTimeZone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getcanonicalid.php" class="methodname" style="color:#CC7832">getCanonicalID</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$isSystemId</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getdisplayname.php" class="methodname" style="color:#CC7832">getDisplayName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$dst</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span><span class="initializer"> = IntlTimeZone::DISPLAY_LONG</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getdstsavings.php" class="methodname" style="color:#CC7832">getDSTSavings</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getequivalentid.php" class="methodname" style="color:#CC7832">getEquivalentID</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getgmt.php" class="methodname" style="color:#CC7832">getGMT</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getid.php" class="methodname" style="color:#CC7832">getID</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getidforwindowsid.php" class="methodname" style="color:#CC7832">getIDForWindowsID</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getoffset.php" class="methodname" style="color:#CC7832">getOffset</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$local</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$rawOffset</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$dstOffset</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getrawoffset.php" class="methodname" style="color:#CC7832">getRawOffset</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getregion.php" class="methodname" style="color:#CC7832">getRegion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.gettzdataversion.php" class="methodname" style="color:#CC7832">getTZDataVersion</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getunknown.php" class="methodname" style="color:#CC7832">getUnknown</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.getwindowsid.php" class="methodname" style="color:#CC7832">getWindowsID</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.hassamerules.php" class="methodname" style="color:#CC7832">hasSameRules</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.todatetimezone.php" class="methodname" style="color:#CC7832">toDateTimeZone</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intltimezone.usedaylighttime.php" class="methodname" style="color:#CC7832">useDaylightTime</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>  <div class="section" id="intltimezone.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="intltimezone.constants.display-short">      <strong><span>{@link IntlTimeZone::DISPLAY_SHORT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-long">      <strong><span>{@link IntlTimeZone::DISPLAY_LONG}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-short-generic">      <strong><span>{@link IntlTimeZone::DISPLAY_SHORT_GENERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-long-generic">      <strong><span>{@link IntlTimeZone::DISPLAY_LONG_GENERIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-short-gmt">      <strong><span>{@link IntlTimeZone::DISPLAY_SHORT_GMT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-long-gmt">      <strong><span>{@link IntlTimeZone::DISPLAY_LONG_GMT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-short-commonly-used">      <strong><span>{@link IntlTimeZone::DISPLAY_SHORT_COMMONLY_USED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.display-generic-location">      <strong><span>{@link IntlTimeZone::DISPLAY_GENERIC_LOCATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.type-any">      <strong><span>{@link IntlTimeZone::TYPE_ANY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.type-canonical">      <strong><span>{@link IntlTimeZone::TYPE_CANONICAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intltimezone.constants.type-canonical-location">      <strong><span>{@link IntlTimeZone::TYPE_CANONICAL_LOCATION}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlTimeZone::__construct} — Private constructor to disallow direct instantiation</li><li>{@link IntlTimeZone::countEquivalentIDs} — Get the number of IDs in the equivalency group that includes the given ID</li><li>{@link IntlTimeZone::createDefault} — Create a new copy of the default timezone for this host</li><li>{@link IntlTimeZone::createEnumeration} — Get an enumeration over time zone IDs associated with the  given country or offset</li><li>{@link IntlTimeZone::createTimeZone} — Create a timezone object for the given ID</li><li>{@link IntlTimeZone::createTimeZoneIDEnumeration} — Get an enumeration over system time zone IDs with the given filter conditions</li><li>{@link IntlTimeZone::fromDateTimeZone} — Create a timezone object from DateTimeZone</li><li>{@link IntlTimeZone::getCanonicalID} — Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID</li><li>{@link IntlTimeZone::getDisplayName} — Get a name of this time zone suitable for presentation to the user</li><li>{@link IntlTimeZone::getDSTSavings} — Get the amount of time to be added to local standard time to get local wall clock time</li><li>{@link IntlTimeZone::getEquivalentID} — Get an ID in the equivalency group that includes the given ID</li><li>{@link IntlTimeZone::getErrorCode} — Get last error code on the object</li><li>{@link IntlTimeZone::getErrorMessage} — Get last error message on the object</li><li>{@link IntlTimeZone::getGMT} — Create GMT (UTC) timezone</li><li>{@link IntlTimeZone::getID} — Get timezone ID</li><li>{@link IntlTimeZone::getIDForWindowsID} — Translate a Windows timezone into a system timezone</li><li>{@link IntlTimeZone::getOffset} — Get the time zone raw and GMT offset for the given moment in time</li><li>{@link IntlTimeZone::getRawOffset} — Get the raw GMT offset (before taking daylight savings time into account</li><li>{@link IntlTimeZone::getRegion} — Get the region code associated with the given system time zone ID</li><li>{@link IntlTimeZone::getTZDataVersion} — Get the timezone data version currently used by ICU</li><li>{@link IntlTimeZone::getUnknown} — Get the "unknown" time zone</li><li>{@link IntlTimeZone::getWindowsID} — Translate a system timezone into a Windows timezone</li><li>{@link IntlTimeZone::hasSameRules} — Check if this zone has the same rules and offset as another zone</li><li>{@link IntlTimeZone::toDateTimeZone} — Convert to DateTimeZone object</li><li>{@link IntlTimeZone::useDaylightTime} — Check if this time zone uses daylight savings time</li></ul></div>
 * 
 * @since 5.5
 */
class IntlTimeZone
{
    /* Constants */
    public const DISPLAY_SHORT = 1;
    public const DISPLAY_LONG = 2;
    public const DISPLAY_SHORT_GENERIC = 3;
    public const DISPLAY_LONG_GENERIC = 4;
    public const DISPLAY_SHORT_GMT = 5;
    public const DISPLAY_LONG_GMT = 6;
    public const DISPLAY_SHORT_COMMONLY_USED = 7;
    public const DISPLAY_GENERIC_LOCATION = 8;
    public const TYPE_ANY = 0;
    public const TYPE_CANONICAL = 1;
    public const TYPE_CANONICAL_LOCATION = 2;

    /* Methods */


    private function __construct() {}

    /**
 * <div id="intltimezone.countequivalentids" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::countEquivalentIDs</h1>  <h1 class="refname">intltz_count_equivalent_ids</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::countEquivalentIDs</span> -- <span class="refname">intltz_count_equivalent_ids</span> — <span class="dc-title">Get the number of IDs in the equivalency group that includes the given ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.countequivalentids-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::countEquivalentIDs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_count_equivalent_ids</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.countequivalentids-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.countequivalentids-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the number of IDs in the equivalency group that includes the given ID
     * @link https://secure.php.net/manual/en/intltimezone.countequivalentids.php
     * @param string $timezoneId
     * @return int|false number of IDs or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function countEquivalentIDs(#[LanguageAware(['8.0' => 'string'], default: '')] $timezoneId): int|false {}

    /**
 * <div id="intltimezone.createdefault" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::createDefault</h1>  <h1 class="refname">intltz_create_default</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::createDefault</span> -- <span class="refname">intltz_create_default</span> — <span class="dc-title">Create a new copy of the default timezone for this host</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.createdefault-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::createDefault</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_create_default</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.createdefault-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.createdefault-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Create a new copy of the default timezone for this host
     * @link https://secure.php.net/manual/en/intltimezone.createdefault.php
     * @return IntlTimeZone
     */
    #[TentativeType]
    public static function createDefault(): IntlTimeZone {}

    /**
 * <div id="intltimezone.createenumeration" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::createEnumeration</h1>  <h1 class="refname">intltz_create_enumeration</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::createEnumeration</span> -- <span class="refname">intltz_create_enumeration</span> — <span class="dc-title">Get an enumeration over time zone IDs associated with the  given country or offset</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.createenumeration-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::createEnumeration</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryOrRawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_create_enumeration</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryOrRawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.createenumeration-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">countryOrRawOffset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.createenumeration-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get an enumeration over time zone IDs associated with the given country or offset
     * @link https://secure.php.net/manual/en/intltimezone.createenumeration.php
     * @param mixed $countryOrRawOffset [optional]
     * @return IntlIterator|false an iterator or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function createEnumeration($countryOrRawOffset): IntlIterator|false {}

    /**
 * <div id="intltimezone.createtimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::createTimeZone</h1>  <h1 class="refname">intltz_create_time_zone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::createTimeZone</span> -- <span class="refname">intltz_create_time_zone</span> — <span class="dc-title">Create a timezone object for the given ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.createtimezone-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::createTimeZone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_create_time_zone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.createtimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.createtimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Create a timezone object for the given ID
     * @link https://secure.php.net/manual/en/intltimezone.createtimezone.php
     * @param string $timezoneId
     * @return IntlTimeZone|null a timezone object or <b>NULL</b> on failure
     */
    #[TentativeType]
    public static function createTimeZone(#[LanguageAware(['8.0' => 'string'], default: '')] $timezoneId): ?IntlTimeZone {}

    /**
 * <div id="intltimezone.createtimezoneidenumeration" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::createTimeZoneIDEnumeration</h1>  <h1 class="refname">intltz_create_time_zone_id_enumeration</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlTimeZone::createTimeZoneIDEnumeration</span> -- <span class="refname">intltz_create_time_zone_id_enumeration</span> — <span class="dc-title">Get an enumeration over system time zone IDs with the given filter conditions</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.createtimezoneidenumeration-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::createTimeZoneIDEnumeration</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$rawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_create_time_zone_id_enumeration</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$rawOffset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intliterator.php" class="type IntlIterator" style="color:#EAB766">IntlIterator</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.createtimezoneidenumeration-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">region</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rawOffset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.createtimezoneidenumeration-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.intliterator.php" class="classname">IntlIterator</a></span> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get an enumeration over system time zone IDs with the given filter conditions
     * @link https://secure.php.net/manual/en/intltimezone.createtimezoneidenumeration.php
     * @param int $type
     * @param string|null $region [optional]
     * @param int $rawOffset [optional]
     * @return IntlIterator|false an iterator or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function createTimeZoneIDEnumeration(
        #[LanguageAware(['8.0' => 'int'], default: '')] $type,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $region = null,
        #[LanguageAware(['8.0' => 'int|null'], default: '')] $rawOffset = null
    ): IntlIterator|false {}

    /**
 * <div id="intltimezone.fromdatetimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::fromDateTimeZone</h1>  <h1 class="refname">intltz_from_date_time_zone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::fromDateTimeZone</span> -- <span class="refname">intltz_from_date_time_zone</span> — <span class="dc-title">Create a timezone object from <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.fromdatetimezone-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::fromDateTimeZone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_from_date_time_zone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.fromdatetimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.fromdatetimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Create a timezone object from DateTimeZone
     * @link https://secure.php.net/manual/en/intltimezone.fromdatetimezone.php
     * @param DateTimeZone $timezone
     * @return IntlTimeZone|null a timezone object or <b>NULL</b> on failure
     */
    #[TentativeType]
    public static function fromDateTimeZone(#[LanguageAware(['8.0' => 'DateTimeZone'], default: '')] $timezone): ?IntlTimeZone {}

    /**
 * <div id="intltimezone.getcanonicalid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getCanonicalID</h1>  <h1 class="refname">intltz_get_canonical_id</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getCanonicalID</span> -- <span class="refname">intltz_get_canonical_id</span> — <span class="dc-title">Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getcanonicalid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getCanonicalID</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$isSystemId</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_canonical_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$isSystemId</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getcanonicalid-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">isSystemId</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getcanonicalid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID
     * @link https://secure.php.net/manual/en/intltimezone.getcanonicalid.php
     * @param string $timezoneId
     * @param bool &$isSystemId [optional]
     * @return string|false the timezone ID or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function getCanonicalID(#[LanguageAware(['8.0' => 'string'], default: '')] $timezoneId, &$isSystemId): string|false {}

    /**
 * <div id="intltimezone.getdisplayname" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getDisplayName</h1>  <h1 class="refname">intltz_get_display_name</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getDisplayName</span> -- <span class="refname">intltz_get_display_name</span> — <span class="dc-title">Get a name of this time zone suitable for presentation to the user</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getdisplayname-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getDisplayName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$dst</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span><span class="initializer"> = IntlTimeZone::DISPLAY_LONG</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_display_name</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$dst</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$style</span><span class="initializer"> = IntlTimeZone::DISPLAY_LONG</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getdisplayname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">dst</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">style</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getdisplayname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get a name of this time zone suitable for presentation to the user
     * @param bool $dst [optional]
     * @param int $style [optional]
     * @param string $locale [optional]
     * @return string|false the timezone name or <b>FALSE</b> on failure
     */
    #[Pure]
    #[TentativeType]
    public function getDisplayName(
        #[LanguageAware(['8.0' => 'bool'], default: '')] $dst = false,
        #[LanguageAware(['8.0' => 'int'], default: '')] $style = 2,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $locale
    ): string|false {}

    /**
 * <div id="intltimezone.getdstsavings" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getDSTSavings</h1>  <h1 class="refname">intltz_get_dst_savings</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getDSTSavings</span> -- <span class="refname">intltz_get_dst_savings</span> — <span class="dc-title">Get the amount of time to be added to local standard time to get local wall clock time</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getdstsavings-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getDSTSavings</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_dst_savings</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getdstsavings-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getdstsavings-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the amount of time to be added to local standard time to get local wall clock time
     * @link https://secure.php.net/manual/en/intltimezone.getequivalentid.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getDSTSavings(): int {}

    /**
 * <div id="intltimezone.getequivalentid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getEquivalentID</h1>  <h1 class="refname">intltz_get_equivalent_id</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getEquivalentID</span> -- <span class="refname">intltz_get_equivalent_id</span> — <span class="dc-title">Get an ID in the equivalency group that includes the given ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getequivalentid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getEquivalentID</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_equivalent_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getequivalentid-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getequivalentid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get an ID in the equivalency group that includes the given ID
     * @link https://secure.php.net/manual/en/intltimezone.getequivalentid.php
     * @param string $timezoneId
     * @param int $offset
     * @return string|false the time zone ID or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function getEquivalentID(
        #[LanguageAware(['8.0' => 'string'], default: '')] $timezoneId,
        #[LanguageAware(['8.0' => 'int'], default: '')] $offset
    ): string|false {}

    /**
 * <div id="intltimezone.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getErrorCode</h1>  <h1 class="refname">intltz_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getErrorCode</span> -- <span class="refname">intltz_get_error_code</span> — <span class="dc-title">Get last error code on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-intltimezone.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get last error code on the object
     * @link https://secure.php.net/manual/en/intltimezone.geterrorcode.php
     * @return int|false
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int|false {}

    /**
 * <div id="intltimezone.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getErrorMessage</h1>  <h1 class="refname">intltz_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getErrorMessage</span> -- <span class="refname">intltz_get_error_message</span> — <span class="dc-title">Get last error message on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_error_message</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-intltimezone.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get last error message on the object
     * @link https://secure.php.net/manual/en/intltimezone.geterrormessage.php
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string|false {}

    /**
 * <div id="intltimezone.getgmt" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getGMT</h1>  <h1 class="refname">intltz_get_gmt</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getGMT</span> -- <span class="refname">intltz_get_gmt</span> — <span class="dc-title">Create GMT (UTC) timezone</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getgmt-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getGMT</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_gmt</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getgmt-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getgmt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Create GMT (UTC) timezone
     * @link https://secure.php.net/manual/en/intltimezone.getgmt.php
     * @return IntlTimeZone
     */
    #[TentativeType]
    public static function getGMT(): IntlTimeZone {}

    /**
 * <div id="intltimezone.getid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getID</h1>  <h1 class="refname">intltz_get_id</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getID</span> -- <span class="refname">intltz_get_id</span> — <span class="dc-title">Get timezone ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getID</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get timezone ID
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function getID(): string|false {}

    /**
 * <div id="intltimezone.getoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getOffset</h1>  <h1 class="refname">intltz_get_offset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getOffset</span> -- <span class="refname">intltz_get_offset</span> — <span class="dc-title">Get the time zone raw and GMT offset for the given moment in time</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getoffset-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getOffset</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$local</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$rawOffset</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$dstOffset</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_offset</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$local</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$rawOffset</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$dstOffset</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getoffset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">local</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rawOffset</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dstOffset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the time zone raw and GMT offset for the given moment in time
     * @link https://secure.php.net/manual/en/intltimezone.getoffset.php
     * @param float $timestamp
     *   moment in time for which to return offsets, in units of milliseconds from
     *   January 1, 1970 0:00 GMT, either GMT time or local wall time, depending on
     *   `local'.
     * @param bool $local
     *   if true, `date' is local wall time; otherwise it is in GMT time.
     * @param int &$rawOffset
     *   output parameter to receive the raw offset, that is, the offset not
     *   including DST adjustments
     * @param int &$dstOffset
     *   output parameter to receive the DST offset, that is, the offset to be added
     *   to `rawOffset' to obtain the total offset between local and GMT time. If
     *   DST is not in effect, this value is zero; otherwise it is a positive value,
     *   typically one hour.
     * @return bool boolean indication of success
     */
    #[TentativeType]
    public function getOffset(
        #[LanguageAware(['8.0' => 'float'], default: '')] $timestamp,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $local,
        &$rawOffset,
        &$dstOffset
    ): bool {}

    /**
 * <div id="intltimezone.getrawoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getRawOffset</h1>  <h1 class="refname">intltz_get_raw_offset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getRawOffset</span> -- <span class="refname">intltz_get_raw_offset</span> — <span class="dc-title">Get the raw GMT offset (before taking daylight savings time into account</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getrawoffset-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getRawOffset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_raw_offset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getrawoffset-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getrawoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the raw GMT offset (before taking daylight savings time into account
     * @link https://secure.php.net/manual/en/intltimezone.getrawoffset.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getRawOffset(): int {}

    /**
 * <div id="intltimezone.getregion" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getRegion</h1>  <h1 class="refname">intltz_get_region</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getRegion</span> -- <span class="refname">intltz_get_region</span> — <span class="dc-title">Get the region code associated with the given system time zone ID</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getregion-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getRegion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_region</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getregion-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getregion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return region 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the region code associated with the given system time zone ID
     * @link https://secure.php.net/manual/en/intltimezone.getregion.php
     * @param string $timezoneId
     * @return string|false region or <b>FALSE</b> on failure
     */
    #[TentativeType]
    public static function getRegion(#[LanguageAware(['8.0' => 'string'], default: '')] $timezoneId): string|false {}

    /**
 * <div id="intltimezone.gettzdataversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getTZDataVersion</h1>  <h1 class="refname">intltz_get_tz_data_version</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getTZDataVersion</span> -- <span class="refname">intltz_get_tz_data_version</span> — <span class="dc-title">Get the timezone data version currently used by ICU</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.gettzdataversion-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getTZDataVersion</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_tz_data_version</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.gettzdataversion-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.gettzdataversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Get the timezone data version currently used by ICU
     * @link https://secure.php.net/manual/en/intltimezone.gettzdataversion.php
     * @return string|false
     */
    #[TentativeType]
    public static function getTZDataVersion(): string|false {}

    /**
 * <div id="intltimezone.getunknown" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getUnknown</h1>  <h1 class="refname">intltz_get_unknown</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getUnknown</span> -- <span class="refname">intltz_get_unknown</span> — <span class="dc-title">Get the "unknown" time zone</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getunknown-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getUnknown</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_unknown</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getunknown-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getunknown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.intltimezone.php" class="classname">IntlTimeZone</a></span> or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> on failure.  </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the "unknown" time zone
     * @link https://secure.php.net/manual/en/intltimezone.getunknown.php
     * @return IntlTimeZone
     */
    #[TentativeType]
    public static function getUnknown(): IntlTimeZone {}

    /**
 * <div id="intltimezone.getwindowsid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getWindowsID</h1>  <h1 class="refname">intltz_get_windows_id</h1>  <p class="verinfo">(PHP 7 &gt;= 7.1.0, PHP 8)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getWindowsID</span> -- <span class="refname">intltz_get_windows_id</span> — <span class="dc-title">Translate a system timezone into a Windows timezone</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getwindowsid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getWindowsID</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_windows_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Translates a system timezone (e.g. "America/Los_Angeles") into a Windows timezone (e.g. "Pacific Standard Time").  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    This function requires ICU version ≥ 52.   </span>  </p></blockquote>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getwindowsid-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getwindowsid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the Windows timezone 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 seealso" id="refsect1-intltimezone.getwindowsid-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlTimeZone::getIDForWindowsID()} - Translate a Windows timezone into a system timezone</span></li>   </ul>   </div></div>
 * 
     * (PHP 7 &gt;=7.1.0)<br/>
     * Translates a system timezone (e.g. "America/Los_Angeles") into a Windows
     * timezone (e.g. "Pacific Standard Time").
     * @link https://secure.php.net/manual/en/intltimezone.getwindowsid.php
     * @param string $timezoneId
     * @return string|false the Windows timezone or <b>FALSE</b> on failure
     * @since 7.1
     */
    #[TentativeType]
    public static function getWindowsID(string $timezoneId): string|false {}

    /**
 * <div id="intltimezone.getidforwindowsid" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::getIDForWindowsID</h1>  <h1 class="refname">intltz_get_id_for_windows_id</h1>  <p class="verinfo">(PHP 7 &gt;= 7.1.0, PHP 8)</p><p class="refpurpose"><span class="refname">IntlTimeZone::getIDForWindowsID</span> -- <span class="refname">intltz_get_id_for_windows_id</span> — <span class="dc-title">Translate a Windows timezone into a system timezone</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.getidforwindowsid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::getIDForWindowsID</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_get_id_for_windows_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$region</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Translates a Windows timezone (e.g. "Pacific Standard Time") into a system timezone (e.g. "America/Los_Angeles").  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    This function requires ICU version ≥ 52.   </span>  </p></blockquote>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.getidforwindowsid-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezoneId</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">region</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.getidforwindowsid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the system timezone 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-intltimezone.getidforwindowsid-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">region</span> is now nullable.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-intltimezone.getidforwindowsid-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link IntlTimeZone::getWindowsID()} - Translate a system timezone into a Windows timezone</span></li>   </ul>   </div></div>
 * 
     * @link https://www.php.net/manual/en/intltimezone.getidforwindowsid.php
     * @param string $timezoneId
     * @param string|null $region
     * @return string|false the Windows timezone or <b>FALSE</b> on failure
     * @since 7.1
     */
    #[TentativeType]
    public static function getIDForWindowsID(string $timezoneId, ?string $region = null): string|false {}

    /**
 * <div id="intltimezone.hassamerules" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::hasSameRules</h1>  <h1 class="refname">intltz_has_same_rules</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::hasSameRules</span> -- <span class="refname">intltz_has_same_rules</span> — <span class="dc-title">Check if this zone has the same rules and offset as another zone</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.hassamerules-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::hasSameRules</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_has_same_rules</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$other</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.hassamerules-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">other</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.hassamerules-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Check if this zone has the same rules and offset as another zone
     * @link https://secure.php.net/manual/en/intltimezone.hassamerules.php
     * @param IntlTimeZone $other
     * @return bool
     */
    #[Pure]
    #[TentativeType]
    public function hasSameRules(IntlTimeZone $other): bool {}

    /**
 * <div id="intltimezone.todatetimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::toDateTimeZone</h1>  <h1 class="refname">intltz_to_date_time_zone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::toDateTimeZone</span> -- <span class="refname">intltz_to_date_time_zone</span> — <span class="dc-title">Convert to <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> object</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.todatetimezone-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::toDateTimeZone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_to_date_time_zone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.todatetimezone-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.todatetimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Convert to DateTimeZone object
     * @link https://secure.php.net/manual/en/intltimezone.todatetimezone.php
     * @return DateTimeZone|false the DateTimeZone object or <b>FALSE</b> on failure
     */
    #[Pure]
    #[TentativeType]
    public function toDateTimeZone(): DateTimeZone|false {}

    /**
 * <div id="intltimezone.usedaylighttime" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlTimeZone::useDaylightTime</h1>  <h1 class="refname">intltz_use_daylight_time</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">IntlTimeZone::useDaylightTime</span> -- <span class="refname">intltz_use_daylight_time</span> — <span class="dc-title">Check if this time zone uses daylight savings time</span></p> </div> <div class="refsect1 description" id="refsect1-intltimezone.usedaylighttime-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlTimeZone::useDaylightTime</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>intltz_use_daylight_time</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intltimezone.php" class="type IntlTimeZone" style="color:#EAB766">IntlTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intltimezone.usedaylighttime-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intltimezone.usedaylighttime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
     * Check if this time zone uses daylight savings time
     * @link https://secure.php.net/manual/en/intltimezone.usedaylighttime.php
     * @return bool
     */
    #[TentativeType]
    public function useDaylightTime(): bool {}

    /**
     * @since 8.4
     */
    public static function getIanaID(string $timezoneId): string|false {}
}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Create a collator
 * @link https://php.net/manual/en/collator.create.php
 * @param string $locale <p>
 * The locale containing the required collation rules. Special values for
 * locales can be passed in - if null is passed for the locale, the
 * default locale collation rules will be used. If empty string ("") or
 * "root" are passed, UCA rules will be used.
 * </p>
 * @return Collator|null Return new instance of <b>Collator</b> object, or <b>NULL</b>
 * on error.
 */
#[Pure]
function collator_create(string $locale): ?Collator {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Compare two Unicode strings
 * @link https://php.net/manual/en/collator.compare.php
 * @param Collator $object
 * @param string $string1 <p>
 * The first string to compare.
 * </p>
 * @param string $string2 <p>
 * The second string to compare.
 * </p>
 * @return int|false Return comparison result:</p>
 * <p>
 * <p>
 * 1 if <i>string1</i> is greater than
 * <i>string2</i> ;
 * </p>
 * <p>
 * 0 if <i>string1</i> is equal to
 * <i>string2</i>;
 * </p>
 * <p>
 * -1 if <i>string1</i> is less than
 * <i>string2</i> .
 * </p>
 * On error
 * boolean
 * <b>FALSE</b>
 * is returned.
 */
#[Pure]
function collator_compare(Collator $object, string $string1, string $string2): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get collation attribute value
 * @link https://php.net/manual/en/collator.getattribute.php
 * @param Collator $object
 * @param int $attribute <p>
 * Attribute to get value for.
 * </p>
 * @return int|false Attribute value, or boolean <b>FALSE</b> on error.
 */
#[Pure]
function collator_get_attribute(Collator $object, int $attribute): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set collation attribute
 * @link https://php.net/manual/en/collator.setattribute.php
 * @param Collator $object
 * @param int $attribute <p>Attribute.</p>
 * @param int $value <p>
 * Attribute value.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function collator_set_attribute(Collator $object, int $attribute, int $value): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get current collation strength
 * @link https://php.net/manual/en/collator.getstrength.php
 * @param Collator $object
 * @return int current collation strength
 */
#[Pure]
function collator_get_strength(Collator $object): int {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set collation strength
 * @link https://php.net/manual/en/collator.setstrength.php
 * @param Collator $object
 * @param int $strength <p>Strength to set.</p>
 * <p>
 * Possible values are:
 * <b>Collator::PRIMARY</b>
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
#[LanguageAware(['8.4' => 'true'], default: 'bool')]
function collator_set_strength(Collator $object, int $strength) {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Sort array using specified collator
 * @link https://php.net/manual/en/collator.sort.php
 * @param Collator $object
 * @param string[] &$array <p>
 * Array of strings to sort.
 * </p>
 * @param int $flags <p>
 * Optional sorting type, one of the following:
 * </p>
 * <p>
 * <b>Collator::SORT_REGULAR</b>
 * - compare items normally (don't change types)
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function collator_sort(Collator $object, array &$array, int $flags = 0): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Sort array using specified collator and sort keys
 * @link https://php.net/manual/en/collator.sortwithsortkeys.php
 * @param Collator $object
 * @param string[] &$array <p>Array of strings to sort</p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function collator_sort_with_sort_keys(
    Collator $object,
    array &$array,
    #[ElementAvailable(from: '5.3', to: '5.6')] $sort_flags = []
): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Sort array maintaining index association
 * @link https://php.net/manual/en/collator.asort.php
 * @param Collator $object
 * @param string[] &$array <p>Array of strings to sort.</p>
 * @param int $flags <p>
 * Optional sorting type, one of the following:
 * <b>Collator::SORT_REGULAR</b>
 * - compare items normally (don't change types)
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function collator_asort(Collator $object, array &$array, int $flags = 0): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the locale name of the collator
 * @link https://php.net/manual/en/collator.getlocale.php
 * @param Collator $object
 * @param int $type <p>
 * You can choose between valid and actual locale (
 * <b>Locale::VALID_LOCALE</b> and
 * <b>Locale::ACTUAL_LOCALE</b>,
 * respectively). The default is the actual locale.
 * </p>
 * @return string|false Real locale name from which the collation data comes. If the collator was
 * instantiated from rules or an error occurred, returns
 * boolean <b>FALSE</b>.
 */
#[Pure]
function collator_get_locale(Collator $object, int $type): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get collator's last error code
 * @link https://php.net/manual/en/collator.geterrorcode.php
 * @param Collator $object
 * @return int|false Error code returned by the last Collator API function call.
 */
#[Pure(true)]
function collator_get_error_code(Collator $object): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get text for collator's last error code
 * @link https://php.net/manual/en/collator.geterrormessage.php
 * @param Collator $object
 * @return string|false Description of an error occurred in the last Collator API function call.
 */
#[Pure]
function collator_get_error_message(Collator $object): string|false {}

/**
 * (PHP 5 &gt;= 5.3.2, PHP 7, PECL intl &gt;= 1.0.3)<br/>
 * Get sorting key for a string
 * @link https://php.net/manual/en/collator.getsortkey.php
 * @param Collator $object
 * @param string $string <p>
 * The string to produce the key from.
 * </p>
 * @return string|false the collation key for the string. Collation keys can be compared directly instead of strings.
 */
#[Pure]
function collator_get_sort_key(
    Collator $object,
    string $string,
    #[ElementAvailable(from: '5.3', to: '5.6')] $arg3
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Create a number formatter
 * @link https://php.net/manual/en/numberformatter.create.php
 * @param string $locale <p>
 * Locale in which the number would be formatted (locale name, e.g. en_CA).
 * </p>
 * @param int $style <p>
 * Style of the formatting, one of the
 * format style constants. If
 * <b>NumberFormatter::PATTERN_DECIMAL</b>
 * or <b>NumberFormatter::PATTERN_RULEBASED</b>
 * is passed then the number format is opened using the given pattern,
 * which must conform to the syntax described in
 * ICU DecimalFormat
 * documentation or
 * ICU RuleBasedNumberFormat
 * documentation, respectively.
 * </p>
 * @param string|null $pattern [optional] <p>
 * Pattern string if the chosen style requires a pattern.
 * </p>
 * @return NumberFormatter|null <b>NumberFormatter</b> object or <b>NULL</b> on error.
 */
#[Pure]
function numfmt_create(string $locale, int $style, #[LanguageAware(['8.0' => 'string|null'], default: 'string')] $pattern = null): ?NumberFormatter {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Format a number
 * @link https://php.net/manual/en/numberformatter.format.php
 * @param NumberFormatter $formatter
 * @param int|float $num <p>
 * The value to format. Can be integer or float,
 * other values will be converted to a numeric value.
 * </p>
 * @param int $type <p>
 * The
 * formatting type to use.
 * </p>
 * @return string|false the string containing formatted value, or <b>FALSE</b> on error.
 */
#[Pure]
function numfmt_format(NumberFormatter $formatter, int|float $num, int $type = 0): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Parse a number
 * @link https://php.net/manual/en/numberformatter.parse.php
 * @param NumberFormatter $formatter
 * @param string $string
 * @param int $type [optional] <p>
 * The
 * formatting type to use. By default,
 * <b>NumberFormatter::TYPE_DOUBLE</b> is used.
 * </p>
 * @param int &$offset [optional] <p>
 * Offset in the string at which to begin parsing. On return, this value
 * will hold the offset at which parsing ended.
 * </p>
 * @return int|float|false The value of the parsed number or <b>FALSE</b> on error.
 */
#[Pure]
function numfmt_parse(NumberFormatter $formatter, string $string, int $type = NumberFormatter::TYPE_DOUBLE, &$offset = null): int|float|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Format a currency value
 * @link https://php.net/manual/en/numberformatter.formatcurrency.php
 * @param NumberFormatter $formatter
 * @param float $amount <p>
 * The numeric currency value.
 * </p>
 * @param string $currency <p>
 * The 3-letter ISO 4217 currency code indicating the currency to use.
 * </p>
 * @return string|false String representing the formatted currency value.
 */
#[Pure]
function numfmt_format_currency(NumberFormatter $formatter, float $amount, string $currency): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Parse a currency number
 * @link https://php.net/manual/en/numberformatter.parsecurrency.php
 * @param NumberFormatter $formatter
 * @param string $string
 * @param string &$currency <p>
 * Parameter to receive the currency name (3-letter ISO 4217 currency
 * code).
 * </p>
 * @param int &$offset [optional] <p>
 * Offset in the string at which to begin parsing. On return, this value
 * will hold the offset at which parsing ended.
 * </p>
 * @return float|false The parsed numeric value or <b>FALSE</b> on error.
 */
function numfmt_parse_currency(NumberFormatter $formatter, string $string, &$currency, &$offset = null): float|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set an attribute
 * @link https://php.net/manual/en/numberformatter.setattribute.php
 * @param NumberFormatter $formatter
 * @param int $attribute <p>
 * Attribute specifier - one of the
 * numeric attribute constants.
 * </p>
 * @param int|float $value <p>
 * The attribute value.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function numfmt_set_attribute(NumberFormatter $formatter, int $attribute, int|float $value): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get an attribute
 * @link https://php.net/manual/en/numberformatter.getattribute.php
 * @param NumberFormatter $formatter
 * @param int $attribute <p>
 * Attribute specifier - one of the
 * numeric attribute constants.
 * </p>
 * @return int|float|false Return attribute value on success, or <b>FALSE</b> on error.
 */
#[Pure]
function numfmt_get_attribute(NumberFormatter $formatter, int $attribute): int|float|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set a text attribute
 * @link https://php.net/manual/en/numberformatter.settextattribute.php
 * @param NumberFormatter $formatter
 * @param int $attribute <p>
 * Attribute specifier - one of the
 * text attribute
 * constants.
 * </p>
 * @param string $value <p>
 * Text for the attribute value.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function numfmt_set_text_attribute(NumberFormatter $formatter, int $attribute, string $value): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get a text attribute
 * @link https://php.net/manual/en/numberformatter.gettextattribute.php
 * @param NumberFormatter $formatter
 * @param int $attribute <p>
 * Attribute specifier - one of the
 * text attribute constants.
 * </p>
 * @return string|false Return attribute value on success, or <b>FALSE</b> on error.
 */
#[Pure]
function numfmt_get_text_attribute(NumberFormatter $formatter, int $attribute): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set a symbol value
 * @link https://php.net/manual/en/numberformatter.setsymbol.php
 * @param NumberFormatter $formatter
 * @param int $symbol <p>
 * Symbol specifier, one of the
 * format symbol constants.
 * </p>
 * @param string $value <p>
 * Text for the symbol.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function numfmt_set_symbol(NumberFormatter $formatter, int $symbol, string $value): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get a symbol value
 * @link https://php.net/manual/en/numberformatter.getsymbol.php
 * @param NumberFormatter $formatter
 * @param int $symbol <p>
 * Symbol specifier, one of the
 * format symbol constants.
 * </p>
 * @return string|false The symbol string or <b>FALSE</b> on error.
 */
#[Pure]
function numfmt_get_symbol(NumberFormatter $formatter, int $symbol): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set formatter pattern
 * @link https://php.net/manual/en/numberformatter.setpattern.php
 * @param NumberFormatter $formatter
 * @param string $pattern <p>
 * Pattern in syntax described in
 * ICU DecimalFormat
 * documentation.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function numfmt_set_pattern(NumberFormatter $formatter, string $pattern): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get formatter pattern
 * @link https://php.net/manual/en/numberformatter.getpattern.php
 * @param NumberFormatter $formatter
 * @return string|false Pattern string that is used by the formatter, or <b>FALSE</b> if an error happens.
 */
#[Pure]
function numfmt_get_pattern(NumberFormatter $formatter): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get formatter locale
 * @link https://php.net/manual/en/numberformatter.getlocale.php
 * @param NumberFormatter $formatter
 * @param int $type <p>
 * You can choose between valid and actual locale (
 * <b>Locale::VALID_LOCALE</b>,
 * <b>Locale::ACTUAL_LOCALE</b>,
 * respectively). The default is the actual locale.
 * </p>
 * @return string|false The locale name used to create the formatter.
 */
#[Pure]
function numfmt_get_locale(NumberFormatter $formatter, int $type = 0): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get formatter's last error code.
 * @link https://php.net/manual/en/numberformatter.geterrorcode.php
 * @param NumberFormatter $formatter
 * @return int error code from last formatter call.
 */
#[Pure(true)]
function numfmt_get_error_code(NumberFormatter $formatter): int {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get formatter's last error message.
 * @link https://php.net/manual/en/numberformatter.geterrormessage.php
 * @param NumberFormatter $formatter
 * @return string error message from last formatter call.
 */
#[Pure(true)]
function numfmt_get_error_message(NumberFormatter $formatter): string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Normalizes the input provided and returns the normalized string
 * @link https://php.net/manual/en/normalizer.normalize.php
 * @param string $string <p>The input string to normalize</p>
 * @param int $form [optional] <p>One of the normalization forms.</p>
 * @return string|false The normalized string or <b>FALSE</b> if an error occurred.
 */
#[Pure]
function normalizer_normalize(string $string, int $form = Normalizer::FORM_C): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Checks if the provided string is already in the specified normalization
 * form.
 * @link https://php.net/manual/en/normalizer.isnormalized.php
 * @param string $string <p>The input string to normalize</p>
 * @param int $form [optional] <p>
 * One of the normalization forms.
 * </p>
 * @return bool <b>TRUE</b> if normalized, <b>FALSE</b> otherwise or if there an error
 */
#[Pure]
function normalizer_is_normalized(string $string, int $form = Normalizer::FORM_C): bool {}

/**
 * Gets the default locale value from the intl global 'default_locale'
 * @link https://php.net/manual/en/function.locale-get-default.php
 * @return string a string with the current Locale.
 */
#[Pure]
function locale_get_default(): string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set the default runtime Locale
 * @link https://php.net/manual/en/function.locale-set-default.php
 * @param string $locale <p>
 * The new Locale name. A comprehensive list of the supported locales is
 * available at .
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
#[LanguageAware(['8.4' => 'true'], default: 'bool')]
function locale_set_default(string $locale) {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Gets the primary language for the input locale
 * @link https://php.net/manual/en/locale.getprimarylanguage.php
 * @param string $locale <p>
 * The locale to extract the primary language code from
 * </p>
 * @return string|null The language code associated with the language or <b>NULL</b> in case of error.
 */
#[Pure]
function locale_get_primary_language(string $locale): ?string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Gets the script for the input locale
 * @link https://php.net/manual/en/locale.getscript.php
 * @param string $locale <p>
 * The locale to extract the script code from
 * </p>
 * @return string|null The script subtag for the locale or <b>NULL</b> if not present
 */
#[Pure]
function locale_get_script(string $locale): ?string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Gets the region for the input locale
 * @link https://php.net/manual/en/locale.getregion.php
 * @param string $locale <p>
 * The locale to extract the region code from
 * </p>
 * @return string|null The region subtag for the locale or <b>NULL</b> if not present
 */
#[Pure]
function locale_get_region(string $locale): ?string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Gets the keywords for the input locale
 * @link https://php.net/manual/en/locale.getkeywords.php
 * @param string $locale <p>
 * The locale to extract the keywords from
 * </p>
 * @return array|false|null Associative array containing the keyword-value pairs for this locale
 */
#[Pure]
function locale_get_keywords(string $locale): array|false|null {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns an appropriately localized display name for script of the input locale
 * @link https://php.net/manual/en/locale.getdisplayscript.php
 * @param string $locale <p>
 * The locale to return a display script for
 * </p>
 * @param string|null $displayLocale <p>
 * Optional format locale to use to display the script name
 * </p>
 * @return string|false Display name of the script for the $locale in the format appropriate for
 * $in_locale.
 */
#[Pure]
function locale_get_display_script(
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $displayLocale,
    #[ElementAvailable(from: '7.0')] ?string $displayLocale = null
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns an appropriately localized display name for region of the input locale
 * @link https://php.net/manual/en/locale.getdisplayregion.php
 * @param string $locale <p>
 * The locale to return a display region for.
 * </p>
 * @param string|null $displayLocale <p>
 * Optional format locale to use to display the region name
 * </p>
 * @return string|false display name of the region for the $locale in the format appropriate for
 * $in_locale.
 */
#[Pure]
function locale_get_display_region(
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $displayLocale,
    #[ElementAvailable(from: '7.0')] ?string $displayLocale = null
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns an appropriately localized display name for the input locale
 * @link https://php.net/manual/en/locale.getdisplayname.php
 * @param string $locale <p>
 * The locale to return a display name for.
 * </p>
 * @param string|null $displayLocale <p>optional format locale</p>
 * @return string|false Display name of the locale in the format appropriate for $in_locale.
 */
#[Pure]
function locale_get_display_name(
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $displayLocale,
    #[ElementAvailable(from: '7.0')] ?string $displayLocale = null
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns an appropriately localized display name for language of the inputlocale
 * @link https://php.net/manual/en/locale.getdisplaylanguage.php
 * @param string $locale <p>
 * The locale to return a display language for
 * </p>
 * @param string|null $displayLocale <p>
 * Optional format locale to use to display the language name
 * </p>
 * @return string|false display name of the language for the $locale in the format appropriate for
 * $in_locale.
 */
#[Pure]
function locale_get_display_language(
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $displayLocale,
    #[ElementAvailable(from: '7.0')] ?string $displayLocale = null
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns an appropriately localized display name for variants of the input locale
 * @link https://php.net/manual/en/locale.getdisplayvariant.php
 * @param string $locale <p>
 * The locale to return a display variant for
 * </p>
 * @param string|null $displayLocale <p>
 * Optional format locale to use to display the variant name
 * </p>
 * @return string|false Display name of the variant for the $locale in the format appropriate for
 * $in_locale.
 */
#[Pure]
function locale_get_display_variant(
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $displayLocale,
    #[ElementAvailable(from: '7.0')] ?string $displayLocale = null
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns a correctly ordered and delimited locale ID
 * @link https://php.net/manual/en/locale.composelocale.php
 * @param string[] $subtags <p>
 * an array containing a list of key-value pairs, where the keys identify
 * the particular locale ID subtags, and the values are the associated
 * subtag values.
 * <p>
 * The 'variant' and 'private' subtags can take maximum 15 values
 * whereas 'extlang' can take maximum 3 values.e.g. Variants are allowed
 * with the suffix ranging from 0-14. Hence the keys for the input array
 * can be variant0, variant1, ...,variant14. In the returned locale id,
 * the subtag is ordered by suffix resulting in variant0 followed by
 * variant1 followed by variant2 and so on.
 * </p>
 * <p>
 * The 'variant', 'private' and 'extlang' multiple values can be specified both
 * as array under specific key (e.g. 'variant') and as multiple numbered keys
 * (e.g. 'variant0', 'variant1', etc.).
 * </p>
 * </p>
 * @return string|false The corresponding locale identifier.
 */
#[Pure]
function locale_compose(array $subtags): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns a key-value array of locale ID subtag elements.
 * @link https://php.net/manual/en/locale.parselocale.php
 * @param string $locale <p>
 * The locale to extract the subtag array from. Note: The 'variant' and
 * 'private' subtags can take maximum 15 values whereas 'extlang' can take
 * maximum 3 values.
 * </p>
 * @return string[]|null an array containing a list of key-value pairs, where the keys
 * identify the particular locale ID subtags, and the values are the
 * associated subtag values. The array will be ordered as the locale id
 * subtags e.g. in the locale id if variants are '-varX-varY-varZ' then the
 * returned array will have variant0=&gt;varX , variant1=&gt;varY ,
 * variant2=&gt;varZ
 */
#[Pure]
function locale_parse(string $locale): ?array {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Gets the variants for the input locale
 * @link https://php.net/manual/en/locale.getallvariants.php
 * @param string $locale <p>
 * The locale to extract the variants from
 * </p>
 * @return array|null The array containing the list of all variants subtag for the locale
 * or <b>NULL</b> if not present
 */
#[Pure]
function locale_get_all_variants(string $locale): ?array {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Checks if a language tag filter matches with locale
 * @link https://php.net/manual/en/locale.filtermatches.php
 * @param string $languageTag <p>
 * The language tag to check
 * </p>
 * @param string $locale <p>
 * The language range to check against
 * </p>
 * @param bool $canonicalize <p>
 * If true, the arguments will be converted to canonical form before
 * matching.
 * </p>
 * @return bool|null <b>TRUE</b> if $locale matches $langtag <b>FALSE</b> otherwise.
 */
#[Pure]
function locale_filter_matches(
    string $languageTag,
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] bool $canonicalize,
    #[ElementAvailable(from: '7.0')] bool $canonicalize = false
): ?bool {}

/**
 * Canonicalize the locale string
 * @param string $locale
 *
 * @return null|string
 */
#[Pure]
function locale_canonicalize(string $locale): ?string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Searches the language tag list for the best match to the language
 * @link https://php.net/manual/en/locale.lookup.php
 * @param string[] $languageTag <p>
 * An array containing a list of language tags to compare to
 * <i>locale</i>. Maximum 100 items allowed.
 * </p>
 * @param string $locale <p>
 * The locale to use as the language range when matching.
 * </p>
 * @param bool $canonicalize <p>
 * If true, the arguments will be converted to canonical form before
 * matching.
 * </p>
 * @param string|null $defaultLocale <p>
 * The locale to use if no match is found.
 * </p>
 * @return string|null The closest matching language tag or default value.
 */
#[Pure]
function locale_lookup(
    array $languageTag,
    string $locale,
    #[ElementAvailable(from: '5.3', to: '5.6')] bool $canonicalize,
    #[ElementAvailable(from: '5.3', to: '5.6')] ?string $defaultLocale,
    #[ElementAvailable(from: '7.0')] bool $canonicalize = false,
    #[ElementAvailable(from: '7.0')] ?string $defaultLocale = null,
): ?string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Tries to find out best available locale based on HTTP "Accept-Language" header
 * @link https://php.net/manual/en/locale.acceptfromhttp.php
 * @param string $header <p>
 * The string containing the "Accept-Language" header according to format in RFC 2616.
 * </p>
 * @return string|false The corresponding locale identifier.
 */
#[Pure]
function locale_accept_from_http(string $header): string|false {}

/**
 * Constructs a new message formatter
 * @param string $locale
 * @param string $pattern
 * @return MessageFormatter|null
 */
#[Pure]
function msgfmt_create(string $locale, string $pattern): ?MessageFormatter {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Format the message
 * @link https://php.net/manual/en/messageformatter.format.php
 * @param MessageFormatter $formatter
 * @param array $values <p>
 * Arguments to insert into the format string
 * </p>
 * @return string|false The formatted string, or <b>FALSE</b> if an error occurred
 */
#[Pure]
function msgfmt_format(MessageFormatter $formatter, array $values): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Quick format message
 * @link https://php.net/manual/en/messageformatter.formatmessage.php
 * @param string $locale <p>
 * The locale to use for formatting locale-dependent parts
 * </p>
 * @param string $pattern <p>
 * The pattern string to insert things into.
 * The pattern uses an 'apostrophe-friendly' syntax; it is run through
 * umsg_autoQuoteApostrophe
 * before being interpreted.
 * </p>
 * @param array $values <p>
 * The array of values to insert into the format string
 * </p>
 * @return string|false The formatted pattern string or <b>FALSE</b> if an error occurred
 */
#[Pure]
function msgfmt_format_message(string $locale, string $pattern, array $values): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Parse input string according to pattern
 * @link https://php.net/manual/en/messageformatter.parse.php
 * @param MessageFormatter $formatter
 * @param string $string <p>
 * The string to parse
 * </p>
 * @return array|false An array containing the items extracted, or <b>FALSE</b> on error
 */
#[Pure]
function msgfmt_parse(MessageFormatter $formatter, string $string): array|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Quick parse input string
 * @link https://php.net/manual/en/messageformatter.parsemessage.php
 * @param string $locale <p>
 * The locale to use for parsing locale-dependent parts
 * </p>
 * @param string $pattern <p>
 * The pattern with which to parse the <i>value</i>.
 * </p>
 * @param string $message <p>
 * The string to parse, conforming to the <i>pattern</i>.
 * </p>
 * @return array|false An array containing items extracted, or <b>FALSE</b> on error
 */
#[Pure]
function msgfmt_parse_message(string $locale, string $pattern, string $message): array|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set the pattern used by the formatter
 * @link https://php.net/manual/en/messageformatter.setpattern.php
 * @param MessageFormatter $formatter
 * @param string $pattern <p>
 * The pattern string to use in this message formatter.
 * The pattern uses an 'apostrophe-friendly' syntax; it is run through
 * umsg_autoQuoteApostrophe
 * before being interpreted.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function msgfmt_set_pattern(MessageFormatter $formatter, string $pattern): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the pattern used by the formatter
 * @link https://php.net/manual/en/messageformatter.getpattern.php
 * @param MessageFormatter $formatter
 * @return string|false The pattern string for this message formatter
 */
#[Pure]
function msgfmt_get_pattern(MessageFormatter $formatter): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the locale for which the formatter was created.
 * @link https://php.net/manual/en/messageformatter.getlocale.php
 * @param MessageFormatter $formatter
 * @return string The locale name
 */
#[Pure]
function msgfmt_get_locale(MessageFormatter $formatter): string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the error code from last operation
 * @link https://php.net/manual/en/messageformatter.geterrorcode.php
 * @param MessageFormatter $formatter
 * @return int The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.
 */
#[Pure(true)]
function msgfmt_get_error_code(MessageFormatter $formatter): int {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the error text from the last operation
 * @link https://php.net/manual/en/messageformatter.geterrormessage.php
 * @param MessageFormatter $formatter
 * @return string Description of the last error.
 */
#[Pure(true)]
function msgfmt_get_error_message(MessageFormatter $formatter): string {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Create a date formatter
 * @link https://php.net/manual/en/intldateformatter.create.php
 * @param string|null $locale <p>
 * Locale to use when formatting or parsing.
 * </p>
 * @param int $dateType <p>
 * Date type to use (<b>none</b>,
 * <b>short</b>, <b>medium</b>,
 * <b>long</b>, <b>full</b>).
 * This is one of the
 * IntlDateFormatter constants.
 * </p>
 * @param int $timeType <p>
 * Time type to use (<b>none</b>,
 * <b>short</b>, <b>medium</b>,
 * <b>long</b>, <b>full</b>).
 * This is one of the
 * IntlDateFormatter constants.
 * </p>
 * @param string|null $timezone [optional] <p>
 * Time zone ID, default is system default.
 * </p>
 * @param IntlCalendar|int|null $calendar [optional] <p>
 * Calendar to use for formatting or parsing; default is Gregorian.
 * This is one of the
 * IntlDateFormatter calendar constants.
 * </p>
 * @param string|null $pattern [optional] <p>
 * Optional pattern to use when formatting or parsing.
 * Possible patterns are documented at http://userguide.icu-project.org/formatparse/datetime.
 * </p>
 * @return IntlDateFormatter|null
 */
#[Pure]
function datefmt_create(
    ?string $locale,
    #[ElementAvailable(from: '5.3', to: '8.0')] int $dateType,
    #[ElementAvailable(from: '8.1')] int $dateType = 0,
    #[ElementAvailable(from: '5.3', to: '8.0')] int $timeType,
    #[ElementAvailable(from: '8.1')] int $timeType = 0,
    $timezone = null,
    IntlCalendar|int|null $calendar = null,
    #[LanguageAware(['8.0' => 'string|null'], default: 'string')] $pattern = null
): ?IntlDateFormatter {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the datetype used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.getdatetype.php
 * @param IntlDateFormatter $formatter
 * @return int|false The current date type value of the formatter.
 */
#[Pure]
function datefmt_get_datetype(IntlDateFormatter $formatter): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the timetype used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.gettimetype.php
 * @param IntlDateFormatter $formatter
 * @return int|false The current date type value of the formatter.
 */
#[Pure]
function datefmt_get_timetype(IntlDateFormatter $formatter): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the calendar type used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.getcalendar.php
 * @param IntlDateFormatter $formatter
 * @return int|false The calendar being used by the formatter.
 */
#[Pure]
function datefmt_get_calendar(IntlDateFormatter $formatter): int|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * sets the calendar used to the appropriate calendar, which must be
 * @link https://php.net/manual/en/intldateformatter.setcalendar.php
 * @param IntlDateFormatter $formatter $mf
 * @param IntlCalendar|int|null $calendar <p>
 * The calendar to use.
 * Default is <b>IntlDateFormatter::GREGORIAN</b>.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
function datefmt_set_calendar(IntlDateFormatter $formatter, IntlCalendar|int|null $calendar): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the locale used by formatter
 * @link https://php.net/manual/en/intldateformatter.getlocale.php
 * @param IntlDateFormatter $formatter
 * @param int $type [optional]
 * @return string|false the locale of this formatter or 'false' if error
 */
#[Pure]
function datefmt_get_locale(
    IntlDateFormatter $formatter,
    #[ElementAvailable(from: '8.0')] int $type = ULOC_ACTUAL_LOCALE
): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the timezone-id used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.gettimezoneid.php
 * @param IntlDateFormatter $formatter
 * @return string|false ID string for the time zone used by this formatter.
 */
#[Pure]
function datefmt_get_timezone_id(IntlDateFormatter $formatter): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 3.0.0)<br/>
 * Get copy of formatter's calendar object
 * @link https://secure.php.net/manual/en/intldateformatter.getcalendarobject.php
 * @param IntlDateFormatter $formatter
 * @return IntlCalendar|false|null A copy of the internal calendar object used by this formatter.
 */
#[Pure]
function datefmt_get_calendar_object(IntlDateFormatter $formatter): IntlCalendar|false|null {}

/**
 * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
 *  Get formatter's timezone
 * @link https://secure.php.net/manual/en/intldateformatter.gettimezone.php
 * @param IntlDateFormatter $formatter
 * @return IntlTimeZone|false The associated IntlTimeZone object or FALSE on failure.
 */
#[Pure]
function datefmt_get_timezone(IntlDateFormatter $formatter): IntlTimeZone|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Sets the time zone to use
 * @link https://php.net/manual/en/intldateformatter.settimezoneid.php
 * @param MessageFormatter $mf
 * @param string $zone <p>
 * The time zone ID string of the time zone to use.
 * If <b>NULL</b> or the empty string, the default time zone for the runtime is used.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 * @removed 7.0
 * @see datefmt_set_timezone()
 */
#[Deprecated(replacement: "datefmt_set_timezone(%parametersList%)", since: "5.5")]
function datefmt_set_timezone_id(MessageFormatter $mf, $zone) {}

/**
 * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
 * Sets formatter's timezone
 * @link https://php.net/manual/en/intldateformatter.settimezone.php
 * @param IntlDateFormatter $formatter
 * @param IntlTimeZone|DateTimeZone|string|null $timezone <p>
 * The timezone to use for this formatter. This can be specified in the
 * following forms:
 * <ul>
 * <li>
 * <p>
 * <b>NULL</b>, in which case the default timezone will be used, as specified in
 * the ini setting {@link "https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone" date.timezone} or
 * through the function  {@link "https://secure.php.net/manual/en/function.date-default-timezone-set.php" date_default_timezone_set()} and as
 * returned by {@link "https://secure.php.net/manual/en/function.date-default-timezone-get.php" date_default_timezone_get()}.
 * </p>
 * </li>
 * <li>
 * <p>
 * An {@link "https://secure.php.net/manual/en/class.intltimezone.php" IntlTimeZone}, which will be used directly.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link "https://secure.php.net/manual/en/class.datetimezone.php" DateTimeZone}. Its identifier will be extracted
 * and an ICU timezone object will be created; the timezone will be backed
 * by ICU's database, not PHP's.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link "https://secure.php.net/manual/en/language.types.string.php" string}, which should be a valid ICU timezone identifier.
 * See <b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw offsets such as <em>"GMT+08:30"</em> are also accepted.
 * </p>
 * </li>
 * </ul>
 * </p>
 * @return bool|null <b>TRUE</b> on success or <b>FALSE</b> on failure.
 */
#[LanguageAware(['8.3' => 'bool'], default: 'bool|null')]
function datefmt_set_timezone(IntlDateFormatter $formatter, $timezone) {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the pattern used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.getpattern.php
 * @param IntlDateFormatter $formatter
 * @return string|false The pattern string being used to format/parse.
 */
#[Pure]
function datefmt_get_pattern(IntlDateFormatter $formatter): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set the pattern used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.setpattern.php
 * @param IntlDateFormatter $formatter
 * @param string $pattern <p>
 * New pattern string to use.
 * Possible patterns are documented at http://userguide.icu-project.org/formatparse/datetime.
 * </p>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
 * Bad formatstrings are usually the cause of the failure.
 */
function datefmt_set_pattern(IntlDateFormatter $formatter, string $pattern): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the lenient used for the IntlDateFormatter
 * @link https://php.net/manual/en/intldateformatter.islenient.php
 * @param IntlDateFormatter $formatter
 * @return bool <b>TRUE</b> if parser is lenient, <b>FALSE</b> if parser is strict. By default the parser is lenient.
 */
#[Pure]
function datefmt_is_lenient(IntlDateFormatter $formatter): bool {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Set the leniency of the parser
 * @link https://php.net/manual/en/intldateformatter.setlenient.php
 * @param IntlDateFormatter $formatter
 * @param bool $lenient <p>
 * Sets whether the parser is lenient or not, default is <b>TRUE</b> (lenient).
 * </p>
 * @return void
 */
function datefmt_set_lenient(
    IntlDateFormatter $formatter,
    #[ElementAvailable(from: '8.0')] bool $lenient
): void {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Format the date/time value as a string
 * @link https://php.net/manual/en/intldateformatter.format.php
 * @param IntlDateFormatter $formatter
 * @param object|array|string|int|float $datetime <p>
 * Value to format. This may be a <b>DateTime</b> object,
 * an integer representing a Unix timestamp value (seconds
 * since epoch, UTC) or an array in the format output by
 * <b>localtime</b>.
 * </p>
 * @return string|false The formatted string or, if an error occurred, <b>FALSE</b>.
 */
#[Pure]
function datefmt_format(
    #[LanguageAware(['8.0' => 'IntlDateFormatter'], default: '')] #[ElementAvailable(from: '5.3', to: '7.4')] $formatter = null,
    #[LanguageAware(['8.0' => 'IntlDateFormatter'], default: '')] #[ElementAvailable(from: '8.0')] $formatter,
    #[ElementAvailable(from: '5.3', to: '7.4')] $datetime = null,
    #[ElementAvailable(from: '8.0')] $datetime
): string|false {}

/**
 * (PHP 5 &gt;= 5.5.0, PECL intl &gt;= 3.0.0)<br/>
 * Formats an object
 * @link https://secure.php.net/manual/en/intldateformatter.formatobject.php
 * @param IntlCalendar|DateTimeInterface $datetime <p>
 * An object of type IntlCalendar or DateTime. The timezone information in the object will be used.
 * </p>
 * @param array|int|string|null $format [optional] <p>
 * How to format the date/time. This can either be an {https://secure.php.net/manual/en/language.types.array.php array}  with
 * two elements (first the date style, then the time style, these being one
 * of the constants <b>IntlDateFormatter::NONE</b>,
 * <b>IntlDateFormatter::SHORT</b>,
 * <b>IntlDateFormatter::MEDIUM</b>,
 * <b>IntlDateFormatter::LONG</b>,
 * <b>IntlDateFormatter::FULL</b>), a long with
 * the value of one of these constants (in which case it will be used both
 * for the time and the date) or a {@link https://secure.php.net/manual/en/language.types.string.php} with the format
 * described in {@link http://www.icu-project.org/apiref/icu4c/classSimpleDateFormat.html#details the ICU documentation}
 * documentation. If <b>NULL</b>, the default style will be used.
 * </p>
 * @param string|null $locale [optional] <p>
 * The locale to use, or NULL to use the default one.</p>
 * @return string|false The formatted string or, if an error occurred, <b>FALSE</b>.
 */
#[Pure]
function datefmt_format_object($datetime, $format = null, ?string $locale = null): string|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Parse string to a timestamp value
 * @link https://php.net/manual/en/intldateformatter.parse.php
 * @param IntlDateFormatter $formatter
 * @param string $string <p>
 * string to convert to a time
 * </p>
 * @param int &$offset [optional] <p>
 * Position at which to start the parsing in $value (zero-based).
 * If no error occurs before $value is consumed, $parse_pos will contain -1
 * otherwise it will contain the position at which parsing ended (and the error occurred).
 * This variable will contain the end position if the parse fails.
 * If $parse_pos > strlen($value), the parse fails immediately.
 * </p>
 * @return int|float|false timestamp parsed value
 */
function datefmt_parse(IntlDateFormatter $formatter, string $string, &$offset = null): int|float|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Parse string to a field-based time value
 * @link https://php.net/manual/en/intldateformatter.localtime.php
 * @param IntlDateFormatter $formatter
 * @param string $string <p>
 * string to convert to a time
 * </p>
 * @param int &$offset [optional] <p>
 * Position at which to start the parsing in $value (zero-based).
 * If no error occurs before $value is consumed, $parse_pos will contain -1
 * otherwise it will contain the position at which parsing ended .
 * If $parse_pos > strlen($value), the parse fails immediately.
 * </p>
 * @return array|false Localtime compatible array of integers : contains 24 hour clock value in tm_hour field
 */
function datefmt_localtime(IntlDateFormatter $formatter, string $string, &$offset = null): array|false {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the error code from last operation
 * @link https://php.net/manual/en/intldateformatter.geterrorcode.php
 * @param IntlDateFormatter $formatter
 * @return int The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.
 */
#[Pure(true)]
function datefmt_get_error_code(IntlDateFormatter $formatter): int {}

/**
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the error text from the last operation.
 * @link https://php.net/manual/en/intldateformatter.geterrormessage.php
 * @param IntlDateFormatter $formatter
 * @return string Description of the last error.
 */
#[Pure(true)]
function datefmt_get_error_message(IntlDateFormatter $formatter): string {}

/**
 * <div id="function.grapheme-strlen" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_strlen</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_strlen</span> — <span class="dc-title">Get string length in grapheme units</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-strlen-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_strlen</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">   Get string length in grapheme units (not bytes or characters)  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-strlen-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The string being measured for length. It must be a valid UTF-8 string.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-strlen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The length of the string on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.   </p> </div>  <div class="refsect1 examples" id="refsect1-function.grapheme-strlen-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2660">   <p><strong>示例 #1 <span class="function"><strong>grapheme_strlen()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">grapheme_strlen</span><span style="color: #007700">( </span><span style="color: #DD0000">'abc' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">6</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-strlen-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>    <li><span class="function">{@link iconv_strlen()} - 返回字符串的字符数统计</span></li>    <li><span class="function">{@link mb_strlen()} - 获取字符串的长度</span></li>    <li><span class="function">{@link strlen()} - 获取字符串长度</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get string length in grapheme units
 * @link https://php.net/manual/zh/function.grapheme-strlen.php
 * @param string $string <p>
 * The string being measured for length. It must be a valid UTF-8 string.
 * </p>
 * @return int|false|null The length of the string on success, and 0 if the string is empty.
 */
#[Pure]
function grapheme_strlen(string $string): int|false|null {}

/**
 * <div id="function.grapheme-strpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_strpos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_strpos</span> — <span class="dc-title">Find position (in grapheme units) of first occurrence of a string</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-strpos-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_strpos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Find position (in grapheme units) of first occurrence of a string  </p>   </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-strpos-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The string to look in. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">offset</span> parameter allows you to specify where in <span class="parameter" style="color:#3A95FF">haystack</span> to       start searching as an offset in grapheme units (not bytes or characters).       If the offset is negative, it is treated relative to the end of the string.       The position returned is still relative to the beginning of <span class="parameter" style="color:#3A95FF">haystack</span>       regardless of the value of <span class="parameter" style="color:#3A95FF">offset</span>.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-strpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the position as an integer. If <span class="parameter" style="color:#3A95FF">needle</span> is not found, <span class="function"><strong>grapheme_strpos()</strong></span> will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 changelog" id="refsect1-function.grapheme-strpos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       Support for negative <span class="parameter" style="color:#3A95FF">offset</span>s has been added.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.grapheme-strpos-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2661">   <p><strong>示例 #1 <span class="function"><strong>grapheme_strpos()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">grapheme_strpos</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-strpos-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stripos()} - Find position (in grapheme units) of first occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_stristr()} - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></li>    <li><span class="function">{@link grapheme_strripos()} - Find position (in grapheme units) of last occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strrpos()} - Find position (in grapheme units) of last occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strstr()} - Returns part of haystack string from the first occurrence of needle to the end of haystack</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Find position (in grapheme units) of first occurrence of a string
 * @link https://php.net/manual/zh/function.grapheme-strpos.php
 * @param string $haystack <p>
 * The string to look in. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param int $offset [optional] <p>
 * The optional $offset parameter allows you to specify where in $haystack to
 * start searching as an offset in grapheme units (not bytes or characters).
 * The position returned is still relative to the beginning of haystack
 * regardless of the value of $offset.
 * </p>
 * @return int|false the position as an integer. If needle is not found, strpos() will return boolean FALSE.
 */
#[Pure]
function grapheme_strpos(string $haystack, string $needle, int $offset = 0): int|false {}

/**
 * <div id="function.grapheme-stripos" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_stripos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_stripos</span> — <span class="dc-title">Find position (in grapheme units) of first occurrence of a case-insensitive string</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-stripos-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_stripos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Find position (in grapheme units) of first occurrence of a case-insensitive string  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-stripos-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The string to look in. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">offset</span> parameter allows you to specify where in <span class="parameter" style="color:#3A95FF">haystack</span> to       start searching as an offset in grapheme units (not bytes or characters).       If the offset is negative, it is treated relative to the end of the string.       The position returned is still relative to the beginning of <span class="parameter" style="color:#3A95FF">haystack</span>       regardless of the value of <span class="parameter" style="color:#3A95FF">offset</span>.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-stripos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the position as an integer. If <span class="parameter" style="color:#3A95FF">needle</span> is not found, <span class="function"><strong>grapheme_stripos()</strong></span> will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 changelog" id="refsect1-function.grapheme-stripos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       Support for negative <span class="parameter" style="color:#3A95FF">offset</span>s has been added.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.grapheme-stripos-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2658">   <p><strong>示例 #1 <span class="function"><strong>grapheme_stripos()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br></span><span style="color: #9876AA">\$char_O_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"O\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">grapheme_stripos</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_O_diaeresis_nfd</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-stripos-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stristr()} - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></li>    <li><span class="function">{@link grapheme_strpos()} - Find position (in grapheme units) of first occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strripos()} - Find position (in grapheme units) of last occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strrpos()} - Find position (in grapheme units) of last occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strstr()} - Returns part of haystack string from the first occurrence of needle to the end of haystack</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Find position (in grapheme units) of first occurrence of a case-insensitive string
 * @link https://php.net/manual/zh/function.grapheme-stripos.php
 * @param string $haystack <p>
 * The string to look in. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param int $offset [optional] <p>
 * The optional $offset parameter allows you to specify where in haystack to
 * start searching as an offset in grapheme units (not bytes or characters).
 * The position returned is still relative to the beginning of haystack
 * regardless of the value of $offset.
 * </p>
 * @return int|false the position as an integer. If needle is not found, grapheme_stripos() will return boolean FALSE.
 */
#[Pure]
function grapheme_stripos(string $haystack, string $needle, int $offset = 0): int|false {}

/**
 * <div id="function.grapheme-strrpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_strrpos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_strrpos</span> — <span class="dc-title">Find position (in grapheme units) of last occurrence of a string</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-strrpos-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_strrpos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Find position (in grapheme units) of last occurrence of a string  </p>   </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-strrpos-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The string to look in. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">offset</span> parameter allows you to specify where in <span class="parameter" style="color:#3A95FF">haystack</span> to       start searching as an offset in grapheme units (not bytes or characters).       The position returned is still relative to the beginning of <span class="parameter" style="color:#3A95FF">haystack</span>       regardless of the value of <span class="parameter" style="color:#3A95FF">offset</span>.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-strrpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the position as an integer. If <span class="parameter" style="color:#3A95FF">needle</span> is not found, <span class="function"><strong>grapheme_strrpos()</strong></span> will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.grapheme-strrpos-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2663">   <p><strong>示例 #1 <span class="function"><strong>grapheme_strrpos()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">grapheme_strrpos</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-strrpos-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stripos()} - Find position (in grapheme units) of first occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_stristr()} - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></li>    <li><span class="function">{@link grapheme_strpos()} - Find position (in grapheme units) of first occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strripos()} - Find position (in grapheme units) of last occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strstr()} - Returns part of haystack string from the first occurrence of needle to the end of haystack</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Find position (in grapheme units) of last occurrence of a string
 * @link https://php.net/manual/zh/function.grapheme-strrpos.php
 * @param string $haystack <p>
 * The string to look in. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param int $offset [optional] <p>
 * The optional $offset parameter allows you to specify where in $haystack to
 * start searching as an offset in grapheme units (not bytes or characters).
 * The position returned is still relative to the beginning of haystack
 * regardless of the value of $offset.
 * </p>
 * @return int|false the position as an integer. If needle is not found, grapheme_strrpos() will return boolean FALSE.
 */
#[Pure]
function grapheme_strrpos(string $haystack, string $needle, int $offset = 0): int|false {}

/**
 * <div id="function.grapheme-strripos" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_strripos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_strripos</span> — <span class="dc-title">Find position (in grapheme units) of last occurrence of a case-insensitive string</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-strripos-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_strripos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Find position (in grapheme units) of last occurrence of a case-insensitive string  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-strripos-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The string to look in. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The optional <span class="parameter" style="color:#3A95FF">offset</span> parameter allows you to specify where in <span class="parameter" style="color:#3A95FF">haystack</span> to       start searching as an offset in grapheme units (not bytes or characters).       The position returned is still relative to the beginning of <span class="parameter" style="color:#3A95FF">haystack</span>       regardless of the value of <span class="parameter" style="color:#3A95FF">offset</span>.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-strripos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the position as an integer. If <span class="parameter" style="color:#3A95FF">needle</span> is not found, <span class="function"><strong>grapheme_strripos()</strong></span> will return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.grapheme-strripos-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2662">   <p><strong>示例 #1 <span class="function"><strong>grapheme_strripos()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br></span><span style="color: #9876AA">\$char_O_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"O\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">grapheme_strripos</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_O_diaeresis_nfd</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-strripos-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stripos()} - Find position (in grapheme units) of first occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_stristr()} - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></li>    <li><span class="function">{@link grapheme_strpos()} - Find position (in grapheme units) of first occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strrpos()} - Find position (in grapheme units) of last occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strstr()} - Returns part of haystack string from the first occurrence of needle to the end of haystack</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Find position (in grapheme units) of last occurrence of a case-insensitive string
 * @link https://php.net/manual/zh/function.grapheme-strripos.php
 * @param string $haystack <p>
 * The string to look in. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param int $offset [optional] <p>
 * The optional $offset parameter allows you to specify where in $haystack to
 * start searching as an offset in grapheme units (not bytes or characters).
 * The position returned is still relative to the beginning of haystack
 * regardless of the value of $offset.
 * </p>
 * @return int|false the position as an integer. If needle is not found, grapheme_strripos() will return boolean FALSE.
 */
#[Pure]
function grapheme_strripos(string $haystack, string $needle, int $offset = 0): int|false {}

/**
 * <div id="function.grapheme-substr" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_substr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_substr</span> — <span class="dc-title">Return part of a string</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-substr-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_substr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Return part of a string  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-substr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The input string. Must be valid UTF-8.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Start position in default grapheme units.       If <span class="parameter" style="color:#3A95FF">offset</span> is non-negative, the returned string will start at the       <span class="parameter" style="color:#3A95FF">offset</span>'th position in <span class="parameter" style="color:#3A95FF">string</span>, counting from zero. If <span class="parameter" style="color:#3A95FF">offset</span> is negative,       the returned string will start at the <span class="parameter" style="color:#3A95FF">offset</span>'th grapheme unit from the        end of string.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       Length in grapheme units.       If <span class="parameter" style="color:#3A95FF">length</span> is given and is positive, the string returned will contain       at most <span class="parameter" style="color:#3A95FF">length</span> grapheme units beginning from <span class="parameter" style="color:#3A95FF">offset</span> (depending on the        length of string). If <span class="parameter" style="color:#3A95FF">length</span> is given and is negative, then       that many grapheme units will be omitted from the end of string (after the       start position has been calculated when <span class="parameter" style="color:#3A95FF">offset</span> is negative). If <span class="parameter" style="color:#3A95FF">offset</span>       denotes a position beyond this truncation, an empty string will be returned.      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-substr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the extracted part of <span class="parameter" style="color:#3A95FF">string</span>,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.grapheme-substr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       The function now consistently clamps out-of-bounds offsets to the string boundary.       Previously, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> was returned instead of the empty string in some cases.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.grapheme-substr-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2665">   <p><strong>示例 #1 <span class="function"><strong>grapheme_substr()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">grapheme_substr</span><span style="color: #007700">( </span><span style="color: #DD0000">"ao" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #DD0000">"bc" </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #DD0000">"O"</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, -</span><span style="color: #9876AA">1 </span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">a%CC%8Abco%CC%88</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-substr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_extract()} - Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Return part of a string
 * @link https://php.net/manual/zh/function.grapheme-substr.php
 * @param string $string <p>
 * The input string. Must be valid UTF-8.
 * </p>
 * @param int $offset <p>
 * Start position in default grapheme units.
 * If $start is non-negative, the returned string will start at the
 * $start'th position in $string, counting from zero. If $start is negative,
 * the returned string will start at the $start'th grapheme unit from the
 * end of string.
 * </p>
 * @param int|null $length [optional] <p>
 * Length in grapheme units.
 * If $length is given and is positive, the string returned will contain
 * at most $length grapheme units beginning from $start (depending on the
 * length of string). If $length is given and is negative, then
 * that many grapheme units will be omitted from the end of string (after the
 * start position has been calculated when a start is negative). If $start
 * denotes a position beyond this truncation, <b>FALSE</b> will be returned.
 * </p>
 * @return string|false <p>the extracted part of $string,<br />
 * or <strong>FALSE</strong> if $length is negative and $start denotes a position beyond truncation $length,<br />
 * or also <strong>FALSE</strong> if $start denotes a position beyond $string length</p>
 */
#[Pure]
function grapheme_substr(string $string, int $offset, ?int $length = null): string|false {}

/**
 * <div id="function.grapheme-strstr" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_strstr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_strstr</span> — <span class="dc-title">Returns part of haystack string from the first occurrence of needle to the end of haystack</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-strstr-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_strstr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$beforeNeedle</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns part of haystack string from the first occurrence of needle to the end of haystack (including the needle).  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-strstr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The input string. Must be valid UTF-8.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">beforeNeedle</span></dt>     <dd>      <p class="para">       If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, <span class="function"><strong>grapheme_strstr()</strong></span> returns the part of the       <span class="parameter" style="color:#3A95FF">haystack</span> before the first occurrence of the <span class="parameter" style="color:#3A95FF">needle</span> (excluding the <span class="parameter" style="color:#3A95FF">needle</span>).      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-strstr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the portion of <span class="parameter" style="color:#3A95FF">haystack</span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if <span class="parameter" style="color:#3A95FF">needle</span> is not found.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.grapheme-strstr-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2664">   <p><strong>示例 #1 <span class="function"><strong>grapheme_strstr()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">grapheme_stristr</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">o%CC%88a%CC%8A</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-strstr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stristr()} - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></li>    <li><span class="function">{@link grapheme_stripos()} - Find position (in grapheme units) of first occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strpos()} - Find position (in grapheme units) of first occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strripos()} - Find position (in grapheme units) of last occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strrpos()} - Find position (in grapheme units) of last occurrence of a string</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns part of haystack string from the first occurrence of needle to the end of haystack.
 * @link https://php.net/manual/zh/function.grapheme-strstr.php
 * @param string $haystack <p>
 * The input string. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param bool $beforeNeedle [optional] <p>
 * If <b>TRUE</b>, grapheme_strstr() returns the part of the
 * haystack before the first occurrence of the needle (excluding the needle).
 * </p>
 * @return string|false the portion of string, or FALSE if needle is not found.
 */
#[Pure]
function grapheme_strstr(string $haystack, string $needle, bool $beforeNeedle = false): string|false {}

/**
 * <div id="function.grapheme-stristr" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_stristr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_stristr</span> — <span class="dc-title">Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-stristr-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_stristr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$beforeNeedle</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns part of <span class="parameter" style="color:#3A95FF">haystack</span> string starting from and including the first occurrence of case-insensitive needle to the end of <span class="parameter" style="color:#3A95FF">haystack</span>.  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-stristr-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       The input string. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       The string to look for. Must be valid UTF-8.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">beforeNeedle</span></dt>     <dd>      <p class="para">       If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, <span class="function"><strong>grapheme_stristr()</strong></span> returns the part of the       <span class="parameter" style="color:#3A95FF">haystack</span> before the first occurrence of the needle (excluding <span class="parameter" style="color:#3A95FF">needle</span>).      </p>     </dd>       </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-stristr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the portion of <span class="parameter" style="color:#3A95FF">haystack</span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if <span class="parameter" style="color:#3A95FF">needle</span> is not found.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.grapheme-stristr-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2659">   <p><strong>示例 #1 <span class="function"><strong>grapheme_stristr()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br></span><span style="color: #9876AA">\$char_O_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"O\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">grapheme_stristr</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_a_ring_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">\$char_O_diaeresis_nfd</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">o%CC%88a%CC%8A</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-stristr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_stripos()} - Find position (in grapheme units) of first occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strpos()} - Find position (in grapheme units) of first occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strripos()} - Find position (in grapheme units) of last occurrence of a case-insensitive string</span></li>    <li><span class="function">{@link grapheme_strrpos()} - Find position (in grapheme units) of last occurrence of a string</span></li>    <li><span class="function">{@link grapheme_strstr()} - Returns part of haystack string from the first occurrence of needle to the end of haystack</span></li>    <li>     <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;      Unicode Text Segmentation: Grapheme Cluster Boundaries     </a>    </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.
 * @link https://php.net/manual/zh/function.grapheme-stristr.php
 * @param string $haystack <p>
 * The input string. Must be valid UTF-8.
 * </p>
 * @param string $needle <p>
 * The string to look for. Must be valid UTF-8.
 * </p>
 * @param bool $beforeNeedle [optional] <p>
 * If <b>TRUE</b>, grapheme_strstr() returns the part of the
 * haystack before the first occurrence of the needle (excluding needle).
 * </p>
 * @return string|false the portion of $haystack, or FALSE if $needle is not found.
 */
#[Pure]
function grapheme_stristr(string $haystack, string $needle, bool $beforeNeedle = false): string|false {}

/**
 * <div id="function.grapheme-extract" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_extract</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">grapheme_extract</span> — <span class="dc-title">Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-extract-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_extract</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$size</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.grapheme-extr-count">GRAPHEME_EXTR_COUNT</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$next</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.   </p>   </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-extract-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       String to search.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">size</span></dt>     <dd>      <p class="para">       Maximum number items - based on the <span class="parameter" style="color:#3A95FF">type</span> - to return.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       Defines the type of units referred to by the <span class="parameter" style="color:#3A95FF">size</span> parameter:      </p>       <p class="para">        </p><ul class="simplelist">         <li>GRAPHEME_EXTR_COUNT (default) -<span class="parameter" style="color:#3A95FF">size</span> is the number of default         grapheme clusters to extract.</li>         <li>GRAPHEME_EXTR_MAXBYTES -<span class="parameter" style="color:#3A95FF">size</span> is the maximum number of bytes         returned.</li>         <li>GRAPHEME_EXTR_MAXCHARS - <span class="parameter" style="color:#3A95FF">size</span> is the maximum number of UTF-8         characters returned.</li>        </ul>            </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       Starting position in <span class="parameter" style="color:#3A95FF">haystack</span> in bytes - if given, it must be zero or a       positive value that is less than or equal to the length of <span class="parameter" style="color:#3A95FF">haystack</span> in       bytes, or a negative value that counts from the end of <span class="parameter" style="color:#3A95FF">haystack</span>.       If <span class="parameter" style="color:#3A95FF">offset</span> does not point to the first byte of a UTF-8       character, the start position is moved to the next character boundary.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">next</span></dt>     <dd>      <p class="para">       Reference to a value that will be set to the next starting position.       When the call returns, this may point to the first byte position past the end of the string.      </p>     </dd>        </dl>   </div>     <div class="refsect1 returnvalues" id="refsect1-function.grapheme-extract-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string starting at offset <span class="parameter" style="color:#3A95FF">offset</span> and ending on a default grapheme cluster   boundary that conforms to the <span class="parameter" style="color:#3A95FF">size</span> and <span class="parameter" style="color:#3A95FF">type</span> specified,    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 changelog" id="refsect1-function.grapheme-extract-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       Support for negative <span class="parameter" style="color:#3A95FF">offset</span>s has been added.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.grapheme-extract-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2657">   <p><strong>示例 #1 <span class="function"><strong>grapheme_extract()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$char_a_ring_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"a\xCC\x8A"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"<br></span><span style="color: #9876AA">\$char_o_diaeresis_nfd </span><span style="color: #007700">= </span><span style="color: #DD0000">"o\xCC\x88"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"<br><br></span><span style="color: #007700">print </span><span style="color: #9876AA">urlencode</span><span style="color: #007700">(</span><span style="color: #9876AA">grapheme_extract</span><span style="color: #007700">( </span><span style="color: #9876AA">\$char_a_ring_nfd </span><span style="color: #007700">. </span><span style="color: #9876AA">\$char_o_diaeresis_nfd</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">GRAPHEME_EXTR_COUNT</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">o%CC%88</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-extract-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link grapheme_substr()} - Return part of a string</span></li>     <li>      <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;       Unicode Text Segmentation: Grapheme Cluster Boundaries      </a>     </li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.
 * @link https://php.net/manual/zh/function.grapheme-extract.php
 * @param string $haystack <p>
 * String to search.
 * </p>
 * @param int $size <p>
 * Maximum number items - based on the $extract_type - to return.
 * </p>
 * @param int $type <p>
 * Defines the type of units referred to by the $size parameter:
 * </p>
 * <p>
 * GRAPHEME_EXTR_COUNT (default) - $size is the number of default
 * grapheme clusters to extract.
 * GRAPHEME_EXTR_MAXBYTES - $size is the maximum number of bytes
 * returned.
 * GRAPHEME_EXTR_MAXCHARS - $size is the maximum number of UTF-8
 * characters returned.
 * </p>
 * @param int $offset [optional] <p>
 * Starting position in $haystack in bytes - if given, it must be zero or a
 * positive value that is less than or equal to the length of $haystack in
 * bytes. If $start does not point to the first byte of a UTF-8
 * character, the start position is moved to the next character boundary.
 * </p>
 * @param int &$next [optional] <p>
 * Reference to a value that will be set to the next starting position.
 * When the call returns, this may point to the first byte position past the end of the string.
 * </p>
 * @return string|false A string starting at offset $start and ending on a default grapheme cluster
 * boundary that conforms to the $size and $extract_type specified.
 */
function grapheme_extract(string $haystack, int $size, int $type = 0, int $offset = 0, &$next = null): string|false {}

/**
 * <div id="function.idn-to-ascii" class="refentry"> <div class="refnamediv">  <h1 class="refname">idn_to_ascii</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.2, PECL idn &gt;= 0.1)</p><p class="refpurpose"><span class="refname">idn_to_ascii</span> — <span class="dc-title">将域名转换为 IDNA ASCII 格式 </span></p> </div> <div class="refsect1 description" id="refsect1-function.idn-to-ascii-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>idn_to_ascii</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.idna-default">IDNA_DEFAULT</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$variant</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$idna_info</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   该函数可以将 Unicode 域名转换为 IDNA ASCII 兼容格式。  </p>   </div> <div class="refsect1 parameters" id="refsect1-function.idn-to-ascii-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       要转换的域，必须使用 UTF-8 编码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       转换选项 — IDNA_* 开头的常量（除 IDNA_ERROR_* 开头的常量）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">variant</span></dt>     <dd>      <p class="para">       对于 IDNA 2003 是 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> (自 PHP 7.2.0 起已弃用)，       对于 UTS #46 是 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> (仅 ICU 4.6 起可用)。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">idna_info</span></dt>     <dd>      <p class="para">       仅当 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> 用于 <span class="parameter" style="color:#3A95FF">variant</span> 时，才可以使用该参数。       在这种情况下，它将用这些键组成的数组来填充：       <span class="literal">'result'</span> 键，转换结果（有可能是一个非法结果）；       <span class="literal">'isTransitionalDifferent'</span> 键，布尔值，指示使用 UTS #46 的过滤机制是否会改变结果；       <span class="literal">'errors'</span> 键，是 IDNA_ERROR_* 常量集里一个常量对应的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 。      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.idn-to-ascii-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   IDNA ASCII 兼容格式编码的域名，  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 changelog" id="refsect1-function.idn-to-ascii-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.4.0</td>       <td>        现在 <span class="parameter" style="color:#3A95FF">variant</span> 的默认值为 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> ，        而不是已弃用的 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> 。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> 已被弃用；        可以使用 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> 代替。       </td>      </tr>     </tbody>       </table>   </div>  <div class="refsect1 examples" id="refsect1-function.idn-to-ascii-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2666">   <p><strong>示例 #1 <span class="function"><strong>idn_to_ascii()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">idn_to_ascii</span><span style="color: #007700">(</span><span style="color: #DD0000">'täst.de'</span><span style="color: #007700">); <br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">xn--tst-qla.de</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.idn-to-ascii-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link idn_to_utf8()} - 将域名从 IDNA ASCII 转换为 Unicode</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PHP 7, PECL intl &gt;= 1.0.2, PHP 7, PECL idn &gt;= 0.1)<br/>
 * Convert domain name to IDNA ASCII form.
 * @link https://php.net/manual/zh/function.idn-to-ascii.php
 * @param string $domain <p>
 * Domain to convert. In PHP 5 must be UTF-8 encoded.
 * If e.g. an ISO-8859-1 (aka Western Europe latin1) encoded string is
 * passed it will be converted into an ACE encoded "xn--" string.
 * It will not be the one you expected though!
 * </p>
 * @param int $flags [optional] <p>
 * Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants).
 * </p>
 * @param int $variant [optional] <p>
 * Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46.
 * </p>
 * @param array &$idna_info [optional] <p>
 * This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant.
 * In that case, it will be filled with an array with the keys 'result',
 * the possibly illegal result of the transformation, 'isTransitionalDifferent',
 * a boolean indicating whether the usage of the transitional mechanisms of UTS #46
 * either has or would have changed the result and 'errors',
 * which is an int representing a bitset of the error constants IDNA_ERROR_*.
 * </p>
 * @return string|false The ACE encoded version of the domain name or <b>FALSE</b> on failure.
 */
function idn_to_ascii(string $domain, int $flags = IDNA_DEFAULT, int $variant = INTL_IDNA_VARIANT_UTS46, &$idna_info): string|false {}

/**
 * <div id="function.idn-to-utf8" class="refentry"> <div class="refnamediv">  <h1 class="refname">idn_to_utf8</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.2, PECL idn &gt;= 0.1)</p><p class="refpurpose"><span class="refname">idn_to_utf8</span> — <span class="dc-title">将域名从 IDNA ASCII 转换为 Unicode</span></p> </div> <div class="refsect1 description" id="refsect1-function.idn-to-utf8-description">  <h3 class="title">说明</h3>  <p class="para">过程化风格</p>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>idn_to_utf8</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$domain</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.idna-default">IDNA_DEFAULT</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$variant</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$idna_info</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   该函数将 Unicode 域名从 IDNA ASCII 兼容格式转换为 纯 Unicode（UTF-8 编码）。  </p>   </div> <div class="refsect1 parameters" id="refsect1-function.idn-to-utf8-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       要转换的 IDNA ASCII 兼容格式的域名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       转换选项 — IDNA_* 开头的常量（除 IDNA_ERROR_* 开头的常量）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">variant</span></dt>     <dd>      <p class="para">       对于 IDNA 2003 是 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> (自 PHP 7.2.0 起已弃用)，       对于 UTS #46 是 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> (仅 ICU 4.6 起可用)。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">idna_info</span></dt>     <dd>      <p class="para">       仅当 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> 用于 <span class="parameter" style="color:#3A95FF">variant</span> 时，才可以使用该参数。       在这种情况下，它将用这些键组成的数组来填充：       <span class="literal">'result'</span> 键，转换结果（有可能是一个非法结果）；       <span class="literal">'isTransitionalDifferent'</span> 键，布尔值，指示使用 UTS #46 的过滤机制是否会改变结果；       <span class="literal">'errors'</span> 键，是 IDNA_ERROR_* 常量集里一个常量对应的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.idn-to-utf8-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   UTF-8 编码的 Unicode 域名，  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 changelog" id="refsect1-function.idn-to-utf8-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.4.0</td>       <td>        现在 <span class="parameter" style="color:#3A95FF">variant</span> 的默认值为 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> ，        而不是已弃用的 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> 。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-2003">INTL_IDNA_VARIANT_2003</a></span></strong> 已被弃用；        可以使用 <strong><span><a href="https://php.net/manual/zh/intl.constants.php#constant.intl-idna-variant-uts46">INTL_IDNA_VARIANT_UTS46</a></span></strong> 代替。       </td>      </tr>     </tbody>       </table>   </div>  <div class="refsect1 examples" id="refsect1-function.idn-to-utf8-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2667">   <p><strong>示例 #1 <span class="function"><strong>idn_to_utf8()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">idn_to_utf8</span><span style="color: #007700">(</span><span style="color: #DD0000">'xn--tst-qla.de'</span><span style="color: #007700">); <br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <p class="para">以上示例会输出：</p>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">tÃ¤st.de</blockquote></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.idn-to-utf8-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link idn_to_ascii()} - 将域名转换为 IDNA ASCII 格式</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PHP 7, PECL intl &gt;= 1.0.2, PHP 7, PECL idn &gt;= 0.1)<br/>
 * Convert domain name from IDNA ASCII to Unicode.
 * @link https://php.net/manual/zh/function.idn-to-utf8.php
 * @param string $domain <p>
 * Domain to convert in IDNA ASCII-compatible format.
 * The ASCII encoded domain name. Looks like "xn--..." if the it originally contained non-ASCII characters.
 * </p>
 * @param int $flags [optional] <p>
 * Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants).
 * </p>
 * @param int $variant [optional] <p>
 * Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46.
 * </p>
 * @param array &$idna_info [optional] <p>
 * This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant.
 * In that case, it will be filled with an array with the keys 'result',
 * the possibly illegal result of the transformation, 'isTransitionalDifferent',
 * a boolean indicating whether the usage of the transitional mechanisms of UTS #46
 * either has or would have changed the result and 'errors',
 * which is an int representing a bitset of the error constants IDNA_ERROR_*.
 * </p>
 * @return string|false The UTF-8 encoded version of the domain name or <b>FALSE</b> on failure.
 * RFC 3490 4.2 states though "ToUnicode never fails. If any step fails, then the original input
 * sequence is returned immediately in that step."
 */
function idn_to_utf8(string $domain, int $flags = IDNA_DEFAULT, int $variant = INTL_IDNA_VARIANT_UTS46, &$idna_info): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Create a new IntlCalendar
 * @link https://secure.php.net/manual/en/intlcalendar.createinstance.php
 * @param IntlTimeZone|DateTimeZone|string|null $timezone [optional] <p> <p>
 * The timezone to use.
 * </p>
 *
 * <ul>
 * <li>
 * <p>
 * <b>NULL</b>, in which case the default timezone will be used, as specified in
 * the ini setting {@link https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone date.timezone} or
 * through the function  {@link https://secure.php.net/manual/en/function.date-default-timezone-set.php date_default_timezone_set()} and as
 * returned by {@link https://secure.php.net/manual/en/function.date-default-timezone-get.php date_default_timezone_get()}.
 * </p>
 * </li>
 * <li>
 * <p>
 * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone}, which will be used directly.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone}. Its identifier will be extracted
 * and an ICU timezone object will be created; the timezone will be backed
 * by ICU's database, not PHP's.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link https://secure.php.net/manual/en/language.types.string.php string}, which should be a valid ICU timezone identifier.
 * See  <b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw
 * offsets such as <em>"GMT+08:30"</em> are also accepted.
 * </p>
 * </li>
 * </ul>
 * </p>
 * @param string|null $locale [optional] <p>
 * A locale to use or <b>NULL</b> to use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.default-locale the default locale}.
 * </p>
 * @return IntlCalendar|null
 * The created {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} instance or <b>NULL</b> on
 * failure.
 * @since 5.5
 */
#[Pure]
function intlcal_create_instance($timezone = null, ?string $locale = null): ?IntlCalendar {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get set of locale keyword values
 * @param string $keyword <p>
 * The locale keyword for which relevant values are to be queried. Only
 * <em>'calendar'</em> is supported.
 * </p>
 * @param string $locale <p>
 * The locale onto which the keyword/value pair are to be appended.
 * </p>
 * @param bool $onlyCommon
 * <p>
 * Whether to show only the values commonly used for the specified locale.
 * </p>
 * @return IntlIterator|false An iterator that yields strings with the locale keyword values or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
function intlcal_get_keyword_values_for_locale(string $keyword, string $locale, bool $onlyCommon): IntlIterator|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get number representing the current time
 * @link https://secure.php.net/manual/en/intlcalendar.getnow.php
 * @return float A float representing a number of milliseconds since the epoch, not counting leap seconds.
 * @since 5.5
 */
#[Pure(true)]
function intlcal_get_now(): float {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get array of locales for which there is data
 * @link https://secure.php.net/manual/en/intlcalendar.getavailablelocales.php
 * @return string[] An array of strings, one for which locale.
 * @since 5.5
 */
#[Pure]
function intlcal_get_available_locales(): array {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.get.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int An integer with the value of the time field.
 * @since 5.5
 */
#[Pure]
function intl_get($calendar, $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get time currently represented by the object
 * @param IntlCalendar $calendar <p>The calendar whose time will be checked against this object's time.</p>
 * @return float
 * A {@link https://secure.php.net/manual/en/language.types.float.php float} representing the number of milliseconds elapsed since the
 * reference time (1 Jan 1970 00:00:00 UTC).
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'float|false'], default: 'float')]
function intlcal_get_time(IntlCalendar $calendar) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set the calendar time in milliseconds since the epoch
 * @link https://secure.php.net/manual/en/intlcalendar.settime.php
 * @param IntlCalendar $calendar <p>
 * The IntlCalendar resource.
 * </p>
 * @param float $timestamp <p>
 * An instant represented by the number of number of milliseconds between
 * such instant and the epoch, ignoring leap seconds.
 * </p>
 * @return bool
 * Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
 * @since 5.5
 */
function intlcal_set_time(IntlCalendar $calendar, float $timestamp): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Add a (signed) amount of time to a field
 * @link https://secure.php.net/manual/en/intlcalendar.add.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
 * These are integer values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @param int $value <p>The signed amount to add to the current field. If the amount is positive, the instant will be moved forward; if it is negative, the instant wil be moved into the past. The unit is implicit to the field type.
 * For instance, hours for IntlCalendar::FIELD_HOUR_OF_DAY.</p>
 * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure.
 * @since 5.5
 */
function intlcal_add(IntlCalendar $calendar, int $field, int $value): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set the timezone used by this calendar
 * @link https://secure.php.net/manual/en/intlcalendar.settimezone.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param IntlTimeZone|DateTimeZone|string|null $timezone <p>
 * The new timezone to be used by this calendar. It can be specified in the
 * following ways:
 *
 * </p><ul>
 * <li>
 * <p>
 * <b>NULL</b>, in which case the default timezone will be used, as specified in
 * the ini setting {@link https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone date.timezone} or
 * through the function  {@link https://secure.php.net/manual/en/function.date-default-timezone-set.php date_default_timezone_set()} and as
 * returned by  {@link https://secure.php.net/manual/en/function.date-default-timezone-get.php date_default_timezone_get()}.
 * </p>
 * </li>
 * <li>
 * <p>
 * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone}, which will be used directly.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone}. Its identifier will be extracted
 * and an ICU timezone object will be created; the timezone will be backed
 * by ICU's database, not PHP's.
 * </p>
 * </li>
 * <li>
 * <p>
 * A {@link https://secure.php.net/manual/en/language.types.string.php string}, which should be a valid ICU timezone identifier.
 * See  <b>IntlTimeZone::createTimeZoneIDEnumeration()</b>. Raw
 * offsets such as <em>"GMT+08:30"</em> are also accepted.
 * </p>
 * </li>
 * </ul>
 * @return bool Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
 * @since 5.5
 */
function intlcal_set_time_zone(IntlCalendar $calendar, $timezone): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether this object's time is after that of the passed object
 * https://secure.php.net/manual/en/intlcalendar.after.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param IntlCalendar $other <p>The calendar whose time will be checked against this object's time.</p>
 * @return bool
 * Returns <b>TRUE</b> if this object's current time is after that of the
 * <em>calendar</em> argument's time. Returns <b>FALSE</b> otherwise.
 * Also returns <b>FALSE</b> on failure. You can use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or
 * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to detect error conditions.
 * @since 5.5
 */
#[Pure]
function intlcal_after(IntlCalendar $calendar, IntlCalendar $other): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether this object's time is before that of the passed object
 * @link https://secure.php.net/manual/en/intlcalendar.before.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param IntlCalendar $other <p> The calendar whose time will be checked against this object's time.</p>
 * @return bool
 * <p>
 * Returns <b>TRUE</B> if this object's current time is before that of the
 * <em>calendar</em> argument's time. Returns <b>FALSE</b> otherwise.
 * Also returns <b>FALSE</b> on failure. You can use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or
 * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to detect error conditions.
 * </p>
 * @since 5.5
 */
#[Pure]
function intlcal_before(IntlCalendar $calendar, IntlCalendar $other): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set a time field or several common fields at once
 * @link https://secure.php.net/manual/en/intlcalendar.set.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $year <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @param int $month <p>
 * The new value for <b>IntlCalendar::FIELD_MONTH</b>.
 * </p>
 * @param int $dayOfMonth [optional] <p>
 * The new value for <b>IntlCalendar::FIELD_DAY_OF_MONTH</b>.
 * The month sequence is zero-based, i.e., January is represented by 0,
 * February by 1, ..., December is 11 and Undecember (if the calendar has
 * it) is 12.
 * </p>
 * @param int $hour [optional]
 * <p>
 * The new value for <b>IntlCalendar::FIELD_HOUR_OF_DAY</b>.
 * </p>
 * @param int $minute [optional]
 * <p>
 * The new value for <b>IntlCalendar::FIELD_MINUTE</b>.
 * </p>
 * @param int $second [optional] <p>
 * The new value for <b>IntlCalendar::FIELD_SECOND</b>.
 * </p>
 * @return bool Returns <b>TRUE</b> on success and <b>FALSE</b> on failure.
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
#[Deprecated( reason: 'use IntlCalendar::set(), IntlCalendar::setDate(), or IntlCalendar::setDateTime() instead', since: '8.4' )]
function intlcal_set(IntlCalendar $calendar, int $year, int $month, int $dayOfMonth, int $hour, int $minute, int $second) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Add value to field without carrying into more significant fields
 * @link https://secure.php.net/manual/en/intlcalendar.roll.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>One of the
 * {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time
 * {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
 * These are integer values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @param int|bool $value <p>
 * The (signed) amount to add to the field, <b>TRUE</b> for rolling up (adding
 * <em>1</em>), or <b>FALSE</b> for rolling down (subtracting
 * <em>1</em>).
 * </p>
 * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure.
 * @since 5.5
 */
function intlcal_roll(
    IntlCalendar $calendar,
    int $field,
    #[ElementAvailable(from: '5.3', to: '7.4')] $value = null,
    #[ElementAvailable(from: '8.0')] $value
): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Clear a field or all fields
 * @link https://secure.php.net/manual/en/intlcalendar.clear.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int|null $field [optional] <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return bool Returns <b>TRUE</b> on success or <b>FALSE</b> on failure. Failure can only occur is invalid arguments are provided.
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_clear(IntlCalendar $calendar, ?int $field = null): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Calculate difference between given time and this object's time
 * @link https://secure.php.net/manual/en/intlcalendar.fielddifference.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param float $timestamp <p>
 * The time against which to compare the quantity represented by the
 * <em>field</em>. For the result to be positive, the time
 * given for this parameter must be ahead of the time of the object the
 * method is being invoked on.
 * </p>
 * @param int $field <p>
 * The field that represents the quantity being compared.
 * </p>
 *
 * <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int Returns a (signed) difference of time in the unit associated with the
 * specified field or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_field_difference(IntlCalendar $calendar, float $timestamp, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * The maximum value for a field, considering the object's current time
 * @link https://secure.php.net/manual/en/intlcalendar.getactualmaximum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int
 * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing the maximum value in the units associated
 * with the given <em>field</em> or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_actual_maximum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * The minimum value for a field, considering the object's current time
 * @link https://secure.php.net/manual/en/intlcalendar.getactualminimum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}.
 * These are integer values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int
 * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing the minimum value in the field's
 * unit or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_actual_minimum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @link https://secure.php.net/manual/en/intlcalendar.getdayofweektype.php
 * Tell whether a day is a weekday, weekend or a day that has a transition between the two
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $dayOfWeek <p>
 * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
 * <b>IntlCalendar::DOW_MONDAY</b>, ...,
 * <b>IntlCalendar::DOW_SATURDAY</b>.
 * </p>
 * @return int
 * Returns one of the constants
 * <b>IntlCalendar::DOW_TYPE_WEEKDAY</b>,
 * <b>IntlCalendar::DOW_TYPE_WEEKEND</b>,
 * <b>IntlCalendar::DOW_TYPE_WEEKEND_OFFSET</b> or
 * <b>IntlCalendar::DOW_TYPE_WEEKEND_CEASE</b> or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_day_of_week_type(IntlCalendar $calendar, int $dayOfWeek) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the first day of the week for the calendar's locale
 * @link https://secure.php.net/manual/en/intlcalendar.getfirstdayofweek.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return int
 * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
 * <b>IntlCalendar::DOW_MONDAY</b>, ...,
 * <b>IntlCalendar::DOW_SATURDAY</b> or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_first_day_of_week(IntlCalendar $calendar) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the largest local minimum value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getgreatestminimum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.</p>
 * @return int
 * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing a field value, in the field's
 * unit, or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
function intlcal_greates_minimum($calendar, $field) {}

/**
 * (PHP &gt;= 5.5.0, PECL intl &gt;= 3.0.0a1)<br/>
 * Gets the value for a specific field.
 * @link https://www.php.net/manual/en/intlcalendar.get.php
 * @param IntlCalendar $calendar <p>
 * The IntlCalendar resource.
 * </p>
 * @param int $field <p>
 * One of the IntlCalendar date/time field constants. These are integer values between 0 and IntlCalendar::FIELD_COUNT.
 * </p>
 * @return int An integer with the value of the time field.
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the smallest local maximum for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getleastmaximum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int
 * <p>An {@link https://secure.php.net/manual/en/language.types.integer.ph int} representing a field value in the field's
 * unit or <b>FALSE</b> on failure.
 * </p>
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_least_maximum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the largest local minimum value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getgreatestminimum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.</p>
 * @return int
 * An {@link https://secure.php.net/manual/en/language.types.integer.php int} representing a field value, in the field's
 * unit, or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_greatest_minimum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the locale associated with the object
 * @link https://secure.php.net/manual/en/intlcalendar.getlocale.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $type <p>
 * Whether to fetch the actual locale (the locale from which the calendar
 * data originates, with <b>Locale::ACTUAL_LOCALE</b>) or the
 * valid locale, i.e., the most specific locale supported by ICU relatively
 * to the requested locale – see <b>Locale::VALID_LOCALE</b>.
 * From the most general to the most specific, the locales are ordered in
 * this fashion – actual locale, valid locale, requested locale.
 * </p>
 * @return string
 * A locale string or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'string|false'], default: 'string')]
function intlcal_get_locale(IntlCalendar $calendar, int $type) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the global maximum value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getmaximum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int|false
 * @since 5.5
 */
#[Pure]
function intcal_get_maximum($calendar, $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @link https://secure.php.net/manual/en/intlcalendar.getminimaldaysinfirstweek.php
 * Get minimal number of days the first week in a year or month can have
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return int
 * An {@link https://secure.php.net/manual/en/language.types.integer.php  int} representing a number of days or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_minimal_days_in_first_week(IntlCalendar $calendar) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the global minimum value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getminimum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int
 * An int representing a value for the given field in the field's unit or FALSE on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_minimum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the object's timezone
 * @link https://secure.php.net/manual/en/intlcalendar.gettimezone.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return IntlTimeZone|false
 * An {@link https://secure.php.net/manual/en/class.intltimezone.php IntlTimeZone} object corresponding to the one used
 * internally in this object.
 * @since 5.5
 */
#[Pure]
function intlcal_get_time_zone(IntlCalendar $calendar): IntlTimeZone|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the calendar type
 * @link https://secure.php.net/manual/en/intlcalendar.gettype.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return string
 * A {@link https://secure.php.net/manual/en/language.types.string.php string} representing the calendar type, such as
 * <em>'gregorian'</em>, <em>'islamic'</em>, etc.
 * @since 5.5
 */
#[Pure]
function intlcal_get_type(IntlCalendar $calendar): string {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get time of the day at which weekend begins or ends
 * @link https://secure.php.net/manual/en/intlcalendar.getweekendtransition.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $dayOfWeek <p>
 * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
 * <b>IntlCalendar::DOW_MONDAY</b>, ...,
 * <b>IntlCalendar::DOW_SATURDAY</b>.
 * </p>
 * @return int
 * The number of milliseconds into the day at which the the weekend begins or
 * ends or <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_weekend_transition(IntlCalendar $calendar, int $dayOfWeek) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether the object's time is in Daylight Savings Time
 * @link https://secure.php.net/manual/en/intlcalendar.indaylighttime.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return bool
 * Returns <b>TRUE</b> if the date is in Daylight Savings Time, <b>FALSE</b> otherwise.
 * The value <b>FALSE</b> may also be returned on failure, for instance after
 * specifying invalid field values on non-lenient mode; use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or query
 * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to disambiguate.
 * @since 5.5
 */
#[Pure]
function intlcal_in_daylight_time(IntlCalendar $calendar): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether date/time interpretation is in lenient mode
 * @link https://secure.php.net/manual/en/intlcalendar.islenient.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return bool
 * A {@link https://secure.php.net/manual/en/language.types.boolean.php bool} representing whether the calendar is set to lenient mode.
 * @since 5.5
 */
#[Pure]
function intlcal_is_lenient(IntlCalendar $calendar): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether a field is set
 * @link https://secure.php.net/manual/en/intlcalendar.isset.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return bool Assuming there are no argument errors, returns <b>TRUE</b> iif the field is set.
 * @since 5.5
 */
#[Pure]
function intlcal_is_set(IntlCalendar $calendar, int $field): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the global maximum value for a field
 * @link https://secure.php.net/manual/en/intlcalendar.getmaximum.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $field <p>
 * One of the {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} date/time {@link https://secure.php.net/manual/en/class.intlcalendar.php#intlcalendar.constants field constants}. These are integer
 * values between <em>0</em> and
 * <b>IntlCalendar::FIELD_COUNT</b>.
 * </p>
 * @return int|false
 * @since 5.5
 */
#[Pure]
#[LanguageAware(['8.0' => 'int|false'], default: 'int')]
function intlcal_get_maximum(IntlCalendar $calendar, int $field) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether another calendar is equal but for a different time
 * @link https://secure.php.net/manual/en/intlcalendar.isequivalentto.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param IntlCalendar $other The other calendar against which the comparison is to be made.
 * @return bool
 * Assuming there are no argument errors, returns <b>TRUE</b> iif the calendars are equivalent except possibly for their set time.
 * @since 5.5
 */
#[Pure]
function intlcal_is_equivalent_to(IntlCalendar $calendar, IntlCalendar $other): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Whether a certain date/time is in the weekend
 * @link https://secure.php.net/manual/en/intlcalendar.isweekend.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param float|null $timestamp [optional] <p>
 * An optional timestamp representing the number of milliseconds since the
 * epoch, excluding leap seconds. If <b>NULL</b>, this object's current time is
 * used instead.
 * </p>
 * @return bool
 * <p> A {@link https://secure.php.net/manual/en/language.types.boolean.php bool} indicating whether the given or this object's time occurs
 * in a weekend.
 * </p>
 * <p>
 * The value <b>FALSE</b> may also be returned on failure, for instance after giving
 * a date out of bounds on non-lenient mode; use {@link https://secure.php.net/manual/en/intl.configuration.php#ini.intl.use-exceptions exceptions} or query
 * {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()} to disambiguate.</p>
 * @since 5.5
 */
#[Pure]
function intlcal_is_weekend(IntlCalendar $calendar, ?float $timestamp = null): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set the day on which the week is deemed to start
 * @link https://secure.php.net/manual/en/intlcalendar.setfirstdayofweek.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $dayOfWeek <p>
 * One of the constants <b>IntlCalendar::DOW_SUNDAY</b>,
 * <b>IntlCalendar::DOW_MONDAY</b>, ...,
 * <b>IntlCalendar::DOW_SATURDAY</b>.
 * </p>
 * @return bool Returns TRUE on success. Failure can only happen due to invalid parameters.
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_set_first_day_of_week(IntlCalendar $calendar, int $dayOfWeek) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set whether date/time interpretation is to be lenient
 * @link https://secure.php.net/manual/en/intlcalendar.setlenient.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param bool $lenient <p>
 * Use <b>TRUE</b> to activate the lenient mode; <b>FALSE</b> otherwise.
 * </p>
 * @return bool Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_set_lenient(IntlCalendar $calendar, bool $lenient) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get behavior for handling repeating wall time
 * @link https://secure.php.net/manual/en/intlcalendar.getrepeatedwalltimeoption.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return int
 * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b> or
 * <b>IntlCalendar::WALLTIME_LAST</b>.
 * @since 5.5
 */
#[Pure]
function intlcal_get_repeated_wall_time_option(IntlCalendar $calendar): int {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Compare time of two IntlCalendar objects for equality
 * @link https://secure.php.net/manual/en/intlcalendar.equals.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param IntlCalendar $other
 * @return bool <p>
 * Returns <b>TRUE</b> if the current time of both this and the passed in
 * {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} object are the same, or <b>FALSE</b>
 * otherwise. The value <b>FALSE</b> can also be returned on failure. This can only
 * happen if bad arguments are passed in. In any case, the two cases can be
 * distinguished by calling  {@link https://secure.php.net/manual/en/function.intl-get-error-code.php intl_get_error_code()}.
 * </p>
 * @since 5.5
 */
#[Pure]
function intlcal_equals(IntlCalendar $calendar, IntlCalendar $other): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get behavior for handling skipped wall time
 * @link https://secure.php.net/manual/en/intlcalendar.getskippedwalltimeoption.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return int
 * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b>,
 * <b>IntlCalendar::WALLTIME_LAST</b> or
 * <b>IntlCalendar::WALLTIME_NEXT_VALID</b>.
 * @since 5.5
 */
#[Pure]
function intlcal_get_skipped_wall_time_option(IntlCalendar $calendar): int {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set behavior for handling repeating wall times at negative timezone offset transitions
 * @link https://secure.php.net/manual/en/intlcalendar.setrepeatedwalltimeoption.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $option <p>
 * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b> or
 * <b>IntlCalendar::WALLTIME_LAST</b>.
 * </p>
 * @return bool
 * Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_set_repeated_wall_time_option(IntlCalendar $calendar, int $option) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Set behavior for handling skipped wall times at positive timezone offset transitions
 * @link https://secure.php.net/manual/en/intlcalendar.setskippedwalltimeoption.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @param int $option <p>
 * One of the constants <b>IntlCalendar::WALLTIME_FIRST</b>,
 * <b>IntlCalendar::WALLTIME_LAST</b> or
 * <b>IntlCalendar::WALLTIME_NEXT_VALID</b>.
 * </p>
 * @return bool
 * <p>
 * Returns <b>TRUE</b> on success. Failure can only happen due to invalid parameters.
 * </p>
 * @since 5.5
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_set_skipped_wall_time_option(IntlCalendar $calendar, int $option) {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a2)<br/>
 * Create an IntlCalendar from a DateTime object or string
 * @link https://secure.php.net/manual/en/intlcalendar.fromdatetime.php
 * @param DateTime|string $datetime <p>
 * A {@link https://secure.php.net/manual/en/class.datetime.php DateTime} object or a {@link https://secure.php.net/manual/en/language.types.string.php string} that
 * can be passed to  {@link https://secure.php.net/manual/en/datetime.construct.php DateTime::__construct()}.
 * </p>
 * @param null|string $locale
 * @return IntlCalendar|null
 * The created {@link https://secure.php.net/manual/en/class.intlcalendar.php IntlCalendar} object or <b>NULL</b> in case of
 * failure. If a {@link https://secure.php.net/manual/en/language.types.string.php string} is passed, any exception that occurs
 * inside the {@link https://secure.php.net/manual/en/class.datetime.php DateTime} constructor is propagated.
 * @since 5.5
 */
#[Pure]
function intlcal_from_date_time(
    DateTime|string $datetime,
    #[ElementAvailable(from: '8.0')] ?string $locale = null
): ?IntlCalendar {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a2)<br/>
 * Convert an IntlCalendar into a DateTime object
 * @link https://secure.php.net/manual/en/intlcalendar.todatetime.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return DateTime|false
 * A {@link https://secure.php.net/manual/en/class.datetime.php DateTime} object with the same timezone as this
 * object (though using PHP's database instead of ICU's) and the same time,
 * except for the smaller precision (second precision instead of millisecond).
 * Returns <b>FALSE</b> on failure.
 * @since 5.5
 */
#[Pure]
function intlcal_to_date_time(IntlCalendar $calendar): DateTime|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get last error code on the object
 * @link https://secure.php.net/manual/en/intlcalendar.geterrorcode.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return int|false An ICU error code indicating either success, failure or a warning.
 * @since 5.5
 */
#[Pure(true)]
function intlcal_get_error_code(IntlCalendar $calendar): int|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get last error message on the object
 * @link https://secure.php.net/manual/en/intlcalendar.geterrormessage.php
 * @param IntlCalendar $calendar <p>
 * The calendar object, on the procedural style interface.
 * </p>
 * @return string|false The error message associated with last error that occurred in a function call on this object, or a string indicating the non-existance of an error.
 * @since 5.5
 */
#[Pure(true)]
function intlcal_get_error_message(IntlCalendar $calendar): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the number of IDs in the equivalency group that includes the given ID
 * @link https://secure.php.net/manual/en/intltimezone.countequivalentids.php
 * @param string $timezoneId
 * @return int|false
 * @since 5.5
 */
#[Pure]
function intltz_count_equivalent_ids(string $timezoneId): int|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Create a new copy of the default timezone for this host
 * @link https://secure.php.net/manual/en/intltimezone.createdefault.php
 * @return IntlTimeZone
 * @since 5.5
 */
#[Pure]
function intlz_create_default() {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @link https://secure.php.net/manual/en/intltimezone.createenumeration.php
 * @param IntlTimeZone|string|int|float|null $countryOrRawOffset [optional]
 * @return IntlIterator|false
 * @since 5.5
 */
#[Pure]
function intltz_create_enumeration($countryOrRawOffset): IntlIterator|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @link https://secure.php.net/manual/en/intltimezone.createtimezone.php
 * @param string $timezoneId
 * @return IntlTimeZone|null
 * @since 5.5
 */
#[Pure]
function intltz_create_time_zone(string $timezoneId): ?IntlTimeZone {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @link https://secure.php.net/manual/en/intltimezone.fromdatetimezone.php
 * @param DateTimeZone $timezone
 * @return IntlTimeZone|null
 * @since 5.5
 */
#[Pure]
function intltz_from_date_time_zone(DateTimeZone $timezone): ?IntlTimeZone {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID
 * @link https://secure.php.net/manual/en/intltimezone.getcanonicalid.php
 * @param string $timezoneId
 * @param bool &$isSystemId [optional]
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_canonical_id(string $timezoneId, &$isSystemId): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get a name of this time zone suitable for presentation to the user
 * @param IntlTimeZone $timezone - <p>
 * The time zone object, on the procedural style interface.
 * </p>
 * @param bool $dst [optional]
 * @param int $style [optional]
 * @param string|null $locale [optional]
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_display_name(IntlTimeZone $timezone, bool $dst = false, int $style = 2, ?string $locale): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the amount of time to be added to local standard time to get local wall clock time
 * @param IntlTimeZone $timezone - <p>
 * The time zone object, on the procedural style interface.
 * </p>
 * @return int
 * @link https://secure.php.net/manual/en/intltimezone.getequivalentid.php
 * @since 5.5
 */
#[Pure]
function intltz_get_dst_savings(IntlTimeZone $timezone): int {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get an ID in the equivalency group that includes the given ID
 * @link https://secure.php.net/manual/en/intltimezone.getequivalentid.php
 * @param string $timezoneId
 * @param int $offset
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_equivalent_id(string $timezoneId, int $offset): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get last error code on the object
 * @link https://secure.php.net/manual/en/intltimezone.geterrorcode.php
 * @param IntlTimeZone $timezone - <p>
 * The time zone object, on the procedural style interface.
 * </p>
 * @return int|false
 * @since 5.5
 */
#[Pure(true)]
function intltz_get_error_code(IntlTimeZone $timezone): int|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get last error message on the object
 * @link https://secure.php.net/manual/en/intltimezone.geterrormessage.php
 * @param IntlTimeZone $timezone - <p>
 * The time zone object, on the procedural style interface.
 * </p>
 * @return string|false
 * @since 5.5
 */
#[Pure(true)]
function intltz_get_error_message(IntlTimeZone $timezone): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Create GMT (UTC) timezone
 * @link https://secure.php.net/manual/en/intltimezone.getgmt.php
 * @return IntlTimeZone
 * @since 5.5
 */
#[Pure]
function intltz_getGMT(): IntlTimeZone {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get timezone ID
 * @link https://secure.php.net/manual/en/intltimezone.getid.php
 * @param IntlTimeZone $timezone
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_id(IntlTimeZone $timezone): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the time zone raw and GMT offset for the given moment in time
 * @link https://secure.php.net/manual/en/intltimezone.getoffset.php
 * @param IntlTimeZone $timezone
 * @param float $timestamp
 * @param bool $local
 * @param int &$rawOffset
 * @param int &$dstOffset
 * @return bool
 * @since 5.5
 */
#[Pure]
function intltz_get_offset(IntlTimeZone $timezone, float $timestamp, bool $local, &$rawOffset, &$dstOffset): bool {}

/**
 * Get the raw GMT offset (before taking daylight savings time into account
 * @link https://secure.php.net/manual/en/intltimezone.getrawoffset.php
 * @param IntlTimeZone $timezone
 * @return int
 */
#[Pure]
function intltz_get_raw_offset(IntlTimeZone $timezone): int {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Get the timezone data version currently used by ICU
 * @link https://secure.php.net/manual/en/intltimezone.gettzdataversion.php
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_tz_data_version(): string|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Check if this zone has the same rules and offset as another zone
 * @link https://secure.php.net/manual/en/intltimezone.hassamerules.php
 * @param IntlTimeZone $timezone
 * @param IntlTimeZone $other
 * @return bool
 * @since 5.5
 */
#[Pure]
function intltz_has_same_rules(
    IntlTimeZone $timezone,
    #[ElementAvailable(from: '5.5', to: '7.4')] IntlTimeZone $other = null,
    #[ElementAvailable(from: '8.0')] IntlTimeZone $other
): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Convert to DateTimeZone object
 * @link https://secure.php.net/manual/en/intltimezone.todatetimezone.php
 * @param IntlTimeZone $timezone
 * @return DateTimeZone|false
 * @since 5.5
 */
#[Pure]
function intltz_to_date_time_zone(IntlTimeZone $timezone): DateTimeZone|false {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * Check if this time zone uses daylight savings time
 * @link https://secure.php.net/manual/en/intltimezone.usedaylighttime.php
 * @param IntlTimeZone $timezone
 * @return bool
 * @since 5.5
 */
#[Pure]
function intltz_use_daylight_time(IntlTimeZone $timezone): bool {}

/**
 * (PHP 5 &gt;=5.5.0 PECL intl &gt;= 3.0.0a1)<br/>
 * @param DateTimeZone|IntlTimeZone|string|int|null $timezoneOrYear [optional]
 * @param string|null $localeOrMonth [optional]
 * @param int $day [optional]
 * @param int $hour [optional]
 * @param int $minute [optional]
 * @param int $second [optional]
 * @return IntlGregorianCalendar|null
 * @since 5.5
 */
#[Pure]
#[Deprecated( reason: 'use IntlGregorianCalendar::__construct(), IntlGregorianCalendar::createFromDate(), or IntlGregorianCalendar::createFromDateTime() instead', since: '8.4' )]
function intlgregcal_create_instance($timezoneOrYear, $localeOrMonth, $day, $hour, $minute, $second): ?IntlGregorianCalendar {}

/**
 * @param IntlGregorianCalendar $calendar
 * @param float $timestamp
 * @return bool
 */
function intlgregcal_set_gregorian_change(IntlGregorianCalendar $calendar, float $timestamp): bool {}

/**
 * @param IntlGregorianCalendar $calendar
 * @return float
 */
#[Pure]
function intlgregcal_get_gregorian_change(IntlGregorianCalendar $calendar): float {}

/**
 * @param IntlGregorianCalendar $calendar
 * @param int $year
 * @return bool
 */
#[Pure]
function intlgregcal_is_leap_year(IntlGregorianCalendar $calendar, int $year): bool {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Create a resource bundle
 * @link https://php.net/manual/en/resourcebundle.create.php
 * @param string|null $locale <p>
 * Locale for which the resources should be loaded (locale name, e.g. en_CA).
 * </p>
 * @param string|null $bundle <p>
 * The directory where the data is stored or the name of the .dat file.
 * </p>
 * @param bool $fallback [optional] <p>
 * Whether locale should match exactly or fallback to parent locale is allowed.
 * </p>
 * @return ResourceBundle|null <b>ResourceBundle</b> object or <b>NULL</b> on error.
 */
#[Pure]
function resourcebundle_create(?string $locale, ?string $bundle, bool $fallback = true): ?ResourceBundle {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Get data from the bundle
 * @link https://php.net/manual/en/resourcebundle.get.php
 * @param ResourceBundle $bundle
 * @param string|int $index <p>
 * Data index, must be string or integer.
 * </p>
 * @param bool $fallback
 * @return mixed the data located at the index or <b>NULL</b> on error. Strings, integers and binary data strings
 * are returned as corresponding PHP types, integer array is returned as PHP array. Complex types are
 * returned as <b>ResourceBundle</b> object.
 */
#[Pure]
#[LanguageAware(['8.4' => 'ResourceBundle|array|string|int|null'], default: 'mixed')]
function resourcebundle_get(ResourceBundle $bundle, string|int $index, bool $fallback = true) {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Get number of elements in the bundle
 * @link https://php.net/manual/en/resourcebundle.count.php
 * @param ResourceBundle $bundle
 * @return int number of elements in the bundle.
 */
#[Pure]
function resourcebundle_count(ResourceBundle $bundle): int {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Get supported locales
 * @link https://php.net/manual/en/resourcebundle.locales.php
 * @param string $bundle <p>
 * Path of ResourceBundle for which to get available locales, or
 * empty string for default locales list.
 * </p>
 * @return array|false the list of locales supported by the bundle.
 */
#[Pure]
function resourcebundle_locales(string $bundle): array|false {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Get bundle's last error code.
 * @link https://php.net/manual/en/resourcebundle.geterrorcode.php
 * @param ResourceBundle $bundle
 * @return int error code from last bundle object call.
 */
#[Pure(true)]
function resourcebundle_get_error_code(ResourceBundle $bundle): int {}

/**
 * (PHP &gt;= 5.3.2, PECL intl &gt;= 2.0.0)<br/>
 * Get bundle's last error message.
 * @link https://php.net/manual/en/resourcebundle.geterrormessage.php
 * @param ResourceBundle $bundle
 * @return string error message from last bundle object's call.
 */
#[Pure(true)]
function resourcebundle_get_error_message(ResourceBundle $bundle): string {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Create a transliterator
 * @link https://php.net/manual/en/transliterator.create.php
 * @param string $id <p>
 * The id.
 * </p>
 * @param int $direction <p>
 * The direction, defaults to
 * Transliterator::FORWARD.
 * May also be set to
 * Transliterator::REVERSE.
 * </p>
 * @return Transliterator|null a <b>Transliterator</b> object on success,
 * or <b>NULL</b> on failure.
 * @since 5.4
 */
#[Pure]
function transliterator_create(string $id, int $direction = 0): ?Transliterator {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Create transliterator from rules
 * @link https://php.net/manual/en/transliterator.createfromrules.php
 * @param string $rules <p>
 * The rules.
 * </p>
 * @param int $direction <p>
 * The direction, defaults to
 * Transliterator::FORWARD.
 * May also be set to
 * Transliterator::REVERSE.
 * </p>
 * @return Transliterator|null a <b>Transliterator</b> object on success,
 * or <b>NULL</b> on failure.
 * @since 5.4
 */
#[Pure]
function transliterator_create_from_rules(string $rules, int $direction = 0): ?Transliterator {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Get transliterator IDs
 * @link https://php.net/manual/en/transliterator.listids.php
 * @return string[]|false An array of registered transliterator IDs on success,
 * or <b>FALSE</b> on failure.
 * @since 5.4
 */
#[Pure]
function transliterator_list_ids(): array|false {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Create an inverse transliterator
 * @link https://php.net/manual/en/transliterator.createinverse.php
 * @param Transliterator $transliterator
 * @return Transliterator|null a <b>Transliterator</b> object on success,
 * or <b>NULL</b> on failure
 * @since 5.4
 */
#[Pure]
function transliterator_create_inverse(Transliterator $transliterator): ?Transliterator {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Transliterate a string
 * @link https://php.net/manual/en/transliterator.transliterate.php
 * @param Transliterator|string $transliterator
 * @param string $string <p>
 * The string to be transformed.
 * </p>
 * @param int $start <p>
 * The start index (in UTF-16 code units) from which the string will start
 * to be transformed, inclusive. Indexing starts at 0. The text before will
 * be left as is.
 * </p>
 * @param int $end <p>
 * The end index (in UTF-16 code units) until which the string will be
 * transformed, exclusive. Indexing starts at 0. The text after will be
 * left as is.
 * </p>
 * @return string|false The transfomed string on success, or <b>FALSE</b> on failure.
 * @since 5.4
 */
#[Pure]
function transliterator_transliterate(Transliterator|string $transliterator, string $string, int $start = 0, int $end = -1): string|false {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Get last error code
 * @link https://php.net/manual/en/transliterator.geterrorcode.php
 * @param Transliterator $transliterator
 * @return int|false The error code on success,
 * or <b>FALSE</b> if none exists, or on failure.
 * @since 5.4
 */
#[Pure(true)]
function transliterator_get_error_code(Transliterator $transliterator): int|false {}

/**
 * (PHP &gt;= 5.4.0, PECL intl &gt;= 2.0.0)<br/>
 * Get last error message
 * @link https://php.net/manual/en/transliterator.geterrormessage.php
 * @param Transliterator $transliterator
 * @return string|false The error code on success,
 * or <b>FALSE</b> if none exists, or on failure.
 * @since 5.4
 */
#[Pure(true)]
function transliterator_get_error_message(Transliterator $transliterator): string|false {}

/**
 * <div id="function.intl-get-error-code" class="refentry"> <div class="refnamediv">  <h1 class="refname">intl_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">intl_get_error_code</span> — <span class="dc-title">Get the last error code</span></p> </div> <div class="refsect1 description" id="refsect1-function.intl-get-error-code-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intl_get_error_code</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Useful to handle errors occurred in static methods when there's no object to   get error code from.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.intl-get-error-code-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.intl-get-error-code-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Error code returned by the last API function call.  </p> </div> <div class="refsect1 examples" id="refsect1-function.intl-get-error-code-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2727">    <p><strong>示例 #1 <span class="function"><strong>intl_get_error_code()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'&lt;bad_param&gt;' </span><span style="color: #007700">);<br>if( !</span><span style="color: #9876AA">\$coll </span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">handle_error</span><span style="color: #007700">( </span><span style="color: #9876AA">intl_get_error_code</span><span style="color: #007700">() );<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.intl-get-error-code-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>    <li><span class="function">{@link intl_error_name()} - Get symbolic name for a given error code</span></li>    <li><span class="function">{@link intl_get_error_message()} - Get description of the last error</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.geterrorcode.php" class="function" rel="rdfs-seeAlso">collator_get_error_code()</a> - Get collator's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrorcode.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_code()</a> - Get formatter's last error code</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get the last error code
 * @link https://php.net/manual/zh/function.intl-get-error-code.php
 * @return int Error code returned by the last API function call.
 */
#[Pure(true)]
function intl_get_error_code(): int {}

/**
 * <div id="function.intl-get-error-message" class="refentry"> <div class="refnamediv">  <h1 class="refname">intl_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">intl_get_error_message</span> — <span class="dc-title">Get description of the last error</span></p> </div> <div class="refsect1 description" id="refsect1-function.intl-get-error-message-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intl_get_error_message</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get error message from last internationalization function called.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.intl-get-error-message-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.intl-get-error-message-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Description of an error occurred in the last API function call.  </p> </div> <div class="refsect1 examples" id="refsect1-function.intl-get-error-message-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2728">    <p><strong>示例 #1 <span class="function"><strong>intl_get_error_message()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">if( </span><span style="color: #9876AA">Collator</span><span style="color: #007700">::</span><span style="color: #9876AA">getAvailableLocales</span><span style="color: #007700">() === </span><span style="color: #9876AA">false </span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">show_error</span><span style="color: #007700">( </span><span style="color: #9876AA">intl_get_error_message</span><span style="color: #007700">() );<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.intl-get-error-message-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link intl_error_name()} - Get symbolic name for a given error code</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.geterrormessage.php" class="function" rel="rdfs-seeAlso">collator_get_error_message()</a> - Get text for collator's last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/numberformatter.geterrormessage.php" class="function" rel="rdfs-seeAlso">numfmt_get_error_message()</a> - Get formatter's last error message</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get description of the last error
 * @link https://php.net/manual/zh/function.intl-get-error-message.php
 * @return string Description of an error occurred in the last API function call.
 */
#[Pure(true)]
function intl_get_error_message(): string {}

/**
 * <div id="function.intl-is-failure" class="refentry"> <div class="refnamediv">  <h1 class="refname">intl_is_failure</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">intl_is_failure</span> — <span class="dc-title">Check whether the given error code indicates failure</span></p> </div> <div class="refsect1 description" id="refsect1-function.intl-is-failure-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intl_is_failure</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$errorCode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">     </p> </div> <div class="refsect1 parameters" id="refsect1-function.intl-is-failure-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">errorCode</span></dt>     <dd>      <p class="para">       is a value that returned by functions:       <span class="function">{@link intl_get_error_code()}</span>,       <span class="function"><a href="https://php.net/manual/zh/collator.geterrorcode.php" class="function">collator_get_error_code()</a></span> .      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.intl-is-failure-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if it the code indicates some failure, and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>   in case of success or a warning.  </p> </div> <div class="refsect1 examples" id="refsect1-function.intl-is-failure-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2729">    <p><strong>示例 #1 <span class="function"><strong>intl_is_failure()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">check</span><span style="color: #007700">( </span><span style="color: #9876AA">\$err_code </span><span style="color: #007700">)<br>{<br>    </span><span style="color: #9876AA">var_export</span><span style="color: #007700">( </span><span style="color: #9876AA">intl_is_failure</span><span style="color: #007700">( </span><span style="color: #9876AA">\$err_code </span><span style="color: #007700">) );<br>    echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">check</span><span style="color: #007700">( </span><span style="color: #9876AA">U_ZERO_ERROR </span><span style="color: #007700">);<br></span><span style="color: #9876AA">check</span><span style="color: #007700">( </span><span style="color: #9876AA">U_USING_FALLBACK_WARNING </span><span style="color: #007700">);<br></span><span style="color: #9876AA">check</span><span style="color: #007700">( </span><span style="color: #9876AA">U_ILLEGAL_ARGUMENT_ERROR </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">false<br>false<br>true</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.intl-is-failure-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function"><a href="https://php.net/manual/zh/collator.geterrorcode.php" class="function" rel="rdfs-seeAlso">collator_get_error_code()</a> - Get collator's last error code</span></li>    <li><span class="function"><strong>Collator-getErrorCode()</strong></span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Check whether the given error code indicates failure
 * @link https://php.net/manual/zh/function.intl-is-failure.php
 * @param int $errorCode <p>
 * is a value that returned by functions:
 * <b>intl_get_error_code</b>,
 * <b>collator_get_error_code</b> .
 * </p>
 * @return bool <b>TRUE</b> if it the code indicates some failure, and <b>FALSE</b>
 * in case of success or a warning.
 */
#[Pure]
function intl_is_failure(int $errorCode): bool {}

/**
 * <div id="function.intl-error-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">intl_error_name</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8, PECL intl &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">intl_error_name</span> — <span class="dc-title">Get symbolic name for a given error code</span></p> </div>  <div class="refsect1 description" id="refsect1-function.intl-error-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intl_error_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$errorCode</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Return ICU error code name.  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.intl-error-name-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">errorCode</span></dt>     <dd>      <p class="para">       ICU error code.      </p>     </dd>       </dl>   </div>  <div class="refsect1 returnvalues" id="refsect1-function.intl-error-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The returned string will be the same as the name of the error code   constant.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.intl-error-name-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2726">    <p><strong>示例 #1 <span class="function"><strong>intl_error_name()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$coll     </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_create</span><span style="color: #007700">( </span><span style="color: #DD0000">'en_RU' </span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$err_code </span><span style="color: #007700">= </span><span style="color: #9876AA">collator_get_error_code</span><span style="color: #007700">( </span><span style="color: #9876AA">\$coll </span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">printf</span><span style="color: #007700">( </span><span style="color: #DD0000">"Symbolic name for %d is %s\n."</span><span style="color: #007700">, </span><span style="color: #9876AA">\$err_code</span><span style="color: #007700">, </span><span style="color: #9876AA">intl_error_name</span><span style="color: #007700">( </span><span style="color: #9876AA">\$err_code </span><span style="color: #007700">) );<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Symbolic&nbsp;name&nbsp;for&nbsp;-128&nbsp;is&nbsp;U_USING_FALLBACK_WARNING.</blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-function.intl-error-name-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link intl_is_failure()} - Check whether the given error code indicates failure</span></li>    <li><span class="function">{@link intl_get_error_code()} - Get the last error code</span></li>    <li><span class="function">{@link intl_get_error_message()} - Get description of the last error</span></li>   </ul>   </div></div>
 * 
 * (PHP 5 &gt;= 5.3.0, PECL intl &gt;= 1.0.0)<br/>
 * Get symbolic name for a given error code
 * @link https://php.net/manual/zh/function.intl-error-name.php
 * @param int $errorCode <p>
 * ICU error code.
 * </p>
 * @return string The returned string will be the same as the name of the error code
 * constant.
 */
#[Pure]
function intl_error_name(int $errorCode): string {}

/**
 * Gets the Decomposition_Mapping property for the given UTF-8 encoded code point
 *
 * @link https://www.php.net/manual/en/normalizer.getrawdecomposition.php
 *
 * @param string $string
 * @param int $form
 * @return string|null
 *
 * @since 7.3
 */
#[Pure]
function normalizer_get_raw_decomposition(string $string, #[ElementAvailable(from: '8.0')] int $form = Normalizer::FORM_C): ?string {}

/**
 * @return IntlTimeZone
 * @since 5.5
 */
#[Pure]
function intltz_create_default(): IntlTimeZone {}

/**
 * @return IntlTimeZone
 * @since 5.5
 */
#[Pure]
function intltz_get_gmt(): IntlTimeZone {}

/**
 * @return IntlTimeZone
 * @since 5.5
 */
#[Pure]
function intltz_get_unknown(): IntlTimeZone {}

/**
 * @param int $type
 * @param null|string $region
 * @param null|int $rawOffset
 * @return IntlIterator|false
 * @since 5.5
 */
#[Pure]
function intltz_create_time_zone_id_enumeration(int $type, ?string $region = null, ?int $rawOffset = null): IntlIterator|false {}

/**
 * @param string $timezoneId
 * @return string|false
 * @since 5.5
 */
#[Pure]
function intltz_get_region(string $timezoneId): string|false {}

/**
 * Set minimal number of days the first week in a year or month can have
 *
 * @link https://www.php.net/manual/en/intlcalendar.setminimaldaysinfirstweek.php
 *
 * @param IntlCalendar $calendar
 * @param int $days
 * @return bool
 *
 * @since 5.5.1
 */
#[LanguageAware(['8.3' => 'true'], default: 'bool')]
function intlcal_set_minimal_days_in_first_week(IntlCalendar $calendar, int $days) {}


function intltz_get_windows_id(string $timezoneId): string|false {}


function intltz_get_id_for_windows_id(string $timezoneId, ?string $region = null): string|false {}

/**
 * <div id="function.grapheme-str-split" class="refentry"> <div class="refnamediv">  <h1 class="refname">grapheme_str_split</h1>  <p class="verinfo">(PHP 8 &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">grapheme_str_split</span> — <span class="dc-title">Split a string into an array</span></p> </div> <div class="refsect1 description" id="refsect1-function.grapheme-str-split-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>grapheme_str_split</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = 1</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="simpara">   This function will return an array of strings,   it is a version of <span class="function">{@link str_split()}</span>   with support for grapheme cluster byte characters.   If the <span class="parameter" style="color:#3A95FF">length</span> parameter is specified,   the string is broken down into chunks of the specified length   in grapheme clusters (not bytes).  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.grapheme-str-split-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to split into grapheme clusters or chunks.      <span class="parameter" style="color:#3A95FF">string</span> must be valid UTF-8.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      Each element of the returned array will be composed of <span class="parameter" style="color:#3A95FF">length</span> grapheme clusters.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.grapheme-str-split-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   <span class="function"><strong>grapheme_str_split()</strong></span> returns an array of strings,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.grapheme-str-split-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   If <span class="parameter" style="color:#3A95FF">length</span> is less than <span class="literal">1</span>,   a <span class="classname"><a href="https://php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> will be thrown.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.grapheme-str-split-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link str_split()} - 将字符串转换为数组</span></li>   <li><span class="function">{@link mb_str_split()} - 指定多字节字符串，返回其字符数组</span></li>   <li>    <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" class="link external">»&nbsp;     Unicode Text Segmentation: Grapheme Cluster Boundaries    </a>   </li>  </ul> </div></div>
 * 
 * @since 8.4
 */
function grapheme_str_split(string $string, int $length = 1): array|false {}

/**
 * @since  8.4
 */
function intltz_get_iana_id(string $timezoneId): string|false {}

/**
 * <span class="simpara">      Limit on locale length, set to 80 in PHP code. Locale names longer      than this limit will not be accepted.     </span>
 * 
 * Limit on locale length, set to 80 in PHP code. Locale names longer
 * than this limit will not be accepted.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('INTL_MAX_LOCALE_LEN', 156);
/**
 * <span class="simpara">      The current ICU library version as a dotted-decimal string.     </span>
 */
define('INTL_ICU_VERSION', "74.1");
/**
 * <span class="simpara">      Data version in ICU4C.     </span>
 */
define('INTL_ICU_DATA_VERSION', "74.1");
/**
 * <span class="simpara">      The locale the data actually comes from.     </span>
 */
define('ULOC_ACTUAL_LOCALE', 0);
/**
 * <span class="simpara">      The most specific locale supported by ICU.     </span>
 */
define('ULOC_VALID_LOCALE', 1);
/**
 * <span class="simpara">      The number of default grapheme clusters to extract.     </span>
 */
define('GRAPHEME_EXTR_COUNT', 0);
/**
 * <span class="simpara">      The maximum number of bytes returned.     </span>
 */
define('GRAPHEME_EXTR_MAXBYTES', 1);
/**
 * <span class="simpara">      The maximum number of UTF-8 characters returned.     </span>
 */
define('GRAPHEME_EXTR_MAXCHARS', 2);
/**
 * <span class="simpara">      A resource bundle lookup returned a fallback result (not an error).     </span>
 */
define('U_USING_FALLBACK_WARNING', -128);
/**
 * <span class="simpara">      Start of information results (semantically successful).     </span>
 */
define('U_ERROR_WARNING_START', -128);
/**
 * <span class="simpara">      A resource bundle lookup returned a result from the root locale (not an error).     </span>
 */
define('U_USING_DEFAULT_WARNING', -127);
/**
 * <span class="simpara">      A <code class="code">SafeClone</code> operation required allocating memory (informational only).     </span>
 */
define('U_SAFECLONE_ALLOCATED_WARNING', -126);
/**
 * <span class="simpara">      ICU has to use compatibility layer to construct the service.      Expect performance/memory usage degradation.     </span>
 */
define('U_STATE_OLD_WARNING', -125);
/**
 * <span class="simpara">      An output string could not be NUL-terminated because output <code class="code">length==destCapacity</code>.     </span>
 */
define('U_STRING_NOT_TERMINATED_WARNING', -124);
/**
 * <span class="simpara">      Number of levels requested in <code class="code">getBound</code> is higher      than the number of levels in the sort key.     </span>
 */
define('U_SORT_KEY_TOO_SHORT_WARNING', -123);
/**
 * <span class="simpara">      This converter alias can go to different converter implementations.     </span>
 */
define('U_AMBIGUOUS_ALIAS_WARNING', -122);
/**
 * <span class="simpara">      ucol_open encountered a mismatch between UCA version and collator image version,      so the collator was constructed from rules. No impact to further function.     </span>
 */
define('U_DIFFERENT_UCA_VERSION', -121);
/**
 * <span class="simpara">      This must always be the last warning value to indicate      the limit for UErrorCode warnings (last warning code +1).     </span>
 */
define('U_ERROR_WARNING_LIMIT', -119);
/**
 * <span class="simpara">      No error, no warning.     </span>
 */
define('U_ZERO_ERROR', 0);
/**
 * <span class="simpara">      Indicates an incorrect argument value.     </span>
 */
define('U_ILLEGAL_ARGUMENT_ERROR', 1);
/**
 * <span class="simpara">      The requested resource cannot be found.     </span>
 */
define('U_MISSING_RESOURCE_ERROR', 2);
/**
 * <span class="simpara">      Data format is not what is expected.     </span>
 */
define('U_INVALID_FORMAT_ERROR', 3);
/**
 * <span class="simpara">      The requested file cannot be found.     </span>
 */
define('U_FILE_ACCESS_ERROR', 4);
/**
 * <span class="simpara">      Indicates a bug in the library code.     </span>
 */
define('U_INTERNAL_PROGRAM_ERROR', 5);
/**
 * <span class="simpara">      Unable to parse a message (message format).     </span>
 */
define('U_MESSAGE_PARSE_ERROR', 6);
/**
 * <span class="simpara">      Memory allocation error.     </span>
 */
define('U_MEMORY_ALLOCATION_ERROR', 7);
/**
 * <span class="simpara">      Trying to access the index that is out of bounds.     </span>
 */
define('U_INDEX_OUTOFBOUNDS_ERROR', 8);
/**
 * <span class="simpara">      Equivalent to Java <code class="code">ParseException</code>.     </span>
 */
define('U_PARSE_ERROR', 9);
/**
 * <span class="simpara">      Character conversion: Unmappable input sequence. In other APIs: Invalid character.     </span>
 */
define('U_INVALID_CHAR_FOUND', 10);
/**
 * <span class="simpara">      Character conversion: Incomplete input sequence.     </span>
 */
define('U_TRUNCATED_CHAR_FOUND', 11);
/**
 * <span class="simpara">      Character conversion: Illegal input sequence.     </span>
 */
define('U_ILLEGAL_CHAR_FOUND', 12);
/**
 * <span class="simpara">      Conversion table file found, but corrupted.     </span>
 */
define('U_INVALID_TABLE_FORMAT', 13);
/**
 * <span class="simpara">      Conversion table file not found.     </span>
 */
define('U_INVALID_TABLE_FILE', 14);
/**
 * <span class="simpara">      A result would not fit in the supplied buffer.     </span>
 */
define('U_BUFFER_OVERFLOW_ERROR', 15);
/**
 * <span class="simpara">      Requested operation not supported in current context.     </span>
 */
define('U_UNSUPPORTED_ERROR', 16);
/**
 * <span class="simpara">      An operation is requested over a resource that does not support it.     </span>
 */
define('U_RESOURCE_TYPE_MISMATCH', 17);
/**
 * <span class="simpara">      ISO-2022 illlegal escape sequence.     </span>
 */
define('U_ILLEGAL_ESCAPE_SEQUENCE', 18);
/**
 * <span class="simpara">      ISO-2022 unsupported escape sequence.     </span>
 */
define('U_UNSUPPORTED_ESCAPE_SEQUENCE', 19);
/**
 * <span class="simpara">      No space available for in-buffer expansion for Arabic shaping.     </span>
 */
define('U_NO_SPACE_AVAILABLE', 20);
/**
 * <span class="simpara">      Currently used only while setting variable top, but can be used generally.     </span>
 */
define('U_CE_NOT_FOUND_ERROR', 21);
/**
 * <span class="simpara">      User tried to set variable top to a primary that is longer than two bytes.     </span>
 */
define('U_PRIMARY_TOO_LONG_ERROR', 22);
/**
 * <span class="simpara">      ICU cannot construct a service from this state, as it is no longer supported.     </span>
 */
define('U_STATE_TOO_OLD_ERROR', 23);
/**
 * <span class="simpara">      There are too many aliases in the path to the requested resource.      It is very possible that a circular alias definition has occured.     </span>
 */
define('U_TOO_MANY_ALIASES_ERROR', 24);
/**
 * <span class="simpara">      <code class="code">UEnumeration</code> out of sync with underlying collection.     </span>
 */
define('U_ENUM_OUT_OF_SYNC_ERROR', 25);
/**
 * <span class="simpara">      Unable to convert a <code class="code">UChar*</code> string to <code class="code">char*</code>      with the invariant converter.     </span>
 */
define('U_INVARIANT_CONVERSION_ERROR', 26);
/**
 * <span class="simpara">      Requested operation can not be completed with ICU in its current state.     </span>
 */
define('U_INVALID_STATE_ERROR', 27);
/**
 * <span class="simpara">      Collator version is not compatible with the base version.     </span>
 */
define('U_COLLATOR_VERSION_MISMATCH', 28);
/**
 * <span class="simpara">      Collator is options only and no base is specified.     </span>
 */
define('U_USELESS_COLLATOR_ERROR', 29);
/**
 * <span class="simpara">      Attempt to modify read-only or constant data.     </span>
 */
define('U_NO_WRITE_PERMISSION', 30);
/**
 * <span class="simpara">      This must always be the last value to indicate the limit for standard errors.     </span>
 */
define('U_STANDARD_ERROR_LIMIT', 32);
/**
 * <span class="simpara">      Missing <code class="literal">'\$'</code> or duplicate variable name.     </span>
 */
define('U_BAD_VARIABLE_DEFINITION', 65536);
/**
 * <span class="simpara">      Start of Transliterator errors.     </span>
 */
define('U_PARSE_ERROR_START', 65536);
/**
 * <span class="simpara">      Elements of a rule are misplaced.     </span>
 */
define('U_MALFORMED_RULE', 65537);
/**
 * <span class="simpara">      A <code class="code">UnicodeSet</code> pattern is invalid.     </span>
 */
define('U_MALFORMED_SET', 65538);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_MALFORMED_SYMBOL_REFERENCE', 65539);
/**
 * <span class="simpara">      A Unicode escape pattern is invalid.     </span>
 */
define('U_MALFORMED_UNICODE_ESCAPE', 65540);
/**
 * <span class="simpara">      A variable definition is invalid.     </span>
 */
define('U_MALFORMED_VARIABLE_DEFINITION', 65541);
/**
 * <span class="simpara">      A variable reference is invalid.     </span>
 */
define('U_MALFORMED_VARIABLE_REFERENCE', 65542);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_MISMATCHED_SEGMENT_DELIMITERS', 65543);
/**
 * <span class="simpara">      A start anchor appears at an illegal position.     </span>
 */
define('U_MISPLACED_ANCHOR_START', 65544);
/**
 * <span class="simpara">      A cursor offset occurs at an illegal position.     </span>
 */
define('U_MISPLACED_CURSOR_OFFSET', 65545);
/**
 * <span class="simpara">      A quantifier appears after a segment close delimiter.     </span>
 */
define('U_MISPLACED_QUANTIFIER', 65546);
/**
 * <span class="simpara">      A rule contains no operator.     </span>
 */
define('U_MISSING_OPERATOR', 65547);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_MISSING_SEGMENT_CLOSE', 65548);
/**
 * <span class="simpara">      More than one ante context.     </span>
 */
define('U_MULTIPLE_ANTE_CONTEXTS', 65549);
/**
 * <span class="simpara">      More than one cursor.     </span>
 */
define('U_MULTIPLE_CURSORS', 65550);
/**
 * <span class="simpara">      More than one post context.     </span>
 */
define('U_MULTIPLE_POST_CONTEXTS', 65551);
/**
 * <span class="simpara">      A dangling backslash.     </span>
 */
define('U_TRAILING_BACKSLASH', 65552);
/**
 * <span class="simpara">      A segment reference does not correspond to a defined segment.     </span>
 */
define('U_UNDEFINED_SEGMENT_REFERENCE', 65553);
/**
 * <span class="simpara">      A variable reference does not correspond to a defined variable.     </span>
 */
define('U_UNDEFINED_VARIABLE', 65554);
/**
 * <span class="simpara">      A special character was not quoted or escaped.     </span>
 */
define('U_UNQUOTED_SPECIAL', 65555);
/**
 * <span class="simpara">      A closing single quote is missing.     </span>
 */
define('U_UNTERMINATED_QUOTE', 65556);
/**
 * <span class="simpara">      A rule is hidden by an earlier more general rule.     </span>
 */
define('U_RULE_MASK_ERROR', 65557);
/**
 * <span class="simpara">      A compound filter is in an invalid location.     </span>
 */
define('U_MISPLACED_COMPOUND_FILTER', 65558);
/**
 * <span class="simpara">      More than one compound filter.     </span>
 */
define('U_MULTIPLE_COMPOUND_FILTERS', 65559);
/**
 * <span class="simpara">      A <code class="literal">'::id'</code> rule was passed to the RuleBasedTransliterator parser.     </span>
 */
define('U_INVALID_RBT_SYNTAX', 65560);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_INVALID_PROPERTY_PATTERN', 65561);
/**
 * <span class="simpara">      A <code class="literal">'use'</code> pragma is invalid.     </span>
 */
define('U_MALFORMED_PRAGMA', 65562);
/**
 * <span class="simpara">      A closing <code class="literal">')'</code> is missing.     </span>
 */
define('U_UNCLOSED_SEGMENT', 65563);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_ILLEGAL_CHAR_IN_SEGMENT', 65564);
/**
 * <span class="simpara">      Too many stand-ins generated for the given variable range.     </span>
 */
define('U_VARIABLE_RANGE_EXHAUSTED', 65565);
/**
 * <span class="simpara">      The variable range overlaps characters used in rules.     </span>
 */
define('U_VARIABLE_RANGE_OVERLAP', 65566);
/**
 * <span class="simpara">      A special character is outside its allowed context.     </span>
 */
define('U_ILLEGAL_CHARACTER', 65567);
/**
 * <span class="simpara">      Internal transliterator system error.     </span>
 */
define('U_INTERNAL_TRANSLITERATOR_ERROR', 65568);
/**
 * <span class="simpara">      A <code class="literal">'::id'</code> rule specifies an unknown transliterator.     </span>
 */
define('U_INVALID_ID', 65569);
/**
 * <span class="simpara">      A <code class="literal">'&amp;fn()'</code> rule specifies an unknown transliterator.     </span>
 */
define('U_INVALID_FUNCTION', 65570);
/**
 * <span class="simpara">      The limit for Transliterator errors.     </span>
 */
define('U_PARSE_ERROR_LIMIT', 65571);
/**
 * <span class="simpara">      Syntax error in format pattern.     </span>
 */
define('U_UNEXPECTED_TOKEN', 65792);
/**
 * <span class="simpara">      Start of format library errors.     </span>
 */
define('U_FMT_PARSE_ERROR_START', 65792);
/**
 * <span class="simpara">      More than one decimal separator in number pattern.     </span>
 */
define('U_MULTIPLE_DECIMAL_SEPARATORS', 65793);
/**
 * <span class="simpara">      Alias of <strong><code><a href="https://php.net/manual/zh/intl.constants.php#constant.u-multiple-decimal-separators">U_MULTIPLE_DECIMAL_SEPARATORS</a></code></strong>.     </span>
 */
define('U_MULTIPLE_DECIMAL_SEPERATORS', 65793);
/**
 * <span class="simpara">      More than one exponent symbol in number pattern.     </span>
 */
define('U_MULTIPLE_EXPONENTIAL_SYMBOLS', 65794);
/**
 * <span class="simpara">      Grouping symbol in exponent pattern.     </span>
 */
define('U_MALFORMED_EXPONENTIAL_PATTERN', 65795);
/**
 * <span class="simpara">      More than one percent symbol in number pattern.     </span>
 */
define('U_MULTIPLE_PERCENT_SYMBOLS', 65796);
/**
 * <span class="simpara">      More than one permill symbol in number pattern.     </span>
 */
define('U_MULTIPLE_PERMILL_SYMBOLS', 65797);
/**
 * <span class="simpara">      More than one pad symbol in number pattern.     </span>
 */
define('U_MULTIPLE_PAD_SPECIFIERS', 65798);
/**
 * <span class="simpara">      Syntax error in format pattern.     </span>
 */
define('U_PATTERN_SYNTAX_ERROR', 65799);
/**
 * <span class="simpara">      Pad symbol misplaced in number pattern.     </span>
 */
define('U_ILLEGAL_PAD_POSITION', 65800);
/**
 * <span class="simpara">      Braces do not match in message pattern.     </span>
 */
define('U_UNMATCHED_BRACES', 65801);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_UNSUPPORTED_PROPERTY', 65802);
/**
 * <span class="simpara">      Unused as of ICU 2.4.     </span>
 */
define('U_UNSUPPORTED_ATTRIBUTE', 65803);
/**
 * <span class="simpara">      The limit for format library errors.     </span>
 */
define('U_FMT_PARSE_ERROR_LIMIT', 65812);
/**
 * <span class="simpara">      An internal error (bug) was detected.     </span>
 */
define('U_BRK_INTERNAL_ERROR', 66048);
/**
 * <span class="simpara">      Start of codes indicating Break Iterator failures.     </span>
 */
define('U_BRK_ERROR_START', 66048);
/**
 * <span class="simpara">      Hex digits expected as part of a escaped char in a rule.     </span>
 */
define('U_BRK_HEX_DIGITS_EXPECTED', 66049);
/**
 * <span class="simpara">      Missing <code class="literal">';'</code> at the end of a RBBI rule.     </span>
 */
define('U_BRK_SEMICOLON_EXPECTED', 66050);
/**
 * <span class="simpara">      Syntax error in RBBI rule.     </span>
 */
define('U_BRK_RULE_SYNTAX', 66051);
/**
 * <span class="simpara">      UnicodeSet writing an RBBI rule missing a closing <code class="literal">']'</code>.     </span>
 */
define('U_BRK_UNCLOSED_SET', 66052);
/**
 * <span class="simpara">      Syntax error in RBBI rule assignment statement.     </span>
 */
define('U_BRK_ASSIGN_ERROR', 66053);
/**
 * <span class="simpara">      RBBI rule variable redefined.     </span>
 */
define('U_BRK_VARIABLE_REDFINITION', 66054);
/**
 * <span class="simpara">      Mis-matched parentheses in an RBBI rule.     </span>
 */
define('U_BRK_MISMATCHED_PAREN', 66055);
/**
 * <span class="simpara">      Missing closing quote in an RBBI rule.     </span>
 */
define('U_BRK_NEW_LINE_IN_QUOTED_STRING', 66056);
/**
 * <span class="simpara">      Use of an undefined <code class="code">\$Variable</code> in an RBBI rule.     </span>
 */
define('U_BRK_UNDEFINED_VARIABLE', 66057);
/**
 * <span class="simpara">      Initialization failure. Probable missing ICU Data.     </span>
 */
define('U_BRK_INIT_ERROR', 66058);
/**
 * <span class="simpara">      Rule contains an empty Unicode Set.     </span>
 */
define('U_BRK_RULE_EMPTY_SET', 66059);
/**
 * <span class="simpara">      Option in RBBI rules not recognized.     </span>
 */
define('U_BRK_UNRECOGNIZED_OPTION', 66060);
/**
 * <span class="simpara">      The <code class="literal">{nnn}</code> tag on a rule is mal formed.     </span>
 */
define('U_BRK_MALFORMED_RULE_TAG', 66061);
/**
 * <span class="simpara">      This must always be the last value to indicate the limit for Break Iterator failures.     </span>
 */
define('U_BRK_ERROR_LIMIT', 66062);
/**
 * <span class="simpara">      An internal error (bug) was detected.     </span>
 */
define('U_REGEX_INTERNAL_ERROR', 66304);
/**
 * <span class="simpara">      Start of codes indicating Regexp failures.     </span>
 */
define('U_REGEX_ERROR_START', 66304);
/**
 * <span class="simpara">      Syntax error in regexp pattern.     </span>
 */
define('U_REGEX_RULE_SYNTAX', 66305);
/**
 * <span class="simpara">      <code class="code">RegexMatcher</code> in invalid state for requested operation.     </span>
 */
define('U_REGEX_INVALID_STATE', 66306);
/**
 * <span class="simpara">      Unrecognized backslash escape sequence in pattern.     </span>
 */
define('U_REGEX_BAD_ESCAPE_SEQUENCE', 66307);
/**
 * <span class="simpara">      Incorrect Unicode property.     </span>
 */
define('U_REGEX_PROPERTY_SYNTAX', 66308);
/**
 * <span class="simpara">      Use of regexp feature that is not yet implemented.     </span>
 */
define('U_REGEX_UNIMPLEMENTED', 66309);
/**
 * <span class="simpara">      Incorrectly nested parentheses in regexp pattern.     </span>
 */
define('U_REGEX_MISMATCHED_PAREN', 66310);
/**
 * <span class="simpara">      Decimal number is too large.     </span>
 */
define('U_REGEX_NUMBER_TOO_BIG', 66311);
/**
 * <span class="simpara">      Error in <code class="literal">{min,max}</code> interval.     </span>
 */
define('U_REGEX_BAD_INTERVAL', 66312);
/**
 * <span class="simpara">      In <code class="literal">{min,max}</code>, max is less than min.     </span>
 */
define('U_REGEX_MAX_LT_MIN', 66313);
/**
 * <span class="simpara">      Back-reference to a non-existent capture group.     </span>
 */
define('U_REGEX_INVALID_BACK_REF', 66314);
/**
 * <span class="simpara">      Invalid value for match mode flags.     </span>
 */
define('U_REGEX_INVALID_FLAG', 66315);
/**
 * <span class="simpara">      Look-Behind pattern matches must have a bounded maximum length.     </span>
 */
define('U_REGEX_LOOK_BEHIND_LIMIT', 66316);
/**
 * <span class="simpara">      Regexps cannot have <code class="code">UnicodeSet</code>s containing strings.     </span>
 */
define('U_REGEX_SET_CONTAINS_STRING', 66317);
/**
 * <span class="simpara">      This must always be the last value to indicate the limit for regexp errors.     </span>
 */
define('U_REGEX_ERROR_LIMIT', 66326);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_PROHIBITED_ERROR', 66560);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_ERROR_START', 66560);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_UNASSIGNED_ERROR', 66561);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_CHECK_BIDI_ERROR', 66562);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_STD3_ASCII_RULES_ERROR', 66563);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_ACE_PREFIX_ERROR', 66564);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_VERIFICATION_ERROR', 66565);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_LABEL_TOO_LONG_ERROR', 66566);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_ZERO_LENGTH_LABEL_ERROR', 66567);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR', 66568);
/**
 * <span class="simpara">     </span>
 */
define('U_IDNA_ERROR_LIMIT', 66569);
/**
 * <span class="simpara">      Alias of <strong><code><a href="https://php.net/manual/zh/intl.constants.php#constant.u-idna-prohibited-error">U_IDNA_PROHIBITED_ERROR</a></code></strong>.     </span>
 */
define('U_STRINGPREP_PROHIBITED_ERROR', 66560);
/**
 * <span class="simpara">      Alias of <strong><code><a href="https://php.net/manual/zh/intl.constants.php#constant.u-idna-unassigned-error">U_IDNA_UNASSIGNED_ERROR</a></code></strong>.     </span>
 */
define('U_STRINGPREP_UNASSIGNED_ERROR', 66561);
/**
 * <span class="simpara">      Alias of <strong><code><a href="https://php.net/manual/zh/intl.constants.php#constant.u-idna-check-bidi-error">U_IDNA_CHECK_BIDI_ERROR</a></code></strong>.     </span>
 */
define('U_STRINGPREP_CHECK_BIDI_ERROR', 66562);
/**
 * <span class="simpara">      Alias of <strong><code>U_PLUGIN_ERROR_LIMIT</code></strong>.     </span>
 */
define('U_ERROR_LIMIT', 66818);

/**
 * <span class="simpara">      Prohibit processing of unassigned codepoints in the input for IDN      functions and do not check if the input conforms to domain name ASCII rules.     </span>
 * 
 * Prohibit processing of unassigned codepoints in the input for IDN
 * functions and do not check if the input conforms to domain name ASCII rules.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_DEFAULT', 48);

/**
 * <span class="simpara">      Allow processing of unassigned codepoints in the input for IDN functions.     </span>
 * 
 * Allow processing of unassigned codepoints in the input for IDN functions.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_ALLOW_UNASSIGNED', 1);

/**
 * <span class="simpara">      Check if the input for IDN functions conforms to domain name ASCII rules.     </span>
 * 
 * Check if the input for IDN functions conforms to domain name ASCII rules.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_USE_STD3_RULES', 2);

/**
 * <span class="simpara">      Check whether the input conforms to the BiDi rules.      Ignored by the IDNA2003 implementation, which always performs this check.     </span>
 * 
 * Check whether the input conforms to the BiDi rules.
 * Ignored by the IDNA2003 implementation, which always performs this check.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_CHECK_BIDI', 4);

/**
 * <span class="simpara">      Check whether the input conforms to the CONTEXTJ rules.      Ignored by the IDNA2003 implementation, as this check is new in IDNA2008.     </span>
 * 
 * Check whether the input conforms to the CONTEXTJ rules.
 * Ignored by the IDNA2003 implementation, as this check is new in IDNA2008.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_CHECK_CONTEXTJ', 8);

/**
 * <span class="simpara">      Option for nontransitional processing in      <span class="function">{@link idn_to_ascii()}</span>. Transitional processing is activated      by default. This option is ignored by the IDNA2003 implementation.     </span>
 * 
 * Option for nontransitional processing in
 * <b>idn_to_ascii</b>. Transitional processing is activated
 * by default. This option is ignored by the IDNA2003 implementation.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_NONTRANSITIONAL_TO_ASCII', 16);

/**
 * <span class="simpara">      Option for nontransitional processing in      <span class="function">{@link idn_to_utf8()}</span>. Transitional processing is activated      by default. This option is ignored by the IDNA2003 implementation.     </span>
 * 
 * Option for nontransitional processing in
 * <b>idn_to_utf8</b>. Transitional processing is activated
 * by default. This option is ignored by the IDNA2003 implementation.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_NONTRANSITIONAL_TO_UNICODE', 32);

/**
 * <span class="simpara">      Use IDNA 2003 algorithm in <span class="function">{@link idn_to_utf8()}</span> and      <span class="function">{@link idn_to_ascii()}</span>. This is the default.      This constant and using the default has been deprecated as of PHP 7.2.0.     </span>
 * 
 * Use IDNA 2003 algorithm in {@see idn_to_utf8} and
 * {@see idn_to_ascii}. This is the default.
 * @link https://php.net/manual/zh/intl.constants.php
 * @deprecated 7.2 Use {@see INTL_IDNA_VARIANT_UTS46} instead.
 */
define('INTL_IDNA_VARIANT_2003', 0);

/**
 * <span class="simpara">      Use UTS #46 algorithm in <span class="function">{@link idn_to_utf8()}</span> and      <span class="function">{@link idn_to_ascii()}</span>.      Available as of ICU 4.6.     </span>
 * 
 * Use UTS #46 algorithm in <b>idn_to_utf8</b> and
 * <b>idn_to_ascii</b>.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('INTL_IDNA_VARIANT_UTS46', 1);

/**
 * <span class="simpara">     </span>
 * 
 * Errors reported in a bitset returned by the UTS #46 algorithm in
 * <b>idn_to_utf8</b> and
 * <b>idn_to_ascii</b>.
 * @link https://php.net/manual/zh/intl.constants.php
 */
define('IDNA_ERROR_EMPTY_LABEL', 1);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_LABEL_TOO_LONG', 2);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_DOMAIN_NAME_TOO_LONG', 4);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_LEADING_HYPHEN', 8);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_TRAILING_HYPHEN', 16);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_HYPHEN_3_4', 32);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_LEADING_COMBINING_MARK', 64);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_DISALLOWED', 128);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_PUNYCODE', 256);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_LABEL_HAS_DOT', 512);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_INVALID_ACE_LABEL', 1024);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_BIDI', 2048);
/**
 * <span class="simpara">     </span>
 * 
 * @link https://secure.php.net/manual/en/migration54.global-constants.php
 * @since 5.4
 */
define('IDNA_ERROR_CONTEXTJ', 4096);

/**
 * <div id="class.intlbreakiterator" class="reference"> <h1 class="title">The IntlBreakIterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intlbreakiterator.intro">   <h2 class="title">简介</h2>   <p class="para">    A “break iterator” is an ICU object that exposes methods for locating    boundaries in text (e.g. word or sentence boundaries).    The PHP <span class="classname"><strong class="classname">IntlBreakIterator</strong></span> serves as the base class    for all types of ICU break iterators. Where extra functionality is    available, the intl extension may expose the ICU break iterator with    suitable subclasses, such as    <span class="classname"><a href="https://php.net/manual/zh/class.intlrulebasedbreakiterator.php" class="classname">IntlRuleBasedBreakIterator</a></span> or    <span class="classname"><a href="https://php.net/manual/zh/class.intlcodepointbreakiterator.php" class="classname">IntlCodePointBreakIterator</a></span>.   </p>   <p class="para">    This class implements <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span>. Traversing an    <span class="classname"><strong class="classname">IntlBreakIterator</strong></span> yields non-negative integer    values representing the successive locations of the text boundaries,    expressed as UTF-8 code units (byte) counts, taken from the beginning of    the text (which has the location <span class="literal">0</span>). The keys yielded    by the iterator simply form the sequence of natural numbers    <span class="literal">{0, 1, 2, …}</span>.   </p>  </div>  <div class="section" id="intlbreakiterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlBreakIterator</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.done"><var class="varname">DONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-none"><var class="varname">WORD_NONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-none-limit"><var class="varname">WORD_NONE_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-number"><var class="varname">WORD_NUMBER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-number-limit"><var class="varname">WORD_NUMBER_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-letter"><var class="varname">WORD_LETTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-letter-limit"><var class="varname">WORD_LETTER_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-kana"><var class="varname">WORD_KANA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-kana-limit"><var class="varname">WORD_KANA_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-ideo"><var class="varname">WORD_IDEO</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.word-ideo-limit"><var class="varname">WORD_IDEO_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.line-soft"><var class="varname">LINE_SOFT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.line-soft-limit"><var class="varname">LINE_SOFT_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.line-hard"><var class="varname">LINE_HARD</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.line-hard-limit"><var class="varname">LINE_HARD_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.sentence-term"><var class="varname">SENTENCE_TERM</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.sentence-term-limit"><var class="varname">SENTENCE_TERM_LIMIT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.sentence-sep"><var class="varname">SENTENCE_SEP</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php#intlbreakiterator.constants.sentence-sep-limit"><var class="varname">SENTENCE_SEP_LIMIT</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createcharacterinstance.php" class="methodname" style="color:#CC7832">createCharacterInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createcodepointinstance.php" class="methodname" style="color:#CC7832">createCodePointInstance</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcodepointbreakiterator.php" class="type IntlCodePointBreakIterator" style="color:#EAB766">IntlCodePointBreakIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createlineinstance.php" class="methodname" style="color:#CC7832">createLineInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createsentenceinstance.php" class="methodname" style="color:#CC7832">createSentenceInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createtitleinstance.php" class="methodname" style="color:#CC7832">createTitleInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.createwordinstance.php" class="methodname" style="color:#CC7832">createWordInstance</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.first.php" class="methodname" style="color:#CC7832">first</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.following.php" class="methodname" style="color:#CC7832">following</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.getlocale.php" class="methodname" style="color:#CC7832">getLocale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.getpartsiterator.php" class="methodname" style="color:#CC7832">getPartsIterator</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = IntlPartsIterator::KEY_SEQUENTIAL</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlpartsiterator.php" class="type IntlPartsIterator" style="color:#EAB766">IntlPartsIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.gettext.php" class="methodname" style="color:#CC7832">getText</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.isboundary.php" class="methodname" style="color:#CC7832">isBoundary</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.last.php" class="methodname" style="color:#CC7832">last</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.next.php" class="methodname" style="color:#CC7832">next</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.preceding.php" class="methodname" style="color:#CC7832">preceding</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.previous.php" class="methodname" style="color:#CC7832">previous</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlbreakiterator.settext.php" class="methodname" style="color:#CC7832">setText</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$text</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>  <div class="section" id="intlbreakiterator.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="intlbreakiterator.constants.done">      <strong><span>{@link IntlBreakIterator::DONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-none">      <strong><span>{@link IntlBreakIterator::WORD_NONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-none-limit">      <strong><span>{@link IntlBreakIterator::WORD_NONE_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-number">      <strong><span>{@link IntlBreakIterator::WORD_NUMBER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-number-limit">      <strong><span>{@link IntlBreakIterator::WORD_NUMBER_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-letter">      <strong><span>{@link IntlBreakIterator::WORD_LETTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-letter-limit">      <strong><span>{@link IntlBreakIterator::WORD_LETTER_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-kana">      <strong><span>{@link IntlBreakIterator::WORD_KANA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-kana-limit">      <strong><span>{@link IntlBreakIterator::WORD_KANA_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-ideo">      <strong><span>{@link IntlBreakIterator::WORD_IDEO}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.word-ideo-limit">      <strong><span>{@link IntlBreakIterator::WORD_IDEO_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.line-soft">      <strong><span>{@link IntlBreakIterator::LINE_SOFT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.line-soft-limit">      <strong><span>{@link IntlBreakIterator::LINE_SOFT_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.line-hard">      <strong><span>{@link IntlBreakIterator::LINE_HARD}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.line-hard-limit">      <strong><span>{@link IntlBreakIterator::LINE_HARD_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.sentence-term">      <strong><span>{@link IntlBreakIterator::SENTENCE_TERM}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.sentence-term-limit">      <strong><span>{@link IntlBreakIterator::SENTENCE_TERM_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.sentence-sep">      <strong><span>{@link IntlBreakIterator::SENTENCE_SEP}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlbreakiterator.constants.sentence-sep-limit">      <strong><span>{@link IntlBreakIterator::SENTENCE_SEP_LIMIT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        <span class="classname"><strong class="classname">IntlBreakIterator</strong></span> implements        <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span> now.        Previously, <span class="interfacename"><a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span> was implemented instead.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlBreakIterator::__construct} — Private constructor for disallowing instantiation</li><li>{@link IntlBreakIterator::createCharacterInstance} — Create break iterator for boundaries of combining character sequences</li><li>{@link IntlBreakIterator::createCodePointInstance} — Create break iterator for boundaries of code points</li><li>{@link IntlBreakIterator::createLineInstance} — Create break iterator for logically possible line breaks</li><li>{@link IntlBreakIterator::createSentenceInstance} — Create break iterator for sentence breaks</li><li>{@link IntlBreakIterator::createTitleInstance} — Create break iterator for title-casing breaks</li><li>{@link IntlBreakIterator::createWordInstance} — Create break iterator for word breaks</li><li>{@link IntlBreakIterator::current} — Get index of current position</li><li>{@link IntlBreakIterator::first} — Set position to the first character in the text</li><li>{@link IntlBreakIterator::following} — Advance the iterator to the first boundary following specified offset</li><li>{@link IntlBreakIterator::getErrorCode} — Get last error code on the object</li><li>{@link IntlBreakIterator::getErrorMessage} — Get last error message on the object</li><li>{@link IntlBreakIterator::getLocale} — Get the locale associated with the object</li><li>{@link IntlBreakIterator::getPartsIterator} — Create iterator for navigating fragments between boundaries</li><li>{@link IntlBreakIterator::getText} — Get the text being scanned</li><li>{@link IntlBreakIterator::isBoundary} — Tell whether an offset is a boundaryʼs offset</li><li>{@link IntlBreakIterator::last} — Set the iterator position to index beyond the last character</li><li>{@link IntlBreakIterator::next} — Advance the iterator the next boundary</li><li>{@link IntlBreakIterator::preceding} — Set the iterator position to the first boundary before an offset</li><li>{@link IntlBreakIterator::previous} — Set the iterator position to the boundary immediately before the current</li><li>{@link IntlBreakIterator::setText} — Set the text being scanned</li></ul></div>
 * 
 * @since 5.5
 */
class IntlBreakIterator implements IteratorAggregate
{
    /* Constants */
    public const DONE = -1;
    public const WORD_NONE = 0;
    public const WORD_NONE_LIMIT = 100;
    public const WORD_NUMBER = 100;
    public const WORD_NUMBER_LIMIT = 200;
    public const WORD_LETTER = 200;
    public const WORD_LETTER_LIMIT = 300;
    public const WORD_KANA = 300;
    public const WORD_KANA_LIMIT = 400;
    public const WORD_IDEO = 400;
    public const WORD_IDEO_LIMIT = 500;
    public const LINE_SOFT = 0;
    public const LINE_SOFT_LIMIT = 100;
    public const LINE_HARD = 100;
    public const LINE_HARD_LIMIT = 200;
    public const SENTENCE_TERM = 0;
    public const SENTENCE_TERM_LIMIT = 100;
    public const SENTENCE_SEP = 100;
    public const SENTENCE_SEP_LIMIT = 200;

    /* Methods */
    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Private constructor for disallowing instantiation
     */
    private function __construct() {}

    /**
 * <div id="intlbreakiterator.createcharacterinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createCharacterInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createCharacterInstance</span> — <span class="dc-title">   Create break iterator for boundaries of combining character sequences  </span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createcharacterinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createCharacterInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createcharacterinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createcharacterinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for boundaries of combining character sequences
     * @link https://secure.php.net/manual/en/intlbreakiterator.createcharacterinstance.php
     * @param string $locale
     * @return IntlBreakIterator|null
     */
    #[TentativeType]
    public static function createCharacterInstance(#[LanguageAware(['8.0' => 'string|null'], default: '')] $locale = null): ?IntlBreakIterator {}

    /**
 * <div id="intlbreakiterator.createcodepointinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createCodePointInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createCodePointInstance</span> — <span class="dc-title">Create break iterator for boundaries of code points</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createcodepointinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createCodePointInstance</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcodepointbreakiterator.php" class="type IntlCodePointBreakIterator" style="color:#EAB766">IntlCodePointBreakIterator</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createcodepointinstance-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createcodepointinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for boundaries of code points
     * @link https://secure.php.net/manual/en/intlbreakiterator.createcodepointinstance.php
     * @return IntlCodePointBreakIterator
     */
    #[TentativeType]
    public static function createCodePointInstance(): IntlCodePointBreakIterator {}

    /**
 * <div id="intlbreakiterator.createlineinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createLineInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createLineInstance</span> — <span class="dc-title">   Create break iterator for logically possible line breaks  </span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createlineinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createLineInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createlineinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createlineinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for logically possible line breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createlineinstance.php
     * @param string $locale [optional]
     * @return IntlBreakIterator|null
     */
    #[TentativeType]
    public static function createLineInstance(#[LanguageAware(['8.0' => 'string|null'], default: '')] $locale): ?IntlBreakIterator {}

    /**
 * <div id="intlbreakiterator.createsentenceinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createSentenceInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createSentenceInstance</span> — <span class="dc-title">Create break iterator for sentence breaks</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createsentenceinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createSentenceInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createsentenceinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createsentenceinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for sentence breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createsentenceinstance.php
     * @param string $locale [optional]
     * @return IntlBreakIterator|null
     */
    #[TentativeType]
    public static function createSentenceInstance(#[LanguageAware(['8.0' => 'string|null'], default: '')] $locale): ?IntlBreakIterator {}

    /**
 * <div id="intlbreakiterator.createtitleinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createTitleInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createTitleInstance</span> — <span class="dc-title">Create break iterator for title-casing breaks</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createtitleinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createTitleInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createtitleinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createtitleinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for title-casing breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createtitleinstance.php
     * @param string $locale [optional]
     * @return IntlBreakIterator|null
     */
    #[TentativeType]
    public static function createTitleInstance(#[LanguageAware(['8.0' => 'string|null'], default: '')] $locale): ?IntlBreakIterator {}

    /**
 * <div id="intlbreakiterator.createwordinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::createWordInstance</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::createWordInstance</span> — <span class="dc-title">Create break iterator for word breaks</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.createwordinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::createWordInstance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.createwordinstance-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">locale</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.createwordinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for word breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createwordinstance.php
     * @param string $locale [optional]
     * @return IntlBreakIterator|null
     */
    #[TentativeType]
    public static function createWordInstance(#[LanguageAware(['8.0' => 'string|null'], default: '')] $locale): ?IntlBreakIterator {}

    /**
 * <div id="intlbreakiterator.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::current</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::current</span> — <span class="dc-title">Get index of current position</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.current-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get index of current position
     * @link https://secure.php.net/manual/en/intlbreakiterator.current.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function current(): int {}

    /**
 * <div id="intlbreakiterator.first" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::first</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::first</span> — <span class="dc-title">Set position to the first character in the text</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.first-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::first</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.first-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.first-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set position to the first character in the text
     * @link https://secure.php.net/manual/en/intlbreakiterator.first.php
     */
    #[TentativeType]
    public function first(): int {}

    /**
 * <div id="intlbreakiterator.following" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::following</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::following</span> — <span class="dc-title">   Advance the iterator to the first boundary following specified offset  </span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.following-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::following</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.following-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.following-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Advance the iterator to the first boundary following specified offset
     * @link https://secure.php.net/manual/en/intlbreakiterator.following.php
     * @param int $offset
     */
    #[TentativeType]
    public function following(#[LanguageAware(['8.0' => 'int'], default: '')] $offset): int {}

    /**
 * <div id="intlbreakiterator.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::getErrorCode</h1>  <h1 class="refname">intl_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::getErrorCode</span> -- <span class="refname">intl_get_error_code</span> — <span class="dc-title">Get last error code on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.geterrorcode-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link intl_get_error_code}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get last error code on the object
     * @link https://secure.php.net/manual/en/intlbreakiterator.geterrorcode.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="intlbreakiterator.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::getErrorMessage</h1>  <h1 class="refname">intl_get_error_message</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::getErrorMessage</span> -- <span class="refname">intl_get_error_message</span> — <span class="dc-title">Get last error message on the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.geterrormessage-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link intl_get_error_message}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get last error message on the object
     * @link https://secure.php.net/manual/en/intlbreakiterator.geterrormessage.php
     * @return string
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): string {}

    /**
 * <div id="intlbreakiterator.getlocale" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::getLocale</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::getLocale</span> — <span class="dc-title">Get the locale associated with the object</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.getlocale-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::getLocale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.getlocale-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.getlocale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the locale associated with the object
     * @link https://secure.php.net/manual/en/intlbreakiterator.getlocale.php
     * @param string $type
     */
    #[Pure]
    #[TentativeType]
    public function getLocale(#[LanguageAware(['8.0' => 'int'], default: '')] $type): string|false {}

    /**
 * <div id="intlbreakiterator.getpartsiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::getPartsIterator</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::getPartsIterator</span> — <span class="dc-title">Create iterator for navigating fragments between boundaries</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.getpartsiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::getPartsIterator</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = IntlPartsIterator::KEY_SEQUENTIAL</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlpartsiterator.php" class="type IntlPartsIterator" style="color:#EAB766">IntlPartsIterator</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.getpartsiterator-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">      Optional key type. Possible values are:      </p><ul class="simplelist">       <li>        <strong><span>{@link IntlPartsIterator::KEY_SEQUENTIAL}</span></strong>        - The default. Sequentially increasing integers used as key.       </li>       <li>        <strong><span>{@link IntlPartsIterator::KEY_LEFT}</span></strong>        - Byte offset left of current part used as key.       </li>       <li>        <strong><span>{@link IntlPartsIterator::KEY_RIGHT}</span></strong>        - Byte offset right of current part used as key.       </li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.getpartsiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create iterator for navigating fragments between boundaries
     * @link https://secure.php.net/manual/en/intlbreakiterator.getpartsiterator.php
     * @param int $type [optional]
     * <p>
     * Optional key type. Possible values are:
     * </p><ul>
     * <li>
     * {@see IntlPartsIterator::KEY_SEQUENTIAL}
     * - The default. Sequentially increasing integers used as key.
     * </li>
     * <li>
     * {@see IntlPartsIterator::KEY_LEFT}
     * - Byte offset left of current part used as key.
     * </li>
     * <li>
     * {@see IntlPartsIterator::KEY_RIGHT}
     * - Byte offset right of current part used as key.
     * </li>
     * </ul>
     */
    #[Pure]
    #[TentativeType]
    public function getPartsIterator(
        #[LanguageAware(['8.0' => 'int', '8.3' => 'string'], default: '')] #[EV([IntlPartsIterator::KEY_SEQUENTIAL, IntlPartsIterator::KEY_LEFT, IntlPartsIterator::KEY_RIGHT])] $type = IntlPartsIterator::KEY_SEQUENTIAL
    ): IntlPartsIterator {}

    /**
 * <div id="intlbreakiterator.gettext" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::getText</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::getText</span> — <span class="dc-title">Get the text being scanned</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.gettext-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::getText</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.gettext-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.gettext-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the text being scanned
     * @link https://secure.php.net/manual/en/intlbreakiterator.gettext.php
     */
    #[Pure]
    #[TentativeType]
    public function getText(): ?string {}

    /**
 * <div id="intlbreakiterator.isboundary" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::isBoundary</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::isBoundary</span> — <span class="dc-title">Tell whether an offset is a boundaryʼs offset</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.isboundary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::isBoundary</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.isboundary-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.isboundary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Tell whether an offset is a boundary's offset
     * @link https://secure.php.net/manual/en/intlbreakiterator.isboundary.php
     * @param int $offset
     */
    #[Pure]
    #[TentativeType]
    public function isBoundary(#[LanguageAware(['8.0' => 'int'], default: '')] $offset): bool {}

    /**
 * <div id="intlbreakiterator.last" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::last</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::last</span> — <span class="dc-title">Set the iterator position to index beyond the last character</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.last-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::last</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.last-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.last-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the iterator position to index beyond the last character
     * @link https://secure.php.net/manual/en/intlbreakiterator.last.php
     * @return int
     */
    #[TentativeType]
    public function last(): int {}

    /**
 * <div id="intlbreakiterator.next" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::next</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::next</span> — <span class="dc-title">Advance the iterator the next boundary</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.next-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::next</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.next-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.next-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlbreakiterator.next.php
     * @param int $offset [optional]
     * @return int
     */
    #[TentativeType]
    public function next(#[LanguageAware(['8.0' => 'int|null'], default: '')] $offset = null): int {}

    /**
 * <div id="intlbreakiterator.preceding" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::preceding</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::preceding</span> — <span class="dc-title">Set the iterator position to the first boundary before an offset</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.preceding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::preceding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.preceding-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.preceding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlbreakiterator.preceding.php
     * @param int $offset
     */
    #[TentativeType]
    public function preceding(#[LanguageAware(['8.0' => 'int'], default: '')] $offset): int {}

    /**
 * <div id="intlbreakiterator.previous" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::previous</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::previous</span> — <span class="dc-title">Set the iterator position to the boundary immediately before the current</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.previous-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::previous</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.previous-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.previous-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the iterator position to the boundary immediately before the current
     * @link https://secure.php.net/manual/en/intlbreakiterator.previous.php
     * @return int
     */
    #[TentativeType]
    public function previous(): int {}

    /**
 * <div id="intlbreakiterator.settext" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlBreakIterator::setText</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlBreakIterator::setText</span> — <span class="dc-title">Set the text being scanned</span></p> </div> <div class="refsect1 description" id="refsect1-intlbreakiterator.settext-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlBreakIterator::setText</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$text</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlbreakiterator.settext-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">text</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-intlbreakiterator.settext-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-intlbreakiterator.settext-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.0</td>       <td>        This method now returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on failure; previously it returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>.       </td>      </tr>     </tbody>       </table>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the text being scanned
     * @link https://secure.php.net/manual/en/intlbreakiterator.settext.php
     * @param string $text
     */
    #[TentativeType]
    #[LanguageAware(['8.3' => 'bool'], default: 'bool|null')]
    public function setText(#[LanguageAware(['8.0' => 'string'], default: '')] $text) {}

    /**
     * @since 8.0
     * @return Iterator
     */
    #[Pure]
    public function getIterator(): Iterator {}
}

/**
 * <div id="class.intlrulebasedbreakiterator" class="reference"> <h1 class="title">The IntlRuleBasedBreakIterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intlrulebasedbreakiterator.intro">   <h2 class="title">简介</h2>   <p class="para">    A subclass of <span class="classname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="classname">IntlBreakIterator</a></span> that encapsulates    ICU break iterators whose behavior is specified using a set of rules. This    is the most common kind of break iterators.   </p>   <p class="para">    These rules are described in the <a href="https://unicode-org.github.io/icu/userguide/boundaryanalysis/break-rules.html" class="link external">»&nbsp;ICU Boundary Analysis    User Guide</a>.   </p>  </div>  <div class="section" id="intlrulebasedbreakiterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlRuleBasedBreakIterator</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="classname">IntlBreakIterator</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::DONE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NONE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NONE_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NUMBER}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NUMBER_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_LETTER}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_LETTER_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_KANA}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_KANA_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_IDEO}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_IDEO_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_SOFT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_SOFT_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_HARD}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_HARD_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_TERM}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_TERM_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_SEP}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_SEP_LIMIT}</var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlrulebasedbreakiterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$rules</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$compiled</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlrulebasedbreakiterator.getbinaryrules.php" class="methodname" style="color:#CC7832">getBinaryRules</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlrulebasedbreakiterator.getrules.php" class="methodname" style="color:#CC7832">getRules</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlrulebasedbreakiterator.getrulestatus.php" class="methodname" style="color:#CC7832">getRuleStatus</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlrulebasedbreakiterator.getrulestatusvec.php" class="methodname" style="color:#CC7832">getRuleStatusVec</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createCharacterInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createCodePointInstance}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcodepointbreakiterator.php" class="type IntlCodePointBreakIterator" style="color:#EAB766">IntlCodePointBreakIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createLineInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createSentenceInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createTitleInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createWordInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::current}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::first}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::following}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getErrorCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getErrorMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getLocale}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getPartsIterator}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = IntlPartsIterator::KEY_SEQUENTIAL</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlpartsiterator.php" class="type IntlPartsIterator" style="color:#EAB766">IntlPartsIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getText}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::isBoundary}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::last}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::next}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::preceding}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::previous}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::setText}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$text</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlRuleBasedBreakIterator::__construct} — Create iterator from ruleset</li><li>{@link IntlRuleBasedBreakIterator::getBinaryRules} — Get the binary form of compiled rules</li><li>{@link IntlRuleBasedBreakIterator::getRules} — Get the rule set used to create this object</li><li>{@link IntlRuleBasedBreakIterator::getRuleStatus} — Get the largest status value from the break rules that determined the current break position</li><li>{@link IntlRuleBasedBreakIterator::getRuleStatusVec} — Get the status values from the break rules that determined the current break position</li></ul></div>
 */
class IntlRuleBasedBreakIterator extends IntlBreakIterator implements Traversable
{
    /* Methods */
    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlbreakiterator.construct.php
     * @param string $rules
     * @param string $compiled [optional]
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string'], default: '')] $rules,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $compiled = false
    ) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for boundaries of combining character sequences
     * @link https://secure.php.net/manual/en/intlbreakiterator.createcharacterinstance.php
     * @param string $locale
     * @return IntlRuleBasedBreakIterator
     */
    public static function createCharacterInstance($locale) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for boundaries of code points
     * @link https://secure.php.net/manual/en/intlbreakiterator.createcodepointinstance.php
     * @return IntlRuleBasedBreakIterator
     */
    public static function createCodePointInstance() {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for logically possible line breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createlineinstance.php
     * @param string $locale [optional]
     * @return IntlRuleBasedBreakIterator
     */
    public static function createLineInstance($locale) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for sentence breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createsentenceinstance.php
     * @param string $locale [optional]
     * @return IntlRuleBasedBreakIterator
     */
    public static function createSentenceInstance($locale) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for title-casing breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createtitleinstance.php
     * @param string $locale [optional]
     * @return IntlRuleBasedBreakIterator
     */
    public static function createTitleInstance($locale) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create break iterator for word breaks
     * @link https://secure.php.net/manual/en/intlbreakiterator.createwordinstance.php
     * @param string $locale [optional]
     * @return IntlRuleBasedBreakIterator
     */
    public static function createWordInstance($locale) {}

    /**
 * <div id="intlrulebasedbreakiterator.getbinaryrules" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlRuleBasedBreakIterator::getBinaryRules</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlRuleBasedBreakIterator::getBinaryRules</span> — <span class="dc-title">Get the binary form of compiled rules</span></p> </div> <div class="refsect1 description" id="refsect1-intlrulebasedbreakiterator.getbinaryrules-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlRuleBasedBreakIterator::getBinaryRules</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlrulebasedbreakiterator.getbinaryrules-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlrulebasedbreakiterator.getbinaryrules-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlrulebasedbreakiterator.getbinaryrules.php
     * Get the binary form of compiled rules
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function getBinaryRules(): string|false {}

    /**
 * <div id="intlrulebasedbreakiterator.getrules" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlRuleBasedBreakIterator::getRules</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlRuleBasedBreakIterator::getRules</span> — <span class="dc-title">Get the rule set used to create this object</span></p> </div> <div class="refsect1 description" id="refsect1-intlrulebasedbreakiterator.getrules-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlRuleBasedBreakIterator::getRules</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlrulebasedbreakiterator.getrules-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlrulebasedbreakiterator.getrules-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrules.php
     * Get the rule set used to create this object
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function getRules(): string|false {}

    /**
 * <div id="intlrulebasedbreakiterator.getrulestatus" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlRuleBasedBreakIterator::getRuleStatus</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlRuleBasedBreakIterator::getRuleStatus</span> — <span class="dc-title">Get the largest status value from the break rules that determined the current break position</span></p> </div> <div class="refsect1 description" id="refsect1-intlrulebasedbreakiterator.getrulestatus-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlRuleBasedBreakIterator::getRuleStatus</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlrulebasedbreakiterator.getrulestatus-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlrulebasedbreakiterator.getrulestatus-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrulesstatus.php
     * Get the largest status value from the break rules that determined the current break position
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getRuleStatus(): int {}

    /**
 * <div id="intlrulebasedbreakiterator.getrulestatusvec" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlRuleBasedBreakIterator::getRuleStatusVec</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlRuleBasedBreakIterator::getRuleStatusVec</span> — <span class="dc-title">Get the status values from the break rules that determined the current break position</span></p> </div> <div class="refsect1 description" id="refsect1-intlrulebasedbreakiterator.getrulestatusvec-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlRuleBasedBreakIterator::getRuleStatusVec</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlrulebasedbreakiterator.getrulestatusvec-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlrulebasedbreakiterator.getrulestatusvec-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrulestatusvec.php
     * Get the status values from the break rules that determined the current break position
     * @return array|false
     */
    #[Pure]
    #[TentativeType]
    public function getRuleStatusVec(): array|false {}
}

/**
 * <div id="class.intlpartsiterator" class="reference"> <h1 class="title">The IntlPartsIterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intlpartsiterator.intro">   <h2 class="title">简介</h2>   <p class="para">    Objects of this class can be obtained from    <span class="classname"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="classname">IntlBreakIterator</a></span> objects. While the break    iterators provide a sequence of boundary positions when iterated,    <span class="classname"><strong class="classname">IntlPartsIterator</strong></span> objects provide, as a    convenience, the text fragments comprehended between two successive    boundaries.   </p>   <p class="para">    The keys may represent the offset of the left boundary, right boundary, or    they may just the sequence of non-negative integers. See    <span class="function">{@link IntlBreakIterator::getPartsIterator()}</span>.   </p>  </div>  <div class="section" id="intlpartsiterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlPartsIterator</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.intliterator.php" class="classname">IntlIterator</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlpartsiterator.php#intlpartsiterator.constants.key-sequential"><var class="varname">KEY_SEQUENTIAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlpartsiterator.php#intlpartsiterator.constants.key-left"><var class="varname">KEY_LEFT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.intlpartsiterator.php#intlpartsiterator.constants.key-right"><var class="varname">KEY_RIGHT</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlpartsiterator.getbreakiterator.php" class="methodname" style="color:#CC7832">getBreakIterator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlIterator::current}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlIterator::key}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlIterator::next}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlIterator::rewind}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlIterator::valid}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>  <div class="section" id="intlpartsiterator.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="intlpartsiterator.constants.key-sequential">      <strong><span>{@link IntlPartsIterator::KEY_SEQUENTIAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlpartsiterator.constants.key-left">      <strong><span>{@link IntlPartsIterator::KEY_LEFT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="intlpartsiterator.constants.key-right">      <strong><span>{@link IntlPartsIterator::KEY_RIGHT}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlPartsIterator::getBreakIterator} — Get IntlBreakIterator backing this parts iterator</li></ul></div>
 * 
 * @link https://www.php.net/manual/en/class.intlpartsiterator.php
 * @since 5.5
 */
class IntlPartsIterator extends IntlIterator implements Iterator
{
    public const KEY_SEQUENTIAL = 0;
    public const KEY_LEFT = 1;
    public const KEY_RIGHT = 2;

    /**
 * <div id="intlpartsiterator.getbreakiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlPartsIterator::getBreakIterator</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlPartsIterator::getBreakIterator</span> — <span class="dc-title">Get IntlBreakIterator backing this parts iterator</span></p> </div> <div class="refsect1 description" id="refsect1-intlpartsiterator.getbreakiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlPartsIterator::getBreakIterator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlpartsiterator.getbreakiterator-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlpartsiterator.getbreakiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * @return IntlBreakIterator
     */
    #[Pure]
    #[TentativeType]
    public function getBreakIterator(): IntlBreakIterator {}

    /**
     * @since 8.1
     */
    #[TentativeType]
    public function getRuleStatus(): int {}
}

/**
 * <div id="class.intlcodepointbreakiterator" class="reference"> <h1 class="title">The IntlCodePointBreakIterator class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="intlcodepointbreakiterator.intro">   <h2 class="title">简介</h2>   <p class="para">    This <a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="link">break iterator</a>    identifies the boundaries between UTF-8 code points.   </p>  </div>  <div class="section" id="intlcodepointbreakiterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">IntlCodePointBreakIterator</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="classname">IntlBreakIterator</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::DONE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NONE}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NONE_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NUMBER}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_NUMBER_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_LETTER}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_LETTER_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_KANA}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_KANA_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_IDEO}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::WORD_IDEO_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_SOFT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_SOFT_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_HARD}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::LINE_HARD_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_TERM}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_TERM_LIMIT}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_SEP}</var>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname">{@link IntlBreakIterator::SENTENCE_SEP_LIMIT}</var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/intlcodepointbreakiterator.getlastcodepoint.php" class="methodname" style="color:#CC7832">getLastCodePoint</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createCharacterInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createCodePointInstance}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlcodepointbreakiterator.php" class="type IntlCodePointBreakIterator" style="color:#EAB766">IntlCodePointBreakIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createLineInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createSentenceInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createTitleInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::createWordInstance}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$locale</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlbreakiterator.php" class="type IntlBreakIterator" style="color:#EAB766">IntlBreakIterator</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::current}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::first}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::following}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getErrorCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getErrorMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getLocale}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$type</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getPartsIterator}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$type</span><span class="initializer"> = IntlPartsIterator::KEY_SEQUENTIAL</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.intlpartsiterator.php" class="type IntlPartsIterator" style="color:#EAB766">IntlPartsIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::getText}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::isBoundary}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::last}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::next}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">\$offset</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::preceding}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::previous}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link IntlBreakIterator::setText}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$text</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link IntlCodePointBreakIterator::getLastCodePoint} — Get last code point passed over after advancing or receding the iterator</li></ul></div>
 */
class IntlCodePointBreakIterator extends IntlBreakIterator implements Traversable
{
    /**
 * <div id="intlcodepointbreakiterator.getlastcodepoint" class="refentry"> <div class="refnamediv">  <h1 class="refname">IntlCodePointBreakIterator::getLastCodePoint</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">IntlCodePointBreakIterator::getLastCodePoint</span> — <span class="dc-title">Get last code point passed over after advancing or receding the iterator</span></p> </div> <div class="refsect1 description" id="refsect1-intlcodepointbreakiterator.getlastcodepoint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>IntlCodePointBreakIterator::getLastCodePoint</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-intlcodepointbreakiterator.getlastcodepoint-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-intlcodepointbreakiterator.getlastcodepoint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get last code point passed over after advancing or receding the iterator
     * @link https://secure.php.net/manual/en/intlcodepointbreakiterator.getlastcodepoint.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getLastCodePoint(): int {}
}

/**
 * <div id="class.uconverter" class="reference"> <h1 class="title">The UConverter class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p>  <div class="section" id="uconverter.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="uconverter.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">UConverter</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-unassigned"><var class="varname">REASON_UNASSIGNED</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-illegal"><var class="varname">REASON_ILLEGAL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-irregular"><var class="varname">REASON_IRREGULAR</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-reset"><var class="varname">REASON_RESET</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-close"><var class="varname">REASON_CLOSE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.reason-clone"><var class="varname">REASON_CLONE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.unsupported-converter"><var class="varname">UNSUPPORTED_CONVERTER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.sbcs"><var class="varname">SBCS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.dbcs"><var class="varname">DBCS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.mbcs"><var class="varname">MBCS</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.latin-1"><var class="varname">LATIN_1</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf8"><var class="varname">UTF8</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf16-bigendian"><var class="varname">UTF16_BigEndian</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf16-littleendian"><var class="varname">UTF16_LittleEndian</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf32-bigendian"><var class="varname">UTF32_BigEndian</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf32-littleendian"><var class="varname">UTF32_LittleEndian</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.ebcdic-stateful"><var class="varname">EBCDIC_STATEFUL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.iso-2022"><var class="varname">ISO_2022</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-1"><var class="varname">LMBCS_1</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-2"><var class="varname">LMBCS_2</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-3"><var class="varname">LMBCS_3</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-4"><var class="varname">LMBCS_4</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-5"><var class="varname">LMBCS_5</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-6"><var class="varname">LMBCS_6</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-8"><var class="varname">LMBCS_8</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-11"><var class="varname">LMBCS_11</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-16"><var class="varname">LMBCS_16</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-17"><var class="varname">LMBCS_17</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-18"><var class="varname">LMBCS_18</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-19"><var class="varname">LMBCS_19</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.lmbcs-last"><var class="varname">LMBCS_LAST</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.hz"><var class="varname">HZ</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.scsu"><var class="varname">SCSU</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.iscii"><var class="varname">ISCII</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.us-ascii"><var class="varname">US_ASCII</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf7"><var class="varname">UTF7</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.bocu1"><var class="varname">BOCU1</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf16"><var class="varname">UTF16</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.utf32"><var class="varname">UTF32</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.cesu8"><var class="varname">CESU8</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.uconverter.php#uconverter.constants.imap-mailbox"><var class="varname">IMAP_MAILBOX</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$destination_encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$source_encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.convert.php" class="methodname" style="color:#CC7832">convert</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$reverse</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.fromucallback.php" class="methodname" style="color:#CC7832">fromUCallback</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$codePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getaliases.php" class="methodname" style="color:#CC7832">getAliases</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getavailable.php" class="methodname" style="color:#CC7832">getAvailable</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getdestinationencoding.php" class="methodname" style="color:#CC7832">getDestinationEncoding</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getdestinationtype.php" class="methodname" style="color:#CC7832">getDestinationType</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.geterrorcode.php" class="methodname" style="color:#CC7832">getErrorCode</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.geterrormessage.php" class="methodname" style="color:#CC7832">getErrorMessage</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getsourceencoding.php" class="methodname" style="color:#CC7832">getSourceEncoding</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getsourcetype.php" class="methodname" style="color:#CC7832">getSourceType</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getstandards.php" class="methodname" style="color:#CC7832">getStandards</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.getsubstchars.php" class="methodname" style="color:#CC7832">getSubstChars</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.reasontext.php" class="methodname" style="color:#CC7832">reasonText</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.setdestinationencoding.php" class="methodname" style="color:#CC7832">setDestinationEncoding</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$encoding</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.setsourceencoding.php" class="methodname" style="color:#CC7832">setSourceEncoding</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$encoding</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.setsubstchars.php" class="methodname" style="color:#CC7832">setSubstChars</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$chars</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.toucallback.php" class="methodname" style="color:#CC7832">toUCallback</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$codeUnits</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/uconverter.transcode.php" class="methodname" style="color:#CC7832">transcode</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$toEncoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$fromEncoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>  </div>    <div class="section" id="uconverter.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="uconverter.constants.reason-unassigned">      <strong><span>{@link UConverter::REASON_UNASSIGNED}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.reason-illegal">      <strong><span>{@link UConverter::REASON_ILLEGAL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.reason-irregular">      <strong><span>{@link UConverter::REASON_IRREGULAR}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.reason-reset">      <strong><span>{@link UConverter::REASON_RESET}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.reason-close">      <strong><span>{@link UConverter::REASON_CLOSE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.reason-clone">      <strong><span>{@link UConverter::REASON_CLONE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.unsupported-converter">      <strong><span>{@link UConverter::UNSUPPORTED_CONVERTER}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.sbcs">      <strong><span>{@link UConverter::SBCS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.dbcs">      <strong><span>{@link UConverter::DBCS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.mbcs">      <strong><span>{@link UConverter::MBCS}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.latin-1">      <strong><span>{@link UConverter::LATIN_1}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf8">      <strong><span>{@link UConverter::UTF8}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf16-bigendian">      <strong><span>{@link UConverter::UTF16_BigEndian}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf16-littleendian">      <strong><span>{@link UConverter::UTF16_LittleEndian}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf32-bigendian">      <strong><span>{@link UConverter::UTF32_BigEndian}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf32-littleendian">      <strong><span>{@link UConverter::UTF32_LittleEndian}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.ebcdic-stateful">      <strong><span>{@link UConverter::EBCDIC_STATEFUL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.iso-2022">      <strong><span>{@link UConverter::ISO_2022}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-1">      <strong><span>{@link UConverter::LMBCS_1}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-2">      <strong><span>{@link UConverter::LMBCS_2}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-3">      <strong><span>{@link UConverter::LMBCS_3}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-4">      <strong><span>{@link UConverter::LMBCS_4}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-5">      <strong><span>{@link UConverter::LMBCS_5}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-6">      <strong><span>{@link UConverter::LMBCS_6}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-8">      <strong><span>{@link UConverter::LMBCS_8}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-11">      <strong><span>{@link UConverter::LMBCS_11}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-16">      <strong><span>{@link UConverter::LMBCS_16}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-17">      <strong><span>{@link UConverter::LMBCS_17}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-18">      <strong><span>{@link UConverter::LMBCS_18}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-19">      <strong><span>{@link UConverter::LMBCS_19}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.lmbcs-last">      <strong><span>{@link UConverter::LMBCS_LAST}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.hz">      <strong><span>{@link UConverter::HZ}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.scsu">      <strong><span>{@link UConverter::SCSU}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.iscii">      <strong><span>{@link UConverter::ISCII}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.us-ascii">      <strong><span>{@link UConverter::US_ASCII}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf7">      <strong><span>{@link UConverter::UTF7}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.bocu1">      <strong><span>{@link UConverter::BOCU1}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf16">      <strong><span>{@link UConverter::UTF16}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.utf32">      <strong><span>{@link UConverter::UTF32}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.cesu8">      <strong><span>{@link UConverter::CESU8}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>             <dt id="uconverter.constants.imap-mailbox">      <strong><span>{@link UConverter::IMAP_MAILBOX}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link UConverter::__construct} — Create UConverter object</li><li>{@link UConverter::convert} — Convert string from one charset to another</li><li>{@link UConverter::fromUCallback} — Default "from" callback function</li><li>{@link UConverter::getAliases} — Get the aliases of the given name</li><li>{@link UConverter::getAvailable} — Get the available canonical converter names</li><li>{@link UConverter::getDestinationEncoding} — Get the destination encoding</li><li>{@link UConverter::getDestinationType} — Get the destination converter type</li><li>{@link UConverter::getErrorCode} — Get last error code on the object</li><li>{@link UConverter::getErrorMessage} — Get last error message on the object</li><li>{@link UConverter::getSourceEncoding} — Get the source encoding</li><li>{@link UConverter::getSourceType} — Get the source converter type</li><li>{@link UConverter::getStandards} — Get standards associated to converter names</li><li>{@link UConverter::getSubstChars} — Get substitution chars</li><li>{@link UConverter::reasonText} — Get string representation of the callback reason</li><li>{@link UConverter::setDestinationEncoding} — Set the destination encoding</li><li>{@link UConverter::setSourceEncoding} — Set the source encoding</li><li>{@link UConverter::setSubstChars} — Set the substitution chars</li><li>{@link UConverter::toUCallback} — Default "to" callback function</li><li>{@link UConverter::transcode} — Convert a string from one character encoding to another</li></ul></div>
 */
class UConverter
{
    /* Constants */
    public const REASON_UNASSIGNED = 0;
    public const REASON_ILLEGAL = 1;
    public const REASON_IRREGULAR = 2;
    public const REASON_RESET = 3;
    public const REASON_CLOSE = 4;
    public const REASON_CLONE = 5;
    public const UNSUPPORTED_CONVERTER = -1;
    public const SBCS = 0;
    public const DBCS = 1;
    public const MBCS = 2;
    public const LATIN_1 = 3;
    public const UTF8 = 4;
    public const UTF16_BigEndian = 5;
    public const UTF16_LittleEndian = 6;
    public const UTF32_BigEndian = 7;
    public const UTF32_LittleEndian = 8;
    public const EBCDIC_STATEFUL = 9;
    public const ISO_2022 = 10;
    public const LMBCS_1 = 11;
    public const LMBCS_2 = 12;
    public const LMBCS_3 = 13;
    public const LMBCS_4 = 14;
    public const LMBCS_5 = 15;
    public const LMBCS_6 = 16;
    public const LMBCS_8 = 17;
    public const LMBCS_11 = 18;
    public const LMBCS_16 = 19;
    public const LMBCS_17 = 20;
    public const LMBCS_18 = 21;
    public const LMBCS_19 = 22;
    public const LMBCS_LAST = 22;
    public const HZ = 23;
    public const SCSU = 24;
    public const ISCII = 25;
    public const US_ASCII = 26;
    public const UTF7 = 27;
    public const BOCU1 = 28;
    public const UTF16 = 29;
    public const UTF32 = 30;
    public const CESU8 = 31;
    public const IMAP_MAILBOX = 32;

    /* Methods */
    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Create UConverter object
     * @link https://php.net/manual/en/uconverter.construct.php
     * @param string $destination_encoding
     * @param string $source_encoding
     */
    #[Pure]
    public function __construct(
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $destination_encoding = null,
        #[LanguageAware(['8.0' => 'string|null'], default: '')] $source_encoding = null
    ) {}

    /**
 * <div id="uconverter.convert" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::convert</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::convert</span> — <span class="dc-title">Convert string from one charset to another</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.convert-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::convert</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$reverse</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.convert-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">str</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">reverse</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.convert-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Convert string from one charset to anothe
     * @link https://php.net/manual/zh/uconverter.convert.php
     * @param string $str
     * @param bool $reverse [optional]
     * @return string|false
     */
    #[Pure]
    #[TentativeType]
    public function convert(
        #[LanguageAware(['8.0' => 'string'], default: '')] $str,
        #[LanguageAware(['8.0' => 'bool'], default: '')] $reverse = false
    ): string|false {}

    /**
 * <div id="uconverter.fromucallback" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::fromUCallback</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::fromUCallback</span> — <span class="dc-title">Default "from" callback function</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.fromucallback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::fromUCallback</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$codePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.fromucallback-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">reason</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">source</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">codePoint</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">error</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.fromucallback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Default "from" callback function
     * @link https://php.net/manual/zh/uconverter.fromucallback.php
     * @param int $reason
     * @param string $source
     * @param string $codePoint
     * @param int &$error
     * @return array|string|int|null
     */
    #[TentativeType]
    public function fromUCallback(
        #[LanguageAware(['8.0' => 'int'], default: '')] $reason,
        #[LanguageAware(['8.0' => 'array'], default: '')] $source,
        #[LanguageAware(['8.0' => 'int'], default: '')] $codePoint,
        &$error
    ): array|string|int|null {}

    /**
 * <div id="uconverter.getaliases" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getAliases</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getAliases</span> — <span class="dc-title">Get the aliases of the given name</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getaliases-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getAliases</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getaliases-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getaliases-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the aliases of the given name
     * @link https://php.net/manual/zh/uconverter.getaliases.php
     * @param string $name
     * @return array|false|null
     */
    #[TentativeType]
    public static function getAliases(
        #[ElementAvailable(from: '5.5', to: '5.6')] $name = '',
        #[ElementAvailable(from: '7.0')] #[LanguageAware(['8.0' => 'string'], default: '')] $name
    ): array|false|null {}

    /**
 * <div id="uconverter.getavailable" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getAvailable</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getAvailable</span> — <span class="dc-title">Get the available canonical converter names</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getavailable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getAvailable</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getavailable-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getavailable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the available canonical converter names
     * @link https://php.net/manual/zh/uconverter.getavailable.php
     * @return array
     */
    #[TentativeType]
    public static function getAvailable(): array {}

    /**
 * <div id="uconverter.getdestinationencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getDestinationEncoding</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getDestinationEncoding</span> — <span class="dc-title">Get the destination encoding</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getdestinationencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getDestinationEncoding</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getdestinationencoding-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getdestinationencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the destination encoding
     * @link https://php.net/manual/zh/uconverter.getdestinationencoding.php
     * @return string|false|null
     */
    #[Pure]
    #[TentativeType]
    public function getDestinationEncoding(): string|false|null {}

    /**
 * <div id="uconverter.getdestinationtype" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getDestinationType</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getDestinationType</span> — <span class="dc-title">Get the destination converter type</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getdestinationtype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getDestinationType</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getdestinationtype-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getdestinationtype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the destination converter type
     * @link https://php.net/manual/zh/uconverter.getdestinationtype.php
     * @return int|false|null
     */
    #[Pure]
    #[TentativeType]
    public function getDestinationType(): int|false|null {}

    /**
 * <div id="uconverter.geterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getErrorCode</h1>  <h1 class="refname">intl_get_error_code</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getErrorCode</span> -- <span class="refname">intl_get_error_code</span> — <span class="dc-title">Get last error code on the object</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.geterrorcode-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getErrorCode</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-uconverter.geterrorcode-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.geterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get last error code on the object
     * @link https://php.net/manual/zh/uconverter.geterrorcode.php
     * @return int
     */
    #[Pure]
    #[TentativeType]
    public function getErrorCode(): int {}

    /**
 * <div id="uconverter.geterrormessage" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getErrorMessage</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getErrorMessage</span> — <span class="dc-title">Get last error message on the object</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.geterrormessage-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getErrorMessage</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  </div> <div class="refsect1 parameters" id="refsect1-uconverter.geterrormessage-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.geterrormessage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get last error message on the object
     * @link https://php.net/manual/zh/uconverter.geterrormessage.php
     * @return string|null
     */
    #[Pure]
    #[TentativeType]
    public function getErrorMessage(): ?string {}

    /**
 * <div id="uconverter.getsourceencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getSourceEncoding</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getSourceEncoding</span> — <span class="dc-title">Get the source encoding</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getsourceencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getSourceEncoding</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getsourceencoding-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getsourceencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the source encoding
     * @link https://php.net/manual/zh/uconverter.getsourceencoding.php
     * @return string|false|null
     */
    #[Pure]
    #[TentativeType]
    public function getSourceEncoding(): string|false|null {}

    /**
 * <div id="uconverter.getsourcetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getSourceType</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getSourceType</span> — <span class="dc-title">Get the source converter type</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getsourcetype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getSourceType</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getsourcetype-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getsourcetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get the source convertor type
     * @link https://php.net/manual/zh/uconverter.getsourcetype.php
     * @return int|false|null
     */
    #[Pure]
    #[TentativeType]
    public function getSourceType(): int|false|null {}

    /**
 * <div id="uconverter.getstandards" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getStandards</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getStandards</span> — <span class="dc-title">Get standards associated to converter names</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getstandards-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getStandards</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getstandards-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getstandards-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get standards associated to converter names
     * @link https://php.net/manual/zh/uconverter.getstandards.php
     * @return array|null
     */
    #[Pure]
    #[TentativeType]
    public static function getStandards(): ?array {}

    /**
 * <div id="uconverter.getsubstchars" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::getSubstChars</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::getSubstChars</span> — <span class="dc-title">Get substitution chars</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.getsubstchars-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::getSubstChars</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.getsubstchars-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.getsubstchars-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get substitution chars
     * @link https://php.net/manual/zh/uconverter.getsubstchars.php
     * @return string|false|null
     */
    #[Pure]
    #[TentativeType]
    public function getSubstChars(): string|false|null {}

    /**
 * <div id="uconverter.reasontext" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::reasonText</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::reasonText</span> — <span class="dc-title">Get string representation of the callback reason</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.reasontext-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::reasonText</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.reasontext-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">reason</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.reasontext-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Get string representation of the callback reason
     * @link https://php.net/manual/zh/uconverter.reasontext.php
     * @param int $reason
     * @return string
     */
    #[Pure]
    #[TentativeType]
    public static function reasonText(
        #[ElementAvailable(from: '5.3', to: '7.4')] $reason = 0,
        #[ElementAvailable(from: '8.0')] int $reason
    ): string {}

    /**
 * <div id="uconverter.setdestinationencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::setDestinationEncoding</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::setDestinationEncoding</span> — <span class="dc-title">Set the destination encoding</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.setdestinationencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::setDestinationEncoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$encoding</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.setdestinationencoding-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.setdestinationencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the destination encoding
     * @link https://php.net/manual/zh/uconverter.setdestinationencoding.php
     * @param string $encoding
     * @return bool
     */
    #[TentativeType]
    public function setDestinationEncoding(#[LanguageAware(['8.0' => 'string'], default: '')] $encoding): bool {}

    /**
 * <div id="uconverter.setsourceencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::setSourceEncoding</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::setSourceEncoding</span> — <span class="dc-title">Set the source encoding</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.setsourceencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::setSourceEncoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$encoding</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.setsourceencoding-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.setsourceencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the source encoding
     * @link https://php.net/manual/zh/uconverter.setsourceencoding.php
     * @param string $encoding
     * @return bool
     */
    #[TentativeType]
    public function setSourceEncoding(#[LanguageAware(['8.0' => 'string'], default: '')] $encoding): bool {}

    /**
 * <div id="uconverter.setsubstchars" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::setSubstChars</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::setSubstChars</span> — <span class="dc-title">Set the substitution chars</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.setsubstchars-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::setSubstChars</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$chars</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.setsubstchars-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">chars</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.setsubstchars-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Set the substitution chars
     * @link https://php.net/manual/zh/uconverter.setsubstchars.php
     * @param string $chars
     * @return bool
     */
    #[TentativeType]
    public function setSubstChars(#[LanguageAware(['8.0' => 'string'], default: '')] $chars): bool {}

    /**
 * <div id="uconverter.toucallback" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::toUCallback</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::toUCallback</span> — <span class="dc-title">Default "to" callback function</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.toucallback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::toUCallback</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$reason</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$source</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$codeUnits</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$error</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-uconverter.toucallback-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">reason</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">source</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">codeUnits</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">error</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.toucallback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Default "to" callback function
     * @link https://php.net/manual/zh/uconverter.toucallback.php
     * @param int $reason
     * @param string $source
     * @param string $codeUnits
     * @param int &$error
     * @return array|string|int|null
     */
    #[TentativeType]
    public function toUCallback(
        #[LanguageAware(['8.0' => 'int'], default: '')] $reason,
        #[LanguageAware(['8.0' => 'string'], default: '')] $source,
        #[LanguageAware(['8.0' => 'string'], default: '')] $codeUnits,
        &$error
    ): array|string|int|null {}

    /**
 * <div id="uconverter.transcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">UConverter::transcode</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL &gt;= 3.0.0a1)</p><p class="refpurpose"><span class="refname">UConverter::transcode</span> — <span class="dc-title">Convert a string from one character encoding to another</span></p> </div> <div class="refsect1 description" id="refsect1-uconverter.transcode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>UConverter::transcode</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$str</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$toEncoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$fromEncoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Converts <span class="parameter" style="color:#3A95FF">str</span> from <span class="parameter" style="color:#3A95FF">fromEncoding</span> to <span class="parameter" style="color:#3A95FF">toEncoding</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-uconverter.transcode-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">str</span></dt>    <dd>     <p class="para">      The <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> to be converted.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">toEncoding</span></dt>    <dd>     <p class="para">      The desired encoding of the result.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">fromEncoding</span></dt>    <dd>     <p class="para">      The current encoding used to interpret <span class="parameter" style="color:#3A95FF">str</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">      An optional <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>, which may contain the following keys:      </p><ul class="simplelist">       <li>        <span class="literal">'to_subst'</span> - the substitution character to use        in place of any character of <span class="parameter" style="color:#3A95FF">str</span> which cannot        be encoded in <span class="parameter" style="color:#3A95FF">toEncoding</span>. If specified, it must        represent a single character in the target encoding.       </li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-uconverter.transcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the converted string 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-uconverter.transcode-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2654">   <p><strong>示例 #1 Converting from UTF-8 to UTF-16 and back</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$utf8_string </span><span style="color: #007700">= </span><span style="color: #DD0000">"\x5A\x6F\xC3\xAB"</span><span style="color: #007700">; </span><span style="color: #FF8000">// 'Zoë' in UTF-8<br></span><span style="color: #9876AA">\$utf16_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$utf8_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-16BE'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$utf16_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$new_utf8_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$utf16_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-16BE'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$new_utf8_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">005a006f00eb<br>5a6fc3ab</blockquote></div>   </div>  </div>  <div class="example" id="example-2655">   <p><strong>示例 #2 Invalid characters in input</strong></p>   <div class="example-contents"><p>    If the input string contains a sequence of bytes which is not valid in    the encoding specified by <span class="parameter" style="color:#3A95FF">fromEncoding</span>, they are    replaced by Unicode code point U+FFFD (Replacement Character) before    converting to <span class="parameter" style="color:#3A95FF">toEncoding</span>.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$invalid_utf8_string </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3"</span><span style="color: #007700">; </span><span style="color: #FF8000">// incomplete multi-byte UTF-8 sequence<br></span><span style="color: #9876AA">\$utf16_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$invalid_utf8_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-16BE'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$utf16_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">fffd</blockquote></div>   </div>  </div>  <div class="example" id="example-2656">   <p><strong>示例 #3 Characters which cannot be encoded</strong></p>   <div class="example-contents"><p>    If the input string contains characters which cannot be represented    in <span class="parameter" style="color:#3A95FF">toEncoding</span>, they are replaced with a single    character. The default character to use depends on the encoding, and    can be controlled using the <span class="literal">'to_subst'</span> option.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$utf8_string </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xE2\x82\xAC"</span><span style="color: #007700">; </span><span style="color: #FF8000">// € (Euro Sign) does not exist in ISO 8859-1<br><br>// Default replacement in ISO 8859-1 is "\x1A" (Substitute)<br></span><span style="color: #9876AA">\$iso8859_1_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$utf8_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$iso8859_1_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Specify a replacement of '?' ("\x3F") instead<br></span><span style="color: #9876AA">\$iso8859_1_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$utf8_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, [</span><span style="color: #DD0000">'to_subst' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'?'</span><span style="color: #007700">]<br>);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$iso8859_1_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Since ISO 8859-1 cannot map U+FFFD, invalid input is also replaced by to_subst<br></span><span style="color: #9876AA">\$invalid_utf8_string </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC3"</span><span style="color: #007700">; </span><span style="color: #FF8000">// incomplete multi-byte UTF-8 sequence<br></span><span style="color: #9876AA">\$iso8859_1_string </span><span style="color: #007700">= </span><span style="color: #9876AA">UConverter</span><span style="color: #007700">::</span><span style="color: #9876AA">transcode</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$invalid_utf8_string</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, [</span><span style="color: #DD0000">'to_subst' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'?'</span><span style="color: #007700">]<br>);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$iso8859_1_string</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1a<br>3f<br>3f</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-uconverter.transcode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link mb_convert_encoding()} - 转换字符串，从一个字符编码到另一个字符编码</span></li>    <li><span class="function">{@link iconv()} - 将字符串从一个字符编码转换到另一个字符编码</span></li>   </ul>   </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Convert string from one charset to another
     * @link https://php.net/manual/zh/uconverter.transcode.php
     * @param string $str
     * @param string $toEncoding
     * @param string $fromEncoding
     * @param array|null $options
     * @return string|false
     */
    #[TentativeType]
    public static function transcode(
        #[LanguageAware(['8.0' => 'string'], default: '')] $str,
        #[LanguageAware(['8.0' => 'string'], default: '')] $toEncoding,
        #[LanguageAware(['8.0' => 'string'], default: '')] $fromEncoding,
        #[LanguageAware(['8.0' => 'array|null'], default: '')] $options = null
    ): string|false {}
}
// End of intl v.1.1.0
