<?php

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Immutable;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

/**
 * @since 5.5
 */
interface DateTimeInterface
{
    /**
     * @since 7.2
     */
    public const ATOM = 'Y-m-d\TH:i:sP';

    /**
     * @since 7.2
     */
    public const COOKIE = 'l, d-M-Y H:i:s T';

    /**
     * This format is not compatible with ISO-8601, but is left this way for backward compatibility reasons.
     * Use DateTime::ATOM or DATE_ATOM for compatibility with ISO-8601 instead.
     * @since 7.2
     * @deprecated
     */
    public const ISO8601 = 'Y-m-d\TH:i:sO';

    /**
     * @since 8.2
     */
    public const ISO8601_EXPANDED = DATE_ISO8601_EXPANDED;

    /**
     * @since 7.2
     */
    public const RFC822 = 'D, d M y H:i:s O';

    /**
     * @since 7.2
     */
    public const RFC850 = 'l, d-M-y H:i:s T';

    /**
     * @since 7.2
     */
    public const RFC1036 = 'D, d M y H:i:s O';

    /**
     * @since 7.2
     */
    public const RFC1123 = 'D, d M Y H:i:s O';

    /**
     * @since 7.2
     */
    public const RFC2822 = 'D, d M Y H:i:s O';

    /**
     * @since 7.2
     */
    public const RFC3339 = 'Y-m-d\TH:i:sP';

    /**
     * @since 7.2
     */
    public const RFC3339_EXTENDED = 'Y-m-d\TH:i:s.vP';

    /**
     * @since 7.2
     */
    public const RFC7231 = 'D, d M Y H:i:s \G\M\T';

    /**
     * @since 7.2
     */
    public const RSS = 'D, d M Y H:i:s O';

    /**
     * @since 7.2
     */
    public const W3C = 'Y-m-d\TH:i:sP';

    /* Methods */
    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns the difference between two DateTime objects
     * @link https://secure.php.net/manual/en/datetime.diff.php
     * @param DateTimeInterface $targetObject <p>The date to compare to.</p>
     * @param bool $absolute <p>Should the interval be forced to be positive?</p>
     * @return DateInterval
     * The https://secure.php.net/manual/en/class.dateinterval.php DateInterval} object representing the
     * difference between the two dates.
     */
    #[TentativeType]
    public function diff(
        DateTimeInterface $targetObject,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $absolute = false
    ): DateInterval;

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns date formatted according to given format
     * @link https://secure.php.net/manual/en/datetime.format.php
     * @param string $format <p>
     * Format accepted by  {@link https://secure.php.net/manual/en/function.date.php date()}.
     * </p>
     * @return string
     * Returns the formatted date string on success or <b>FALSE</b> on failure.
     * Since PHP8, it always returns <b>STRING</b>.
     */
    #[Pure(true)]
    #[TentativeType]
    public function format(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format): string;

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns the timezone offset
     * @return int|false
     * Returns the timezone offset in seconds from UTC on success
     * or <b>FALSE</b> on failure. Since PHP8, it always returns <b>INT</b>.
     */
    #[LanguageLevelTypeAware(["8.0" => "int"], default: "int|false")]
    #[TentativeType]
    public function getOffset(): int;

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Gets the Unix timestamp
     * @return int
     * Returns the Unix timestamp representing the date.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.1' => 'int'], default: 'int|false')]
    public function getTimestamp();

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Return time zone relative to given DateTime
     * @link https://secure.php.net/manual/en/datetime.gettimezone.php
     * @return DateTimeZone|false
     * Returns a {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone} object on success
     * or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function getTimezone(): DateTimeZone|false;

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * The __wakeup handler
     * @link https://secure.php.net/manual/en/datetime.wakeup.php
     * @return void Initializes a DateTime object.
     */
    #[TentativeType]
    public function __wakeup(): void;

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array;

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void;

    /**
     * @since 8.4
     */
    public function getMicrosecond(): int;
}

/**
 * <div id="class.datetimeimmutable" class="reference"> <h1 class="title">The DateTimeImmutable class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p>  <div class="section" id="datetimeimmutable.intro">   <h2 class="title">简介</h2>   <p class="para">    Representation of date and time.   </p>   <p class="para">    This class behaves the same as <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>    except new objects are returned when modification methods such as    <span class="function">{@link DateTime::modify()}</span> are called.   </p>  </div>  <div class="section" id="datetimeimmutable.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DateTimeImmutable</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.datetimeinterface.php" class="interfacename">DateTimeInterface</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ATOM}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::COOKIE}</var><span class="initializer"> = "l, d-M-Y H:i:s T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ISO8601}</var><span class="initializer"> = "Y-m-d\\TH:i:sO"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ISO8601_EXPANDED}</var><span class="initializer"> = "X-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC822}</var><span class="initializer"> = "D, d M y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC850}</var><span class="initializer"> = "l, d-M-y H:i:s T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC1036}</var><span class="initializer"> = "D, d M y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC1123}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC7231}</var><span class="initializer"> = "D, d M Y H:i:s \\G\\M\\T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC2822}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC3339}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC3339_EXTENDED}</var><span class="initializer"> = "Y-m-d\\TH:i:s.vP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RSS}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::W3C}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span><span class="initializer"> = "now"</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.add.php" class="methodname" style="color:#CC7832">add</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.createfromformat.php" class="methodname" style="color:#CC7832">createFromFormat</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.createfrominterface.php" class="methodname" style="color:#CC7832">createFromInterface</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.createfrommutable.php" class="methodname" style="color:#CC7832">createFromMutable</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766">static</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.getlasterrors.php" class="methodname" style="color:#CC7832">getLastErrors</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.modify.php" class="methodname" style="color:#CC7832">modify</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.set-state.php" class="methodname" style="color:#CC7832">__set_state</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.setdate.php" class="methodname" style="color:#CC7832">setDate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$day</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.setisodate.php" class="methodname" style="color:#CC7832">setISODate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$week</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span><span class="initializer"> = 1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.settime.php" class="methodname" style="color:#CC7832">setTime</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microsecond</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.settimestamp.php" class="methodname" style="color:#CC7832">setTimestamp</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.settimezone.php" class="methodname" style="color:#CC7832">setTimezone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimeimmutable.sub.php" class="methodname" style="color:#CC7832">sub</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.diff.php" class="methodname" style="color:#CC7832">diff</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.getoffset.php" class="methodname" style="color:#CC7832">getOffset</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.gettimestamp.php" class="methodname" style="color:#CC7832">getTimestamp</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.gettimezone.php" class="methodname" style="color:#CC7832">getTimezone</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.serialize.php" class="methodname" style="color:#CC7832">__serialize</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.unserialize.php" class="methodname" style="color:#CC7832">__unserialize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.wakeup.php" class="methodname" style="color:#CC7832">__wakeup</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> <div class="section" id="datetimeimmutable.changelog">  <h2 class="title">更新日志</h2>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The class constants are now typed.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The <span class="classname"><strong class="classname">DateTimeImmutable</strong></span> constructor now includes the        current microseconds in the constructed value. Before this, it would        always initialise the microseconds to <span class="literal">0</span>.       </td>      </tr>     </tbody>       </table>   </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DateTimeImmutable::add} — Returns a new object, with added amount of days, months, years, hours, minutes and seconds</li><li>{@link DateTimeImmutable::__construct} — Returns new DateTimeImmutable object</li><li>{@link DateTimeImmutable::createFromFormat} — Parses a time string according to a specified format</li><li>{@link DateTimeImmutable::createFromInterface} — Returns new DateTimeImmutable object encapsulating the given DateTimeInterface object</li><li>{@link DateTimeImmutable::createFromMutable} — Returns new DateTimeImmutable instance encapsulating the given DateTime object</li><li>{@link DateTimeImmutable::getLastErrors} — Returns the warnings and errors</li><li>{@link DateTimeImmutable::modify} — Creates a new object with modified timestamp</li><li>{@link DateTimeImmutable::__set_state} — The __set_state handler</li><li>{@link DateTimeImmutable::setDate} — Sets the date</li><li>{@link DateTimeImmutable::setISODate} — Sets the ISO date</li><li>{@link DateTimeImmutable::setTime} — Sets the time</li><li>{@link DateTimeImmutable::setTimestamp} — Sets the date and time based on a Unix timestamp</li><li>{@link DateTimeImmutable::setTimezone} — Sets the time zone</li><li>{@link DateTimeImmutable::sub} — Subtracts an amount of days, months, years, hours, minutes and seconds</li></ul></div>
 * 
 * @since 5.5
 */
class DateTimeImmutable implements DateTimeInterface
{
    /* Methods */
    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * @link https://secure.php.net/manual/en/datetimeimmutable.construct.php
     * @param string $datetime [optional]
     * <p>A date/time string. Valid formats are explained in {@link https://secure.php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * <p>Enter <b>NULL</b> here to obtain the current time when using the <em>$timezone</em> parameter.</p>
     * @param null|DateTimeZone $timezone [optional] <p>
     * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone} object representing the timezone of <em>$datetime</em>.
     * </p>
     * <p>If <em>$timezone</em> is omitted, the current timezone will be used.</p>
     * <blockquote><p><b>Note</b>:</p><p>
     * The <em>$timezone</em> parameter and the current timezone are ignored when the <em>$datetime</em> parameter either
     * is a UNIX timestamp (e.g. <em>@946684800</em>) or specifies a timezone (e.g. <em>2010-01-28T15:00:00+02:00</em>).
     * </p></blockquote>
     * @throws Exception Emits Exception in case of an error.
     */
    #[PhpStormStubsElementAvailable(from: '5.5', to: '8.2')]
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime = "now",
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ) {}

    /**
     * (PHP 8 &gt;=8.3.0)<br/>
     * @link https://secure.php.net/manual/en/datetimeimmutable.construct.php
     * @param string $datetime [optional]
     * <p>A date/time string. Valid formats are explained in {@link https://secure.php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * <p>Enter <b>NULL</b> here to obtain the current time when using the <em>$timezone</em> parameter.</p>
     * @param null|DateTimeZone $timezone [optional] <p>
     * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone} object representing the timezone of <em>$datetime</em>.
     * </p>
     * <p>If <em>$timezone</em> is omitted, the current timezone will be used.</p>
     * <blockquote><p><b>Note</b>:</p><p>
     * The <em>$timezone</em> parameter and the current timezone are ignored when the <em>$datetime</em> parameter either
     * is a UNIX timestamp (e.g. <em>@946684800</em>) or specifies a timezone (e.g. <em>2010-01-28T15:00:00+02:00</em>).
     * </p></blockquote>
     * @throws DateMalformedStringException Emits Exception in case of an error.
     */
    #[PhpStormStubsElementAvailable(from: '8.3')]
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime = "now",
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ) {}

    /**
 * <div id="datetimeimmutable.add" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::add</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::add</span> — <span class="dc-title">   Returns a new object, with added amount of days, months, years, hours, minutes and seconds  </span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.add-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Creates a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object, and adds the   specified <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object to this, to represent   the new value.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.add-parameters">  <h3 class="title">参数</h3>  <dl>       <dt>     <span class="parameter" style="color:#3A95FF">interval</span>    </dt>    <dd>     <p class="para">      A <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.add-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2168">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::add()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P10D'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2169">   <p><strong>示例 #2 Further <span class="function"><strong>DateTimeImmutable::add()</strong></span> examples</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'PT10H30S'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P7Y5M4DT4H3M2S'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-01&nbsp;10:00:30<br>2007-06-05&nbsp;04:03:02</blockquote></div>   </div>  </div>  <div class="example" id="example-2170">   <p><strong>示例 #3 Beware when adding months</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-12-31'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1M'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$interval</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$interval</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-31<br>2001-03-03</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.add-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::sub()} - Subtracts an amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::diff()} - 返回两个 DateTime 之间的差值</span></li>   <li><span class="function">{@link DateTimeImmutable::modify()} - Creates a new object with modified timestamp</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Adds an amount of days, months, years, hours, minutes and seconds
     * @param DateInterval $interval
     * @return static
     * @link https://secure.php.net/manual/en/datetimeimmutable.add.php
     */
    #[TentativeType]
    public function add(DateInterval $interval): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.createfromformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::createFromFormat</h1>  <h1 class="refname">date_create_immutable_from_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::createFromFormat</span> -- <span class="refname">date_create_immutable_from_format</span> — <span class="dc-title">Parses a time string according to a specified format</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.createfromformat-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::createFromFormat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_create_immutable_from_format}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns a new DateTimeImmutable object representing the date and time specified by the   <span class="parameter" style="color:#3A95FF">datetime</span> string, which was formatted in the given   <span class="parameter" style="color:#3A95FF">format</span>.  </p> </div> <div class="refsect1 parameters" id="datetimeimmutable.createfromformat.parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">format</span></dt>    <dd>     <p class="para">      The format that the passed in <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> should be in. See the      formatting options below. In most cases, the same letters as for the      <span class="function">{@link date()}</span> can be used.     </p>     <p class="para">      All fields are initialised with the current date/time. In most cases you      would want to reset these to "zero" (the Unix epoch, <span class="literal">1970-01-01      00:00:00 UTC</span>). You do that by including the      <span class="literal">!</span> character as first character in your      <span class="parameter" style="color:#3A95FF">format</span>, or <span class="literal">|</span> as your last.      Please see the documentation for each character below for more      information.     </p>     <p class="para">      The format is parsed from left to right, which means that in some      situations the order in which the format characters are present affects      the result. In the case of <span class="literal">z</span> (the day of the year),      it is required that a year has already been parsed,      for example through the <span class="literal">Y</span> or <span class="literal">y</span>      characters.     </p>     <p class="para">      Letters that are used for parsing numbers allow a wide range of values,      outside of what the logical range would be. For example, the      <span class="literal">d</span> (day of the month) accepts values in the range from      <span class="literal">00</span> to <span class="literal">99</span>. The only constraint is      on the amount of digits. The date/time parser's overflow mechanism is      used when out-of-range values are given. The examples below show some of      this behaviour.     </p>     <p class="para">      This also means that the data parsed for a format letter is greedy, and      will read up to the amount of digits its format allows for. That can      then also mean that there are no      longer enough characters in the <span class="parameter" style="color:#3A95FF">datetime</span> string      for following format characters. An example on this page also      illustrates this issue.     </p>     <p class="para">      </p><table class="doctable table">       <caption><strong>The following characters are recognized in the       <span class="parameter" style="color:#3A95FF">format</span> parameter string</strong></caption>               <thead>         <tr>          <th><span class="parameter" style="color:#3A95FF">format</span> character</th>          <th>Description</th>          <th>Example parsable values</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td style="text-align: center;"><em>Day</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">d</span> and <span class="literal">j</span></td>          <td>Day of the month, 2 digits with or without leading zeros</td>          <td>           <span class="literal">01</span> to <span class="literal">31</span> or           <span class="literal">1</span> to <span class="literal">31</span>. (2 digit numbers           higher than the number of days in the month are accepted, in which           case they will make the month overflow. For example using 33 with           January, means February 2nd)          </td>         </tr>         <tr>          <td><span class="literal">D</span> and <span class="literal">l</span></td>          <td>A textual representation of a day</td>          <td>           <span class="literal">Mon</span> through <span class="literal">Sun</span> or           <span class="literal">Sunday</span> through <span class="literal">Saturday</span>. If           the day name given is different then the day name belonging to a           parsed (or default) date is different, then an overflow occurs to           the <em>next</em> date with the given day name. See the           examples below for an explanation.          </td>         </tr>         <tr>          <td><span class="literal">S</span></td>          <td>English ordinal suffix for the day of the month, 2          characters. It's ignored while processing.</td>          <td>           <span class="literal">st</span>, <span class="literal">nd</span>, <span class="literal">rd</span> or           <span class="literal">th</span>.          </td>         </tr>         <tr>          <td><span class="literal">z</span></td>          <td>           The day of the year (starting from 0);           must be preceded by <span class="literal">Y</span> or <span class="literal">y</span>.          </td>          <td>           <span class="literal">0</span> through <span class="literal">365</span>. (3 digit           numbers higher than the numbers in a year are accepted, in which           case they will make the year overflow. For example using 366 with           2022, means January 2nd, 2023)          </td>         </tr>         <tr>          <td style="text-align: center;"><em>Month</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">F</span> and <span class="literal">M</span></td>          <td>A textual representation of a month, such as January or Sept</td>          <td>           <span class="literal">January</span> through <span class="literal">December</span> or           <span class="literal">Jan</span> through <span class="literal">Dec</span>          </td>         </tr>         <tr>          <td><span class="literal">m</span> and <span class="literal">n</span></td>          <td>Numeric representation of a month, with or without leading zeros</td>          <td>           <span class="literal">01</span> through <span class="literal">12</span> or           <span class="literal">1</span> through <span class="literal">12</span>.           (2 digit numbers higher than 12 are accepted, in which case they           will make the year overflow. For example using 13 means January in           the next year)          </td>         </tr>         <tr>          <td style="text-align: center;"><em>Year</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">X</span> and <span class="literal">x</span></td>          <td>A full numeric representation of a year, up to 19 digits,           optionally prefixed by <span class="literal">+</span> or           <span class="literal">-</span></td>          <td>Examples: <span class="literal">0055</span>, <span class="literal">787</span>,           <span class="literal">1999</span>, <span class="literal">-2003</span>,           <span class="literal">+10191</span></td>         </tr>         <tr>          <td><span class="literal">Y</span></td>          <td>A full numeric representation of a year, up to 4 digits</td>          <td>Examples: <span class="literal">0055</span>, <span class="literal">787</span>,           <span class="literal">1999</span>, <span class="literal">2003</span></td>         </tr>         <tr>          <td><span class="literal">y</span></td>          <td>           A two digit representation of a year (which is assumed to be in the           range 1970-2069, inclusive)          </td>          <td>           Examples:           <span class="literal">99</span> or <span class="literal">03</span>           (which will be interpreted as <span class="literal">1999</span> and           <span class="literal">2003</span>, respectively)          </td>         </tr>         <tr>          <td style="text-align: center;"><em>Time</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">a</span> and <span class="literal">A</span></td>          <td>Ante meridiem and Post meridiem</td>          <td><span class="literal">am</span> or <span class="literal">pm</span></td>         </tr>         <tr>          <td><span class="literal">g</span> and <span class="literal">h</span></td>          <td>12-hour format of an hour with or without leading zero</td>          <td>           <span class="literal">1</span> through <span class="literal">12</span> or           <span class="literal">01</span> through <span class="literal">12</span> (2 digit           numbers higher than 12 are accepted, in which case they will make           the day overflow. For example using <span class="literal">14</span> means           <span class="literal">02</span> in the next AM/PM period)          </td>         </tr>         <tr>          <td><span class="literal">G</span> and <span class="literal">H</span></td>          <td>24-hour format of an hour with or without leading zeros</td>          <td>           <span class="literal">0</span> through <span class="literal">23</span> or           <span class="literal">00</span> through <span class="literal">23</span> (2 digit           numbers higher than 24 are accepted, in which case they will make           the day overflow. For example using <span class="literal">26</span> means           <span class="literal">02:00</span> the next day)          </td>         </tr>         <tr>          <td><span class="literal">i</span></td>          <td>Minutes with leading zeros</td>          <td>           <span class="literal">00</span> to <span class="literal">59</span>. (2 digit           numbers higher than 59 are accepted, in which case they will make           the hour overflow. For example using <span class="literal">66</span> means           <span class="literal">:06</span> the next hour)          </td>         </tr>         <tr>          <td><span class="literal">s</span></td>          <td>Seconds, with leading zeros</td>          <td>           <span class="literal">00</span> through <span class="literal">59</span> (2 digit           numbers higher than 59 are accepted, in which case they will make           the minute overflow. For example using <span class="literal">90</span> means           <span class="literal">:30</span> the next minute)          </td>         </tr>         <tr>          <td><span class="literal">v</span></td>          <td>Fraction in milliseconds (up to three digits)</td>          <td>Example: <span class="literal">12</span> (<span class="literal">0.12</span>          seconds), <span class="literal">345</span> (<span class="literal">0.345</span> seconds)</td>         </tr>         <tr>          <td><span class="literal">u</span></td>          <td>Fraction in microseconds (up to six digits)</td>          <td>Example: <span class="literal">45</span> (<span class="literal">0.45</span>          seconds), <span class="literal">654321</span> (<span class="literal">0.654321</span>          seconds)</td>         </tr>         <tr>          <td style="text-align: center;"><em>Timezone</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td>           <span class="literal">e</span>, <span class="literal">O</span>, <span class="literal">p</span>,           <span class="literal">P</span> and <span class="literal">T</span>          </td>          <td>Timezone identifier, or difference to UTC in hours, or          difference to UTC with colon between hours and minutes, or timezone          abbreviation</td>          <td>Examples: <span class="literal">UTC</span>, <span class="literal">GMT</span>,           <span class="literal">Atlantic/Azores</span> or           <span class="literal">+0200</span> or <span class="literal">+02:00</span> or           <span class="literal">EST</span>, <span class="literal">MDT</span>          </td>         </tr>         <tr>          <td style="text-align: center;"><em>Full Date/Time</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">U</span></td>          <td>Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)</td>          <td>Example: <span class="literal">1292177455</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>Whitespace and Separators</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal"> </span> (space)</td>          <td>Zero or more spaces, tabs, NBSP (U+A0), or NNBSP (U+202F)          characters</td>          <td>Example: <span class="literal">"\t"</span>, <span class="literal">"  "</span></td>         </tr>         <tr>          <td><span class="literal">#</span></td>          <td>           One of the following separation symbol: <span class="literal">;</span>,           <span class="literal">:</span>, <span class="literal">/</span>, <span class="literal">.</span>,           <span class="literal">,</span>, <span class="literal">-</span>, <span class="literal">(</span> or           <span class="literal">)</span>          </td>          <td>Example: <span class="literal">/</span></td>         </tr>         <tr>          <td>           <span class="literal">;</span>,           <span class="literal">:</span>, <span class="literal">/</span>, <span class="literal">.</span>,           <span class="literal">,</span>, <span class="literal">-</span>, <span class="literal">(</span> or           <span class="literal">)</span>          </td>          <td>The specified character.</td>          <td>Example: <span class="literal">-</span></td>         </tr>         <tr>          <td><span class="literal">?</span></td>          <td>A random byte</td>          <td>Example: <span class="literal">^</span> (Be aware that for UTF-8          characters you might need more than one <span class="literal">?</span>.          In this case, using <span class="literal">*</span> is probably what you want          instead)</td>         </tr>         <tr>          <td><span class="literal">*</span></td>          <td>Random bytes until the next separator or digit</td>          <td>Example: <span class="literal">*</span> in <span class="literal">Y-*-d</span> with          the string <span class="literal">2009-aWord-08</span> will match          <span class="literal">aWord</span></td>         </tr>         <tr>          <td><span class="literal">!</span></td>          <td>Resets all fields (year, month, day, hour, minute, second,          fraction and timezone information) to zero-like values (           <span class="literal">0</span> for hour, minute, second and fraction,           <span class="literal">1</span> for month and day, <span class="literal">1970</span>           for year and <span class="literal">UTC</span> for timezone information)</td>          <td>Without <span class="literal">!,</span> all fields will be set to the          current date and time.</td>         </tr>         <tr>          <td><span class="literal">|</span></td>          <td>Resets all fields (year, month, day, hour, minute, second,          fraction and timezone information) to zero-like values if they have          not been parsed yet</td>          <td><span class="literal">Y-m-d|</span> will set the year, month and day          to the information found in the string to parse, and sets the hour,          minute and second to 0.</td>         </tr>         <tr>          <td><span class="literal">+</span></td>          <td>If this format specifier is present, trailing data in the          string will not cause an error, but a warning instead</td>          <td>Use <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getLastErrors()}</span> to find out          whether trailing data was present.</td>         </tr>        </tbody>             </table>          <p class="para">      Unrecognized characters in the format string will cause the      parsing to fail and an error message is appended to the returned      structure. You can query error messages with      <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getLastErrors()}</span>.     </p>     <p class="para">      To include literal characters in <span class="parameter" style="color:#3A95FF">format</span>, you have      to escape them with a backslash (<span class="literal">\</span>).     </p>     <p class="para">      If <span class="parameter" style="color:#3A95FF">format</span> does not contain the character      <span class="literal">!</span> then portions of the generated date/time which are not      specified in <span class="parameter" style="color:#3A95FF">format</span> will be set to the current      system time.     </p>     <p class="para">      If <span class="parameter" style="color:#3A95FF">format</span> contains the      character <span class="literal">!</span>, then portions of the generated      date/time not provided in <span class="parameter" style="color:#3A95FF">format</span>, as well as      values to the left-hand side of the <span class="literal">!</span>, will      be set to corresponding values from the Unix epoch.     </p>     <p class="para">      If any time character is parsed, then all other time-related fields are      set to "0", unless also parsed.     </p>     <p class="para">      The Unix epoch is 1970-01-01 00:00:00 UTC.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>    <dd>     <p class="para">      String representing the time.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      A <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> object representing the      desired time zone.     </p>     <p class="para">      If <span class="parameter" style="color:#3A95FF">timezone</span> is omitted or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> and      <span class="parameter" style="color:#3A95FF">datetime</span> contains no timezone,      the current timezone will be used.     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       The <span class="parameter" style="color:#3A95FF">timezone</span> parameter       and the current timezone are ignored when the       <span class="parameter" style="color:#3A95FF">datetime</span> parameter either       contains a UNIX timestamp (e.g. <span class="literal">946684800</span>)       or specifies a timezone       (e.g. <span class="literal">2010-01-28T15:00:00+02:00</span>).      </p>     </blockquote>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.createfromformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new DateTimeImmutable instance 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-datetimeimmutable.createfromformat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method throws <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> when the   <span class="parameter" style="color:#3A95FF">datetime</span> contains NULL-bytes.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.createfromformat-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.9</td>       <td>        The <span class="literal"> </span> (space) specifier now also supports NBSP        (U+A0) and NNBSP (U+202F) characters.       </td>      </tr>      <tr>       <td>8.2.0</td>       <td>        The <span class="literal">X</span> and <span class="literal">x</span>        <span class="parameter" style="color:#3A95FF">format</span> specifiers have been added.       </td>      </tr>      <tr>       <td>8.0.21, 8.1.8, 8.2.0</td>       <td>        Now throws <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> when NULL-bytes        are passed into <span class="parameter" style="color:#3A95FF">datetime</span>, which previously was silently        ignored.       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        The <span class="literal">v</span> <span class="parameter" style="color:#3A95FF">format</span> specifier has        been added.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.createfromformat-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2175">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::createFromFormat()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'j-M-Y'</span><span style="color: #007700">, </span><span style="color: #DD0000">'15-Feb-2009'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-2176">   <p><strong>示例 #2 Using predefined format constants with <span class="function"><strong>DateTimeImmutable::createFromFormat()</strong></span></strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeInterface</span><span style="color: #007700">::</span><span style="color: #9876AA">ISO8601</span><span style="color: #007700">, </span><span style="color: #DD0000">'2004-02-12T15:19:21+00:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeInterface</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC3339_EXTENDED</span><span style="color: #007700">, </span><span style="color: #DD0000">'2013-10-14T09:00:00.000+02:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>    The <a href="https://php.net/manual/zh/class.datetimeinterface.php#datetimeinterface.constants.types" class="link">formatting constants</a>    as used in this example consist of    a string of characters for <a href="https://php.net/manual/zh/datetime.format.php" class="link">formatting</a> a    <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object. In most cases, these    letters match with the same elements of date/time information as the ones defined in the <a href="https://php.net/manual/zh/" class="link">parameters</a>    section above, but they tend to be more lenient.   </p></div>  </div>  <div class="example" id="example-2177">   <p><strong>示例 #3 Intricacies of <span class="function"><strong>DateTimeImmutable::createFromFormat()</strong></span></strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Current time: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$format</span><span style="color: #007700">, </span><span style="color: #DD0000">'2009-02-15'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Format: </span><span style="color: #9876AA">\$format</span><span style="color: #DD0000">; " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$format</span><span style="color: #007700">, </span><span style="color: #DD0000">'2009-02-15 15:16:17'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Format: </span><span style="color: #9876AA">\$format</span><span style="color: #DD0000">; " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'Y-m-!d H:i:s'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$format</span><span style="color: #007700">, </span><span style="color: #DD0000">'2009-02-15 15:16:17'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Format: </span><span style="color: #9876AA">\$format</span><span style="color: #DD0000">; " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'!d'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$format</span><span style="color: #007700">, </span><span style="color: #DD0000">'15'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Format: </span><span style="color: #9876AA">\$format</span><span style="color: #DD0000">; " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'i'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$format</span><span style="color: #007700">, </span><span style="color: #DD0000">'15'</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Format: </span><span style="color: #9876AA">\$format</span><span style="color: #DD0000">; " </span><span style="color: #007700">. </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Current&nbsp;time:&nbsp;2022-06-02&nbsp;15:50:46<br>Format:&nbsp;Y-m-d;&nbsp;2009-02-15&nbsp;15:50:46<br>Format:&nbsp;Y-m-d&nbsp;H:i:s;&nbsp;2009-02-15&nbsp;15:16:17<br>Format:&nbsp;Y-m-!d&nbsp;H:i:s;&nbsp;1970-01-15&nbsp;15:16:17<br>Format:&nbsp;!d;&nbsp;1970-01-15&nbsp;00:00:00<br>Format:&nbsp;i;&nbsp;2022-06-02&nbsp;00:15:00</blockquote></div>   </div>  </div>  <div class="example" id="example-2178">   <p><strong>示例 #4 Format string with literal characters</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'H\h i\m s\s'</span><span style="color: #007700">,</span><span style="color: #DD0000">'23h 15m 03s'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'H:i:s'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">23:15:03</blockquote></div>   </div>  </div>  <div class="example" id="example-2179">   <p><strong>示例 #5 Overflow behaviour</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">, </span><span style="color: #DD0000">'2021-17-35 16:60:97'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC2822</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Sat,&nbsp;04&nbsp;Jun&nbsp;2022&nbsp;17:01:37&nbsp;+0000</blockquote></div>   </div>   <div class="example-contents"><p>    Although the result looks odd, it is correct, as the following overflows    happen:   </p></div>   <ol type="1">    <li class="listitem">     <span class="simpara">      <span class="literal">97</span> seconds overflows to <span class="literal">1</span> minute,      leaving <span class="literal">37</span> seconds.     </span>    </li>    <li class="listitem">     <span class="simpara">      <span class="literal">61</span> minutes overflows to <span class="literal">1</span> hour,      leaving <span class="literal">1</span> minutes.     </span>    </li>    <li class="listitem">     <span class="simpara">      <span class="literal">35</span> days overflows to <span class="literal">1</span> month,      leaving <span class="literal">4</span> days. The amount of days that are left over      depends on the month, as not every month has the same amount of days.     </span>    </li>    <li class="listitem">     <span class="simpara">      <span class="literal">18</span> months overflows to <span class="literal">1</span> year,      leaving <span class="literal">6</span> months.     </span>    </li>   </ol>  </div>  <div class="example" id="example-2180">   <p><strong>示例 #6 Overflowing day name behaviour</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$d </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeInterface</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC1123</span><span style="color: #007700">, </span><span style="color: #DD0000">'Mon, 3 Aug 2020 25:00:00 +0000'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC1123</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Mon,&nbsp;10&nbsp;Aug&nbsp;2020&nbsp;01:00:00&nbsp;+0000</blockquote></div>   </div>   <div class="example-contents"><p>    Although the result looks odd, it is correct, as the following overflows    happen:   </p></div>   <ol type="1">    <li class="listitem">     <span class="simpara">      <span class="literal">3 Aug 2020 25:00:00</span> overflows to <span class="literal">(Tue) 4 Aug      2020 01:00</span>.     </span>    </li>    <li class="listitem">     <span class="simpara">      <span class="literal">Mon</span> gets applied, which advances the date to      <span class="literal">Mon, 10 Aug 2020 01:00:00</span>. The explanation of      relative keywords such as <span class="literal">Mon</span> is explained in the      section on <a href="https://php.net/manual/zh/datetime.formats.php#datetime.formats.relative" class="link">relative      formats</a>.     </span>    </li>   </ol>  </div>  <p class="para">   In order to detect overflows in dates, you can use   <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getLastErrors()}</span>, which will   include a warning if an overflow occured.  </p>  <div class="example" id="example-2181">   <p><strong>示例 #7 Detecting overflown dates</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$d </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">, </span><span style="color: #DD0000">'2021-17-35 16:60:97'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC2822</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">GetLastErrors</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Sat,&nbsp;04&nbsp;Jun&nbsp;2022&nbsp;17:01:37&nbsp;+0000<br><br>array(4)&nbsp;{<br>&nbsp;&nbsp;'warning_count'&nbsp;=&gt;<br>&nbsp;&nbsp;int(2)<br>&nbsp;&nbsp;'warnings'&nbsp;=&gt;<br>&nbsp;&nbsp;array(1)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;[19]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;string(27)&nbsp;"The&nbsp;parsed&nbsp;date&nbsp;was&nbsp;invalid"<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;'error_count'&nbsp;=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;'errors'&nbsp;=&gt;<br>&nbsp;&nbsp;array(0)&nbsp;{<br>&nbsp;&nbsp;}<br>}</blockquote></div>   </div>  </div>  <div class="example" id="example-2182">   <p><strong>示例 #8 Greedy parsing behaviour</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">date_parse_from_format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Gis'</span><span style="color: #007700">, </span><span style="color: #DD0000">'60101'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[year]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;[month]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;[day]&nbsp;=&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;[hour]&nbsp;=&gt;&nbsp;60<br>&nbsp;&nbsp;&nbsp;&nbsp;[minute]&nbsp;=&gt;&nbsp;10<br>&nbsp;&nbsp;&nbsp;&nbsp;[second]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;[fraction]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;[warning_count]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[warnings]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;The&nbsp;parsed&nbsp;time&nbsp;was&nbsp;invalid<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[error_count]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;[errors]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;A&nbsp;two&nbsp;digit&nbsp;second&nbsp;could&nbsp;not&nbsp;be&nbsp;found<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[is_localtime]&nbsp;=&gt;<br>)</blockquote></div>   </div>   <div class="example-contents"><p>    The <span class="literal">G</span> format is to parse 24 hour clock hours, with or    without leading zero. This requires to parse 1 or 2 digits. Because there    are two following digits, it greedily reads this as <span class="literal">60</span>.   </p></div>   <div class="example-contents"><p>    The following <span class="literal">i</span> and <span class="literal">s</span> format    characters both require two digits. This means that <span class="literal">10</span>    is passed as minute (<span class="literal">i</span>), and that there are then not    enough digits left to parse for as second (<span class="literal">s</span>).   </p></div>   <div class="example-contents"><p>    The <span class="literal">errors</span> array indicates this problem.   </p></div>   <div class="example-contents"><p>    Additionally, an hour of <span class="literal">60</span> is outside the range    <span class="literal">0</span>-<span class="literal">24</span>, which causes the    <span class="literal">warnings</span> array to include a warning that the time is    invalid.   </p></div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.createfromformat-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::__construct()} - Returns new DateTimeImmutable object</span></li>   <li><span class="function">{@link DateTimeImmutable::getLastErrors()} - Returns the warnings and errors</span></li>   <li><span class="function">{@link checkdate()} - 验证一个格里高里日期</span></li>   <li><span class="function">{@link strptime()} - 解析由 strftime 生成的日期／时间</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns new DateTimeImmutable object formatted according to the specified format
     * @link https://secure.php.net/manual/en/datetimeimmutable.createfromformat.php
     * @param string $format
     * @param string $datetime
     * @param null|DateTimeZone $timezone [optional]
     * @return DateTimeImmutable|false
     */
    #[TentativeType]
    public static function createFromFormat(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime,
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ): DateTimeImmutable|false {}

    /**
 * <div id="datetimeimmutable.createfrommutable" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::createFromMutable</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::createFromMutable</span> — <span class="dc-title">Returns new DateTimeImmutable instance encapsulating the given DateTime object</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.createfrommutable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::createFromMutable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766">static</span></div> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.createfrommutable-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       The mutable <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object that you want to       convert to an immutable version. This object is not modified, but       instead a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> instance is       created containing the same date time and timezone information.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.createfrommutable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> instance.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.createfrommutable-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The method returns an instance of the currently invoked class now. Previously, it created a new instance        of <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span>.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.createfrommutable-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2184">    <p><strong>示例 #1 Creating an immutable date time object</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$immutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromMutable</span><span style="color: #007700">( </span><span style="color: #9876AA">\$date </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * (PHP 5 &gt;=5.6.0)<br/>
     * Returns new DateTimeImmutable object encapsulating the given DateTime object
     * @link https://secure.php.net/manual/en/datetimeimmutable.createfrommutable.php
     * @param DateTime $object The mutable DateTime object that you want to convert to an immutable version. This object is not modified, but instead a new DateTimeImmutable object is created containing the same date time and timezone information.
     * @return DateTimeImmutable returns a new DateTimeImmutable instance.
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.2' => 'static'], default: 'DateTimeImmutable')]
    public static function createFromMutable(DateTime $object) {}

    /**
 * <div id="datetimeimmutable.getlasterrors" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::getLastErrors</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::getLastErrors</span> — <span class="dc-title">Returns the warnings and errors</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.getlasterrors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::getLastErrors</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns an array of warnings and errors found while parsing   a date/time string.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.getlasterrors-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.getlasterrors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns array containing info about warnings and errors, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if there   are neither warnings nor errors.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.getlasterrors-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.0</td>       <td>        Before PHP 8.2.0, this function did not return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>        when there were no warnings or errors. Instead, it would always        return the documented array structure.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.getlasterrors-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2185">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::getLastErrors()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">try {<br>    </span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'asdfasdf'</span><span style="color: #007700">);<br>} catch (</span><span style="color: #9876AA">Exception \$e</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// For demonstration purposes only...<br>    </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">getLastErrors</span><span style="color: #007700">());<br><br>    </span><span style="color: #FF8000">// The real object-oriented way to do this is<br>    // echo \$e-&gt;getMessage();<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;[warning_count]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;[warnings]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;Double&nbsp;timezone&nbsp;specification<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;[error_count]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;[errors]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;The&nbsp;timezone&nbsp;could&nbsp;not&nbsp;be&nbsp;found&nbsp;in&nbsp;the&nbsp;database<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>   </div>   <div class="example-contents"><p>    The indexes 6, and 0 in the example output refer to the character index in the string where the error occurred.   </p></div>  </div> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns the warnings and errors
     * @link https://secure.php.net/manual/en/datetimeimmutable.getlasterrors.php
     * @return array|false Returns array containing info about warnings and errors.
     */
    #[ArrayShape(["warning_count" => "int", "warnings" => "string[]", "error_count" => "int", "errors" => "string[]"])]
    #[TentativeType]
    public static function getLastErrors(): array|false {}

    /**
 * <div id="datetimeimmutable.modify" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::modify</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::modify</span> — <span class="dc-title">Creates a new object with modified timestamp</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.modify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::modify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Creates a new <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span> object with modified timestamp.   The original object is not modified.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.modify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">modifier</span></dt>    <dd>     <p class="para">日期/时间字符串。正确格式的说明详见 <a href="https://php.net/manual/zh/datetime.formats.php" class="link">日期与时间格式</a>。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.modify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> on success.   过程化风格在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-datetimeimmutable.modify-errors">  <h3 class="title">错误／异常</h3>  <p class="para">    If an invalid Date/Time string is passed,    <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> is thrown.    Previous to PHP 8.3, this was a warning.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.modify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::modify()</strong></span> now throws       <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> if an       invalid string is passed.  Previously, it returned <span class="literal">false</span>,       and a warning was emitted.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.modify-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2186">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::modify()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2006-12-13</blockquote></div>   </div>  </div>  <div class="example" id="example-2187">   <p><strong>示例 #2 Beware when adding or subtracting months</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-31<br>2001-03-03</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.modify-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::add()} - Returns a new object, with added amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::sub()} - Subtracts an amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::setDate()} - Sets the date</span></li>   <li><span class="function">{@link DateTimeImmutable::setISODate()} - Sets the ISO date</span></li>   <li><span class="function">{@link DateTimeImmutable::setTime()} - Sets the time</span></li>   <li><span class="function">{@link DateTimeImmutable::setTimestamp()} - Sets the date and time based on a Unix timestamp</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Alters the timestamp
     * @link https://secure.php.net/manual/en/datetimeimmutable.modify.php
     * @param string $modifier <p>A date/time string. Valid formats are explained in
     * {@link https://secure.php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * @return static|false Returns the newly created object or false on failure.
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[PhpStormStubsElementAvailable(from: '5.5', to: '8.2')]
    #[Pure]
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'DateTimeImmutable'], default: 'static|false')]
    public function modify(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $modifier) {}

    /**
 * <div id="datetimeimmutable.modify" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::modify</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::modify</span> — <span class="dc-title">Creates a new object with modified timestamp</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.modify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::modify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Creates a new <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span> object with modified timestamp.   The original object is not modified.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.modify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">modifier</span></dt>    <dd>     <p class="para">日期/时间字符串。正确格式的说明详见 <a href="https://php.net/manual/zh/datetime.formats.php" class="link">日期与时间格式</a>。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.modify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> on success.   过程化风格在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-datetimeimmutable.modify-errors">  <h3 class="title">错误／异常</h3>  <p class="para">    If an invalid Date/Time string is passed,    <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> is thrown.    Previous to PHP 8.3, this was a warning.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.modify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::modify()</strong></span> now throws       <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> if an       invalid string is passed.  Previously, it returned <span class="literal">false</span>,       and a warning was emitted.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.modify-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2186">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::modify()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2006-12-13</blockquote></div>   </div>  </div>  <div class="example" id="example-2187">   <p><strong>示例 #2 Beware when adding or subtracting months</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-31<br>2001-03-03</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.modify-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::add()} - Returns a new object, with added amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::sub()} - Subtracts an amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::setDate()} - Sets the date</span></li>   <li><span class="function">{@link DateTimeImmutable::setISODate()} - Sets the ISO date</span></li>   <li><span class="function">{@link DateTimeImmutable::setTime()} - Sets the time</span></li>   <li><span class="function">{@link DateTimeImmutable::setTimestamp()} - Sets the date and time based on a Unix timestamp</span></li>  </ul> </div></div>
 * 
     * (PHP 8 &gt;=8.3.0)<br/>
     * Alters the timestamp
     * @link https://secure.php.net/manual/en/datetimeimmutable.modify.php
     * @param string $modifier <p>A date/time string. Valid formats are explained in
     * {@link https://secure.php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * @return static|false Returns the newly created object or false on failure.
     * @throws DateMalformedStringException
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[PhpStormStubsElementAvailable(from: '8.3')]
    #[Pure]
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'DateTimeImmutable'], default: 'DateTimeImmutable|false')]
    public function modify(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $modifier) {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * The __set_state handler
     * @link https://secure.php.net/manual/en/datetimeimmutable.set-state.php
     * @param array $array <p>Initialization array.</p>
     * @return DateTimeImmutable
     * Returns a new instance of a {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object.
     */
    public static function __set_state(array $array) {}

    /**
 * <div id="datetimeimmutable.setdate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::setDate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::setDate</span> — <span class="dc-title">Sets the date</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.setdate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::setDate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$day</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new DateTimeImmutable object with the current date of the   DateTimeImmutable object set to the given date.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.setdate-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      Year of the date.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      Month of the date.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">day</span></dt>    <dd>     <p class="para">      Day of the date.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.setdate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.setdate-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2188">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::setDate()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2001</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-02-03</blockquote></div>   </div>  </div>  <div class="example" id="example-2189">   <p><strong>示例 #2 Values exceeding ranges are added to their parent values</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2001</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">28</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2001</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">29</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setDate</span><span style="color: #007700">(</span><span style="color: #9876AA">2001</span><span style="color: #007700">, </span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-02-28<br>2001-03-01<br>2002-02-03</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.setdate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setISODate()} - Sets the ISO date</span></li>   <li><span class="function">{@link DateTimeImmutable::setTime()} - Sets the time</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Sets the date
     * @link https://secure.php.net/manual/en/datetimeimmutable.setdate.php
     * @param int $year <p>Year of the date.</p>
     * @param int $month <p>Month of the date.</p>
     * @param int $day <p>Day of the date.</p>
     * @return static|false
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setDate(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $year,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $month,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $day
    ): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.setisodate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::setISODate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::setISODate</span> — <span class="dc-title">Sets the ISO date</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.setisodate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::setISODate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$week</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span><span class="initializer"> = 1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new DateTimeImmutable object with the date set according to the   ISO 8601 standard - using weeks and day offsets rather than specific dates.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.setisodate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      Year of the date.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">week</span></dt>    <dd>     <p class="para">      Week of the date.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfWeek</span></dt>    <dd>     <p class="para">      Offset from the first day of the week.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.setisodate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.setisodate-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2190">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::setISODate()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">date_isodate_set</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">date_isodate_set</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2008-01-07<br>2008-01-13</blockquote></div>   </div>  </div>  <div class="example" id="example-2191">   <p><strong>示例 #2 Values exceeding ranges are added to their parent values</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">53</span><span style="color: #007700">, </span><span style="color: #9876AA">7</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2008-01-13<br>2008-01-14<br>2009-01-04</blockquote></div>   </div>  </div>  <div class="example" id="example-2192">   <p><strong>示例 #3 Finding the month a week is in</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setISODate</span><span style="color: #007700">(</span><span style="color: #9876AA">2008</span><span style="color: #007700">, </span><span style="color: #9876AA">14</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'n'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">3</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.setisodate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setDate()} - Sets the date</span></li>   <li><span class="function">{@link DateTimeImmutable::setTime()} - Sets the time</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Sets the ISO date
     * @link https://php.net/manual/zh/class.datetimeimmutable.php
     * @param int $year <p>Year of the date.</p>
     * @param int $week <p>Week of the date.</p>
     * @param int $dayOfWeek [optional] <p>Offset from the first day of the week.</p>
     * @return static|false
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setISODate(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $year,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $week,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $dayOfWeek = 1
    ): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.settime" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::setTime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::setTime</span> — <span class="dc-title">Sets the time</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.settime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::setTime</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microsecond</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new DateTimeImmutable object with the time set to the given time.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.settime-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      Hour of the time.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      Minute of the time.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      Second of the time.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">microsecond</span></dt>    <dd>     <p class="para">      Microsecond of the time.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.settime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.settime-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>The behaviour with double existing hours (during the fall-back      DST transition) changed. Previously PHP would pick the second occurrence      (after the DST transition), instead of the first occurrence (before DST       transition).</td>     </tr>     <tr>      <td>7.1.0</td>      <td>The <span class="parameter" style="color:#3A95FF">microsecond</span> parameter was added.</td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.settime-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2193">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::setTime()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2001-01-01'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">24</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-01&nbsp;14:55:00<br>2001-01-01&nbsp;14:55:24</blockquote></div>   </div>  </div>  <div class="example" id="example-2194">   <p><strong>示例 #2 Values exceeding ranges are added to their parent values</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2001-01-01'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">24</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">65</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">14</span><span style="color: #007700">, </span><span style="color: #9876AA">65</span><span style="color: #007700">, </span><span style="color: #9876AA">24</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTime</span><span style="color: #007700">(</span><span style="color: #9876AA">25</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">24</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-01&nbsp;14:55:24<br>2001-01-01&nbsp;14:56:05<br>2001-01-01&nbsp;15:05:24<br>2001-01-02&nbsp;01:55:24</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.settime-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setDate()} - Sets the date</span></li>   <li><span class="function">{@link DateTimeImmutable::setISODate()} - Sets the ISO date</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Sets the time
     * @link https://secure.php.net/manual/en/datetimeimmutable.settime.php
     * @param int $hour <p> Hour of the time. </p>
     * @param int $minute <p> Minute of the time. </p>
     * @param int $second [optional] <p> Second of the time. </p>
     * @param int $microsecond [optional] <p> Microseconds of the time. Added since 7.1</p>
     * @return static|false
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTime(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $hour,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $minute,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $second = 0,
        #[PhpStormStubsElementAvailable(from: '7.1')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $microsecond = 0
    ): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.settimestamp" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::setTimestamp</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::setTimestamp</span> — <span class="dc-title">Sets the date and time based on a Unix timestamp</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.settimestamp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::setTimestamp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span> object constructed from the   old one, with the date and time set based on an Unix timestamp.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.settimestamp-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">      Unix timestamp representing the date.      Setting timestamps outside the range of <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> is possible by using      <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::modify()}</span> with the <span class="literal">@</span> format.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.settimestamp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.settimestamp-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2195">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::setTimestamp()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'U = Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimestamp</span><span style="color: #007700">(</span><span style="color: #9876AA">1171502725</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'U = Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1272508903&nbsp;=&nbsp;2010-04-28&nbsp;22:41:43<br>1171502725&nbsp;=&nbsp;2007-02-14&nbsp;20:25:25</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.settimestamp-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::getTimestamp()} - 获取 Unix 时间戳</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Sets the date and time based on an Unix timestamp
     * @link https://secure.php.net/manual/en/datetimeimmutable.settimestamp.php
     * @param int $timestamp <p>Unix timestamp representing the date.</p>
     * @return static
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTimestamp(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $timestamp): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.settimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::setTimezone</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::setTimezone</span> — <span class="dc-title">Sets the time zone</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.settimezone-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::setTimezone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new DateTimeImmutable object with a new timezone set.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.settimezone-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      A <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> object representing the      desired time zone.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.settimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new modified <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object for   method chaining. The underlaying point-in-time is not changed when calling   this method.  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.settimezone-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2196">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::setTimeZone()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">, new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Nauru'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimezone</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Chatham'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-01&nbsp;00:00:00+12:00<br>2000-01-01&nbsp;01:45:00+13:45</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.settimezone-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::getTimezone()} - 返回相对于指定 DateTime 的时区</span></li>   <li><span class="function">{@link DateTimeZone::__construct()} - 创建新的DateTimeZone对象</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Sets the time zone
     * @link https://secure.php.net/manual/en/datetimeimmutable.settimezone.php
     * @param DateTimeZone $timezone <p>
     * A {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone} object representing the
     * desired time zone.
     * </p>
     * @return static
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setTimezone(DateTimeZone $timezone): DateTimeImmutable {}

    /**
 * <div id="datetimeimmutable.sub" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::sub</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::sub</span> — <span class="dc-title">   Subtracts an amount of days, months, years, hours, minutes and seconds  </span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.sub-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::sub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div>  <p class="para rdfs-comment">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object, with the specified   <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object subtracted from the specified   DateTimeImmutable object.  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.sub-parameters">  <h3 class="title">参数</h3>  <dl>       <dt>     <span class="parameter" style="color:#3A95FF">interval</span>    </dt>    <dd>     <p class="para">      A <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.sub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有修改数据的新 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 对象。  </p> </div> <div class="refsect1 errors" id="refsect1-datetimeimmutable.sub-errors">  <h3 class="title">错误／异常</h3>  <p class="para">    If an unsupported operation is attempted, such as using a    <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object representing relative time    specifications such as <span class="literal">next weekday</span>, a    <span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidoperationexception.php" class="exceptionname">DateInvalidOperationException</a></span> is thrown.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimeimmutable.sub-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       Now throws a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidoperationexception.php" class="exceptionname">DateInvalidOperationException</a></span> instead of       a warning when an unsupported operation is attempted.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.sub-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2197">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::sub()</strong></span> example</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-20'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sub</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P10D'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-10</blockquote></div>   </div>  </div>  <div class="example" id="example-2198">   <p><strong>示例 #2 Further <span class="function"><strong>DateTimeImmutable::sub()</strong></span> examples</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-20'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sub</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'PT10H30S'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-20'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$newDate </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sub</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P7Y5M4DT4H3M2S'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$newDate</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-19&nbsp;13:59:30<br>1992-08-15&nbsp;19:56:58</blockquote></div>   </div>  </div>  <div class="example" id="example-2199">   <p><strong>示例 #3 Beware when subtracting months</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2001-04-30'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1M'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$newDate1 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$interval</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$newDate2 </span><span style="color: #007700">= </span><span style="color: #9876AA">\$newDate1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$interval</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$newDate2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-03-30<br>2001-03-02</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetimeimmutable.sub-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::add()} - Returns a new object, with added amount of days, months, years, hours, minutes and seconds</span></li>   <li><span class="function">{@link DateTimeImmutable::diff()} - 返回两个 DateTime 之间的差值</span></li>   <li><span class="function">{@link DateTimeImmutable::modify()} - Creates a new object with modified timestamp</span></li>  </ul> </div></div>
 * 
     * (PHP 5 &gt;=5.5.0)<br/>
     * Subtracts an amount of days, months, years, hours, minutes and seconds
     * @link https://secure.php.net/manual/en/datetimeimmutable.sub.php
     * @param DateInterval $interval <p>
     * A {@link https://secure.php.net/manual/en/class.dateinterval.php DateInterval} object
     * </p>
     * @return static
     * @throws DateInvalidOperationException
     * Returns the {@link https://secure.php.net/manual/en/class.datetimeimmutable.php DateTimeImmutable} object for method chaining or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function sub(DateInterval $interval): DateTimeImmutable {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns the difference between two DateTime objects
     * @link https://secure.php.net/manual/en/datetime.diff.php
     * @param DateTimeInterface $targetObject <p>The date to compare to.</p>
     * @param bool $absolute [optional] <p>Should the interval be forced to be positive?</p>
     * @return DateInterval|false
     * The {@link https://secure.php.net/manual/en/class.dateinterval.php DateInterval} object representing the
     * difference between the two dates or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function diff(
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeInterface'], default: '')] $targetObject,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $absolute = false
    ): DateInterval {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns date formatted according to given format
     * @link https://secure.php.net/manual/en/datetime.format.php
     * @param string $format <p>
     * Format accepted by  {@link https://secure.php.net/manual/en/function.date.php date()}.
     * </p>
     * @return string
     * Returns the formatted date string on success or <b>FALSE</b> on failure.
     */
    #[Pure(true)]
    #[TentativeType]
    public function format(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format): string {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Returns the timezone offset
     * @return int
     * Returns the timezone offset in seconds from UTC on success
     * or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function getOffset(): int {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Gets the Unix timestamp
     * @return int
     * Returns the Unix timestamp representing the date.
     */
    #[TentativeType]
    public function getTimestamp(): int {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * Return time zone relative to given DateTime
     * @link https://secure.php.net/manual/en/datetime.gettimezone.php
     * @return DateTimeZone|false
     * Returns a {@link https://secure.php.net/manual/en/class.datetimezone.php DateTimeZone} object on success
     * or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function getTimezone(): DateTimeZone|false {}

    /**
     * (PHP 5 &gt;=5.5.0)<br/>
     * The __wakeup handler
     * @link https://secure.php.net/manual/en/datetime.wakeup.php
     * @return void Initializes a DateTime object.
     */
    #[TentativeType]
    public function __wakeup(): void {}

    /**
 * <div id="datetimeimmutable.createfrominterface" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeImmutable::createFromInterface</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeImmutable::createFromInterface</span> — <span class="dc-title">Returns new DateTimeImmutable object encapsulating the given DateTimeInterface object</span></p> </div> <div class="refsect1 description" id="refsect1-datetimeimmutable.createfrominterface-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::createFromInterface</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-datetimeimmutable.createfrominterface-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> object that needs       to be converted to an immutable version. This object is not modified, but       instead a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object is       created containing the same date, time, and timezone information.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimeimmutable.createfrominterface-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> instance.  </p> </div> <div class="refsect1 examples" id="refsect1-datetimeimmutable.createfrominterface-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2183">    <p><strong>示例 #1 Creating an immutable date time object</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$immutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromInterface</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$also_immutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromInterface</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * @param DateTimeInterface $object
     * @return DateTimeImmutable
     * @since 8.0
     */
    public static function createFromInterface(DateTimeInterface $object): DateTimeImmutable {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void {}

    /**
     * @since 8.4
     */
    #[TentativeType]
    public static function createFromTimestamp(int|float $timestamp): static {}

    /**
     * @since 8.4
     */
    public function getMicrosecond(): int {}

    /**
     * @since 8.4
     */
    public function setMicrosecond(int $microsecond): static {}
}

/**
 * <div id="class.datetime" class="reference"> <h1 class="title">DateTime 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p>   <div class="section" id="datetime.intro">   <h2 class="title">简介</h2>   <p class="para">    日期和时间表示。   </p>   <p class="para">    此类与 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 行为相同。区别就是调用有修改行为的方法（比如    <span class="function">{@link DateTime::modify()}</span>）时，会修改对象本身。   </p>   <div class="warning"><strong class="warning">警告</strong>    <p class="para">     在 <span class="classname"><strong class="classname">DateTime</strong></span> 类的对象上调用方法会改变对象中封装的信息，如果想要避免这种情况，就得使用     <span class="literal">clone</span> 操作符创建新的对象。推荐使用 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span>     代替 <span class="classname"><strong class="classname">DateTime</strong></span> 来获得这个默认行为。    </p>   </div>  </div>  <div class="section" id="datetime.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DateTime</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.datetimeinterface.php" class="interfacename">DateTimeInterface</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ATOM}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::COOKIE}</var><span class="initializer"> = "l, d-M-Y H:i:s T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ISO8601}</var><span class="initializer"> = "Y-m-d\\TH:i:sO"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::ISO8601_EXPANDED}</var><span class="initializer"> = "X-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC822}</var><span class="initializer"> = "D, d M y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC850}</var><span class="initializer"> = "l, d-M-y H:i:s T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC1036}</var><span class="initializer"> = "D, d M y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC1123}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC7231}</var><span class="initializer"> = "D, d M Y H:i:s \\G\\M\\T"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC2822}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC3339}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RFC3339_EXTENDED}</var><span class="initializer"> = "Y-m-d\\TH:i:s.vP"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::RSS}</var><span class="initializer"> = "D, d M Y H:i:s O"</span>;</div><div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname">{@link DateTimeInterface::W3C}</var><span class="initializer"> = "Y-m-d\\TH:i:sP"</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span><span class="initializer"> = "now"</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.add.php" class="methodname" style="color:#CC7832">add</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.createfromformat.php" class="methodname" style="color:#CC7832">createFromFormat</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.createfromimmutable.php" class="methodname" style="color:#CC7832">createFromImmutable</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766">static</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.createfrominterface.php" class="methodname" style="color:#CC7832">createFromInterface</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.modify.php" class="methodname" style="color:#CC7832">modify</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.set-state.php" class="methodname" style="color:#CC7832">__set_state</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.setdate.php" class="methodname" style="color:#CC7832">setDate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$day</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.setisodate.php" class="methodname" style="color:#CC7832">setISODate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$week</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span><span class="initializer"> = 1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.settime.php" class="methodname" style="color:#CC7832">setTime</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microsecond</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.settimestamp.php" class="methodname" style="color:#CC7832">setTimestamp</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.settimezone.php" class="methodname" style="color:#CC7832">setTimezone</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.sub.php" class="methodname" style="color:#CC7832">sub</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.diff.php" class="methodname" style="color:#CC7832">diff</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.getoffset.php" class="methodname" style="color:#CC7832">getOffset</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.gettimestamp.php" class="methodname" style="color:#CC7832">getTimestamp</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.gettimezone.php" class="methodname" style="color:#CC7832">getTimezone</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.serialize.php" class="methodname" style="color:#CC7832">__serialize</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.unserialize.php" class="methodname" style="color:#CC7832">__unserialize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetime.wakeup.php" class="methodname" style="color:#CC7832">__wakeup</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  }</div>  </div> <div class="section" id="datetime.changelog">  <h2 class="title">更新日志</h2>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        类常量现已类型化。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <span class="classname"><strong class="classname">DateTime</strong></span> 的类常量现在定义在 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> 上。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        现在 <span class="classname"><strong class="classname">DateTime</strong></span> 构造器在构造值中包含了当前微秒。在此之前，微秒会一直初始化为 <span class="literal">0</span>。       </td>      </tr>     </tbody>       </table>   </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DateTime::add} — 修改 DateTime 对象，增加天、月、年、小时、分钟以及秒的数量。</li><li>{@link DateTime::__construct} — 返回新的 DateTime 对象</li><li>{@link DateTime::createFromFormat} — 根据指定格式解析时间字符串</li><li>{@link DateTime::createFromImmutable} — Returns new DateTime instance encapsulating the given DateTimeImmutable object</li><li>{@link DateTime::createFromInterface} — Returns new DateTime object encapsulating the given DateTimeInterface object</li><li>{@link DateTime::getLastErrors} — 别名 DateTimeImmutable::getLastErrors</li><li>{@link DateTime::modify} — 修改日期时间对象的值</li><li>{@link DateTime::__set_state} — __set_state 处理程序</li><li>{@link DateTime::setDate} — 设置日期</li><li>{@link DateTime::setISODate} — 设置 ISO 日期</li><li>{@link DateTime::setTime} — 设置时间</li><li>{@link DateTime::setTimestamp} — 以 Unix 时间戳的方式设置日期和时间</li><li>{@link DateTime::setTimezone} — 设置 DateTime 对象的时区</li><li>{@link DateTime::sub} — 对 DateTime 对象减去一定量的日、月、年、小时、分钟和秒。</li></ul></div>
 * 
 * Representation of date and time.
 * @link https://php.net/manual/zh/class.datetime.php
 */
class DateTime implements DateTimeInterface
{
    /**
     * @removed 7.2
     */
    public const ATOM = 'Y-m-d\TH:i:sP';

    /**
     * @removed 7.2
     */
    public const COOKIE = 'l, d-M-Y H:i:s T';

    /**
     * @removed 7.2
     */
    public const ISO8601 = 'Y-m-d\TH:i:sO';

    /**
     * @removed 7.2
     */
    public const RFC822 = 'D, d M y H:i:s O';

    /**
     * @removed 7.2
     */
    public const RFC850 = 'l, d-M-y H:i:s T';

    /**
     * @removed 7.2
     */
    public const RFC1036 = 'D, d M y H:i:s O';

    /**
     * @removed 7.2
     */
    public const RFC1123 = 'D, d M Y H:i:s O';

    /**
     * @removed 7.2
     */
    public const RFC2822 = 'D, d M Y H:i:s O';

    /**
     * @removed 7.2
     */
    public const RFC3339 = 'Y-m-d\TH:i:sP';

    /**
     * @removed 7.2
     */
    public const RFC3339_EXTENDED = 'Y-m-d\TH:i:s.vP';

    /**
     * @removed 7.2
     */
    public const RFC7231 = 'D, d M Y H:i:s \G\M\T';

    /**
     * @removed 7.2
     */
    public const RSS = 'D, d M Y H:i:s O';

    /**
     * @removed 7.2
     */
    public const W3C = 'Y-m-d\TH:i:sP';

    /**
     * (PHP 5 &gt;=5.2.0)<br/>
     * @link https://php.net/manual/en/datetime.construct.php
     * @param string $datetime [optional]
     * <p>A date/time string. Valid formats are explained in {@link https://php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * <p>
     * Enter <b>now</b> here to obtain the current time when using
     * the <em>$timezone</em> parameter.
     * </p>
     * @param null|DateTimeZone $timezone [optional] <p>
     * A {@link https://php.net/manual/en/class.datetimezone.php DateTimeZone} object representing the
     * timezone of <em>$datetime</em>.
     * </p>
     * <p>
     * If <em>$timezone</em> is omitted,
     * the current timezone will be used.
     * </p>
     * <blockquote><p><b>Note</b>:
     * </p><p>
     * The <em>$timezone</em> parameter
     * and the current timezone are ignored when the
     * <em>$time</em> parameter either
     * is a UNIX timestamp (e.g. <em>@946684800</em>)
     * or specifies a timezone
     * (e.g. <em>2010-01-28T15:00:00+02:00</em>).
     * </p> <p></p></blockquote>
     * @throws Exception Emits Exception in case of an error.
     */
    #[PhpStormStubsElementAvailable(from: '5.3', to: '8.2')]
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime = 'now',
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ) {}

    /**
     * (PHP 8 &gt;=8.3.0)<br/>
     * @link https://php.net/manual/en/datetime.construct.php
     * @param string $datetime [optional]
     * <p>A date/time string. Valid formats are explained in {@link https://php.net/manual/en/datetime.formats.php Date and Time Formats}.</p>
     * <p>
     * Enter <b>now</b> here to obtain the current time when using
     * the <em>$timezone</em> parameter.
     * </p>
     * @param null|DateTimeZone $timezone [optional] <p>
     * A {@link https://php.net/manual/en/class.datetimezone.php DateTimeZone} object representing the
     * timezone of <em>$datetime</em>.
     * </p>
     * <p>
     * If <em>$timezone</em> is omitted,
     * the current timezone will be used.
     * </p>
     * <blockquote><p><b>Note</b>:
     * </p><p>
     * The <em>$timezone</em> parameter
     * and the current timezone are ignored when the
     * <em>$time</em> parameter either
     * is a UNIX timestamp (e.g. <em>@946684800</em>)
     * or specifies a timezone
     * (e.g. <em>2010-01-28T15:00:00+02:00</em>).
     * </p> <p></p></blockquote>
     * @throws DateMalformedStringException Emits Exception in case of an error.
     */
    #[PhpStormStubsElementAvailable(from: '8.3')]
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime = 'now',
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ) {}

    /**
     * @return void
     * @link https://php.net/manual/en/datetime.wakeup.php
     */
    #[TentativeType]
    public function __wakeup(): void {}

    /**
 * <div id="datetime.format" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeInterface::format</h1>  <h1 class="refname">DateTimeImmutable::format</h1>  <h1 class="refname">DateTime::format</h1>  <h1 class="refname">date_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeInterface::format</span> -- <span class="refname">DateTimeImmutable::format</span> -- <span class="refname">DateTime::format</span> -- <span class="refname">date_format</span> — <span class="dc-title">按照指定格式返回格式化后的日期</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.format-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_format}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   按照指定格式返回格式化后的日期。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.format-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅为过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">format</span></dt>    <dd>     <p class="para">      输出的日期 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      的格式。参见下面的格式化选项。也有几个<a href="https://php.net/manual/zh/class.datetimeinterface.php#datetimeinterface.constants.types" class="link">预定义日期常量</a>可以代替。例如      <strong><span><a href="https://php.net/manual/zh/datetime.constants.php#constant.date-rss">DATE_RSS</a></span></strong> 包含格式化字符串 <span class="literal">'D, d M Y H:i:s'</span>。     </p>     <p class="para">      </p><table class="doctable table">       <caption><strong><span class="parameter" style="color:#3A95FF">format</span> 参数字符串可以识别以下字符</strong></caption>               <thead>         <tr>          <th><span class="parameter" style="color:#3A95FF">format</span> 字符</th>          <th>说明</th>          <th>返回值示例</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td style="text-align: center;"><em>日</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">d</span></td>          <td>月份中的第几天，有补零的两位数字</td>          <td><span class="literal">01</span> 到 <span class="literal">31</span></td>         </tr>         <tr>          <td><span class="literal">D</span></td>          <td>文字表示星期几，三个字母</td>          <td><span class="literal">Mon</span> 到 <span class="literal">Sun</span></td>         </tr>         <tr>          <td><span class="literal">j</span></td>          <td>月份中的第几天，没有补零</td>          <td><span class="literal">1</span> 到 <span class="literal">31</span></td>         </tr>         <tr>          <td><span class="literal">l</span>（小写 'L'）</td>          <td>完整文本表示星期几</td>          <td><span class="literal">Sunday</span> 到 <span class="literal">Saturday</span></td>         </tr>         <tr>          <td><span class="literal">N</span></td>          <td>ISO 8601 数字表示星期几</td>          <td><span class="literal">1</span>（星期一）到 <span class="literal">7</span>（星期天）</td>         </tr>         <tr>          <td><span class="literal">S</span></td>          <td>月份中的第几天英文后缀，两个字符</td>          <td>           <span class="literal">st</span>、<span class="literal">nd</span>、<span class="literal">rd</span> 或           <span class="literal">th</span>。可以和 <span class="literal">j</span> 一起使用          </td>         </tr>         <tr>          <td><span class="literal">w</span></td>          <td>数字表示星期几</td>          <td><span class="literal">0</span>（星期天）到 <span class="literal">6</span>（星期六）</td>         </tr>         <tr>          <td><span class="literal">z</span></td>          <td>一年中的第几天（从 0 开始）</td>          <td><span class="literal">0</span> 到 <span class="literal">365</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>周</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">W</span></td>          <td>ISO 8601 格式当年中的第几周，每周从周一开始</td>          <td>示例：<span class="literal">42</span>（当年的第 42 周）</td>         </tr>         <tr>          <td style="text-align: center;"><em>月</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">F</span></td>          <td>月份的完整文本表示，比如 January 或者 March</td>          <td><span class="literal">January</span> 到 <span class="literal">December</span></td>         </tr>         <tr>          <td><span class="literal">m</span></td>          <td>月份的数字表示，补零</td>          <td><span class="literal">01</span> 到 <span class="literal">12</span></td>         </tr>         <tr>          <td><span class="literal">M</span></td>          <td>简短文本表示月份，三个字母</td>          <td><span class="literal">Jan</span> 到 <span class="literal">Dec</span></td>         </tr>         <tr>          <td><span class="literal">n</span></td>          <td>数字表示几月份，不补零</td>          <td><span class="literal">1</span> 到 <span class="literal">12</span></td>         </tr>         <tr>          <td><span class="literal">t</span></td>          <td>指定月份的天数</td>          <td><span class="literal">28</span> 到 <span class="literal">31</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>年</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">L</span></td>          <td>是否是闰年</td>          <td>如果是闰年为 <span class="literal">1</span>，否则为 <span class="literal">0</span>。</td>         </tr>         <tr>          <td><span class="literal">o</span></td>          <td>ISO 8601 数字年份表示。这和 <span class="literal">Y</span> 值相同，但如果 ISO           周数（<span class="literal">W</span>）属于上一年或者下一年，则用那一年。</td>          <td>示例：<span class="literal">1999</span> 或 <span class="literal">2003</span></td>         </tr>         <tr>          <td><span class="literal">X</span></td>          <td>年份的展开全数字表示，至少四位，<span class="literal">-</span>           表示公元前，<span class="literal">+</span> 表示公元。</td>          <td>示例：<span class="literal">-0055</span>、<span class="literal">+0787</span>、           <span class="literal">+1999</span>、<span class="literal">+10191</span></td>         </tr>         <tr>          <td><span class="literal">x</span></td>          <td>如果需要，年份可以展开全数字表示，如果可能的话，也可以用标准的全数字（<span class="literal">Y</span>）表示。至少有四位数字。公元前以           <span class="literal">-</span> 为前缀，年份不小于 <span class="literal">10000</span>           时以 <span class="literal">+</span> 为前缀。</td>          <td>示例：<span class="literal">-0055</span>, <span class="literal">0787</span>,           <span class="literal">1999</span>, <span class="literal">+10191</span></td>         </tr>         <tr>          <td><span class="literal">Y</span></td>          <td>年份完整数字表示，至少四位，使用 <span class="literal">-</span> 表示公元前。</td>          <td>示例：<span class="literal">-0055</span>、<span class="literal">0787</span>、           <span class="literal">1999</span>、<span class="literal">2003</span>、<span class="literal">10191</span>          </td>         </tr>         <tr>          <td><span class="literal">y</span></td>          <td>两位数的年份表示</td>          <td>示例：<span class="literal">99</span> 或 <span class="literal">03</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>时间</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">a</span></td>          <td>小写的上午和下午</td>          <td><span class="literal">am</span> 或 <span class="literal">pm</span></td>         </tr>         <tr>          <td><span class="literal">A</span></td>          <td>大写的上午和下午</td>          <td><span class="literal">AM</span> 或 <span class="literal">PM</span></td>         </tr>         <tr>          <td><span class="literal">B</span></td>          <td>Swatch 互联网时间</td>          <td><span class="literal">000</span> 到 <span class="literal">999</span></td>         </tr>         <tr>          <td><span class="literal">g</span></td>          <td>不补零的小时（12 小时制）</td>          <td><span class="literal">1</span> 到 <span class="literal">12</span></td>         </tr>         <tr>          <td><span class="literal">G</span></td>          <td>不补零的小时（24 小时制）</td>          <td><span class="literal">0</span> 到 <span class="literal">23</span></td>         </tr>         <tr>          <td><span class="literal">h</span></td>          <td>补零的小时（12 小时制）</td>          <td><span class="literal">01</span> 到 <span class="literal">12</span></td>         </tr>         <tr>          <td><span class="literal">H</span></td>          <td>补零的小时（24 小时制）</td>          <td><span class="literal">00</span> 到 <span class="literal">23</span></td>         </tr>         <tr>          <td><span class="literal">i</span></td>          <td>补零的分钟</td>          <td><span class="literal">00</span> 到 <span class="literal">59</span></td>         </tr>         <tr>          <td><span class="literal">s</span></td>          <td>补零的秒</td>          <td><span class="literal">00</span> 到 <span class="literal">59</span></td>         </tr>         <tr>          <td><span class="literal">u</span></td>          <td>           微秒。注意 <span class="function">{@link date()}</span> 总是生成 <span class="literal">000000</span>，因为它需要一个           <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 参数，而如果 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> 是使用微秒创建的，则           <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::format()</strong></span> 支持微秒。          </td>          <td>示例：<span class="literal">654321</span></td>         </tr>         <tr>          <td><span class="literal">v</span></td>          <td>           毫秒。与 <span class="literal">u</span> 的说明相同。          </td>          <td>示例：<span class="literal">654</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>时区</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">e</span></td>          <td>时区标识符</td>          <td>示例：<span class="literal">UTC</span>、<span class="literal">GMT</span>、<span class="literal">Atlantic/Azores</span></td>         </tr>         <tr>          <td><span class="literal">I</span>（大写 i）</td>          <td>是否为夏令时</td>          <td>如果是夏令时为 <span class="literal">1</span>，否则为 <span class="literal">0</span>。</td>         </tr>         <tr>          <td><span class="literal">O</span></td>          <td>跟格林尼治时间（GMT）的差异，小时和分钟时间没有冒号</td>          <td>示例：<span class="literal">+0200</span></td>         </tr>         <tr>          <td><span class="literal">P</span></td>          <td>跟格林尼治时间（GMT）的差异，小时和分钟时间有冒号</td>          <td>示例：<span class="literal">+02:00</span></td>         </tr>         <tr>          <td><span class="literal">p</span></td>          <td>           跟 <span class="literal">P</span> 相同，区别是使用 <span class="literal">Z</span>           替换 <span class="literal">+00:00</span> 返回（PHP 8.0.0 起可用）          </td>          <td>示例：<span class="literal">Z</span> 或 <span class="literal">+02:00</span></td>         </tr>         <tr>          <td><span class="literal">T</span></td>          <td>如果知道会返回时区缩写，否则返回 GMT 时差。</td>          <td>示例：<span class="literal">EST</span>、<span class="literal">MDT</span>、<span class="literal">+05</span></td>         </tr>         <tr>          <td><span class="literal">Z</span></td>          <td>以秒为单位的时差。UTC 以西的时区为负的时差，以东为正的时差。</td>          <td><span class="literal">-43200</span> 到 <span class="literal">50400</span></td>         </tr>         <tr>          <td style="text-align: center;"><em>完整日期/时间</em></td>          <td>---</td>          <td>---</td>         </tr>         <tr>          <td><span class="literal">c</span></td>          <td>ISO 8601 日期</td>          <td>2004-02-12T15:19:21+00:00</td>         </tr>         <tr>          <td><span class="literal">r</span></td>          <td><a href="https://datatracker.ietf.org/doc/html/rfc2822" class="link external">»&nbsp;RFC 2822</a>/<a href="https://datatracker.ietf.org/doc/html/rfc5322" class="link external">»&nbsp;RFC 5322</a> 格式化时间</td>          <td>示例：<span class="literal">Thu, 21 Dec 2000 16:01:07 +0200</span></td>         </tr>         <tr>          <td><span class="literal">U</span></td>          <td>从 Unix 纪元（January 1 1970 00:00:00 GMT）到至今的秒数</td>          <td>参见 <span class="function">{@link time()}</span></td>         </tr>        </tbody>             </table>          <p class="para">      格式字符串中无法识别的字符将会原样打印。当使用 <span class="function">{@link gmdate()}</span>      时，<span class="literal">Z</span> 格式将始终返回 <span class="literal">0</span>。     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       由于本函数仅接受 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 类型时间戳，所以 <span class="literal">u</span> 格式化标识符仅在用户使用       <span class="function">{@link date_create()}</span> 且使用 <span class="function">{@link date_format()}</span> 创建时间戳时才有用。      </p>     </blockquote>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回格式化后的日期字符串。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.format-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.2.0</td>      <td>       新增 <span class="literal">X</span> 和 <span class="literal">x</span> 格式化字符。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       新增 <span class="literal">p</span> 格式化字符。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetime.format-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2204">    <p><strong>示例 #1 <span class="function"><strong>DateTimeInterface::format()</strong></span> 示例</strong></p>    <div class="example-contents"><p>面向对象风格</p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>过程化风格</p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d H:i:s'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-01&nbsp;00:00:00</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2205">    <p><strong>示例 #2 更多示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置使用的默认时区。<br></span><span style="color: #9876AA">date_default_timezone_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'UTC'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 现在<br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 打印类似：Wednesday<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'l'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br> <br></span><span style="color: #FF8000">// 打印类似：Wednesday 19th of October 2022 08:40:48 AM<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'l jS \o\f F Y h:i:s A'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// 在 format 参数中使用常量 <br>// 打印类似：Wed, 19 Oct 2022 08:40:48 +0000<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTimeInterface</span><span style="color: #007700">::</span><span style="color: #9876AA">RFC2822</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   通过对格式化字符串中的识别字符添加反斜线，对其转义来防止被解析。如果带有反斜线的字符已经是特殊序列，那么还要对反斜线进行转义。   </p><div class="example" id="example-2206">    <p><strong>示例 #3 格式化时转义字符</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 打印类似：Wednesday the 19th<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'l \t\h\e jS'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   要格式化其它语言的日期，可以使用 <span class="methodname" style="color:#CC7832">{@link IntlDateFormatter::format()}</span>   代替 <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::format()</strong></span>。  </p> </div> <div class="refsect1 notes" id="refsect1-datetime.format-notes">  <h3 class="title">注释</h3>  <p class="para">   此方法不使用区域设置，所有的输出都是英文。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.format-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link IntlDateFormatter::format()} - Format the date/time value as a string</span></li>  </ul> </div></div>
 * 
     * Returns date formatted according to given format.
     * @param string $format
     * @return string
     * @link https://php.net/manual/zh/datetime.format.php
     */
    #[Pure(true)]
    #[TentativeType]
    public function format(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format): string {}

    /**
 * <div id="datetime.modify" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::modify</h1>  <h1 class="refname">date_modify</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::modify</span> -- <span class="refname">date_modify</span> — <span class="dc-title">修改日期时间对象的值</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.modify-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::modify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_modify}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   通过 <span class="function">{@link DateTimeImmutable::__construct()}</span> 能够接受的格式，对 Datetime 对象的时间戳进行修改（自增或者自减）。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.modify-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">modifier</span></dt>    <dd>     <p class="para">日期/时间字符串。正确格式的说明详见 <a href="https://php.net/manual/zh/datetime.formats.php" class="link">日期与时间格式</a>。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.modify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。过程化风格在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-datetime.modify-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   仅限于面向对象的 API：如果传递了无效的日期/时间字符串，将抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.modify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       如果传递了无效的字符串，<span class="methodname" style="color:#CC7832"><strong>DateTime::modify()</strong></span> 现在将抛出       <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> 。之前返回       <span class="literal">false</span> 并且发出警告。<span class="function">{@link date_modify()}</span>       尚未更改。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetime.modify-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2164">   <p><strong>示例 #1 <span class="function"><strong>DateTime::modify()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">date_modify</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2006-12-13</blockquote></div>   </div>  </div>  <div class="example" id="example-2165">   <p><strong>示例 #2 增加或者减少月份的时候需要当心</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-31<br>2001-03-03</blockquote></div>   </div>  </div>  <div class="example" id="example-2166">   <p><strong>示例 #3 支持所有日期和时间格式</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2020-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'July 1st, 2023'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'Monday next week'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'17:30'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2023-07-01&nbsp;00:00<br>2023-07-03&nbsp;00:00<br>2023-07-03&nbsp;17:30</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.modify-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link strtotime()} - 将任何英文文本日期时间描述解析为 Unix 时间戳</span></li>   <li><span class="function">{@link DateTimeImmutable::modify()} - Creates a new object with modified timestamp</span></li>   <li><span class="function">{@link DateTime::add()} - 修改 DateTime 对象，增加天、月、年、小时、分钟以及秒的数量。</span></li>   <li><span class="function">{@link DateTime::sub()} - 对 DateTime 对象减去一定量的日、月、年、小时、分钟和秒。</span></li>   <li><span class="function">{@link DateTime::setDate()} - 设置日期</span></li>   <li><span class="function">{@link DateTime::setISODate()} - 设置 ISO 日期</span></li>   <li><span class="function">{@link DateTime::setTime()} - 设置时间</span></li>   <li><span class="function">{@link DateTime::setTimestamp()} - 以 Unix 时间戳的方式设置日期和时间</span></li>  </ul> </div></div>
 * 
     * Alter the timestamp of a DateTime object by incrementing or decrementing
     * in a format accepted by strtotime().
     * @param string $modifier A date/time string. Valid formats are explained in <a href="https://secure.php.net/manual/en/datetime.formats.php">Date and Time Formats</a>.
     * @return static|false Returns the DateTime object for method chaining or FALSE on failure.
     * @link https://php.net/manual/zh/datetime.modify.php
     */
    #[PhpStormStubsElementAvailable(from: '5.3', to: '8.2')]
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'DateTime'], default: 'static|false')]
    public function modify(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $modifier) {}

    /**
 * <div id="datetime.modify" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::modify</h1>  <h1 class="refname">date_modify</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::modify</span> -- <span class="refname">date_modify</span> — <span class="dc-title">修改日期时间对象的值</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.modify-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::modify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_modify}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$modifier</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   通过 <span class="function">{@link DateTimeImmutable::__construct()}</span> 能够接受的格式，对 Datetime 对象的时间戳进行修改（自增或者自减）。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.modify-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">modifier</span></dt>    <dd>     <p class="para">日期/时间字符串。正确格式的说明详见 <a href="https://php.net/manual/zh/datetime.formats.php" class="link">日期与时间格式</a>。</p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.modify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。过程化风格在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-datetime.modify-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   仅限于面向对象的 API：如果传递了无效的日期/时间字符串，将抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.modify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       如果传递了无效的字符串，<span class="methodname" style="color:#CC7832"><strong>DateTime::modify()</strong></span> 现在将抛出       <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> 。之前返回       <span class="literal">false</span> 并且发出警告。<span class="function">{@link date_modify()}</span>       尚未更改。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetime.modify-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2164">   <p><strong>示例 #1 <span class="function"><strong>DateTime::modify()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2006-12-12'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">date_modify</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'+1 day'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2006-12-13</blockquote></div>   </div>  </div>  <div class="example" id="example-2165">   <p><strong>示例 #2 增加或者减少月份的时候需要当心</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'+1 month'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2001-01-31<br>2001-03-03</blockquote></div>   </div>  </div>  <div class="example" id="example-2166">   <p><strong>示例 #3 支持所有日期和时间格式</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2020-12-31'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'July 1st, 2023'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'Monday next week'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modify</span><span style="color: #007700">(</span><span style="color: #DD0000">'17:30'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2023-07-01&nbsp;00:00<br>2023-07-03&nbsp;00:00<br>2023-07-03&nbsp;17:30</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.modify-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link strtotime()} - 将任何英文文本日期时间描述解析为 Unix 时间戳</span></li>   <li><span class="function">{@link DateTimeImmutable::modify()} - Creates a new object with modified timestamp</span></li>   <li><span class="function">{@link DateTime::add()} - 修改 DateTime 对象，增加天、月、年、小时、分钟以及秒的数量。</span></li>   <li><span class="function">{@link DateTime::sub()} - 对 DateTime 对象减去一定量的日、月、年、小时、分钟和秒。</span></li>   <li><span class="function">{@link DateTime::setDate()} - 设置日期</span></li>   <li><span class="function">{@link DateTime::setISODate()} - 设置 ISO 日期</span></li>   <li><span class="function">{@link DateTime::setTime()} - 设置时间</span></li>   <li><span class="function">{@link DateTime::setTimestamp()} - 以 Unix 时间戳的方式设置日期和时间</span></li>  </ul> </div></div>
 * 
     * Alter the timestamp of a DateTime object by incrementing or decrementing
     * in a format accepted by strtotime().
     * @param string $modifier A date/time string. Valid formats are explained in <a href="https://secure.php.net/manual/en/datetime.formats.php">Date and Time Formats</a>.
     * @return static|false Returns the DateTime object for method chaining or FALSE on failure.
     * @throws DateMalformedStringException
     * @link https://php.net/manual/zh/datetime.modify.php
     */
    #[PhpStormStubsElementAvailable(from: '8.3')]
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'DateTime'], default: 'static|false')]
    public function modify(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $modifier) {}

    /**
 * <div id="datetime.add" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::add</h1>  <h1 class="refname">date_add</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::add</span> -- <span class="refname">date_add</span> — <span class="dc-title">   修改 DateTime 对象，增加天、月、年、小时、分钟以及秒的数量。  </span></p> </div> <div class="refsect1 description" id="refsect1-datetime.add-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_add}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   将指定的 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象到 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::add()}</span>一样，但适用于 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为它的第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.add-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt>     <span class="parameter" style="color:#3A95FF">interval</span>    </dt>    <dd>     <p class="para">      <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.add-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::add()} - Returns a new object, with added amount of days, months, years, hours, minutes and seconds</span></li>  </ul> </div></div>
 * 
     * Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object
     * @param DateInterval $interval
     * @return static
     * @link https://php.net/manual/zh/datetime.add.php
     */
    #[TentativeType]
    public function add(DateInterval $interval): DateTime {}

    /**
 * <div id="datetime.createfromimmutable" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::createFromImmutable</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3.0, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::createFromImmutable</span> — <span class="dc-title">Returns new DateTime instance encapsulating the given DateTimeImmutable object</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.createfromimmutable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::createFromImmutable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="type DateTimeImmutable" style="color:#EAB766">DateTimeImmutable</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766">static</span></div> </div> <div class="refsect1 parameters" id="refsect1-datetime.createfromimmutable-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       The immutable <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> object that needs       to be converted to a mutable version. This object is not modified, but       instead a new <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> instance is       created containing the same date, time, and timezone information.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetime.createfromimmutable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> instance.  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.createfromimmutable-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        The method returns an instance of the currently invoked class now. Previously, it created a new instance        of <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetime.createfromimmutable-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2162">    <p><strong>示例 #1 Creating a mutable date time object</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$mutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromImmutable</span><span style="color: #007700">( </span><span style="color: #9876AA">\$date </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * @param DateTimeImmutable $object
     * @return DateTime
     * @since 7.3
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.2' => 'static'], default: 'DateTime')]
    public static function createFromImmutable(DateTimeImmutable $object) {}

    /**
 * <div id="datetime.sub" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::sub</h1>  <h1 class="refname">date_sub</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::sub</span> -- <span class="refname">date_sub</span> — <span class="dc-title">   对 DateTime 对象减去一定量的日、月、年、小时、分钟和秒。  </span></p> </div> <div class="refsect1 description" id="refsect1-datetime.sub-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::sub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_sub}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   对指定 DateTime 对象，减去指定 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::sub()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.sub-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt>     <span class="parameter" style="color:#3A95FF">interval</span>    </dt>    <dd>     <p class="para">      <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.sub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 errors" id="refsect1-datetime.sub-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   仅限于面向对象的API：如果尝试不受支持的操作，比如使用 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象表示相对时间规格（如   <span class="literal">next weekday</span>）的，将会抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidoperationexception.php" class="exceptionname">DateInvalidOperationException</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.sub-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       当尝试执行不受支持的操作时，<span class="methodname" style="color:#CC7832"><strong>DateTime::sub()</strong></span> 现在会抛出       <span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidoperationexception.php" class="exceptionname">DateInvalidOperationException</a></span>，而不是警告。<span class="function">{@link date_sub()}</span> 尚未更改。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-datetime.sub-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::sub()} - Subtracts an amount of days, months, years, hours, minutes and seconds</span></li>  </ul> </div></div>
 * 
     * Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object
     * @param DateInterval $interval
     * @return static
     * @link https://php.net/manual/zh/datetime.sub.php
     * @throws DateInvalidOperationException
     */
    #[TentativeType]
    public function sub(DateInterval $interval): DateTime {}

    /**
 * <div id="datetime.gettimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeInterface::getTimezone</h1>  <h1 class="refname">DateTimeImmutable::getTimezone</h1>  <h1 class="refname">DateTime::getTimezone</h1>  <h1 class="refname">date_timezone_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeInterface::getTimezone</span> -- <span class="refname">DateTimeImmutable::getTimezone</span> -- <span class="refname">DateTime::getTimezone</span> -- <span class="refname">date_timezone_get</span> — <span class="dc-title">返回相对于指定 DateTime 的时区</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.gettimezone-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::getTimezone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::getTimezone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::getTimezone</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_timezone_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回相对于指定 DateTime 的时区。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.gettimezone-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅为过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。</p></dd>  </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.gettimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 对象 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-datetime.gettimezone-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2210">   <p><strong>示例 #1 <span class="function"><strong>DateTime::getTimezone()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/London'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$tz </span><span style="color: #007700">= </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimezone</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$tz</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">timezone_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'Europe/London'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$tz </span><span style="color: #007700">= </span><span style="color: #9876AA">date_timezone_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">timezone_name_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tz</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Europe/London</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.gettimezone-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTime::setTimezone()} - 设置 DateTime 对象的时区</span></li>  </ul> </div></div>
 * 
     * Get the TimeZone associated with the DateTime
     * @return DateTimeZone|false
     * @link https://php.net/manual/zh/datetime.gettimezone.php
     */
    #[TentativeType]
    public function getTimezone(): DateTimeZone|false {}

    /**
 * <div id="datetime.settimezone" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::setTimezone</h1>  <h1 class="refname">date_timezone_set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::setTimezone</span> -- <span class="refname">date_timezone_set</span> — <span class="dc-title">设置 DateTime 对象的时区</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.settimezone-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::setTimezone</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_timezone_set}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   为 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 设置新时区。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::setTimezone()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.settimezone-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">timezone</span></dt>    <dd>     <p class="para">      代表所需时区的 <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 对象。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.settimezone-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回链式调用的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。调用此方法时，底层的时间点不会更改。  </p> </div> <div class="refsect1 examples" id="refsect1-datetime.settimezone-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2167">   <p><strong>示例 #1 <span class="function"><strong>DateTime::setTimeZone()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">, new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Nauru'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTimezone</span><span style="color: #007700">(new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Chatham'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2000-01-01'</span><span style="color: #007700">, </span><span style="color: #9876AA">timezone_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Nauru'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">date_timezone_set</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #9876AA">timezone_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pacific/Chatham'</span><span style="color: #007700">));<br>echo </span><span style="color: #9876AA">date_format</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">, </span><span style="color: #DD0000">'Y-m-d H:i:sP'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2000-01-01&nbsp;00:00:00+12:00<br>2000-01-01&nbsp;01:45:00+13:45</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.settimezone-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setTimezone()} - Sets the time zone</span></li>   <li><span class="function">{@link DateTime::getTimezone()} - 返回相对于指定 DateTime 的时区</span></li>   <li><span class="function">{@link DateTimeZone::__construct()} - 创建新的DateTimeZone对象</span></li>  </ul> </div></div>
 * 
     * Set the TimeZone associated with the DateTime
     * @param DateTimeZone $timezone
     * @return static
     * @link https://php.net/manual/zh/datetime.settimezone.php
     */
    #[TentativeType]
    public function setTimezone(#[LanguageLevelTypeAware(['8.0' => 'DateTimeZone'], default: '')] $timezone): DateTime {}

    /**
 * <div id="datetime.getoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeInterface::getOffset</h1>  <h1 class="refname">DateTimeImmutable::getOffset</h1>  <h1 class="refname">DateTime::getOffset</h1>  <h1 class="refname">date_offset_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeInterface::getOffset</span> -- <span class="refname">DateTimeImmutable::getOffset</span> -- <span class="refname">DateTime::getOffset</span> -- <span class="refname">date_offset_get</span> — <span class="dc-title">返回时差</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.getoffset-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::getOffset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::getOffset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::getOffset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_offset_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   返回时差。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.getoffset-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅为过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。</p></dd>  </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.getoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回与 UTC 之间的时差（以秒为单位）。  </p> </div> <div class="refsect1 examples" id="refsect1-datetime.getoffset-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2207">   <p><strong>示例 #1 <span class="function"><strong>DateTime::getOffset()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$winter </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2010-12-21'</span><span style="color: #007700">, new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'America/New_York'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$summer </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2008-06-21'</span><span style="color: #007700">, new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">'America/New_York'</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">\$winter</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getOffset</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">\$summer</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getOffset</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$winter </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2010-12-21'</span><span style="color: #007700">, </span><span style="color: #9876AA">timezone_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'America/New_York'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$summer </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2008-06-21'</span><span style="color: #007700">, </span><span style="color: #9876AA">timezone_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'America/New_York'</span><span style="color: #007700">));<br><br>echo </span><span style="color: #9876AA">date_offset_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$winter</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">date_offset_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$summer</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">-18000<br>-14400</blockquote></div>   </div>   <div class="example-contents"><p>    注意：-18000 = -5 小时，-14400 = -4 小时。   </p></div>  </div> </div></div>
 * 
     * Returns the timezone offset
     * @return int
     * @link https://php.net/manual/zh/datetime.getoffset.php
     */
    #[TentativeType]
    public function getOffset(): int {}

    /**
 * <div id="datetime.settime" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::setTime</h1>  <h1 class="refname">date_time_set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::setTime</span> -- <span class="refname">date_time_set</span> — <span class="dc-title">设置时间</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.settime-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::setTime</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microsecond</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_time_set}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$hour</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$minute</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$second</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$microsecond</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   将 DateTime 的当前时间重置为不同的时间。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::setTime()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.settime-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">hour</span></dt>    <dd>     <p class="para">      时间中的小时。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">minute</span></dt>    <dd>     <p class="para">      时间中的分钟。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">second</span></dt>    <dd>     <p class="para">      时间中的秒。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">microsecond</span></dt>    <dd>     <p class="para">      时间中的微秒。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.settime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.settime-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>The behaviour with double existing hours (during the fall-back      DST transition) changed. Previously PHP would pick the second occurrence      (after the DST transition), instead of the first occurrence (before DST       transition).</td>     </tr>     <tr>      <td>7.1.0</td>      <td>新增 <span class="parameter" style="color:#3A95FF">microsecond</span> 参数。</td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-datetime.settime-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setTime()} - Sets the time</span></li>  </ul> </div></div>
 * 
     * Sets the current time of the DateTime object to a different time.
     * @param int $hour
     * @param int $minute
     * @param int $second
     * @param int $microsecond Added since 7.1
     * @return static
     * @link https://php.net/manual/zh/datetime.settime.php
     */
    #[TentativeType]
    public function setTime(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $hour,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $minute,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $second = 0,
        #[PhpStormStubsElementAvailable(from: '7.1')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $microsecond = 0
    ): DateTime {}

    /**
 * <div id="datetime.setdate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::setDate</h1>  <h1 class="refname">date_date_set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::setDate</span> -- <span class="refname">date_date_set</span> — <span class="dc-title">设置日期</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.setdate-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::setDate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$day</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_date_set}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$month</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$day</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   将 DateTime 对象的当前日期重置为其它日期。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::setDate()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>，且更改现有对象。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.setdate-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      年份。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">month</span></dt>    <dd>     <p class="para">      月份。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">day</span></dt>    <dd>     <p class="para">      日。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.setdate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.setdate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setDate()} - Sets the date</span></li>  </ul> </div></div>
 * 
     * Sets the current date of the DateTime object to a different date.
     * @param int $year
     * @param int $month
     * @param int $day
     * @return static
     * @link https://php.net/manual/zh/datetime.setdate.php
     */
    #[TentativeType]
    public function setDate(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $year,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $month,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $day
    ): DateTime {}

    /**
 * <div id="datetime.setisodate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::setISODate</h1>  <h1 class="refname">date_isodate_set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::setISODate</span> -- <span class="refname">date_isodate_set</span> — <span class="dc-title">设置 ISO 日期</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.setisodate-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::setISODate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$week</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span><span class="initializer"> = 1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_isodate_set}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$year</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$week</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$dayOfWeek</span><span class="initializer"> = 1</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   根据 ISO 8601 规范设置日期，使用周和日的偏移量，而不是使用指定日期。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::setISODate()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.setisodate-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">year</span></dt>    <dd>     <p class="para">      年份。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">week</span></dt>    <dd>     <p class="para">      周。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">dayOfWeek</span></dt>    <dd>     <p class="para">      从周的第一天计算，日在一周内的偏移量。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.setisodate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.setisodate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setISODate()} - Sets the ISO date</span></li>  </ul> </div></div>
 * 
     * Set a date according to the ISO 8601 standard - using weeks and day offsets rather than specific dates.
     * @param int $year
     * @param int $week
     * @param int $dayOfWeek
     * @return static
     * @link https://php.net/manual/zh/datetime.setisodate.php
     */
    #[TentativeType]
    public function setISODate(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $year,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $week,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $dayOfWeek = 1
    ): DateTime {}

    /**
 * <div id="datetime.settimestamp" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::setTimestamp</h1>  <h1 class="refname">date_timestamp_set</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::setTimestamp</span> -- <span class="refname">date_timestamp_set</span> — <span class="dc-title">以 Unix 时间戳的方式设置日期和时间</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.settimestamp-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::setTimestamp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_timestamp_set}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div>  <p class="para rdfs-comment">   以 Unix 时间戳的方式设置日期和时间。  </p>  <p class="para">   跟 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::setTimestamp()}</span> 一样，但适用于   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>。  </p>  <p class="para">   过程化版本将 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象作为第一个参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.settimestamp-parameters">  <h3 class="title">参数</h3>  <dl>   <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link date_create()}</span> 返回的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类型的对象。此函数会修改这个对象。</p></dd>       <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <p class="para">      代表日期的 Unix 时间戳。<span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::modify()}</span>      使用 <span class="literal">@</span> 格式可以设置范围超过 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> 的时间戳。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.settimestamp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回方法链修改后的 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.settimestamp-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::setTimestamp()} - Sets the date and time based on a Unix timestamp</span></li>  </ul> </div></div>
 * 
     * Sets the date and time based on a Unix timestamp.
     * @param int $timestamp
     * @return static
     * @link https://php.net/manual/zh/datetime.settimestamp.php
     */
    #[TentativeType]
    public function setTimestamp(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $timestamp): DateTime {}

    /**
 * <div id="datetime.gettimestamp" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeInterface::getTimestamp</h1>  <h1 class="refname">DateTimeImmutable::getTimestamp</h1>  <h1 class="refname">DateTime::getTimestamp</h1>  <h1 class="refname">date_timestamp_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeInterface::getTimestamp</span> -- <span class="refname">DateTimeImmutable::getTimestamp</span> -- <span class="refname">DateTime::getTimestamp</span> -- <span class="refname">date_timestamp_get</span> — <span class="dc-title">获取 Unix 时间戳</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.gettimestamp-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::getTimestamp</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::getTimestamp</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::getTimestamp</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_timestamp_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   获取 Unix 时间戳。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.gettimestamp-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.gettimestamp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回表示日期的 Unix 时间戳。  </p> </div> <div class="refsect1 errors" id="refsect1-datetime.gettimestamp-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果时间戳不能表示为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>，将抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.daterangeerror.php" class="exceptionname">DateRangeError</a></span>。在 PHP 8.3.0 之前，将抛出   <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。并且在 PHP 8.0.0 之前，在这种情况下返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。不过，可以使用   <span class="literal">U</span> 格式和 <span class="methodname" style="color:#CC7832">{@link DateTimeInterface::format()}</span> 作为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> 检索时间戳。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.gettimestamp-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       超出范围的异常现在是       <span class="exceptionname"><a href="https://php.net/manual/zh/class.daterangeerror.php" class="exceptionname">DateRangeError</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       这些函数在失败时不再返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetime.gettimestamp-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2208">   <p><strong>示例 #1 <span class="function"><strong>DateTime::getTimestamp()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTimestamp</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">date_timestamp_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1272509157</blockquote></div>   </div>  </div>  <p class="para">   如果需要以毫秒或微秒精度检索时间戳，则可以使用 <span class="function">{@link DateTimeInterface::format()}</span> 函数。  </p>  <div class="example" id="example-2209">   <p><strong>示例 #2 以毫秒和微秒精度检索时间戳</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$milli </span><span style="color: #007700">= (int) </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Uv'</span><span style="color: #007700">); </span><span style="color: #FF8000">// Timestamp in milliseconds<br></span><span style="color: #9876AA">\$micro </span><span style="color: #007700">= (int) </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Uu'</span><span style="color: #007700">); </span><span style="color: #FF8000">// Timestamp in microseconds<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$milli</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$micro</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1674057635586<br>1674057635586918</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.gettimestamp-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTime::setTimestamp()} - 以 Unix 时间戳的方式设置日期和时间</span></li>   <li><span class="function">{@link DateTimeImmutable::setTimestamp()} - Sets the date and time based on a Unix timestamp</span></li>   <li><span class="function">{@link DateTimeInterface::format()} - 按照指定格式返回格式化后的日期</span></li>  </ul> </div></div>
 * 
     * Gets the Unix timestamp.
     * @return int
     * @link https://php.net/manual/zh/datetime.gettimestamp.php
     */
    #[TentativeType]
    public function getTimestamp(): int {}

    /**
 * <div id="datetime.diff" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeInterface::diff</h1>  <h1 class="refname">DateTimeImmutable::diff</h1>  <h1 class="refname">DateTime::diff</h1>  <h1 class="refname">date_diff</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeInterface::diff</span> -- <span class="refname">DateTimeImmutable::diff</span> -- <span class="refname">DateTime::diff</span> -- <span class="refname">date_diff</span> — <span class="dc-title">返回两个 DateTime 之间的差值</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.diff-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::diff</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeImmutable::diff</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::diff</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_diff}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$baseObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$targetObject</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$absolute</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <p class="para rdfs-comment">   返回两个 <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> 对象的差值。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.diff-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>    <dd>     <p class="para">      要比较的日期。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">absolute</span></dt>    <dd>     <p class="para">      间隔是否强制为正的？     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.diff-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象表示两个日期之间的差值。  </p>  <p class="para">   <span class="parameter" style="color:#3A95FF">absolute</span> 参数只影响 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> 对象的   <span class="parameter" style="color:#3A95FF">invert</span> 属性。  </p>  <p class="para">   返回更具体的表示应用于原始对象（<span class="parameter" style="color:#3A95FF">\$this</span> 或   <span class="parameter" style="color:#3A95FF">\$originObject</span>）到达 <span class="parameter" style="color:#3A95FF">\$targetObject</span>   的时钟时间间隔的值。该过程始终不可逆。  </p>  <p class="para">   该方法知道 DST 转换，因此可以根据示例返回 <span class="literal">24 小时 30   分钟</span>的时间间隔。如果想使用绝对时间计算，则需要先将   <span class="parameter" style="color:#3A95FF">\$this</span>/<span class="parameter" style="color:#3A95FF">\$baseObject</span> 和   <span class="parameter" style="color:#3A95FF">\$targetObject</span> 都转换为 UTC。  </p> </div> <div class="refsect1 examples" id="refsect1-datetime.diff-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2200">   <p><strong>示例 #1 <span class="function"><strong>DateTimeImmutable::diff()</strong></span> 示例</strong></p>   <div class="example-contents"><p>面向对象风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$origin </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2009-10-11'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$target </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">'2009-10-13'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">\$origin</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">diff</span><span style="color: #007700">(</span><span style="color: #9876AA">\$target</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%R%a days'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>过程化风格</p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$origin </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2009-10-11'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$target </span><span style="color: #007700">= </span><span style="color: #9876AA">date_create</span><span style="color: #007700">(</span><span style="color: #DD0000">'2009-10-13'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">date_diff</span><span style="color: #007700">(</span><span style="color: #9876AA">\$origin</span><span style="color: #007700">, </span><span style="color: #9876AA">\$target</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%R%a days'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">+2&nbsp;days</blockquote></div>   </div>  </div>  <div class="example" id="example-2201">   <p><strong>示例 #2 DST 转换期间的 <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::diff()</strong></span></strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$originalTime </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2021-10-30 09:00:00 Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$targetTime </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2021-10-31 08:30:00 Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">\$originalTime</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">diff</span><span style="color: #007700">(</span><span style="color: #9876AA">\$targetTime</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">"%H:%I:%S (Full days: %a)"</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">24:30:00&nbsp;(Full&nbsp;days:&nbsp;0)</blockquote></div>   </div>  </div>  <div class="example" id="example-2202">   <p><strong>示例 #3 <span class="methodname" style="color:#CC7832"><strong>DateTimeInterface::diff()</strong></span> range</strong></p>   <div class="example-contents"><p>    该方法返回的值是从 <span class="parameter" style="color:#3A95FF">\$this</span> 到达 <span class="parameter" style="color:#3A95FF">\$targetObject</span>     所需要的精确时间。因此，将 1 月 1 日与 12 月 31 日进行比较，返回的结果是 364，而不是    365 天（对于非闰年）。   </p></div>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$originalTime </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2023-01-01 UTC"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$targetTime </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2023-12-31 UTC"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">\$originalTime</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">diff</span><span style="color: #007700">(</span><span style="color: #9876AA">\$targetTime</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"Full days: "</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">"%a"</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">    <div class="examplescode"><blockquote style="border:1px gray solid;">Full&nbsp;days:&nbsp;364</blockquote></div>   </div>  </div>  <div class="example" id="example-2203">   <p><strong>示例 #4 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象比较</strong></p>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 和 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>     对象可以使用<a href="https://php.net/manual/zh/language.operators.comparison.php" class="link">比较运算符</a>进行比较。    </p>   </blockquote>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"now"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$date2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"tomorrow"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date1 </span><span style="color: #007700">== </span><span style="color: #9876AA">\$date2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date1 </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$date2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date1 </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">\$date2</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>  </div>  <div class="example-contents"><p>以上示例会输出：</p></div>  <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br>bool(true)<br>bool(false)</blockquote></div>  </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-datetime.diff-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateInterval::format()} - Formats the interval</span></li>   <li><span class="function">{@link DateTime::add()} - 修改 DateTime 对象，增加天、月、年、小时、分钟以及秒的数量。</span></li>   <li><span class="function">{@link DateTime::sub()} - 对 DateTime 对象减去一定量的日、月、年、小时、分钟和秒。</span></li>  </ul> </div></div>
 * 
     * Returns the difference between two DateTime objects represented as a DateInterval.
     * @param DateTimeInterface $targetObject The date to compare to.
     * @param bool $absolute [optional] Whether to return absolute difference.
     * @return DateInterval|false The DateInterval object representing the difference between the two dates.
     * @link https://php.net/manual/zh/datetime.diff.php
     */
    #[TentativeType]
    public function diff(
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeInterface'], default: '')] $targetObject,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $absolute = false
    ): DateInterval {}

    /**
 * <div id="datetime.createfromformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::createFromFormat</h1>  <h1 class="refname">date_create_from_format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::createFromFormat</span> -- <span class="refname">date_create_from_format</span> — <span class="dc-title">根据指定格式解析时间字符串</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.createfromformat-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::createFromFormat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_create_from_format}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span></span> <span class="parameter" style="color:#3A95FF">\$timezone</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回新的 DateTime 对象，该对象是通过指定 <span class="parameter" style="color:#3A95FF">format</span> 将表示日期和时间的   <span class="parameter" style="color:#3A95FF">datetime</span> 格式化生成。  </p>  <p class="para">   类似于 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::createFromFormat()}</span>   和 <span class="function">{@link date_create_immutable_from_format()}</span>，但创建的是   <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 对象。  </p>  <p class="para">   此方法（包括参数、示例和注意事项）记录在 {@link DateTimeImmutable::createFromFormat} 页面上。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetime.createfromformat-parameters">  <h3 class="title">参数</h3>  <p class="para">   参阅 {@link DateTimeImmutable::createFromFormat}。  </p> </div> <div class="refsect1 returnvalues" id="refsect1-datetime.createfromformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 DateTime 对象 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-datetime.createfromformat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当 <span class="parameter" style="color:#3A95FF">datetime</span> 包含 NULL 字节时，此方法抛出 <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetime.createfromformat-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.21、8.1.8、8.2.0</td>      <td>       现在，当将 NULL 字节传递到 <span class="parameter" style="color:#3A95FF">datetime</span> 时，会引发       <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>，而之前会默默忽略该错误。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-datetime.createfromformat-examples">  <h3 class="title">示例</h3>  <p class="para">   有关大量示例，请参阅 {@link DateTimeImmutable::createFromFormat}。  </p> </div> <div class="refsect1 seealso" id="refsect1-datetime.createfromformat-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeImmutable::createFromFormat()} - Parses a time string according to a specified format</span></li>  </ul> </div></div>
 * 
     * Parse a string into a new DateTime object according to the specified format
     * @param string $format Format accepted by date().
     * @param string $datetime String representing the time.
     * @param null|DateTimeZone $timezone A DateTimeZone object representing the desired time zone.
     * @return DateTime|false
     * @link https://php.net/manual/zh/datetime.createfromformat.php
     */
    #[TentativeType]
    public static function createFromFormat(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime,
        #[LanguageLevelTypeAware(['8.0' => 'DateTimeZone|null'], default: 'DateTimeZone')] $timezone = null
    ): DateTime|false {}

    /**
 * <div id="datetime.getlasterrors" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::getLastErrors</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::getLastErrors</span> — <span class="dc-title">别名 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getLastErrors()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-datetime.getlasterrors-description">  <h3 class="title">说明</h3>  <p class="para">   此函数是该函数的别名： <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getLastErrors()}</span>  </p> </div> </div>
 * 
     * Returns an array of warnings and errors found while parsing a date/time string
     * @return array|false
     * @link https://php.net/manual/zh/datetime.getlasterrors.php
     */
    #[ArrayShape(["warning_count" => "int", "warnings" => "string[]", "error_count" => "int", "errors" => "string[]"])]
    #[TentativeType]
    public static function getLastErrors(): array|false {}

    /**
     * The __set_state handler
     * @link https://php.net/manual/en/datetime.set-state.php
     * @param array $array <p>Initialization array.</p>
     * @return DateTime <p>Returns a new instance of a DateTime object.</p>
     */
    public static function __set_state($array) {}

    /**
 * <div id="datetime.createfrominterface" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTime::createFromInterface</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">DateTime::createFromInterface</span> — <span class="dc-title">Returns new DateTime object encapsulating the given DateTimeInterface object</span></p> </div> <div class="refsect1 description" id="refsect1-datetime.createfrominterface-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTime::createFromInterface</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetime.php" class="type DateTime" style="color:#EAB766">DateTime</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-datetime.createfrominterface-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="classname">DateTimeInterface</a></span> object that needs       to be converted to a mutable version. This object is not modified, but       instead a new <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> object is       created containing the same date, time, and timezone information.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetime.createfrominterface-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> instance.  </p> </div> <div class="refsect1 examples" id="refsect1-datetime.createfrominterface-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2163">    <p><strong>示例 #1 Creating a mutable date time object</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeImmutable</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$mutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromInterface</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$date </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"2014-06-20 11:45 Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$also_mutable </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromInterface</span><span style="color: #007700">(</span><span style="color: #9876AA">\$date</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * @param DateTimeInterface $object
     * @return DateTime
     * @since 8.0
     */
    public static function createFromInterface(DateTimeInterface $object): DateTime {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void {}

    /**
     * @since 8.4
     */
    #[TentativeType]
    public static function createFromTimestamp(int|float $timestamp): static {}

    /**
     * @since 8.4
     */
    public function getMicrosecond(): int {}

    /**
     * @since 8.4
     */
    public function setMicrosecond(int $microsecond): static {}
}

/**
 * <div id="class.datetimezone" class="reference"> <h1 class="title">DateTimeZone 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p>  <div class="section" id="datetimezone.intro">   <h2 class="title">简介</h2>   <p class="para">    时区表示。   </p>  </div>  <div class="section" id="datetimezone.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DateTimeZone</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.africa"><var class="varname">AFRICA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.america"><var class="varname">AMERICA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.antarctica"><var class="varname">ANTARCTICA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.arctic"><var class="varname">ARCTIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.asia"><var class="varname">ASIA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.atlantic"><var class="varname">ATLANTIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.australia"><var class="varname">AUSTRALIA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.europe"><var class="varname">EUROPE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.indian"><var class="varname">INDIAN</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.pacific"><var class="varname">PACIFIC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.utc"><var class="varname">UTC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.all"><var class="varname">ALL</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.all-with-bc"><var class="varname">ALL_WITH_BC</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.datetimezone.php#datetimezone.constants.per-country"><var class="varname">PER_COUNTRY</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$timezone</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.getlocation.php" class="methodname" style="color:#CC7832">getLocation</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.getname.php" class="methodname" style="color:#CC7832">getName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.getoffset.php" class="methodname" style="color:#CC7832">getOffset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.gettransitions.php" class="methodname" style="color:#CC7832">getTransitions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampBegin</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-min">PHP_INT_MIN</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampEnd</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-max">PHP_INT_MAX</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.listabbreviations.php" class="methodname" style="color:#CC7832">listAbbreviations</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/datetimezone.listidentifiers.php" class="methodname" style="color:#CC7832">listIdentifiers</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneGroup</span><span class="initializer"> = DateTimeZone::ALL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>   }</div>  </div>    <div class="section" id="datetimezone.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="datetimezone.constants.africa">      <strong><span>{@link DateTimeZone::AFRICA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">非洲时区。</p>     </dd>             <dt id="datetimezone.constants.america">      <strong><span>{@link DateTimeZone::AMERICA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">美洲时区。</p>     </dd>             <dt id="datetimezone.constants.antarctica">      <strong><span>{@link DateTimeZone::ANTARCTICA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">南极洲时区。</p>     </dd>             <dt id="datetimezone.constants.arctic">      <strong><span>{@link DateTimeZone::ARCTIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">北极时区。</p>     </dd>             <dt id="datetimezone.constants.asia">      <strong><span>{@link DateTimeZone::ASIA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">亚洲时区。</p>     </dd>             <dt id="datetimezone.constants.atlantic">      <strong><span>{@link DateTimeZone::ATLANTIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">大西洋时区。</p>     </dd>             <dt id="datetimezone.constants.australia">      <strong><span>{@link DateTimeZone::AUSTRALIA}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">澳洲时区。</p>     </dd>             <dt id="datetimezone.constants.europe">      <strong><span>{@link DateTimeZone::EUROPE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">欧洲时区。</p>     </dd>             <dt id="datetimezone.constants.indian">      <strong><span>{@link DateTimeZone::INDIAN}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">印度洋（Indian）时区。</p>     </dd>             <dt id="datetimezone.constants.pacific">      <strong><span>{@link DateTimeZone::PACIFIC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">太平洋时区。</p>     </dd>             <dt id="datetimezone.constants.utc">      <strong><span>{@link DateTimeZone::UTC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">UTC 时区。</p>     </dd>             <dt id="datetimezone.constants.all">      <strong><span>{@link DateTimeZone::ALL}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">所有时区。</p>     </dd>             <dt id="datetimezone.constants.all-with-bc">      <strong><span>{@link DateTimeZone::ALL_WITH_BC}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">所有时区，包含向后兼容。</p>     </dd>             <dt id="datetimezone.constants.per-country">      <strong><span>{@link DateTimeZone::PER_COUNTRY}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">每个国家的时区。</p>     </dd>       </dl>  </div>  <div class="section" id="datetimezone.changelog">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        类常量现已类型化。       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DateTimeZone::__construct} — 创建新的DateTimeZone对象</li><li>{@link DateTimeZone::getLocation} — 返回与时区相关的定位信息</li><li>{@link DateTimeZone::getName} — 返回时区名称</li><li>{@link DateTimeZone::getOffset} — 返回相对于 GMT 的时差</li><li>{@link DateTimeZone::getTransitions} — Returns all transitions for the timezone</li><li>{@link DateTimeZone::listAbbreviations} — 返回一个包含 dst (夏令时)，时差和时区信息的关联数组。</li><li>{@link DateTimeZone::listIdentifiers} — 返回包含了所有时区标识符的数字索引数组</li></ul></div>
 * 
 * Representation of time zone
 * @link https://php.net/manual/zh/class.datetimezone.php
 */
class DateTimeZone
{
    public const AFRICA = 1;
    public const AMERICA = 2;
    public const ANTARCTICA = 4;
    public const ARCTIC = 8;
    public const ASIA = 16;
    public const ATLANTIC = 32;
    public const AUSTRALIA = 64;
    public const EUROPE = 128;
    public const INDIAN = 256;
    public const PACIFIC = 512;
    public const UTC = 1024;
    public const ALL = 2047;
    public const ALL_WITH_BC = 4095;
    public const PER_COUNTRY = 4096;

    /**
     * @param string $timezone
     * @link https://php.net/manual/en/datetimezone.construct.php
     * @throws DateInvalidTimeZoneException Emits Exception in case of an error.
     */
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $timezone) {}

    /**
 * <div id="datetimezone.getname" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::getName</h1>  <h1 class="refname">timezone_name_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::getName</span> -- <span class="refname">timezone_name_get</span> — <span class="dc-title">返回时区名称</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.getname-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::getName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_name_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   返回时区名称。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.getname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">object</span></dt>    <dd>     <p class="para">      要获得名称的 <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span>。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.getname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   根据区域类型、UTC 时差（类型 1）、时区缩写（类型 2）和 IANA 时区数据库发布的时区标识符（类型   3），描述符字符串使用相同时差和/或规则创建新的   <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span>。例如：<span class="literal">02:00</span>、<span class="literal">CEST</span>   或者 <a href="https://php.net/manual/zh/timezones.php" class="link">时区列表</a>中的其中一个时区名称。  </p> </div></div>
 * 
     * Returns the name of the timezone
     * @return string
     * @link https://php.net/manual/zh/datetimezone.getname.php
     */
    #[TentativeType]
    public function getName(): string {}

    /**
     * Returns location information for a timezone
     * @return array|false
     * @link https://php.net/manual/en/datetimezone.getlocation.php
     */
    #[TentativeType]
    #[ArrayShape([
        'country_code' => 'string',
        'latitude' => 'double',
        'longitude' => 'double',
        'comments' => 'string',
    ])]
/**
 * <div id="datetimezone.getlocation" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::getLocation</h1>  <h1 class="refname">timezone_location_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::getLocation</span> -- <span class="refname">timezone_location_get</span> — <span class="dc-title">返回与时区相关的定位信息</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.getlocation-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::getLocation</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_location_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   返回时区的位置信息，包含国家代码，经纬度和注释。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.getlocation-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link timezone_open()}</span> 返回的<span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 对象。</p></dd>   </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.getlocation-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   包含时区的位置信息的数组 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimezone.getlocation-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2215">    <p><strong>示例 #1 <span class="function"><strong>DateTimeZone::getLocation()</strong></span> 函数的范例：</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$tz </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">"Europe/Prague"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tz</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLocation</span><span style="color: #007700">());<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">timezone_location_get</span><span style="color: #007700">(</span><span style="color: #9876AA">\$tz</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[country_code]&nbsp;=&gt;&nbsp;CZ<br>&nbsp;&nbsp;&nbsp;&nbsp;[latitude]&nbsp;=&gt;&nbsp;50.08333<br>&nbsp;&nbsp;&nbsp;&nbsp;[longitude]&nbsp;=&gt;&nbsp;14.43333<br>&nbsp;&nbsp;&nbsp;&nbsp;[comments]&nbsp;=&gt;<br>)<br>Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[country_code]&nbsp;=&gt;&nbsp;CZ<br>&nbsp;&nbsp;&nbsp;&nbsp;[latitude]&nbsp;=&gt;&nbsp;50.08333<br>&nbsp;&nbsp;&nbsp;&nbsp;[longitude]&nbsp;=&gt;&nbsp;14.43333<br>&nbsp;&nbsp;&nbsp;&nbsp;[comments]&nbsp;=&gt;<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-datetimezone.getlocation-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link DateTimeZone::listIdentifiers()} - 返回包含了所有时区标识符的数字索引数组</span>，以获得所有支持的时区标识符的完整或部分列表</li>  </ul> </div></div>
 */
    public function getLocation(): array|false {}

    /**
 * <div id="datetimezone.getoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::getOffset</h1>  <h1 class="refname">timezone_offset_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::getOffset</span> -- <span class="refname">timezone_offset_get</span> — <span class="dc-title">返回相对于 GMT 的时差</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.getoffset-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::getOffset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_offset_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   该函数返回参数 <span class="parameter" style="color:#3A95FF">datetime</span> 中指定的日期/时间相对于 GMT   的时差。GMT 时差是通过 DateTimeZone 对象的时区信息计算出来的。  </p> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.getoffset-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link timezone_open()}</span> 返回的<span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 对象。</p></dd>         <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>     <dd>      <p class="para">       用来计算时差的 DateTime，其包含日期/时间。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.getoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回精确到秒的时差， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimezone.getoffset-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2216">    <p><strong>示例 #1 <span class="function"><strong>DateTimeZone::getOffset()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 创建两个时区对象，分别是台北（台湾）和东京（日本）<br></span><span style="color: #9876AA">\$dateTimeZoneTaipei </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">"Asia/Taipei"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dateTimeZoneJapan </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">"Asia/Tokyo"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 创建两个包含相同 Unix 时间戳的 DateTime 对象。区别是对应的时区不同。<br></span><span style="color: #9876AA">\$dateTimeTaipei </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"now"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dateTimeZoneTaipei</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$dateTimeJapan </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">"now"</span><span style="color: #007700">, </span><span style="color: #9876AA">\$dateTimeZoneJapan</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 计算包含日期/时间的 \$dateTimeTaipei 对象与时区规则定义为东京的 \$dateTimeZoneJapan 对象的 GMT 时差<br></span><span style="color: #9876AA">\$timeOffset </span><span style="color: #007700">= </span><span style="color: #9876AA">\$dateTimeZoneJapan</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">\$dateTimeTaipei</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 应该展示 int(32400)（Sat Sep 8 01:00:00 1951 JST 之后的日期）。<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$timeOffset</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
 * 
     * Returns the timezone offset from GMT
     * @param DateTimeInterface $datetime
     * @return int
     * @link https://php.net/manual/zh/datetimezone.getoffset.php
     */
    #[TentativeType]
    public function getOffset(DateTimeInterface $datetime): int {}

    /**
 * <div id="datetimezone.gettransitions" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::getTransitions</h1>  <h1 class="refname">timezone_transitions_get</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::getTransitions</span> -- <span class="refname">timezone_transitions_get</span> — <span class="dc-title">Returns all transitions for the timezone</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.gettransitions-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::getTransitions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampBegin</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-min">PHP_INT_MIN</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampEnd</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-max">PHP_INT_MAX</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_transitions_get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimezone.php" class="type DateTimeZone" style="color:#EAB766">DateTimeZone</a></span> <span class="parameter" style="color:#3A95FF">\$object</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampBegin</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-min">PHP_INT_MIN</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timestampEnd</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-max">PHP_INT_MAX</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.gettransitions-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">object</span></dt><dd><p class="para">仅过程化风格：由 <span class="function">{@link timezone_open()}</span> 返回的<span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 对象。</p></dd>         <dt><span class="parameter" style="color:#3A95FF">timestampBegin</span></dt>     <dd>      <p class="para">       Begin timestamp.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timestampEnd</span></dt>     <dd>      <p class="para">       End timestamp.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.gettransitions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a numerically indexed array of   transition arrays on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>. DateTimeZone   objects wrapping type 1 (UTC offsets) and type 2 (abbreviations) do not   contain any transitions, and calling this method on them will return   <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p>  <p class="para">   If <span class="parameter" style="color:#3A95FF">timestampBegin</span> is given, the first entry in the   returned array will contain a transition element at the time of   <span class="parameter" style="color:#3A95FF">timestampBegin</span>.  </p>  <p class="para">   </p><table class="doctable table">    <caption><strong>Transition Array Structure</strong></caption>         <thead>      <tr>       <th>Key</th>       <th>Type</th>       <th>Description</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><span class="literal">ts</span></td>       <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>       <td>Unix timestamp</td>      </tr>      <tr>       <td><span class="literal">time</span></td>       <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>       <td><strong><span>{@link DateTimeInterface::ISO8601_EXPANDED}</span></strong> (PHP       8.2 and later), or <strong><span>{@link DateTimeInterface::ISO8601}</span></strong> (PHP       8.1 and lower) time string</td>      </tr>      <tr>       <td><span class="literal">offset</span></td>       <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>       <td>Offset to UTC in seconds</td>      </tr>      <tr>       <td><span class="literal">isdst</span></td>       <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></td>       <td>Whether daylight saving time is active</td>      </tr>      <tr>       <td><span class="literal">abbr</span></td>       <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>       <td>Timezone abbreviation</td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetimezone.gettransitions-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2217">    <p><strong>示例 #1 A <span class="function">{@link timezone_transitions_get()}</span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">"Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$transitions </span><span style="color: #007700">= </span><span style="color: #9876AA">\$timezone</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTransitions</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transitions</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;-9223372036854775808<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;-292277022657-01-27T08:29:52+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;3600<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;BST<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;-1691964000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;1916-05-21T02:00:00+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;3600<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;BST<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;-1680472800<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;1916-10-01T02:00:00+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>   <div class="example" id="example-2218">    <p><strong>示例 #2 A <span class="function">{@link timezone_transitions_get()}</span> example with    <span class="parameter" style="color:#3A95FF">timestampBegin</span> set</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">(</span><span style="color: #DD0000">"Europe/London"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$transitions </span><span style="color: #007700">= </span><span style="color: #9876AA">\$timezone</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTransitions</span><span style="color: #007700">(</span><span style="color: #9876AA">time</span><span style="color: #007700">());<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transitions</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;1654184161<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;2022-06-02T15:36:01+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;3600<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;BST<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;1667091600<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;2022-10-30T01:00:00+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;GMT<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ts]&nbsp;=&gt;&nbsp;1679792400<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[time]&nbsp;=&gt;&nbsp;2023-03-26T01:00:00+0000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;3600<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[isdst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[abbr]&nbsp;=&gt;&nbsp;BST<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>   </div></div>
 * 
     * Returns all transitions for the timezone
     * @param int $timestampBegin
     * @param int $timestampEnd
     * @return array|false
     * @link https://php.net/manual/zh/datetimezone.gettransitions.php
     */
    #[TentativeType]
    public function getTransitions(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $timestampBegin,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $timestampEnd,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $timestampBegin = PHP_INT_MIN,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $timestampEnd = PHP_INT_MAX
    ): array|false {}

    /**
 * <div id="datetimezone.listabbreviations" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::listAbbreviations</h1>  <h1 class="refname">timezone_abbreviations_list</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::listAbbreviations</span> -- <span class="refname">timezone_abbreviations_list</span> — <span class="dc-title">返回一个包含 dst (夏令时)，时差和时区信息的关联数组。</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.listabbreviations-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::listAbbreviations</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_abbreviations_list}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   返回简写列表，包含历史上所有使用过的简写，这可能会导致既正确又混乱的条目。也会存在冲突，比如   <span class="literal">PST</span> 在美国和菲律宾都在有使用。  </p>  <p class="para">   因此函数返回的列表不适合构建为带选项的数组，以便向用户提供时区选择。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    出于性能考虑，会预先编译此函数的数据。在使用较新的    <a href="https://pecl.php.net/package/timezonedb" class="link external">»&nbsp;timezonedb</a> 时不会更新。   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.listabbreviations-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.listabbreviations-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回时区简写数组。  </p> </div> <div class="refsect1 examples" id="refsect1-datetimezone.listabbreviations-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2219">    <p><strong>示例 #1 <span class="function">{@link timezone_abbreviations_list()}</span> 函数的范例：</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone_abbreviations </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">listAbbreviations</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">\$timezone_abbreviations</span><span style="color: #007700">[</span><span style="color: #DD0000">"acst"</span><span style="color: #007700">]);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[dst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;-14400<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[timezone_id]&nbsp;=&gt;&nbsp;America/Porto_Acre<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[dst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;-14400<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[timezone_id]&nbsp;=&gt;&nbsp;America/Eirunepe<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[dst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;-14400<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[timezone_id]&nbsp;=&gt;&nbsp;America/Rio_Branco<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;Array<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[dst]&nbsp;=&gt;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[offset]&nbsp;=&gt;&nbsp;-14400<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[timezone_id]&nbsp;=&gt;&nbsp;Brazil/Acre<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-datetimezone.listabbreviations-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link timezone_identifiers_list()} - 别名 DateTimeZone::listIdentifiers</span></li>   </ul>   </div></div>
 * 
     * Returns associative array containing dst, offset and the timezone name
     * @return array<string, list<array{dst: bool, offset: int, timezone_id: string|null}>>
     * @link https://php.net/manual/zh/datetimezone.listabbreviations.php
     */
    #[TentativeType]
    public static function listAbbreviations(): array {}

    /**
 * <div id="datetimezone.listidentifiers" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateTimeZone::listIdentifiers</h1>  <h1 class="refname">timezone_identifiers_list</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateTimeZone::listIdentifiers</span> -- <span class="refname">timezone_identifiers_list</span> — <span class="dc-title">返回包含了所有时区标识符的数字索引数组</span></p> </div> <div class="refsect1 description" id="refsect1-datetimezone.listidentifiers-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateTimeZone::listIdentifiers</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneGroup</span><span class="initializer"> = DateTimeZone::ALL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link timezone_identifiers_list}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$timezoneGroup</span><span class="initializer"> = DateTimeZone::ALL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$countryCode</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div> </div> <div class="refsect1 parameters" id="refsect1-datetimezone.listidentifiers-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">timezoneGroup</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.datetimezone.php" class="classname">DateTimeZone</a></span> 类中的常量之一（或组合）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">countryCode</span></dt>     <dd>      <p class="para">       国家代码，兼容 ISO 3166-1 的两个大写字母。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        只有当 <span class="parameter" style="color:#3A95FF">timezoneGroup</span> 设置为        <strong><span>{@link DateTimeZone::PER_COUNTRY}</span></strong> 时,该选项才会被使用。       </span>      </p></blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-datetimezone.listidentifiers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回时区标识符的数组。只会返回没有过时的元素。要获取包含过时时区标识符的所有元素，使用   <span class="literal">DateTimeZone::ALL_WITH_BC</span> 作为   <span class="parameter" style="color:#3A95FF">timezoneGroup</span> 的值。  </p> </div> <div class="refsect1 changelog" id="refsect1-datetimezone.listidentifiers-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        在此版本之前，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        现在，<span class="parameter" style="color:#3A95FF">countryCode</span> 可以为 null。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-datetimezone.listidentifiers-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2220">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832">{@link timezone_identifiers_list()}</span> 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone_identifiers </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">listIdentifiers</span><span style="color: #007700">();<br>for (</span><span style="color: #9876AA">\$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">5</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i</span><span style="color: #007700">++) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$timezone_identifiers</span><span style="color: #007700">[</span><span style="color: #9876AA">\$i</span><span style="color: #007700">]</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Africa/Abidjan<br>Africa/Accra<br>Africa/Addis_Ababa<br>Africa/Algiers<br>Africa/Asmara</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2221">    <p><strong>示例 #2 列出指定区域的标识符</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone_identifiers </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">listIdentifiers</span><span style="color: #007700">( </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">ASIA </span><span style="color: #007700">);<br>for (</span><span style="color: #9876AA">\$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">5</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i</span><span style="color: #007700">++) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$timezone_identifiers</span><span style="color: #007700">[</span><span style="color: #9876AA">\$i</span><span style="color: #007700">]</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">Asia/Aden<br>Asia/Almaty<br>Asia/Amman<br>Asia/Anadyr<br>Asia/Aqtau</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2222">    <p><strong>示例 #3 列出多个区域的标识符</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone_identifiers </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">listIdentifiers</span><span style="color: #007700">( </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">ASIA </span><span style="color: #007700">| </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">PACIFIC </span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">join</span><span style="color: #007700">( </span><span style="color: #DD0000">', '</span><span style="color: #007700">, </span><span style="color: #9876AA">\$timezone_identifiers </span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">Asia/Aden,&nbsp;Asia/Almaty,&nbsp;Asia/Amman,&nbsp;Asia/Anadyr,&nbsp;Asia/Aqtau,&nbsp;Asia/Aqtobe,<br>Asia/Ashgabat,&nbsp;Asia/Atyrau,&nbsp;Asia/Baghdad,&nbsp;Asia/Bahrain,&nbsp;Asia/Baku,<br>Asia/Bangkok,&nbsp;Asia/Barnaul,&nbsp;Asia/Beirut,&nbsp;Asia/Bishkek,&nbsp;Asia/Brunei,<br>Asia/Chita,&nbsp;Asia/Choibalsan,&nbsp;Asia/Colombo,&nbsp;Asia/Damascus,&nbsp;Asia/Dhaka,<br>Asia/Dili,&nbsp;Asia/Dubai,&nbsp;Asia/Dushanbe,&nbsp;Asia/Famagusta,&nbsp;Asia/Gaza,&nbsp;Asia/Hebron,<br>Asia/Ho_Chi_Minh,&nbsp;Asia/Hong_Kong,&nbsp;Asia/Hovd,&nbsp;Asia/Irkutsk,&nbsp;Asia/Jakarta,<br>Asia/Jayapura,&nbsp;Asia/Jerusalem,&nbsp;Asia/Kabul,&nbsp;Asia/Kamchatka,&nbsp;Asia/Karachi,<br>Asia/Kathmandu,&nbsp;Asia/Khandyga,&nbsp;Asia/Kolkata,&nbsp;Asia/Krasnoyarsk,<br>Asia/Kuala_Lumpur,&nbsp;Asia/Kuching,&nbsp;Asia/Kuwait,&nbsp;Asia/Macau,&nbsp;Asia/Magadan,<br>Asia/Makassar,&nbsp;Asia/Manila,&nbsp;Asia/Muscat,&nbsp;Asia/Nicosia,&nbsp;Asia/Novokuznetsk,<br>Asia/Novosibirsk,&nbsp;Asia/Omsk,&nbsp;Asia/Oral,&nbsp;Asia/Phnom_Penh,&nbsp;Asia/Pontianak,<br>Asia/Pyongyang,&nbsp;Asia/Qatar,&nbsp;Asia/Qostanay,&nbsp;Asia/Qyzylorda,&nbsp;Asia/Riyadh,<br>Asia/Sakhalin,&nbsp;Asia/Samarkand,&nbsp;Asia/Seoul,&nbsp;Asia/Shanghai,&nbsp;Asia/Singapore,<br>Asia/Srednekolymsk,&nbsp;Asia/Taipei,&nbsp;Asia/Tashkent,&nbsp;Asia/Tbilisi,&nbsp;Asia/Tehran,<br>Asia/Thimphu,&nbsp;Asia/Tokyo,&nbsp;Asia/Tomsk,&nbsp;Asia/Ulaanbaatar,&nbsp;Asia/Urumqi,<br>Asia/Ust-Nera,&nbsp;Asia/Vientiane,&nbsp;Asia/Vladivostok,&nbsp;Asia/Yakutsk,&nbsp;Asia/Yangon,<br>Asia/Yekaterinburg,&nbsp;Asia/Yerevan,&nbsp;Pacific/Apia,&nbsp;Pacific/Auckland,<br>Pacific/Bougainville,&nbsp;Pacific/Chatham,&nbsp;Pacific/Chuuk,&nbsp;Pacific/Easter,<br>Pacific/Efate,&nbsp;Pacific/Fakaofo,&nbsp;Pacific/Fiji,&nbsp;Pacific/Funafuti,<br>Pacific/Galapagos,&nbsp;Pacific/Gambier,&nbsp;Pacific/Guadalcanal,&nbsp;Pacific/Guam,<br>Pacific/Honolulu,&nbsp;Pacific/Kanton,&nbsp;Pacific/Kiritimati,&nbsp;Pacific/Kosrae,<br>Pacific/Kwajalein,&nbsp;Pacific/Majuro,&nbsp;Pacific/Marquesas,&nbsp;Pacific/Midway,<br>Pacific/Nauru,&nbsp;Pacific/Niue,&nbsp;Pacific/Norfolk,&nbsp;Pacific/Noumea,<br>Pacific/Pago_Pago,&nbsp;Pacific/Palau,&nbsp;Pacific/Pitcairn,&nbsp;Pacific/Pohnpei,<br>Pacific/Port_Moresby,&nbsp;Pacific/Rarotonga,&nbsp;Pacific/Saipan,&nbsp;Pacific/Tahiti,<br>Pacific/Tarawa,&nbsp;Pacific/Tongatapu,&nbsp;Pacific/Wake,&nbsp;Pacific/Wallis</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2223">    <p><strong>示例 #4 列出单个国家的标识符</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$timezone_identifiers </span><span style="color: #007700">= </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">listIdentifiers</span><span style="color: #007700">( </span><span style="color: #9876AA">DateTimeZone</span><span style="color: #007700">::</span><span style="color: #9876AA">PER_COUNTRY</span><span style="color: #007700">, </span><span style="color: #DD0000">"UA" </span><span style="color: #007700">);<br>foreach( </span><span style="color: #9876AA">\$timezone_identifiers </span><span style="color: #007700">as </span><span style="color: #9876AA">\$identifier </span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">\$identifier</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">Europe/Kyiv<br>Europe/Simferopol<br>Europe/Uzhgorod<br>Europe/Zaporozhye</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-datetimezone.listidentifiers-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link timezone_abbreviations_list()} - 别名 DateTimeZone::listAbbreviations</span></li>   </ul>   </div></div>
 * 
     * Returns a numerically indexed array with all timezone identifiers
     * @param int $timezoneGroup
     * @param string $countryCode
     * @return array|false Returns the array of timezone identifiers, or <b>FALSE</b> on failure. Since PHP8, always returns <b>array</b>.
     * @link https://php.net/manual/zh/datetimezone.listidentifiers.php
     */
    #[LanguageLevelTypeAware(["8.0" => "array"], default: "array|false")]
    #[TentativeType]
    public static function listIdentifiers(
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $timezoneGroup = DateTimeZone::ALL,
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $countryCode = null
    ): array {}

    /**
     * @link https://php.net/manual/en/datetime.wakeup.php
     */
    #[TentativeType]
    public function __wakeup(): void {}


    public static function __set_state($an_array) {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void {}
}

/**
 * <div id="class.dateinterval" class="reference"> <h1 class="title">DateInterval 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p>  <div class="section" id="dateinterval.intro">   <h2 class="title">简介</h2>   <p class="para">    表示时间间隔。   </p>   <p class="para">    时间间隔表示固定量的时间（多少年，月，天，小时等），也可以表示一个字符串格式的相对时间，当表示相对时间的时候，字符串格式是    <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> 和 <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> 类的构造函数所支持的格式。   </p>   <p class="para">    更具体的说，<span class="classname"><strong class="classname">DateInterval</strong></span>    类的对象中的信息是从一个日期/时间到另一个日期/时间的指令。这个过程并不始终可逆。   </p>   <p class="para">    创建 <span class="classname"><strong class="classname">DateInterval</strong></span> 对象的常用方法是通过    <span class="methodname" style="color:#CC7832">{@link DateTimeInterface::diff()}</span> 计算两个日期/时间对象之间的差异。   </p>   <p class="para">    由于没有明确定义的方法来比较日期间隔，因此 <span class="classname"><strong class="classname">DateInterval</strong></span>    实例是<a href="https://php.net/manual/zh/language.operators.comparison.php#language.operators.comparison.incomparable" class="link">无法比较</a>的。   </p>  </div>  <div class="section" id="dateinterval.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DateInterval</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.y">\$<var class="varname">y</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.m">\$<var class="varname">m</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.d">\$<var class="varname">d</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.h">\$<var class="varname">h</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.i">\$<var class="varname">i</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.s">\$<var class="varname">s</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.float.php" class="type float" style="color:#EAB766">float</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.f">\$<var class="varname">f</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.invert">\$<var class="varname">invert</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.days">\$<var class="varname">days</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.from-string">\$<var class="varname">from_string</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateinterval.php#dateinterval.props.date-string">\$<var class="varname">date_string</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateinterval.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$duration</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateinterval.createfromdatestring.php" class="methodname" style="color:#CC7832">createFromDateString</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateinterval.format.php" class="methodname" style="color:#CC7832">format</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>   }</div>  </div>    <div class="section" id="dateinterval.props">   <h2 class="title">属性</h2>   <div class="warning"><strong class="warning">警告</strong>    <p class="para">     下列列出的有效属性依赖 PHP 版本，应视为 <em>readonly</em>。    </p>   </div>   <dl>         <dt id="dateinterval.props.y"><var class="varname">y</var></dt>     <dd>      <p class="para">       多少年。      </p>     </dd>             <dt id="dateinterval.props.m"><var class="varname">m</var></dt>     <dd>      <p class="para">       多少月。      </p>     </dd>             <dt id="dateinterval.props.d"><var class="varname">d</var></dt>     <dd>      <p class="para">       多少天。      </p>     </dd>             <dt id="dateinterval.props.h"><var class="varname">h</var></dt>     <dd>      <p class="para">       多少小时。      </p>     </dd>             <dt id="dateinterval.props.i"><var class="varname">i</var></dt>     <dd>      <p class="para">       多少分钟。      </p>     </dd>             <dt id="dateinterval.props.s"><var class="varname">s</var></dt>     <dd>      <p class="para">       多少秒。      </p>     </dd>             <dt id="dateinterval.props.f"><var class="varname">f</var></dt>     <dd>      <p class="para">       多少微秒。      </p>     </dd>             <dt id="dateinterval.props.invert"><var class="varname">invert</var></dt>     <dd>      <p class="para">       如果是负的时间段，则为 <span class="literal">1</span>，否则为        <span class="literal">0</span>。请参见 <span class="methodname" style="color:#CC7832">{@link DateInterval::format()}</span>。      </p>     </dd>             <dt id="dateinterval.props.days"><var class="varname">days</var></dt>     <dd>      <p class="para">       如果 DateInterval 对象是由 <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::diff()}</span>       或者 <span class="function">{@link DateTime::diff()}</span>       函数创建的，那么它表示开始日期和结束日期之间的完整天数。否则，<var class="varname">days</var> 属性为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt id="dateinterval.props.from-string"><var class="varname">from_string</var></dt>     <dd>      <p class="para">       如果 DateInterval 对象是通过 <span class="methodname" style="color:#CC7832">{@link DateInterval::createFromDateString()}</span>       创建，则此属性值设为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 并且 <var class="varname">date_string</var> 属性将填充数据。否则，此值设为       <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 且为从 <var class="varname">y</var> 到 <var class="varname">f</var>、<var class="varname">invert</var> 和       <var class="varname">days</var> 属性填充数据。      </p>     </dd>             <dt id="dateinterval.props.date-string"><var class="varname">date_string</var></dt>     <dd>      <p class="para">       字符串，用作 <span class="methodname" style="color:#CC7832">{@link DateInterval::createFromDateString()}</span> 的参数。      </p>     </dd>       </dl>  </div>  <div class="section" id="dateinterval.changelog">   <h2 class="title">更新日志</h2>   <p class="para">    </p><table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.2.0</td>        <td>         为使用 <span class="methodname" style="color:#CC7832">{@link DateInterval::createFromDateString()}</span>         方法创建的 <span class="classname"><strong class="classname">DateInterval</strong></span> 实例添加了         <var class="varname">from_string</var> 和 <var class="varname">date_string</var> 属性。        </td>       </tr>       <tr>        <td>8.2.0</td>        <td>         仅从 <span class="literal">y</span> 到 <span class="literal">f</span>、<span class="literal">invert</span>         和 <span class="literal">days</span> 将可见。        </td>       </tr>       <tr>        <td>7.4.0</td>        <td>         现在 <span class="classname"><strong class="classname">DateInterval</strong></span> 无法比较；之前所有的         <span class="classname"><strong class="classname">DateInterval</strong></span> 实例都认为相等。        </td>       </tr>       <tr>        <td>7.1.0</td>        <td>增加 <var class="varname">f</var> 属性。</td>       </tr>      </tbody>         </table>     </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DateInterval::__construct} — Creates a new DateInterval object</li><li>{@link DateInterval::createFromDateString} — Sets up a DateInterval from the relative parts of the string</li><li>{@link DateInterval::format} — Formats the interval</li></ul></div>
 * 
 * Representation of date interval. A date interval stores either a fixed amount of
 * time (in years, months, days, hours etc) or a relative time string in the format
 * that DateTime's constructor supports.
 * @link https://php.net/manual/zh/class.dateinterval.php
 */
class DateInterval
{
    /**
     * Number of years
     * @var int
     */
    public $y;

    /**
     * Number of months
     * @var int
     */
    public $m;

    /**
     * Number of days
     * @var int
     */
    public $d;

    /**
     * Number of hours
     * @var int
     */
    public $h;

    /**
     * Number of minutes
     * @var int
     */
    public $i;

    /**
     * Number of seconds
     * @var int
     */
    public $s;

    /**
     * Number of microseconds
     * @since 7.1.0
     * @var float
     */
    public $f;

    /**
     * Is 1 if the interval is inverted and 0 otherwise
     * @var int
     */
    public $invert;

    /**
     * Total number of days the interval spans. If this is unknown, days will be FALSE.
     * @var int|false
     */
    public $days;

    /**
     * @param string $duration
     * @throws Exception when the $duration cannot be parsed as an interval.
     * @link https://php.net/manual/en/dateinterval.construct.php
     */
    #[PhpStormStubsElementAvailable(from: '5.3', to: '8.2')]
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $duration) {}

    /**
     * @param string $duration
     * @throws DateMalformedIntervalStringException when the $duration cannot be parsed as an interval.
     * @link https://php.net/manual/en/dateinterval.construct.php
     */
    #[PhpStormStubsElementAvailable(from: '8.3')]
    public function __construct(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $duration) {}

    /**
 * <div id="dateinterval.format" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateInterval::format</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateInterval::format</span> — <span class="dc-title">Formats the interval</span></p> </div> <div class="refsect1 description" id="refsect1-dateinterval.format-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DateInterval::format</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$format</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Formats the interval.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateinterval.format-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       </p><table class="doctable table">        <caption><strong>         The following characters are recognized in the         <span class="parameter" style="color:#3A95FF">format</span> parameter string.         Each format character must be prefixed by a percent sign         (<span class="literal">%</span>).        </strong></caption>                 <thead>          <tr>           <th><span class="parameter" style="color:#3A95FF">format</span> character</th>           <th>Description</th>           <th>Example values</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><span class="literal">%</span></td>           <td>Literal <span class="literal">%</span></td>           <td><span class="literal">%</span></td>          </tr>          <tr>           <td><span class="literal">Y</span></td>           <td>Years, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span></td>          </tr>          <tr>           <td><span class="literal">y</span></td>           <td>Years, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span></td>          </tr>          <tr>           <td><span class="literal">M</span></td>           <td>Months, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span>, <span class="literal">12</span></td>          </tr>          <tr>           <td><span class="literal">m</span></td>           <td>Months, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span>, <span class="literal">12</span></td>          </tr>          <tr>           <td><span class="literal">D</span></td>           <td>Days, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span>, <span class="literal">31</span></td>          </tr>          <tr>           <td><span class="literal">d</span></td>           <td>Days, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span>, <span class="literal">31</span></td>          </tr>          <tr>           <td><span class="literal">a</span></td>           <td>Total number of days as a result of a <span class="methodname" style="color:#CC7832">{@link DateTime::diff()}</span> or <span class="literal">(unknown)</span> otherwise</td>           <td><span class="literal">4</span>, <span class="literal">18</span>, <span class="literal">8123</span></td>          </tr>          <tr>           <td><span class="literal">H</span></td>           <td>Hours, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span>, <span class="literal">23</span></td>          </tr>          <tr>           <td><span class="literal">h</span></td>           <td>Hours, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span>, <span class="literal">23</span></td>          </tr>          <tr>           <td><span class="literal">I</span></td>           <td>Minutes, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span>, <span class="literal">59</span></td>          </tr>          <tr>           <td><span class="literal">i</span></td>           <td>Minutes, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span>, <span class="literal">59</span></td>          </tr>          <tr>           <td><span class="literal">S</span></td>           <td>Seconds, numeric, at least 2 digits with leading 0</td>           <td><span class="literal">01</span>, <span class="literal">03</span>, <span class="literal">57</span></td>          </tr>          <tr>           <td><span class="literal">s</span></td>           <td>Seconds, numeric</td>           <td><span class="literal">1</span>, <span class="literal">3</span>, <span class="literal">57</span></td>          </tr>          <tr>           <td><span class="literal">F</span></td>           <td>Microseconds, numeric, at least 6 digits with leading           0</td>           <td><span class="literal">007701</span>, <span class="literal">052738</span>, <span class="literal">428291</span></td>          </tr>          <tr>           <td><span class="literal">f</span></td>           <td>Microseconds, numeric</td>           <td><span class="literal">7701</span>, <span class="literal">52738</span>, <span class="literal">428291</span></td>          </tr>          <tr>           <td><span class="literal">R</span></td>           <td>Sign "<span class="literal">-</span>" when negative, "<span class="literal">+</span>" when positive</td>           <td><span class="literal">-</span>, <span class="literal">+</span></td>          </tr>          <tr>           <td><span class="literal">r</span></td>           <td>Sign "<span class="literal">-</span>" when negative, empty when positive</td>           <td><span class="literal">-</span>, <span class="literal"></span></td>          </tr>         </tbody>               </table>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-dateinterval.format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the formatted interval.  </p> </div> <div class="refsect1 changelog" id="refsect1-dateinterval.format-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.2.12</td>       <td>The <span class="literal">F</span> and <span class="literal">f</span> format        will now always be positive.</td>      </tr>      <tr>       <td>7.1.0</td>       <td>The <span class="literal">F</span> and <span class="literal">f</span> format        characters were added.</td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-dateinterval.format-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2229">    <p><strong>示例 #1 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> example</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P2Y4DT6H8M'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%d days'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">4&nbsp;days</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2230">    <p><strong>示例 #2 <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> and carry over points</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P32D'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%d days'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">32&nbsp;days</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2231">    <p><strong>示例 #3      <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> and     <span class="methodname" style="color:#CC7832">{@link DateTime::diff()}</span> with the %a and %d modifiers    </strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$january </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2010-01-01'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$february </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2010-02-01'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">\$february</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">diff</span><span style="color: #007700">(</span><span style="color: #9876AA">\$january</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// %a will output the total number of days.<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%a total days'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// While %d will only output the number of days not already covered by the<br>// month.<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%m month, %d days'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;">     <div class="examplescode"><blockquote style="border:1px gray solid;">31&nbsp;total&nbsp;days<br>1&nbsp;month,&nbsp;0&nbsp;days</blockquote></div>    </div>   </div>   </div>  <div class="refsect1 notes" id="refsect1-dateinterval.format-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    The <span class="methodname" style="color:#CC7832"><strong>DateInterval::format()</strong></span> method does not     recalculate carry over points in time strings nor in date segments. This     is expected because it is not possible to overflow values like <span class="literal">"32 days"</span>    which could be interpreted as anything from <span class="literal">"1 month and 4 days"</span>     to <span class="literal">"1 month and 1 day"</span>.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-dateinterval.format-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link DateTime::diff()} - 返回两个 DateTime 之间的差值</span></li>   </ul>   </div></div>
 * 
     * Formats the interval
     * @param string $format
     * @return string
     * @link https://php.net/manual/zh/dateinterval.format.php
     */
    #[TentativeType]
    public function format(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $format): string {}

    /**
 * <div id="dateinterval.createfromdatestring" class="refentry"> <div class="refnamediv">  <h1 class="refname">DateInterval::createFromDateString</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DateInterval::createFromDateString</span> — <span class="dc-title">Sets up a DateInterval from the relative parts of the string</span></p> </div> <div class="refsect1 description" id="refsect1-dateinterval.createfromdatestring-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DateInterval::createFromDateString</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <p class="para rdfs-comment">过程化风格</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832">{@link date_interval_create_from_date_string}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$datetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Uses the date/time parsers as used in the   <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> constructor to create a   <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> from the relative parts of the parsed   string.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateinterval.createfromdatestring-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">datetime</span></dt>     <dd>      <p class="para">       A date with relative parts. Specifically, the <a href="https://php.net/manual/zh/datetime.formats.php#datetime.formats.relative" class="link">relative formats</a> supported       by the parser used for <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span>,       <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span>, and <span class="function">{@link strtotime()}</span>       will be used to construct the DateInterval.      </p>      <p class="para">       To use an ISO-8601 format string like <span class="literal">P7D</span>, you must       use the <span class="methodname" style="color:#CC7832">{@link DateInterval::__construct()}</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-dateinterval.createfromdatestring-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> on success.   过程化风格在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-dateinterval.createfromdatestring-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Object Oriented API only: If an invalid Date/Time string is passed,   <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> is thrown.  </p> </div> <div class="refsect1 changelog" id="refsect1-dateinterval.createfromdatestring-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       <span class="methodname" style="color:#CC7832"><strong>DateInterval::createFromDateString()</strong></span> now throws       <span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span> if an       invalid string is passed.  Previously, it returned <span class="literal">false</span>,       and a warning was emitted.       <span class="function">{@link date_interval_create_from_date_string()}</span> has not been       changed.      </td>     </tr>     <tr>      <td>8.2.0</td>      <td>       Only the <span class="literal">from_string</span> and       <span class="literal">date_string</span> properties will be visible when a       <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> is created with this method.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-dateinterval.createfromdatestring-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2226">    <p><strong>示例 #1 Parsing valid date intervals</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Each set of intervals is equal.<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1D'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'1 day'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P2W'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'2 weeks'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P3M'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'3 months'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P4Y'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'4 years'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1Y1D'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'1 year + 1 day'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1DT12H'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'1 day + 12 hours'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'PT3600S'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'3600 seconds'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2227">    <p><strong>示例 #2 Parsing combinations and negative intervals</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'62 weeks + 1 day + 2 weeks + 2 hours + 70 minutes'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$i</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%d %h %i'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'1 year - 10 days'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$i</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%y %d'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>449 2 70<br>1 -10<br>    </div>   </div>    <p class="para">   </p><div class="example" id="example-2228">    <p><strong>示例 #3 Parsing special relative date intervals</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'last day of next month'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$i</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromDateString</span><span style="color: #007700">(</span><span style="color: #DD0000">'last weekday'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$i</span><span style="color: #007700">);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例在 PHP 8.2 中的输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(DateInterval)#1&nbsp;(2)&nbsp;{<br>&nbsp;&nbsp;["from_string"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["date_string"]=&gt;<br>&nbsp;&nbsp;string(22)&nbsp;"last&nbsp;day&nbsp;of&nbsp;next&nbsp;month"<br>}<br>object(DateInterval)#2&nbsp;(2)&nbsp;{<br>&nbsp;&nbsp;["from_string"]=&gt;<br>&nbsp;&nbsp;bool(true)<br>&nbsp;&nbsp;["date_string"]=&gt;<br>&nbsp;&nbsp;string(12)&nbsp;"last&nbsp;weekday"<br>}</blockquote></div>    </div>    <div class="example-contents"><p>以上示例在 PHP 8 中的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">object(DateInterval)#1&nbsp;(16)&nbsp;{<br>&nbsp;&nbsp;["y"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["m"]=&gt;<br>&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;["d"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["h"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["i"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["s"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["f"]=&gt;<br>&nbsp;&nbsp;float(0)<br>&nbsp;&nbsp;["weekday"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["weekday_behavior"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["first_last_day_of"]=&gt;<br>&nbsp;&nbsp;int(2)<br>&nbsp;&nbsp;["invert"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["days"]=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;["special_type"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["special_amount"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["have_weekday_relative"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["have_special_relative"]=&gt;<br>&nbsp;&nbsp;int(0)<br>}<br>object(DateInterval)#2&nbsp;(16)&nbsp;{<br>&nbsp;&nbsp;["y"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["m"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["d"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["h"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["i"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["s"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["f"]=&gt;<br>&nbsp;&nbsp;float(0)<br>&nbsp;&nbsp;["weekday"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["weekday_behavior"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["first_last_day_of"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["invert"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["days"]=&gt;<br>&nbsp;&nbsp;bool(false)<br>&nbsp;&nbsp;["special_type"]=&gt;<br>&nbsp;&nbsp;int(1)<br>&nbsp;&nbsp;["special_amount"]=&gt;<br>&nbsp;&nbsp;int(-1)<br>&nbsp;&nbsp;["have_weekday_relative"]=&gt;<br>&nbsp;&nbsp;int(0)<br>&nbsp;&nbsp;["have_special_relative"]=&gt;<br>&nbsp;&nbsp;int(1)<br>}</blockquote></div>    </div>   </div>   </div></div>
 * 
     * Sets up a DateInterval from the relative parts of the string
     * @param string $datetime
     * @return DateInterval|false Returns a new {@link https://www.php.net/manual/en/class.dateinterval.php DateInterval}
     * instance on success, or <b>FALSE</b> on failure.
     * @link https://php.net/manual/zh/dateinterval.createfromdatestring.php
     */
    #[TentativeType]
    #[LanguageLevelTypeAware(['8.4' => 'DateInterval'], default: 'DateInterval|false')]
    public static function createFromDateString(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $datetime) {}

    #[TentativeType]
    public function __wakeup(): void {}


    public static function __set_state($an_array) {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void {}
}

/**
 * <div id="class.dateperiod" class="reference"> <h1 class="title">DatePeriod 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p>  <div class="section" id="dateperiod.intro">   <h2 class="title">简介</h2>   <p class="para">    DatePeriod 类表示一个时间周期。   </p>   <p class="para">    时间周期内允许对一组日期和时间进行迭代，在指定的时间间隔内定期重复。   </p>  </div>  <div class="section" id="dateperiod.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">DatePeriod</strong></strong>             <span class="modifier">implements</span>      <a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.constants.exclude-start-date"><var class="varname">EXCLUDE_START_DATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.constants.include-end-date"><var class="varname">INCLUDE_END_DATE</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.start">\$<var class="varname">start</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.current">\$<var class="varname">current</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.end">\$<var class="varname">end</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.interval">\$<var class="varname">interval</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.recurrences">\$<var class="varname">recurrences</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.include-start-date">\$<var class="varname">include_start_date</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.dateperiod.php#dateperiod.props.include-end-date">\$<var class="varname">include_end_date</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$recurrences</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span><br>)</div><div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span> <span class="parameter" style="color:#3A95FF">\$interval</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span> <span class="parameter" style="color:#3A95FF">\$end</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span><br>)</div><div class="constructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$isostr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.createfromiso8601string.php" class="methodname" style="color:#CC7832">createFromISO8601String</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$specification</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">static</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.getdateinterval.php" class="methodname" style="color:#CC7832">getDateInterval</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.getenddate.php" class="methodname" style="color:#CC7832">getEndDate</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.getrecurrences.php" class="methodname" style="color:#CC7832">getRecurrences</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/dateperiod.getstartdate.php" class="methodname" style="color:#CC7832">getStartDate</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></div>   }</div>  </div>    <div class="section" id="dateperiod.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="dateperiod.constants.exclude-start-date">      <strong><span>{@link DatePeriod::EXCLUDE_START_DATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">在 <span class="function">{@link DatePeriod::__construct()}</span> 构造函数中使用，排除开始时间。</p>     </dd>             <dt id="dateperiod.constants.include-end-date">      <strong><span>{@link DatePeriod::INCLUDE_END_DATE}</span></strong>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>     </dt>     <dd>      <p class="para">在 <span class="function">{@link DatePeriod::__construct()}</span> 构造函数中使用，包含结束时间。</p>     </dd>       </dl>  </div>  <div class="section" id="dateperiod.props">   <h2 class="title">属性</h2>   <dl>         <dt id="dateperiod.props.recurrences"><var class="varname">recurrences</var></dt>     <dd>      <p class="para">       迭代器返回的最小实例数。      </p>      <p class="para">       如果在 <span class="classname"><strong class="classname">DatePeriod</strong></span> 实例的构造函数中显式通过 <var class="varname">recurrences</var>       参数传递重复次数，然后此属性将包含该值，如果开始时间没有通过 <strong><span>{@link DatePeriod::EXCLUDE_START_DATE}</span></strong>       禁用，则该属性<em>加</em> 1，如果结束时间已经通过 <strong><span>{@link DatePeriod::INCLUDE_END_DATE}</span></strong>       启用，则该属性<em>加</em> 1。      </p>      <p class="para">       如果没有显式传递重复次数，则此属性包含返回实例的最小数量。这将是        <span class="literal">0</span>，如果开始时间没有通过 <strong><span>{@link DatePeriod::EXCLUDE_START_DATE}</span></strong>       禁用，则该属性<em>加</em> 1，如果结束时间已经通过 <strong><span>{@link DatePeriod::INCLUDE_END_DATE}</span></strong>       启用，则该属性<em>加</em> 1。      </p>      <p class="para">       </p><div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$start </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2018-12-31 00:00:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$end   </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2021-12-31 00:00:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1M'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$recurrences </span><span style="color: #007700">= </span><span style="color: #9876AA">5</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// 通过构造函数显式设置重复次数<br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">EXCLUDE_START_DATE</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recurrences</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recurrences</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">INCLUDE_END_DATE</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recurrences</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// 构造函数中没有设置重复次数<br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$end</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recurrences</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$end</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">EXCLUDE_START_DATE</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recurrences</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>         </div>         <p class="para">以上示例会输出：</p>         <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>5<br>6<br>7<br>1<br>0<br>         </div>        </div>             <p class="para">       参见：<span class="methodname" style="color:#CC7832">{@link DatePeriod::getRecurrences()}</span>。      </p>     </dd>             <dt id="dateperiod.props.include-end-date"><var class="varname">include_end_date</var></dt>     <dd>      <p class="para">       在循环过程中，是否包含结束时间。      </p>     </dd>             <dt id="dateperiod.props.include-start-date"><var class="varname">include_start_date</var></dt>     <dd>      <p class="para">       在循环过程中，是否包含开始时间。      </p>     </dd>             <dt id="dateperiod.props.start"><var class="varname">start</var></dt>     <dd>      <p class="para">        时间周期的开始时间。      </p>     </dd>             <dt id="dateperiod.props.current"><var class="varname">current</var></dt>     <dd>      <p class="para">       表示在时间周期内迭代的时候，当前的时间。      </p>     </dd>             <dt id="dateperiod.props.end"><var class="varname">end</var></dt>     <dd>      <p class="para">       时间周期的结束时间。      </p>     </dd>             <dt id="dateperiod.props.interval"><var class="varname">interval</var></dt>     <dd>      <p class="para">       ISO 8601 格式的间隔。      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        类常量现已类型化。       </td>      </tr>      <tr>       <td>8.2.0</td>       <td>        新增 <strong><span>{@link DatePeriod::INCLUDE_END_DATE}</span></strong> 常量和        <span class="property">include_end_date</span> 属性。       </td>      </tr>      <tr>       <td>8.0.0</td>       <td>        现在 <span class="classname"><strong class="classname">DatePeriod</strong></span> 实现了（implement）        <span class="interfacename"><a href="https://php.net/manual/zh/class.iteratoraggregate.php" class="interfacename">IteratorAggregate</a></span>。之前实现的是        <span class="interfacename"><a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span>。       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link DatePeriod::__construct} — Creates a new DatePeriod object</li><li>{@link DatePeriod::createFromISO8601String} — Creates a new DatePeriod object from an ISO8601 string</li><li>{@link DatePeriod::getDateInterval} — Gets the interval</li><li>{@link DatePeriod::getEndDate} — Gets the end date</li><li>{@link DatePeriod::getRecurrences} — Gets the number of recurrences</li><li>{@link DatePeriod::getStartDate} — Gets the start date</li></ul></div>
 * 
 * Representation of date period.
 * @link https://php.net/manual/zh/class.dateperiod.php
 * @template TDate of DateTimeInterface
 * @template TEnd of ?DateTimeInterface
 * @implements \IteratorAggregate<int, TDate>
 */
class DatePeriod implements IteratorAggregate
{
    public const EXCLUDE_START_DATE = 1;

    /**
     * @since 8.2
     */
    public const INCLUDE_END_DATE = 2;

    /**
     * Start date
     * @var DateTimeInterface
     */
    #[LanguageLevelTypeAware(['8.2' => 'DateTimeInterface|null'], default: '')]
    #[Immutable]
    public $start;

    /**
     * Current iterator value.
     * @var DateTimeInterface|null
     */
    #[LanguageLevelTypeAware(['8.2' => 'DateTimeInterface|null'], default: '')]
    public $current;

    /**
     * End date.
     * @var DateTimeInterface|null
     */
    #[LanguageLevelTypeAware(['8.2' => 'DateTimeInterface|null'], default: '')]
    #[Immutable]
    public $end;

    /**
     * The interval
     * @var DateInterval
     */
    #[LanguageLevelTypeAware(['8.2' => 'DateInterval|null'], default: '')]
    #[Immutable]
    public $interval;

    /**
     * Number of recurrences.
     * @var int
     */
    #[LanguageLevelTypeAware(['8.2' => 'int'], default: '')]
    #[Immutable]
    public $recurrences;

    /**
     * Start of period.
     * @var bool
     */
    #[LanguageLevelTypeAware(['8.2' => 'bool'], default: '')]
    #[Immutable]
    public $include_start_date;

    /**
     * @since 8.2
     */
    #[Immutable]
    public bool $include_end_date;

    /**
     * @param TDate $start
     * @param DateInterval $interval
     * @param TEnd $end
     * @param int $options Can be set to DatePeriod::EXCLUDE_START_DATE.
     * @link https://php.net/manual/en/dateperiod.construct.php
     */
    public function __construct(DateTimeInterface $start, DateInterval $interval, DateTimeInterface $end, $options = 0) {}

    /**
     * @param TDate $start
     * @param DateInterval $interval
     * @param int $recurrences Number of recurrences
     * @param int $options Can be set to DatePeriod::EXCLUDE_START_DATE.
     * @link https://php.net/manual/en/dateperiod.construct.php
     */
    public function __construct(DateTimeInterface $start, DateInterval $interval, $recurrences, $options = 0) {}

    /**
     * @param string $isostr String containing the ISO interval.
     * @param int $options Can be set to DatePeriod::EXCLUDE_START_DATE.
     * @throws DateMalformedPeriodStringException
     * @link https://php.net/manual/en/dateperiod.construct.php
     */
    public function __construct($isostr, $options = 0) {}

    /**
 * <div id="dateperiod.getdateinterval" class="refentry"> <div class="refnamediv">  <h1 class="refname">DatePeriod::getDateInterval</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DatePeriod::getDateInterval</span> — <span class="dc-title">   Gets the interval  </span></p> </div> <div class="refsect1 description" id="refsect1-dateperiod.getdateinterval-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getDateInterval</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.dateinterval.php" class="type DateInterval" style="color:#EAB766">DateInterval</a></span></div>  <p class="para rdfs-comment">   Gets a <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   representing the interval used for the period.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateperiod.getdateinterval-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-dateperiod.getdateinterval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>  </p> </div> <div class="refsect1 examples" id="refsect1-dateperiod.getdateinterval-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2236">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getDateInterval()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #DD0000">'R7/2016-05-16T00:00:00Z/P1D'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDateInterval</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'%d day'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1&nbsp;day</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-dateperiod.getdateinterval-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getStartDate()} - Gets the start date</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getEndDate()} - Gets the end date</span></li>  </ul> </div></div>
 * 
     * Gets the interval
     * @return DateInterval
     * @link https://php.net/manual/zh/dateperiod.getdateinterval.php
     * @since 5.6.5
     */
    #[TentativeType]
    public function getDateInterval(): DateInterval {}

    /**
 * <div id="dateperiod.getenddate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DatePeriod::getEndDate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DatePeriod::getEndDate</span> — <span class="dc-title">   Gets the end date  </span></p> </div> <div class="refsect1 description" id="refsect1-dateperiod.getenddate-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getEndDate</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></span></div>  <p class="para rdfs-comment">   Gets the end date of the period.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateperiod.getenddate-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-dateperiod.getenddate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if the <span class="classname"><a href="https://php.net/manual/zh/class.dateperiod.php" class="classname">DatePeriod</a></span> does   not have an end date. For example, when initialized with the   <span class="parameter" style="color:#3A95FF">recurrences</span> parameter, or the   <span class="parameter" style="color:#3A95FF">isostr</span> parameter without an   end date.  </p>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   when the <span class="classname"><a href="https://php.net/manual/zh/class.dateperiod.php" class="classname">DatePeriod</a></span> is initialized with a   <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   as the <span class="parameter" style="color:#3A95FF">end</span> parameter.  </p>  <p class="para">   Returns a cloned <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   representing the end date otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-dateperiod.getenddate-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2237">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getEndDate()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(<br>    new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2016-05-16T00:00:00Z'</span><span style="color: #007700">),<br>    new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1D'</span><span style="color: #007700">),<br>    new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2016-05-20T00:00:00Z'</span><span style="color: #007700">)<br>);<br></span><span style="color: #9876AA">\$start </span><span style="color: #007700">= </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEndDate</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$start</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">ISO8601</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2016-05-20T00:00:00+0000</blockquote></div>   </div>  </div>  <div class="example" id="example-2238">   <p><strong>示例 #2 <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getEndDate()</strong></span> without an end date</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(<br>    new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2016-05-16T00:00:00Z'</span><span style="color: #007700">),<br>    new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1D'</span><span style="color: #007700">),<br>    </span><span style="color: #9876AA">7<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEndDate</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">NULL</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-dateperiod.getenddate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getStartDate()} - Gets the start date</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getDateInterval()} - Gets the interval</span></li>  </ul> </div></div>
 * 
     * Gets the end date
     * @return DateTimeInterface|null
     * @link https://php.net/manual/zh/dateperiod.getenddate.php
     * @since 5.6.5
     * @return TEnd
     */
    #[TentativeType]
    public function getEndDate(): ?DateTimeInterface {}

    /**
 * <div id="dateperiod.getstartdate" class="refentry"> <div class="refnamediv">  <h1 class="refname">DatePeriod::getStartDate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">DatePeriod::getStartDate</span> — <span class="dc-title">   Gets the start date  </span></p> </div> <div class="refsect1 description" id="refsect1-dateperiod.getstartdate-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getStartDate</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.datetimeinterface.php" class="type DateTimeInterface" style="color:#EAB766">DateTimeInterface</a></span></div>  <p class="para rdfs-comment">   Gets the start date of the period.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateperiod.getstartdate-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-dateperiod.getstartdate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   when the <span class="classname"><a href="https://php.net/manual/zh/class.dateperiod.php" class="classname">DatePeriod</a></span> is initialized with a   <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   as the <span class="parameter" style="color:#3A95FF">start</span> parameter.  </p>  <p class="para">   Returns a <span class="classname"><a href="https://php.net/manual/zh/class.datetime.php" class="classname">DateTime</a></span> <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>   otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-dateperiod.getstartdate-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2240">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getStartDate()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #DD0000">'R7/2016-05-16T00:00:00Z/P1D'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$start </span><span style="color: #007700">= </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getStartDate</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">\$start</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #9876AA">DateTime</span><span style="color: #007700">::</span><span style="color: #9876AA">ISO8601</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2016-05-16T00:00:00+0000</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-dateperiod.getstartdate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getEndDate()} - Gets the end date</span></li>   <li><span class="methodname" style="color:#CC7832">{@link DatePeriod::getDateInterval()} - Gets the interval</span></li>  </ul> </div></div>
 * 
     * Gets the start date
     * @return DateTimeInterface
     * @link https://php.net/manual/zh/dateperiod.getstartdate.php
     * @since 5.6.5
     * @return TDate
     */
    #[TentativeType]
    public function getStartDate(): DateTimeInterface {}

    #[TentativeType]
    public static function __set_state(#[PhpStormStubsElementAvailable(from: '7.3')] array $array): DatePeriod {}

    #[TentativeType]
    public function __wakeup(): void {}

    /**
 * <div id="dateperiod.getrecurrences" class="refentry"> <div class="refnamediv">  <h1 class="refname">DatePeriod::getRecurrences</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.17/7.3.4, PHP 8)</p><p class="refpurpose"><span class="refname">DatePeriod::getRecurrences</span> — <span class="dc-title">Gets the number of recurrences</span></p> </div> <div class="refsect1 description" id="refsect1-dateperiod.getrecurrences-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格</p>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getRecurrences</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   Get the number of recurrences.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateperiod.getrecurrences-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-dateperiod.getrecurrences-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The number of recurrences as set by explicitly passing the   <span class="literal">\$recurrences</span> to the contructor of the   <span class="classname"><a href="https://php.net/manual/zh/class.dateperiod.php" class="classname">DatePeriod</a></span> class, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> otherwise.  </p> </div>  <div class="refsect1 examples" id="refsect1-dateperiod.getrecurrences-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2239">    <p><strong>示例 #1 Different values for <span class="methodname" style="color:#CC7832"><strong>DatePeriod::getRecurrences()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$start </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2018-12-31 00:00:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$end   </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'2021-12-31 00:00:00'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$interval </span><span style="color: #007700">= new </span><span style="color: #9876AA">DateInterval</span><span style="color: #007700">(</span><span style="color: #DD0000">'P1M'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$recurrences </span><span style="color: #007700">= </span><span style="color: #9876AA">5</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// recurrences explicitly set through the constructor<br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">EXCLUDE_START_DATE</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRecurrences</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRecurrences</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$recurrences</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">INCLUDE_END_DATE</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRecurrences</span><span style="color: #007700">(), </span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// recurrences not set in the constructor<br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$end</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRecurrences</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= new </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">(</span><span style="color: #9876AA">\$start</span><span style="color: #007700">, </span><span style="color: #9876AA">\$interval</span><span style="color: #007700">, </span><span style="color: #9876AA">\$end</span><span style="color: #007700">, </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">EXCLUDE_START_DATE</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$period</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRecurrences</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><br>5<br>5<br>5<br><br>NULL<br>NULL<br>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-dateperiod.getrecurrences-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li>{@link DatePeriod::\$recurrences}</li>  </ul> </div></div>
 * 
     * Get the number of recurrences
     * @return int|null
     * @link https://php.net/manual/zh/dateperiod.getrecurrences.php
     * @since 7.2.17
     */
    #[TentativeType]
    public function getRecurrences(): ?int {}

    /**
     * @return \Iterator<int, TDate>
     * @since 8.0
     */
    public function getIterator(): Iterator {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __serialize(): array {}

    #[PhpStormStubsElementAvailable(from: '8.2')]
    public function __unserialize(array $data): void {}

    /**
 * <div id="dateperiod.createfromiso8601string" class="refentry"> <div class="refnamediv">  <h1 class="refname">DatePeriod::createFromISO8601String</h1>  <p class="verinfo">(PHP 8 &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">DatePeriod::createFromISO8601String</span> — <span class="dc-title">Creates a new DatePeriod object from an ISO8601 string</span></p> </div> <div class="refsect1 description" id="refsect1-dateperiod.createfromiso8601string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>DatePeriod::createFromISO8601String</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$specification</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$options</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">static</span></div>  <p class="para rdfs-comment">   Creates a new DatePeriod object from an ISO8601 string, as specified with   <span class="parameter" style="color:#3A95FF">specification</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-dateperiod.createfromiso8601string-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">specification</span></dt>    <dd>     <p class="para">      A subset of the <a href="http://en.wikipedia.org/wiki/Iso8601#Repeating_intervals" class="link external">»&nbsp;ISO 8601 repeating      interval specification</a>.     </p>     <p class="para">      An example of an accepted ISO 8601 interval specifications is      <span class="literal">R5/2008-03-01T13:00:00Z/P1Y2M10DT2H30M</span>, which      specifies:     </p>     <ul class="itemizedlist">      <li class="listitem">       <span class="simpara">        5 iterations (<span class="literal">R5/</span>)       </span>      </li>      <li class="listitem">       <span class="simpara">        Starting at <span class="literal">2008-03-01T13:00:00Z</span>.       </span>      </li>      <li class="listitem">       <span class="simpara">        Each iteration is an 1 year, 2 months, 10 days, 2 hours, and 30 minute interval        (<span class="literal">/P1Y2M10DT2H30M</span>).       </span>      </li>     </ul>     <p class="para">      Examples of some ISO 8601 interval specification features that PHP does      not support are:     </p>     <ol type="1">      <li class="listitem">       <span class="simpara">        zero occurrences (<span class="literal">R0/</span>)       </span>      </li>      <li class="listitem">       <span class="simpara">        time offsets other than UTC (<span class="literal">Z</span>), such as <span class="literal">+02:00</span>.       </span>      </li>     </ol>    </dd>          <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">      A bit field which can be used to control certain behaviour with start-      and end- dates.     </p>     <p class="para">      With <strong><span>{@link DatePeriod::EXCLUDE_START_DATE}</span></strong> you      exclude the start date from the set of recurring dates within the      period.     </p>     <p class="para">      With <strong><span>{@link DatePeriod::INCLUDE_END_DATE}</span></strong> you      include the end date in the set of recurring dates within the      period.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-dateperiod.createfromiso8601string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Creates a new DatePeriod object.  </p>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.dateperiod.php" class="classname">DatePeriod</a></span> objects created with this method can be   used as an iterator to generate a number of   <span class="classname"><a href="https://php.net/manual/zh/class.datetimeimmutable.php" class="classname">DateTimeImmutable</a></span> objects.  </p> </div> <div class="refsect1 errors" id="refsect1-dateperiod.createfromiso8601string-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Throws an <span class="classname"><a href="https://php.net/manual/zh/class.datemalformedperiodstringexception.php" class="classname">DateMalformedPeriodStringException</a></span> when   the <span class="parameter" style="color:#3A95FF">specification</span> cannot be parsed as a valid ISO 8601   period.  </p> </div> <div class="refsect1 examples" id="refsect1-dateperiod.createfromiso8601string-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-2235">    <p><strong>示例 #1 DatePeriod::createFromISO8601String example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$iso </span><span style="color: #007700">= </span><span style="color: #DD0000">'R4/2023-07-01T00:00:00Z/P7D'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">\$period </span><span style="color: #007700">= </span><span style="color: #9876AA">DatePeriod</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromISO8601String</span><span style="color: #007700">(</span><span style="color: #9876AA">\$iso</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// By iterating over the DatePeriod object, all of the<br>// recurring dates within that period are printed.<br></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">\$period </span><span style="color: #007700">as </span><span style="color: #9876AA">\$date</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$date</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y-m-d'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">2023-07-01<br>2023-07-08<br>2023-07-15<br>2023-07-22<br>2023-07-29</blockquote></div>    </div>   </div>   </div></div>
 * 
     * @since 8.3
     */
    public static function createFromISO8601String(string $specification, int $options = 0): static {}
}

/**
 * <div id="class.dateerror" class="reference"> <h1 class="title">The DateError class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="dateerror.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when the timezone database is not found, or contains invalid data.   </p>   <p class="para">    This error should never occur, and is not dependent on code. There are two    child-exceptions (<span class="exceptionname"><a href="https://php.net/manual/zh/class.dateobjecterror.php" class="exceptionname">DateObjectError</a></span> and    <span class="exceptionname"><a href="https://php.net/manual/zh/class.daterangeerror.php" class="exceptionname">DateRangeError</a></span>) which are thrown depending    on programmer error or range related issues.   </p>  </div>  <div class="section" id="dateerror.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateError</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.error.php" class="classname">Error</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Error::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section">   <h2 class="title">参见</h2>   <ul class="simplelist">    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateobjecterror.php" class="exceptionname">DateObjectError</a></span></li>    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.daterangeerror.php" class="exceptionname">DateRangeError</a></span></li>   </ul>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateError extends Error {}

/**
 * <div id="class.dateobjecterror" class="reference"> <h1 class="title">The DateObjectError class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="dateobjecterror.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when one of the Date/Time classes has not been correctly    initialised.   </p>   <p class="para">    Because Date/Time classes are not final, these classes can be inherit.    When the parent constructor is not called, this error is thrown. This is    always a programming error.   </p>  </div>  <div class="section" id="dateobjecterror.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateObjectError</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateerror.php" class="classname">DateError</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Error::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section">   <h2 class="title">参见</h2>   <ul class="simplelist">    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateerror.php" class="exceptionname">DateError</a></span></li>    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.daterangeerror.php" class="exceptionname">DateRangeError</a></span></li>   </ul>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateObjectError extends DateError {}

/**
 * <div id="class.daterangeerror" class="reference"> <h1 class="title">The DateRangeError class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="daterangeerror.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown by <span class="methodname" style="color:#CC7832">{@link DateTime::getTimestamp()}</span>,    <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::getTimestamp()}</span>, and    <span class="function">{@link date_timestamp_get()}</span>, on 32-bit platforms if the date    object represents a date outside of the 32-bit signed range.   </p>  </div>  <div class="section" id="daterangeerror.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateRangeError</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateerror.php" class="classname">DateError</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.error.php#error.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Error::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Error::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>  <div class="section">   <h2 class="title">参见</h2>   <ul class="simplelist">    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateerror.php" class="exceptionname">DateError</a></span></li>    <li><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateobjecterror.php" class="exceptionname">DateObjectError</a></span></li>   </ul>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateRangeError extends DateError {}

/**
 * <div id="class.dateexception" class="reference"> <h1 class="title">The DateException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="dateexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Parent class of Date/Time exceptions, for issues that come to light due to    user input, or free form text arguments that need to be parsed.   </p>   <p class="para">    The following child exceptions are thrown by the extension:    </p><ul class="itemizedlist">     <li class="listitem"><span class="simpara"><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidoperationexception.php" class="exceptionname">DateInvalidOperationException</a></span></span></li>     <li class="listitem"><span class="simpara"><span class="exceptionname"><a href="https://php.net/manual/zh/class.dateinvalidtimezoneexception.php" class="exceptionname">DateInvalidTimezoneException</a></span></span></li>     <li class="listitem"><span class="simpara"><span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedintervalstringexception.php" class="exceptionname">DateMalformedIntervalStringException</a></span></span></li>     <li class="listitem"><span class="simpara"><span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedperiodstringexception.php" class="exceptionname">DateMalformedPeriodStringException</a></span></span></li>     <li class="listitem"><span class="simpara"><span class="exceptionname"><a href="https://php.net/manual/zh/class.datemalformedstringexception.php" class="exceptionname">DateMalformedStringException</a></span></span></li>    </ul>     </div>  <div class="section" id="dateexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateException extends Exception {}

/**
 * <div id="class.dateinvalidtimezoneexception" class="reference"> <h1 class="title">The DateInvalidTimeZoneException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="dateinvalidtimezoneexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when an incorrect value is passed to    <span class="methodname" style="color:#CC7832">{@link DateTimeZone::__construct()}</span>.   </p>  </div>  <div class="section" id="dateinvalidtimezoneexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateInvalidTimeZoneException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateexception.php" class="classname">DateException</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateInvalidTimeZoneException extends DateException {}

/**
 * <div id="class.dateinvalidoperationexception" class="reference"> <h1 class="title">The DateInvalidOperationException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="dateinvalidoperationexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown by <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::sub()}</span> and    <span class="methodname" style="color:#CC7832">{@link DateTime::sub()}</span> when an unsupported operation is    attempted.   </p>   <p class="para">    An example of such an unsupported operation is using a    <span class="classname"><a href="https://php.net/manual/zh/class.dateinterval.php" class="classname">DateInterval</a></span> object representing relative time    specifications such as <span class="literal">next weekday</span>, as no logical    reversed statement can be constructed.   </p>  </div>  <div class="section" id="dateinvalidoperationexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateInvalidOperationException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateexception.php" class="classname">DateException</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateInvalidOperationException extends DateException {}

/**
 * <div id="class.datemalformedstringexception" class="reference"> <h1 class="title">The DateMalformedStringException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="datemalformedstringexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when an invalid Date/Time string is detected.   </p>   <p class="para">    This can be as value to    <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::__construct()}</span>,    <span class="methodname" style="color:#CC7832">{@link DateTimeImmutable::modify()}</span>,    <span class="methodname" style="color:#CC7832">{@link DateTime::__construct()}</span>, or    <span class="methodname" style="color:#CC7832">{@link DateTime::modify()}</span>.   </p>  </div>  <div class="section" id="datemalformedstringexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateMalformedStringException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateexception.php" class="classname">DateException</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateMalformedStringException extends DateException {}

/**
 * <div id="class.datemalformedintervalstringexception" class="reference"> <h1 class="title">The DateMalformedIntervalStringException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="datemalformedintervalstringexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when an invalid <span class="parameter" style="color:#3A95FF">duration</span> argument is passed to    <span class="methodname" style="color:#CC7832">{@link DateInterval::__construct()}</span>.   </p>  </div>  <div class="section" id="datemalformedintervalstringexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateMalformedIntervalStringException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateexception.php" class="classname">DateException</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateMalformedIntervalStringException extends DateException {}

/**
 * <div id="class.datemalformedperiodstringexception" class="reference"> <h1 class="title">The DateMalformedPeriodStringException class</h1>  <div class="partintro"><p class="verinfo">(PHP 8 &gt;= 8.3.0)</p>  <div class="section" id="datemalformedperiodstringexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Thrown when an invalid <span class="parameter" style="color:#3A95FF">isostr</span> argument is passed to    <span class="methodname" style="color:#CC7832">{@link DatePeriod::__construct()}</span>.   </p>  </div>  <div class="section" id="datemalformedperiodstringexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">DateMalformedPeriodStringException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.dateexception.php" class="classname">DateException</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 * 
 * @since 8.3
 */
class DateMalformedPeriodStringException extends DateException {}
