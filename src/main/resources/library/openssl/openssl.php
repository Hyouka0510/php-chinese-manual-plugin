<?php

// Start of openssl v.
use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;

/**
* <div id="function.openssl-pkey-free" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_free</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_free</span> — <span class="dc-title">释放一个私钥</span></p> </div> <div id="function.openssl-pkey-free-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 8.0.0 起被<em>废弃</em>。强烈建议不要依赖本函数。</p></div> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkey-free-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="attribute"><a href="https://php.net/manual/zh/class.deprecated.php">#[\Deprecated]</a> </span><br>   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_free</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:  </p><p class="para">  此函数无效。在 PHP 8.0.0 之前，用于关闭资源。 </p></blockquote>  <p class="para">   该函数释放由 <span class="function">{@link openssl_pkey_new()}</span> 创建的私钥。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-free-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">       持有该密钥的资源。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-free-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-free-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现已弃用，因为不再有效。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>；之前接受类型       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Frees a private key
 * @link https://php.net/manual/zh/function.openssl-pkey-free.php
 * @param OpenSSLAsymmetricKey|resource $key <p>
 * Resource holding the key.
 * </p>
 * @return void
 
#[Deprecated(since: '8.0')]
*/
function openssl_pkey_free(#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey"], default: "resource")] $key): void {}

/**
* <div id="function.openssl-pkey-new" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_new</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_new</span> — <span class="dc-title">生成新的私钥</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-pkey-new-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_new</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_new()</strong></span> 生成一个新的私钥和公钥对。如何获取该密钥的公共组件参见以下示例。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 必须安装有效的 <var class="filename">openssl.cnf</var> 以保证此函数正确运行。参考有关<a href="https://php.net/manual/zh/openssl.installation.php" class="link">安装</a>的说明以获得更多信息。</span></p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-new-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       可以使用 <span class="parameter" style="color:#3A95FF">options</span> 参数微调密钥生成（例如指定位的数量或参数）。这些选项可以是用于密钥生成的特定于算法的参数，也可以是       <abbr title="Certificate Signing Request">CSR</abbr> 生成中使用的通用选项（如果未指定）。有关在 <abbr title="Certificate Signing Request">CSR</abbr> 中使用 <span class="parameter" style="color:#3A95FF">options</span>       的更多信息，参阅 <span class="function">{@link openssl_csr_new()}</span>。在这些选项中，只有       <span class="literal">private_key_bits</span>、<span class="literal">private_key_type</span>、<span class="literal">curve_name</span> 和 <span class="literal">config</span>       用于密钥生成。如果关联数组包含某个特定 key，则使用特定算法选项。       </p><ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <span class="literal">"rsa"</span> key 用于设置 RSA 参数。         </span>         <table class="doctable informaltable">                     <thead>            <tr>             <th>选项</th>             <th>类型</th>             <th>格式</th>             <th>是否必需</th>             <th>说明</th>            </tr>           </thead>           <tbody class="tbody">            <tr>             <td><span class="literal">"n"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>yes</td>             <td>modulus</td>            </tr>            <tr>             <td><span class="literal">"e"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>public exponent</td>            </tr>            <tr>             <td><span class="literal">"d"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>yes</td>             <td>private exponent</td>            </tr>            <tr>             <td><span class="literal">"p"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>prime 1</td>            </tr>            <tr>             <td><span class="literal">"q"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>prime 2</td>            </tr>            <tr>             <td><span class="literal">"dmp1"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>exponent1, d mod (p-1)</td>            </tr>            <tr>             <td><span class="literal">"dmq1"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>exponent2, d mod (q-1)</td>            </tr>            <tr>             <td><span class="literal">"iqmp"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>coefficient, (inverse of q) mod p</td>            </tr>           </tbody>                   </table>        </li>        <li class="listitem">         <span class="simpara">          <span class="literal">"dsa"</span> key 用于设置 DSA 参数。         </span>         <table class="doctable informaltable">                     <thead>            <tr>             <th>选项</th>             <th>类型</th>             <th>格式</th>             <th>是否必需</th>             <th>说明</th>            </tr>           </thead>           <tbody class="tbody">            <tr>             <td><span class="literal">"p"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>prime number (public)</td>            </tr>            <tr>             <td><span class="literal">"q"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>160-bit subprime, q | p-1 (public)</td>            </tr>            <tr>             <td><span class="literal">"g"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>generator of subgroup (public)</td>            </tr>            <tr>             <td><span class="literal">"priv_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>private key x</td>            </tr>            <tr>             <td><span class="literal">"pub_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>public key y = g^x</td>            </tr>           </tbody>                   </table>        </li>        <li class="listitem">         <span class="simpara">          <span class="literal">"dh"</span> key 用于 DH（迪菲-赫尔曼密钥交换）参数。         </span>         <table class="doctable informaltable">                     <thead>            <tr>             <th>选项</th>             <th>类型</th>             <th>格式</th>             <th>是否必需</th>             <th>说明</th>            </tr>           </thead>           <tbody class="tbody">            <tr>             <td><span class="literal">"p"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>prime number (shared)</td>            </tr>            <tr>             <td><span class="literal">"g"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>generator of Z_p (shared)</td>            </tr>            <tr>             <td><span class="literal">"priv_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>private DH value x</td>            </tr>            <tr>             <td><span class="literal">"pub_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>public DH value g^x</td>            </tr>           </tbody>                   </table>        </li>        <li class="listitem">         <span class="simpara">          <span class="literal">"ec"</span> key，用于椭圆曲线参数         </span>         <table class="doctable informaltable">                     <thead>            <tr>             <th>选项</th>             <th>类型</th>             <th>格式</th>             <th>是否必需</th>             <th>说明</th>            </tr>           </thead>           <tbody class="tbody">            <tr>             <td><span class="literal">"curve_name"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>name</td>             <td>no</td>             <td>name of curve, see <span class="function">{@link openssl_get_curve_names()}</span></td>            </tr>            <tr>             <td><span class="literal">"p"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>prime of the field for curve over Fp</td>            </tr>            <tr>             <td><span class="literal">"a"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>coofecient a of the curve for Fp: y^2 mod p = x^3 + ax + b mod p</td>            </tr>            <tr>             <td><span class="literal">"b"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>coofecient b of the curve for Fp: y^2 mod p = x^3 + ax + b mod p</td>            </tr>            <tr>             <td><span class="literal">"seed"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>用于生成系数 b 的可选随机数种子</td>            </tr>            <tr>             <td><span class="literal">"generator"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary encoded point</td>             <td>no</td>             <td>曲线生成点</td>            </tr>            <tr>             <td><span class="literal">"g_x"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>曲线生成点 x 坐标</td>            </tr>            <tr>             <td><span class="literal">"g_y"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>曲线生成点 y 坐标</td>            </tr>            <tr>             <td><span class="literal">"cofactor"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>curve cofactor</td>            </tr>            <tr>             <td><span class="literal">"order"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>curve order</td>            </tr>            <tr>             <td><span class="literal">"x"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>x coordinate (public)</td>            </tr>            <tr>             <td><span class="literal">"y"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>y coordinate (public)</td>            </tr>            <tr>             <td><span class="literal">"d"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>binary number</td>             <td>no</td>             <td>private key</td>            </tr>           </tbody>                   </table>        </li>        <li class="listitem">         <span class="simpara">          <span class="literal">"x25519"</span>、<span class="literal">"x448"</span>、<span class="literal">"ed25519"</span>、<span class="literal">"ed448"</span>          key 用于 Curve25519 和 Curve448 参数。         </span>         <table class="doctable informaltable">                     <thead>            <tr>             <th>选项</th>             <th>类型</th>             <th>格式</th>             <th>是否必需</th>             <th>说明</th>            </tr>           </thead>           <tbody class="tbody">             <tr>             <td><span class="literal">"priv_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>私钥</td>            </tr>            <tr>             <td><span class="literal">"pub_key"</span></td>             <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>             <td>PEM key</td>             <td>no</td>             <td>公钥</td>            </tr>           </tbody>                   </table>        </li>       </ul>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-new-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时此函数会返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 的实例；在失败时则会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-new-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       引入 <span class="literal">x25519</span>、<span class="literal">ed25519</span>、<span class="literal">x448</span> 和 <span class="literal">ed448</span>       字段，增加了对基于 Curve25519 和 Curve448 的密钥支持。      </td>     </tr>     <tr>      <td>8.3.0</td>      <td>       新增使用自定义 EC 参数生成 EC 秘钥的支持。特别是引入了 EC 选项：<span class="literal">p</span>、<span class="literal">a</span>、<span class="literal">b</span>、<span class="literal">seed</span>、<span class="literal">generator</span>、<span class="literal">g_x</span>、<span class="literal">g_y</span>、<span class="literal">cofactor</span> 和 <span class="literal">order</span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       成功时此函数会返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 的实例；在之前版本中，则会返回类似为       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> 参数中增加了 <span class="literal">curve_name</span> 键，以便基于椭圆曲线算法创建 EC 密钥。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkey-new-examples">  <h3 class="title">示例</h3>  <div class="example" id="function.openssl-pkey-new.example.public-key">   <p><strong>示例 #1 从私钥获取公钥</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$public_key_pem </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key</span><span style="color: #007700">)[</span><span style="color: #DD0000">'key'</span><span style="color: #007700">];<br>echo </span><span style="color: #9876AA">$public_key_pem</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">$public_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_public</span><span style="color: #007700">(</span><span style="color: #9876AA">$public_key_pem</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$public_key</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">// Output prior to PHP 8.0.0; note, the function returns a resource<br>-----BEGIN PUBLIC KEY-----<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwknBFEherZe74BiRjTFA<br>hqwZ1SK7brwq7C/afnLXKhRR7jnrpfM0ypC46q8xz5UZswenZakJ7kd5fls+r4Bv<br>3P8XsKYLTh2m1GiWQhV1g77cNIN4qNWh70PiDO3fB2446o1LBgToQYuRZS5YQRfJ<br>rVD0ysgtVcCU9tjaey28HlgApOpYFTaaKPj2MBmEYpMC+kG2HhL12GfpHUi2eiXI<br>dXT2WskWHWvUrmQ7fJIfI92JlDokV62DH/q1oiedLs9OPNb0rL1aAmYdzaVN6XNH<br>x/o4Lh125v2vAPV9E3fZCDc/HDEUaahpjanMiCQEgEDp5Hr+CRkvERT5/ydN+p08<br>5wIDAQAB<br>-----END PUBLIC KEY-----<br><br>resource(6) of type (OpenSSL key)<br><br>// Output as of PHP 8.0.0; note, the function returns an object<br>-----BEGIN PUBLIC KEY-----<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwknBFEherZe74BiRjTFA<br>hqwZ1SK7brwq7C/afnLXKhRR7jnrpfM0ypC46q8xz5UZswenZakJ7kd5fls+r4Bv<br>3P8XsKYLTh2m1GiWQhV1g77cNIN4qNWh70PiDO3fB2446o1LBgToQYuRZS5YQRfJ<br>rVD0ysgtVcCU9tjaey28HlgApOpYFTaaKPj2MBmEYpMC+kG2HhL12GfpHUi2eiXI<br>dXT2WskWHWvUrmQ7fJIfI92JlDokV62DH/q1oiedLs9OPNb0rL1aAmYdzaVN6XNH<br>x/o4Lh125v2vAPV9E3fZCDc/HDEUaahpjanMiCQEgEDp5Hr+CRkvERT5/ydN+p08<br>5wIDAQAB<br>-----END PUBLIC KEY-----<br><br>object(OpenSSLAsymmetricKey)#2 (0) {<br>}</blockquote></div>   </div>  </div> </div></div>
*
 * Generates a new private key
 * @link https://php.net/manual/zh/function.openssl-pkey-new.php
 * @param array|null $options [optional] <p>
 * You can finetune the key generation (such as specifying the number of
 * bits) using <i>configargs</i>. See
 * <b>openssl_csr_new</b> for more information about
 * <i>configargs</i>.
 * </p>
 * @return OpenSSLAsymmetricKey|resource|false a resource identifier for the pkey on success, or false on
 * error.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_pkey_new(?array $options) {}

/**
* <div id="function.openssl-pkey-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_export</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_export</span> — <span class="dc-title">将一个密钥的可输出表示转换为字符串</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkey-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_export</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$output</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$passphrase</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_export()</strong></span> 将   <span class="parameter" style="color:#3A95FF">key</span> 当作 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码字符串导出并且将之保存到<span class="parameter" style="color:#3A95FF">output</span> (通过引用传递的)中。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 必须安装有效的 <var class="filename">openssl.cnf</var> 以保证此函数正确运行。参考有关<a href="https://php.net/manual/zh/openssl.installation.php" class="link">安装</a>的说明以获得更多信息。</span></p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-export-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       密钥可以通过 <span class="parameter" style="color:#3A95FF">passphrase</span> 来保护。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">      <span class="parameter" style="color:#3A95FF">options</span> 可以用来调整导出流程，通过指定或者覆盖openssl配置文件选项。参见 <span class="function">{@link openssl_csr_new()}</span> 获取更多关于 <span class="parameter" style="color:#3A95FF">options</span> 的信息。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-export-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型       <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Gets an exportable representation of a key into a string
 * @link https://php.net/manual/zh/function.openssl-pkey-export.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $key
 * @param string &$output
 * @param string|null $passphrase [optional] <p>
 * The key is optionally protected by <i>passphrase</i>.
 * </p>
 * @param array|null $options [optional] <p>
 * <i>configargs</i> can be used to fine-tune the export
 * process by specifying and/or overriding options for the openssl
 * configuration file. See <b>openssl_csr_new</b> for more
 * information about <i>configargs</i>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_pkey_export(
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $key,
    &$output,
    ?string $passphrase,
    ?array $options
): bool {}

/**
* <div id="function.openssl-pkey-export-to-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_export_to_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_export_to_file</span> — <span class="dc-title">将密钥导出到文件中</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkey-export-to-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_export_to_file</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$passphrase</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_export_to_file()</strong></span> 将 ascii 格式（<abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码）的   <span class="parameter" style="color:#3A95FF">key</span> 保存到名为 <span class="parameter" style="color:#3A95FF">output_filename</span> 文件中。    </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 必须安装有效的 <var class="filename">openssl.cnf</var> 以保证此函数正确运行。参考有关<a href="https://php.net/manual/zh/openssl.installation.php" class="link">安装</a>的说明以获得更多信息。</span></p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-export-to-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">       输出文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       密钥可以通过值为<span class="parameter" style="color:#3A95FF">passphrase</span>的密码来保护。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">options</span> 可以用来调整导出流程，通过指定或者覆盖openssl配置文件选项。参见 <span class="function">{@link openssl_csr_new()}</span> 获取更多关于 <span class="parameter" style="color:#3A95FF">options</span> 的信息。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-export-to-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-export-to-file-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Gets an exportable representation of a key into a file
 * @link https://php.net/manual/zh/function.openssl-pkey-export-to-file.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $key
 * @param string $output_filename <p>
 * Path to the output file.
 * </p>
 * @param string|null $passphrase [optional] <p>
 * The key can be optionally protected by a
 * <i>passphrase</i>.
 * </p>
 * @param array|null $options [optional] <p>
 * <i>configargs</i> can be used to fine-tune the export
 * process by specifying and/or overriding options for the openssl
 * configuration file. See <b>openssl_csr_new</b> for more
 * information about <i>configargs</i>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_pkey_export_to_file(
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $key,
    string $output_filename,
    ?string $passphrase,
    ?array $options
): bool {}

/**
* <div id="function.openssl-pkey-get-private" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_get_private</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_get_private</span> — <span class="dc-title">获取私钥</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkey-get-private-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_get_private</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$passphrase</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_get_private()</strong></span> 解析   <span class="parameter" style="color:#3A95FF">private_key</span> 供其他函数使用。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-get-private-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 可以是如下密钥之一：       </p><ol type="1">        <li class="listitem"><span class="simpara">如下格式的字符串         <var class="filename">file://path/to/file.pem</var>。该文件必须包含 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的证书或者私钥 (可能都包含了).         </span>        </li>        <li class="listitem"><span class="simpara">一个 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的私钥。</span></li>       </ol>           </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       如果指定的密钥已被加密了(受密码保护)，可选参数 <span class="parameter" style="color:#3A95FF">passphrase</span> 是必须要的。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-get-private-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-get-private-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       成功时，此函数现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例；之前返回类型       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 或       <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型       <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">passphrase</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Get a private key
 * @link https://php.net/manual/zh/function.openssl-pkey-get-private.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * <p>
 * <b><em>key</em></b> can be one of the following:
 * <ol>
 * <li>a string having the format
 * <var>file://path/to/file.pem</var>. The named file must
 * contain a PEM encoded certificate/private key (it may contain both).
 * </li>
 * <li>A PEM formatted private key.</li>
 * </ol></p>
 * @param string|null $passphrase <p>
 * The optional parameter <b><em>passphrase</em></b> must be used
 * if the specified key is encrypted (protected by a passphrase).
 * </p>
 * @return OpenSSLAsymmetricKey|resource|false Returns a positive key resource identifier on success, or <b>FALSE</b> on error.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_pkey_get_private(
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    ?string $passphrase = null
) {}

/**
* <div id="function.openssl-pkey-get-public" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_get_public</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_get_public</span> — <span class="dc-title">从证书中解析公钥，以供使用</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkey-get-public-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_get_public</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_get_public()</strong></span> 从 <span class="parameter" style="color:#3A95FF">public_key</span> 中解析公钥，供其他函数使用。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-get-public-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">public_key</span> 可以是以下之一：       </p><ol type="1">        <li class="listitem"><span class="simpara"><span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例</span></li>        <li class="listitem"><span class="simpara"><var class="filename">file://path/to/file.pem</var> 格式的字符串。文件名必须包含一个 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的证书或者密钥(也许二者都有).         </span>        </li>        <li class="listitem"><span class="simpara">一个 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥。</span></li>       </ol>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-get-public-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例，错误时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-get-public-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       成功时，此函数现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例；之前返回类型       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型       <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Extract public key from certificate and prepare it for use
 * @link https://php.net/manual/zh/function.openssl-pkey-get-public.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key <p><em><b>certificate</b></em> can be one of the following:
 * <ol>
 * <li>an X.509 certificate resource</li>
 * <li>a string having the format
 * <var>file://path/to/file.pem</var>. The named file must
 * contain a PEM encoded certificate/public key (it may contain both).
 * </li>
 * <li>A PEM formatted public key.</li>
 * </ol></p>
 * @return OpenSSLAsymmetricKey|resource|false a positive key resource identifier on success, or false on error.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_pkey_get_public(#[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key) {}

/**
* <div id="function.openssl-pkey-get-details" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_get_details</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_get_details</span> — <span class="dc-title">返回包含密钥详情的数组</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-pkey-get-details-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_get_details</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   该函数返回密钥详情（位长度，密钥，类型）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-get-details-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      持有密钥的资源。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-get-details-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回包含密钥详情的数组，失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   返回的数组中包含了如下索引： <span class="literal">bits</span> (位数)、   <span class="literal">key</span>（表示公钥的字符串）和   <span class="literal">type</span>（如下密钥类型之一：   <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-rsa">OPENSSL_KEYTYPE_RSA</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dsa">OPENSSL_KEYTYPE_DSA</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dh">OPENSSL_KEYTYPE_DH</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ec">OPENSSL_KEYTYPE_EC</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-x25519">OPENSSL_KEYTYPE_X25519</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ed25519">OPENSSL_KEYTYPE_ED25519</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-x448">OPENSSL_KEYTYPE_X448</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ed448">OPENSSL_KEYTYPE_ED448</a></span></strong>   或者是 <span class="literal">-1</span>，代表未知类型）。  </p>  <p class="para">   根据使用的密钥类型，可能会返回不同的额外信息。请注意，有些元素可能并不总是可用的。  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-rsa">OPENSSL_KEYTYPE_RSA</a></span></strong>，一个额外的键名为 <span class="literal">"rsa"</span> 的数组，包含了以下密钥数据：    </span>     <table class="doctable informaltable">             <thead>        <tr>         <th>Key</th>         <th>说明</th>        </tr>       </thead>       <tbody class="tbody">        <tr>         <td><span class="literal">"n"</span></td>         <td>modulus</td>        </tr>        <tr>         <td><span class="literal">"e"</span></td>         <td>public exponent</td>        </tr>        <tr>         <td><span class="literal">"d"</span></td>         <td>private exponent</td>        </tr>        <tr>         <td><span class="literal">"p"</span></td>         <td>prime 1</td>        </tr>        <tr>         <td><span class="literal">"q"</span></td>         <td>prime 2</td>        </tr>        <tr>         <td><span class="literal">"dmp1"</span></td>         <td>exponent1, d mod (p-1)</td>        </tr>        <tr>         <td><span class="literal">"dmq1"</span></td>         <td>exponent2, d mod (q-1)</td>        </tr>        <tr>         <td><span class="literal">"iqmp"</span></td>         <td>coefficient, (inverse of q) mod p</td>        </tr>       </tbody>           </table>   </li>   <li class="listitem">    <span class="simpara">     <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dsa">OPENSSL_KEYTYPE_DSA</a></span></strong>, 一个额外的键为 <span class="literal">"dsa"</span> 的数组，      包含如下的密钥数据。    </span>     <table class="doctable informaltable">             <thead>        <tr>         <th>Key</th>         <th>说明</th>        </tr>       </thead>       <tbody class="tbody">        <tr>         <td><span class="literal">"p"</span></td>         <td>prime number (public)</td>        </tr>        <tr>         <td><span class="literal">"q"</span></td>         <td>160-bit subprime, q | p-1 (public)</td>        </tr>        <tr>         <td><span class="literal">"g"</span></td>         <td>generator of subgroup (public)</td>        </tr>        <tr>         <td><span class="literal">"priv_key"</span></td>         <td>private key x</td>        </tr>        <tr>         <td><span class="literal">"pub_key"</span></td>         <td>public key y = g^x</td>        </tr>       </tbody>           </table>   </li>   <li class="listitem">    <span class="simpara">     <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dh">OPENSSL_KEYTYPE_DH</a></span></strong>, 一个额外的键为 <span class="literal">"dh"</span> 的数组，包含如下的密钥数据。    </span>     <table class="doctable informaltable">             <thead>        <tr>         <th>Key</th>         <th>说明</th>        </tr>       </thead>       <tbody class="tbody">        <tr>         <td><span class="literal">"p"</span></td>         <td>prime number (shared)</td>        </tr>        <tr>         <td><span class="literal">"g"</span></td>         <td>generator of Z_p (shared)</td>        </tr>        <tr>         <td><span class="literal">"priv_key"</span></td>         <td>private DH value x</td>        </tr>        <tr>         <td><span class="literal">"pub_key"</span></td>         <td>public DH value g^x</td>        </tr>       </tbody>           </table>   </li>   <li class="listitem">    <span class="simpara">     <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-x25519">OPENSSL_KEYTYPE_X25519</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ed25519">OPENSSL_KEYTYPE_ED25519</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-x448">OPENSSL_KEYTYPE_X448</a></span></strong>,     或 <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ed448">OPENSSL_KEYTYPE_ED448</a></span></strong>，分别返回名为 <span class="literal">"x25519"</span>、<span class="literal">"ed25519"</span>、<span class="literal">"x448"</span>     或 <span class="literal">"ed448"</span> 的附加数组 key，其中包含密钥数据。    </span>     <table class="doctable informaltable">             <thead>        <tr>         <th>Key</th>         <th>说明</th>        </tr>       </thead>       <tbody class="tbody">        <tr>         <td><span class="literal">"priv_key"</span></td>         <td>私钥</td>        </tr>        <tr>         <td><span class="literal">"pub_key"</span></td>         <td>公钥</td>        </tr>       </tbody>           </table>   </li>  </ul> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkey-get-details-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       新增对基于 Curve25519 和 Curve448 的密钥支持。特别是引入了       <span class="literal">x25519</span>、<span class="literal">ed25519</span>、<span class="literal">x448</span>       和 <span class="literal">ed448</span> 字段。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在参数 <span class="parameter" style="color:#3A95FF">key</span> 接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>；       在此之前，接受 <span class="literal">OpenSSL key</span> 类型的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Returns an array with the key details
 * @link https://php.net/manual/zh/function.openssl-pkey-get-details.php
 * @param OpenSSLAsymmetricKey|resource $key <p>
 * Resource holding the key.
 * </p>
 * @return array|false an array with the key details in success or false in failure.
 * Returned array has indexes bits (number of bits),
 * key (string representation of the public key) and
 * type (type of the key which is one of
 * <b>OPENSSL_KEYTYPE_RSA</b>,
 * <b>OPENSSL_KEYTYPE_DSA</b>,
 * <b>OPENSSL_KEYTYPE_DH</b>,
 * <b>OPENSSL_KEYTYPE_EC</b> or -1 meaning unknown).
 * </p>
 * <p>
 * Depending on the key type used, additional details may be returned. Note that
 * some elements may not always be available.
 
#[ArrayShape(["bits" => "int", "key" => "string", "rsa" => "array", "dsa" => "array", "dh" => "array", "ec" => "array", "type" => "int"])]
*/
function openssl_pkey_get_details(#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey"], default: "resource")] $key): array|false {}

/**
* <div id="function.openssl-free-key" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_free_key</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_free_key</span> — <span class="dc-title">释放密钥资源</span></p> </div> <div id="function.openssl-free-key-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 8.0.0 起被<em>废弃</em>。强烈建议不要依赖本函数。</p></div> </div>  <div class="refsect1 description" id="refsect1-function.openssl-free-key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="attribute"><a href="https://php.net/manual/zh/class.deprecated.php">#[\Deprecated]</a> </span><br>   <span class="methodname" style="color:#CC7832"><strong>openssl_free_key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_free_key()</strong></span> 从内存中释放和指定的   <span class="parameter" style="color:#3A95FF">key</span> 相关联的密钥。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-free-key-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-free-key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-free-key-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现已弃用，因为不再有效。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>；之前接受类型       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Free key resource
 * @link https://php.net/manual/zh/function.openssl-free-key.php
 * @param OpenSSLAsymmetricKey|resource $key
 * @return void
 
#[Deprecated(since: '8.0')]
*/
function openssl_free_key(#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey"], default: "resource")] $key): void {}

/**
* <div id="function.openssl-get-privatekey" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_privatekey</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_privatekey</span> — <span class="dc-title">别名 <span class="function">{@link openssl_pkey_get_private()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-privatekey-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link openssl_pkey_get_private()}</span>.  </p> </div></div>
*
 * Alias of <b>openssl_pkey_get_private</b>
 * @link https://php.net/manual/zh/function.openssl-get-privatekey.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * <p>
 * <b><em>key</em></b> can be one of the following:
 * <ol>
 * <li>a string having the format
 * <var>file://path/to/file.pem</var>. The named file must
 * contain a PEM encoded certificate/private key (it may contain both).
 * </li>
 * <li>A PEM formatted private key.</li>
 * </ol></p>
 * @param string|null $passphrase [optional] <p>
 * The optional parameter <b><em>passphrase</em></b> must be used
 * if the specified key is encrypted (protected by a passphrase).
 * </p>
 * @return OpenSSLAsymmetricKey|resource|false Returns a positive key resource identifier on success, or <b>FALSE</b> on error.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_get_privatekey(
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    ?string $passphrase
) {}

/**
* <div id="function.openssl-get-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_publickey</h1>   <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_publickey</span> — <span class="dc-title">别名 <span class="function">{@link openssl_pkey_get_public()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-publickey-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link openssl_pkey_get_public()}</span>.  </p> </div></div>
*
 * Alias of <b>openssl_pkey_get_public</b>
 * @link https://php.net/manual/zh/function.openssl-get-publickey.php
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key <p>
 * <em><b>certificate</b></em> can be one of the following:
 * <ol>
 * <li>an X.509 certificate resource</li>
 * <li>a string having the format
 * <var>file://path/to/file.pem</var>. The named file must
 * contain a PEM encoded certificate/public key (it may contain both).
 * </li>
 * <li>A PEM formatted public key.</li>
 * </ol></p>
 * @return OpenSSLAsymmetricKey|false a positive key resource identifier on success, or FALSE on error.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_get_publickey(#[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key) {}

/**
* <div id="function.openssl-spki-new" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_spki_new</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_spki_new</span> — <span class="dc-title">生成新的签名公钥和 challenge</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-spki-new-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_spki_new</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$challenge</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$digest_algo</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.signature-algos.php#constant.openssl-algo-md5">OPENSSL_ALGO_MD5</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   使用指定散列算法生成新的签名公钥和 challenge。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-spki-new-parameters">  <h3 class="title">参数</h3>  <dl>        <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 应该被设置为由 <span class="function">{@link openssl_pkey_new()}</span> 函数预先生成（或者以其他方式从       openssl_pkey 函数家族集中获得）的私钥。该密钥的相应公共部分将用于签署 <abbr title="Certificate Signing Request">CSR</abbr>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">challenge</span></dt>     <dd>      <p class="para">       与 SPKAC 有关的 challenge。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">digest_algo</span></dt>     <dd>      <p class="para">       摘要算法。参见 openssl_get_md_method()。      </p>     </dd>      </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-spki-new-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回签名的公钥和 challenge，失败返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.openssl-spki-new-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果传递给 <span class="parameter" style="color:#3A95FF">digest_algo</span> 的参数是未知的签名算法，将会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-spki-new-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       实例；之前接受类型 <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-spki-new-examples">  <h3 class="title">示例</h3>  <div class="example" id="openssl_spki_new.example.basic">   <p><strong>示例 #1 <span class="function"><strong>openssl_spki_new()</strong></span> 示例</strong></p>   <div class="example-contents"><p>     使用默认的摘要算法（MD5）生成新的 SPKAC   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$pkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(</span><span style="color: #DD0000">'secret password'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$spkac </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkey</span><span style="color: #007700">, </span><span style="color: #DD0000">'testing'</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">$spkac </span><span style="color: #007700">!== </span><span style="color: #9876AA">NULL</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"SPKAC generation failed"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">MIICRzCCAS8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDM3V3sS4o4<br>mB9dczziRnjGAmSp+JwPrHoYMAFGvDNmZGyiWfU586X4BKs++BAj7e/FsAfno0Hd<br>hN9FwpCNFSox30L03nQvLYJE7f/WqigwBeMRT7Op/xvFks4sT70xP2HRYv4KqP9a<br>WRcKU6cFH8VxhFhqM2txEIxZKdFLaL28yT7bEDmcglf4JLDdgNMb9rET1dkgtKE6<br>dOaJHPGjf1uvnOH4YwkQr7n4sLUR3Kdbh0ZJAFuQVDZulo+LLzxBBkqJJcB6FhF+<br>oXCdHTKZnqAhpWDz+NXYytAmevab6IYm5TWPWsJUv1YKJA5lg2mXbbloIZlN9Mgc<br>i9fi03bdw+crAgMBAAEWB3Rlc3RpbmcwDQYJKoZIhvcNAQEEBQADggEBALyUvP/o<br>pPSoWBlorFyZ2RnGwKf9qMpE0q2IJP7G3oDR4LyK/m933DUiZ+YnqThrH/CWb4Ek<br>y5I3OCyl3S4wCuU1ibZZwDVwYShr5ELp0J9PEf7qMQZOhNsizoC7k+Czb2xB6hYW<br>sKfsfTKm3cXBtH3fdgc/Z1Z7VSWnAzYo38snqm72NTf5yFRnrQdphNNXi+kn1zHA<br>lxXRyFDXHOcYsOnwAWfyXFA4QDHQ0ezz0UoCY8gJXovcZb4GRYqOLUAsF2HcNboy<br>29WN8VqE29sL9QxVZFlwMcqyoLcNnyw38GvNvAGqSvzzbnEFP2MAQXJVe0H0hdp/<br>MML5G2iNVgNozAo=</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-spki-new-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_spki_verify()} - 验证签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_export_challenge()} - 导出与签名公钥和 challenge 相关的 challenge</span></li>    <li><span class="function">{@link openssl_spki_export()} - 通过签名公钥和 challenge 导出一个可用的 PEM 格式的公钥</span></li>    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Generate a new signed public key and challenge
 * @link https://php.net/manual/zh/function.openssl-spki-new.php
 * @param OpenSSLAsymmetricKey|resource $private_key <p>
 * <b>privkey</b> should be set to a private key that was
 * previously generated by {@link https://php.net/en/manual/function.openssl-pkey-new.php openssl_pkey_new()} (or
 * otherwise obtained from the other openssl_pkey family of functions).
 * The corresponding public portion of the key will be used to sign the
 * CSR.
 * </p>
 * @param string $challenge <p>The challenge associated to associate with the SPKAC</p>
 * @param int $digest_algo <p>The digest algorithm. See openssl_get_md_method().</p>
 * @return string|false Returns a signed public key and challenge string or NULL on failure.
 * @since 5.6
 
*/
function openssl_spki_new(#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey"], default: "resource")] $private_key, string $challenge, int $digest_algo = 2): string|false {}

/**
* <div id="function.openssl-spki-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_spki_verify</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_spki_verify</span> — <span class="dc-title">验证签名公钥和 challenge</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-spki-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_spki_verify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$spki</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    验证提供的签名公钥和 challenge。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-spki-verify-parameters">  <h3 class="title">参数</h3>  <dl>         <dt><span class="parameter" style="color:#3A95FF">spki</span></dt>     <dd>      <p class="para">        期望有效的签名公钥和 challenge。      </p>     </dd>      </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-spki-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.openssl-spki-verify-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果传递给 <span class="parameter" style="color:#3A95FF">digest_algo</span> 的参数不是可用的参数，将会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-spki-verify-examples">  <h3 class="title">示例</h3>  <div class="example" id="openssl_spki_verify.example.basic">   <p><strong>示例 #1 <span class="function"><strong>openssl_spki_verify()</strong></span> 示例</strong></p>   <div class="example-contents"><p>      验证现有签名公钥和 challenge   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$pkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(</span><span style="color: #DD0000">'secret password'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$spkac </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkey</span><span style="color: #007700">, </span><span style="color: #DD0000">'challenge string'</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">openssl_spki_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">))) {<br>    echo </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"SPKAC validation failed"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="openssl_spki_verify.example.keygen">   <p><strong>示例 #2 <span class="function"><strong>openssl_spki_verify()</strong></span> 来自 &lt;keygen&gt; 的示例</strong></p>   <div class="example-contents"><p>      通过 &lt;keygen&gt; 元素验证现有签名公钥和 challenge   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_spki_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'spkac'</span><span style="color: #007700">]))) {<br>    echo </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"SPKAC validation failed"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;<br></span>&lt;keygen name="spkac" challenge="challenge string" keytype="RSA"&gt;</span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-spki-verify-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_spki_new()} - 生成新的签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_export_challenge()} - 导出与签名公钥和 challenge 相关的 challenge</span></li>    <li><span class="function">{@link openssl_spki_export()} - 通过签名公钥和 challenge 导出一个可用的 PEM 格式的公钥</span></li>    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Verifies a signed public key and challenge
 * @link https://php.net/manual/zh/function.openssl-spki-verify.php
 * @param string $spki <p>Expects a valid signed public key and challenge</p>
 * @return bool Returns a boolean on success or failure.
 * @since 5.6
 
*/
function openssl_spki_verify(string $spki): bool {}

/**
* <div id="function.openssl-spki-export-challenge" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_spki_export_challenge</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_spki_export_challenge</span> — <span class="dc-title">导出与签名公钥和 challenge 相关的 challenge</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-spki-export-challenge-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_spki_export_challenge</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$spki</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">    从编码的签名公钥和 challenge 中导出 challenge  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-spki-export-challenge-parameters">  <h3 class="title">参数</h3>  <dl>         <dt><span class="parameter" style="color:#3A95FF">spki</span></dt>     <dd>      <p class="para">        需要有效的签名公钥和 challenge      </p>     </dd>      </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-spki-export-challenge-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回相关 challenge 字符串，失败返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.openssl-spki-export-challenge-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">spki</span> 参数传递的是不可用的参数，则抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-spki-export-challenge-examples">  <h3 class="title">示例</h3>  <div class="example" id="openssl_spki_export_challenge.example.basic">   <p><strong>示例 #1 <span class="function"><strong>openssl_spki_export_challenge()</strong></span> 示例</strong></p>   <div class="example-contents"><p>      成功，提取相关联的 challenge 字符串，失败则返回 NULL。   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$pkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(</span><span style="color: #DD0000">'secret password'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$spkac </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkey</span><span style="color: #007700">, </span><span style="color: #DD0000">'challenge string'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$challenge </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_export_challenge</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="openssl_spki_export_challenge.example.keygen">   <p><strong>示例 #2 <span class="function"><strong>openssl_spki_export_challenge()</strong></span> 来自 &lt;keygen&gt; 的示例</strong></p>   <div class="example-contents"><p>      从 &lt;keygen&gt; 元素中解压相关联的 challenge 字符串。    </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$challenge </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_export_challenge</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'spkac'</span><span style="color: #007700">]));<br></span><span style="color: #9876AA">?&gt;<br></span>&lt;keygen name="spkac" challenge="challenge string" keytype="RSA"&gt;</span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-spki-export-challenge-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_spki_new()} - 生成新的签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_verify()} - 验证签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_export()} - 通过签名公钥和 challenge 导出一个可用的 PEM 格式的公钥</span></li>    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Exports the challenge associated with a signed public key and challenge
 * @link https://php.net/manual/zh/function.openssl-spki-export-challenge.php
 * @param string $spki <p>Expects a valid signed public key and challenge</p>
 * @return string|false Returns the associated challenge string or NULL on failure.
 * @since 5.6
 
*/
function openssl_spki_export_challenge(string $spki): string|false {}

/**
* <div id="function.openssl-spki-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_spki_export</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_spki_export</span> — <span class="dc-title">通过签名公钥和 challenge 导出一个可用的 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-spki-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_spki_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$spki</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">    从编码的签名公钥和 challenge 导出 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-spki-export-parameters">  <h3 class="title">参数</h3>  <dl>         <dt><span class="parameter" style="color:#3A95FF">spki</span></dt>     <dd>      <p class="para">        期望一个有效的签名公钥和 challenge 字符串。      </p>     </dd>      </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-spki-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回关联的 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥，失败则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.openssl-spki-export-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果传递给 <span class="parameter" style="color:#3A95FF">spki</span> 参数是不可用的参数，则会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的警告。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-spki-export-examples">  <h3 class="title">示例</h3>  <div class="example" id="openssl_spki_export.example.basic">   <p><strong>示例 #1 <span class="function"><strong>openssl_spki_export()</strong></span> 示例</strong></p>   <div class="example-contents"><p>      成功，返回关联的 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥，失败则返回 NULL.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$pkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(</span><span style="color: #DD0000">'secret password'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$spkac </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkey</span><span style="color: #007700">, </span><span style="color: #DD0000">'challenge string'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$pubKey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_export</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">));<br><br>if (</span><span style="color: #9876AA">$pubKey</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$pubKey</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="openssl_spki_export.example.keygen">   <p><strong>示例 #2 <span class="function"><strong>openssl_spki_export()</strong></span> 来自 &lt;keygen&gt; 的示例</strong></p>   <div class="example-contents"><p>      通过 &lt;keygen&gt; 元素导出关联的 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的公钥：   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$spkac </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_spki_export</span><span style="color: #007700">(</span><span style="color: #9876AA">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/SPKAC=/'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">'spkac'</span><span style="color: #007700">]));<br>if (</span><span style="color: #9876AA">$spkac </span><span style="color: #007700">!= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$spkac</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"Extraction of pub key failed"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;<br></span>&lt;keygen name="spkac" challenge="challenge string" keytype="RSA"&gt;</span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-spki-export-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_spki_new()} - 生成新的签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_verify()} - 验证签名公钥和 challenge</span></li>    <li><span class="function">{@link openssl_spki_export_challenge()} - 导出与签名公钥和 challenge 相关的 challenge</span></li>    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Exports a valid PEM formatted public key signed public key and challenge
 * @link https://php.net/manual/zh/function.openssl-spki-export.php
 * @param string $spki <p>Expects a valid signed public key and challenge</p>
 * @return string|false Returns the associated PEM formatted public key or NULL on failure.
 * @since 5.6
 
*/
function openssl_spki_export(string $spki): string|false {}
/**
* <div id="function.openssl-x509-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_read</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_read</span> — <span class="dc-title">解析 x.509 证书并返回对象</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_read()</strong></span> 解析<span class="parameter" style="color:#3A95FF">certificate</span> 提供的证书，并返回它的 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 对象。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-read-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">        X509 证书。参见 <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">Key/Certificate parameters</a> 获取可用的值。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-read-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现在成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前返回类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Parse an X.509 certificate and return a resource identifier for
 * it
 * @link https://php.net/manual/zh/function.openssl-x509-read.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @return OpenSSLCertificate|resource|false a resource identifier on success or false on failure.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|false"], default: "resource|false")]
*/
function openssl_x509_read(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate) {}

/**
* <div id="function.openssl-x509-fingerprint" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_fingerprint</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_fingerprint</span> — <span class="dc-title">计算一个给定的 x.509 证书的指纹或摘要</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-fingerprint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_fingerprint</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$digest_algo</span><span class="initializer"> = "sha1"</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_fingerprint()</strong></span> 返回 <span class="parameter" style="color:#3A95FF">certificate</span> 的字符串类型的摘要。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-fingerprint-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">digest_algo</span></dt>     <dd>      <p class="para">       使用的摘要方法或散列算法，比如，"sha256"、<span class="function">{@link openssl_get_md_methods()}</span> 摘要算法之一。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">      设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，输出原始二进制数据。设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 时，输出小写的 16 进制字符串。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-fingerprint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    将包含计算的证书指纹的字符串返回为小写 16 进制格式，除非将 <span class="parameter" style="color:#3A95FF">binary</span> 设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，在这种情况下会返回消息摘要的原始二进制表示形式。  </p>  <p class="para">    失败则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-fingerprint-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * @param string $certificate
 * @param string $digest_algo [optional] hash method
 * @param bool $binary [optional]
 * @return string|false <b>FALSE</b> on failure
 * @since 5.6
 
*/
function openssl_x509_fingerprint(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate, string $digest_algo = 'sha1', bool $binary = false): string|false {}
/**
* <div id="function.openssl-x509-free" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_free</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_free</span> — <span class="dc-title">释放证书资源</span></p> </div> <div id="function.openssl-x509-free-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 8.0.0 起被<em>废弃</em>。强烈建议不要依赖本函数。</p></div> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-free-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="attribute"><a href="https://php.net/manual/zh/class.deprecated.php">#[\Deprecated]</a> </span><br>   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_free</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:  </p><p class="para">  此函数无效。在 PHP 8.0.0 之前，用于关闭资源。 </p></blockquote>  <p class="para">   <span class="function"><strong>openssl_x509_free()</strong></span> 从内存中释放和指定 <span class="parameter" style="color:#3A95FF">certificate</span> 资源相关联的证书。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-free-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-free-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-free-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现已弃用，因为不再有效。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Free certificate resource
 * @link https://php.net/manual/zh/function.openssl-x509-free.php
 * @param OpenSSLCertificate|resource|string $certificate
 * @return void
 
#[Deprecated(since: '8.0')]
*/
function openssl_x509_free(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate"], default: "resource|string")] $certificate): void {}

/**
 * Parse an X509 certificate and return the information as an array
 * @link https://php.net/manual/en/function.openssl-x509-parse.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param bool $short_names [optional] <p>
 * <i>shortnames</i> controls how the data is indexed in the
 * array - if <i>shortnames</i> is true (the default) then
 * fields will be indexed with the short name form, otherwise, the long name
 * form will be used - e.g.: CN is the shortname form of commonName.
 * </p>
 * @return array|false The structure of the returned data is (deliberately) not
 * yet documented, as it is still subject to change.
 */
#[ArrayShape([
    'name' => 'string',
    'subject' => 'string',
    'hash' => 'string',
    'issuer' => 'string',
    'version' => 'int',
    'serialNumber' => 'string',
    'serialNumberHex' => 'string',
    'validFrom' => 'string',
    'validTo' => 'string',
    'validFrom_time_t' => 'int',
    'validTo_time_t' => 'int',
    'alias' => 'string',
    'signatureTypeSN' => 'string',
    'signatureTypeLN' => 'string',
    'signatureTypeNID' => 'int',
    'purposes' => 'array',
    'extensions' => 'array'
])]
/**
* <div id="function.openssl-x509-parse" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_parse</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_parse</span> — <span class="dc-title">解析 X509 证书并作为一个数组返回信息</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-parse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$short_names</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_parse()</strong></span> 返回提供的 <span class="parameter" style="color:#3A95FF">certificate</span> 证书的信息，包括主题名称、发行方名称、目的、有效日期等字段。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-parse-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">        X509 证书。有关有效值列表，参阅<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥/证书</a>参数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">short_names</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">short_names</span> 控制数据在数组中的索引 - 如果 <span class="parameter" style="color:#3A95FF">short_names</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，字段将以短名称的形式被索引，否则将会使用长名称的形式 - 比如 CN 就是 commonName 的短名称格式。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-parse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <em>返回的数据的结构是（故意的）还没有文档化，因为它仍然会发生变化。</em>  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-parse-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       OpenSSL 所有版本均不再允许解析不含秒数的 UTCTime 格式证书。自 OpenSSL 3.3 版本起，该格式已被明确禁止。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*/
function openssl_x509_parse(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] bool $shortname,
    #[PhpStormStubsElementAvailable(from: '7.1')] bool $short_names = true
): array|false {}

/**
* <div id="function.openssl-x509-checkpurpose" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_checkpurpose</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_checkpurpose</span> — <span class="dc-title">验证是否可以为特定目的使用证书</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-checkpurpose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_checkpurpose</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$purpose</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$ca_info</span><span class="initializer"> = []</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$untrusted_certificates_file</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_checkpurpose()</strong></span> 检查证书以查看它是否可用于指定目的 <span class="parameter" style="color:#3A95FF">purpose</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-checkpurpose-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">       被检查的证书。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">purpose</span></dt>     <dd>      <p class="para">       </p><table class="doctable table">        <caption><strong><span class="function"><strong>openssl_x509_checkpurpose()</strong></span> 目的</strong></caption>                 <thead>          <tr>           <th>常量名</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>X509_PURPOSE_SSL_CLIENT</td>           <td>证书是否可以用于 SSL 连接的客户端?</td>          </tr>          <tr>           <td>X509_PURPOSE_SSL_SERVER</td>           <td>证书是否可以用于 SSL 连接的服务器端?</td>          </tr>          <tr>           <td>X509_PURPOSE_NS_SSL_SERVER</td>           <td>证书是否可以用于 Netscape SSL 服务器?</td>          </tr>          <tr>           <td>X509_PURPOSE_SMIME_SIGN</td>           <td>证书是否可以用来签名 S/MIME 邮件?</td>          </tr>          <tr>           <td>X509_PURPOSE_SMIME_ENCRYPT</td>           <td>正式是否可用用来加密 S/MIME 邮件?</td>          </tr>          <tr>           <td>X509_PURPOSE_CRL_SIGN</td>           <td>证书是否可以用来签名证书撤销列表（CRL）?</td>          </tr>          <tr>           <td>X509_PURPOSE_ANY</td>           <td>证书是否可以用于任何目的?</td>          </tr>         </tbody>               </table>       这些选项不是位字段——只能指定一个字段!           </dd>             <dt><span class="parameter" style="color:#3A95FF">ca_info</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">ca_info</span> 应该是一个受信任的 CA 文件/文件夹组成的数组，如 <a href="https://php.net/manual/zh/openssl.cert.verification.php" class="link">Certificate       Verification</a> 所描述的一样。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">untrusted_certificates_file</span></dt>     <dd>      <p class="para">       如果指定，这应该是 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码文件的名称，该文件持有证书，可以用来帮助验证证书,尽管从该文件中获得的证书不受信任。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-checkpurpose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果证书可以用于预期目的，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，如果不行，则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 错误便会返回 -1。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-checkpurpose-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">untrusted_certificates_file</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Verifies if a certificate can be used for a particular purpose
 * @link https://php.net/manual/zh/function.openssl-x509-checkpurpose.php
 * @param OpenSSLCertificate|string|resource $certificate <p>
 * The examined certificate.
 * </p>
 * @param int $purpose <p>
 * <table>
 * <b>openssl_x509_checkpurpose</b> purposes
 * <tr valign="top">
 * <td>Constant</td>
 * <td>Description</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_SSL_CLIENT</td>
 * <td>Can the certificate be used for the client side of an SSL
 * connection?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_SSL_SERVER</td>
 * <td>Can the certificate be used for the server side of an SSL
 * connection?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_NS_SSL_SERVER</td>
 * <td>Can the cert be used for Netscape SSL server?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_SMIME_SIGN</td>
 * <td>Can the cert be used to sign S/MIME email?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_SMIME_ENCRYPT</td>
 * <td>Can the cert be used to encrypt S/MIME email?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_CRL_SIGN</td>
 * <td>Can the cert be used to sign a certificate revocation list
 * (CRL)?</td>
 * </tr>
 * <tr valign="top">
 * <td>X509_PURPOSE_ANY</td>
 * <td>Can the cert be used for Any/All purposes?</td>
 * </tr>
 * </table>
 * These options are not bitfields - you may specify one only!
 * </p>
 * @param array $ca_info <p>
 * <i>cainfo</i> should be an array of trusted CA files/dirs
 * as described in Certificate
 * Verification.
 * </p>
 * @param string|null $untrusted_certificates_file [optional] <p>
 * If specified, this should be the name of a PEM encoded file holding
 * certificates that can be used to help verify the certificate, although
 * no trust is placed in the certificates that come from that file.
 * </p>
 * @return int|bool true if the certificate can be used for the intended purpose,
 * false if it cannot, or -1 on error.
 
*/
function openssl_x509_checkpurpose(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    int $purpose,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] array $ca_info,
    #[PhpStormStubsElementAvailable(from: '7.1')] array $ca_info = [],
    ?string $untrusted_certificates_file
): int|bool {}

/**
* <div id="function.openssl-x509-check-private-key" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_check_private_key</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_check_private_key</span> — <span class="dc-title">检查私钥是否对应于证书</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-check-private-key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_check_private_key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   检查指定的私钥 <span class="parameter" style="color:#3A95FF">private_key</span> 是否和证书 <span class="parameter" style="color:#3A95FF">certificate</span> 对应。  </p>  <div class="warning"><strong class="warning">警告</strong>    <p class="para">     这个函数不会检查密钥 <span class="parameter" style="color:#3A95FF">private_key</span> 是否真的是私钥。     它只是比较了和密钥匹配的公共材料 (比如，RSA 密钥的指数和模量) 和/或密钥参数(比如，EC 密钥的参数)。    </p>    <p class="para">     这也意味着，比如，提供给 <span class="parameter" style="color:#3A95FF">private_key</span> 赋一个公钥值，该函数可能返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。    </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-check-private-key-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">       证书。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       私钥。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-check-private-key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  如果指定的私钥 <span class="parameter" style="color:#3A95FF">private_key</span> 和证书 <span class="parameter" style="color:#3A95FF">certificate</span> 对应，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-check-private-key-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span> 或       <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Checks if a private key corresponds to a certificate
 * @link https://php.net/manual/zh/function.openssl-x509-check-private-key.php
 * @param OpenSSLCertificate|string|resource $certificate <p>
 * The certificate.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key <p>
 * The private key.
 * </p>
 * @return bool true if <i>key</i> is the private key that
 * corresponds to <i>cert</i>, or false otherwise.
 
*/
function openssl_x509_check_private_key(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key
): bool {}

/**
* <div id="function.openssl-x509-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_export</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_export</span> — <span class="dc-title">以字符串格式导出证书</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$output</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$no_text</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_export()</strong></span> 将 <span class="parameter" style="color:#3A95FF">certificate</span> 以 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的格式导出到名为 <span class="parameter" style="color:#3A95FF">output</span> 的字符串类型的变量中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-export-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">output</span></dt>     <dd>      <p class="para">       成功，将会存储 <abbr title="Privacy-Enhanced Mail">PEM</abbr>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">no_text</span></dt>     <dd>      <p class="para">可选参数 <span class="parameter" style="color:#3A95FF">notext</span> 影响输出的冗余度。如果设为<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，输出内容将包含附加的人类可读信息。<span class="parameter" style="color:#3A95FF">notext</span> 的缺省值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-export-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Exports a certificate as a string
 * @link https://php.net/manual/zh/function.openssl-x509-export.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param string &$output <p>
 * On success, this will hold the PEM.
 * </p>
 * @param bool $no_text [optional]
 * @return bool true on success or false on failure.
 
*/
function openssl_x509_export(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate, &$output, bool $no_text = true): bool {}

/**
* <div id="function.openssl-x509-export-to-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_export_to_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_export_to_file</span> — <span class="dc-title">导出证书至文件</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-export-to-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_export_to_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$no_text</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_export_to_file()</strong></span> 将   <span class="parameter" style="color:#3A95FF">certificate</span> 以 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的格式保存到名为 <span class="parameter" style="color:#3A95FF">output_filename</span> 的文件中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-export-to-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">       输出文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">no_text</span></dt>     <dd>      <p class="para">可选参数 <span class="parameter" style="color:#3A95FF">notext</span> 影响输出的冗余度。如果设为<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，输出内容将包含附加的人类可读信息。<span class="parameter" style="color:#3A95FF">notext</span> 的缺省值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-export-to-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-export-to-file-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Exports a certificate to file
 * @link https://php.net/manual/zh/function.openssl-x509-export-to-file.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param string $output_filename <p>
 * Path to the output file.
 * </p>
 * @param bool $no_text [optional]
 * @return bool true on success or false on failure.
 
*/
function openssl_x509_export_to_file(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate, string $output_filename, bool $no_text = true): bool {}

/**
* <div id="function.openssl-x509-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_x509_verify</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_x509_verify</span> — <span class="dc-title">Verifies digital signature of x509 certificate against a public key</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-x509-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_x509_verify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_x509_verify()</strong></span> verifies that the    <span class="parameter" style="color:#3A95FF">certificate</span> certificate was signed by the private    key corresponding to public key <span class="parameter" style="color:#3A95FF">public_key</span>.    </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-x509-verify-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> - a key, returned by <span class="function">{@link openssl_get_publickey()}</span>      </p>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> - a <abbr title="Privacy-Enhanced Mail">PEM</abbr> formatted key (e.g. <span class="literal">-----BEGIN PUBLIC KEY-----MIIBCgK...</span>)      </p>          </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-x509-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns 1 if the signature is correct, 0 if it is incorrect, and   -1 on error.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-x509-verify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> accepts an <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> instance now;       previously, a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> of type <span class="literal">OpenSSL X.509</span> was accepted.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> accepts an <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       or <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> instance now;       previously, a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> of type <span class="literal">OpenSSL key</span> or <span class="literal">OpenSSL X.509</span>       was accepted.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-x509-verify-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1026">    <p><strong>示例 #1 <span class="function"><strong>openssl_x509_verify()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$hostname </span><span style="color: #007700">= </span><span style="color: #DD0000">"news.php.net"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$ssloptions </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"capture_peer_cert" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">, <br>    </span><span style="color: #DD0000">"capture_peer_cert_chain" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">, <br>    </span><span style="color: #DD0000">"allow_self_signed"</span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">false</span><span style="color: #007700">, <br>    </span><span style="color: #DD0000">"CN_match" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$hostname</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"verify_peer" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"SNI_enabled" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"SNI_server_name" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$hostname</span><span style="color: #007700">,<br>);<br> <br></span><span style="color: #9876AA">$ctx </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">( array(</span><span style="color: #DD0000">"ssl" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$ssloptions</span><span style="color: #007700">) );<br></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_socket_client</span><span style="color: #007700">(</span><span style="color: #DD0000">"ssl://</span><span style="color: #9876AA">$hostname</span><span style="color: #DD0000">:443"</span><span style="color: #007700">, </span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">, </span><span style="color: #9876AA">STREAM_CLIENT_CONNECT</span><span style="color: #007700">, </span><span style="color: #9876AA">$ctx</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$cont </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_get_params</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$x509 </span><span style="color: #007700">= </span><span style="color: #9876AA">$cont</span><span style="color: #007700">[</span><span style="color: #DD0000">"options"</span><span style="color: #007700">][</span><span style="color: #DD0000">"ssl"</span><span style="color: #007700">][</span><span style="color: #DD0000">"peer_certificate"</span><span style="color: #007700">];<br></span><span style="color: #9876AA">$certparsed </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_x509_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$x509</span><span style="color: #007700">);<br><br>foreach(</span><span style="color: #9876AA">$cont</span><span style="color: #007700">[</span><span style="color: #DD0000">"options"</span><span style="color: #007700">][</span><span style="color: #DD0000">"ssl"</span><span style="color: #007700">][</span><span style="color: #DD0000">"peer_certificate_chain"</span><span style="color: #007700">] as </span><span style="color: #9876AA">$chaincert</span><span style="color: #007700">)<br>{<br>    </span><span style="color: #9876AA">$chainparsed </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_x509_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$chaincert</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$chain_public_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_publickey</span><span style="color: #007700">(</span><span style="color: #9876AA">$chaincert</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_x509_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">$x509</span><span style="color: #007700">, </span><span style="color: #9876AA">$chain_public_key</span><span style="color: #007700">);   <br>    if (</span><span style="color: #9876AA">$r</span><span style="color: #007700">==</span><span style="color: #9876AA">1</span><span style="color: #007700">)<br>    {<br>        echo </span><span style="color: #9876AA">$certparsed</span><span style="color: #007700">[</span><span style="color: #DD0000">'subject'</span><span style="color: #007700">][</span><span style="color: #DD0000">'CN'</span><span style="color: #007700">];<br>        echo </span><span style="color: #DD0000">" was digitally signed by "</span><span style="color: #007700">;<br>        echo </span><span style="color: #9876AA">$chainparsed</span><span style="color: #007700">[</span><span style="color: #DD0000">'subject'</span><span style="color: #007700">][</span><span style="color: #DD0000">'CN'</span><span style="color: #007700">].</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-x509-verify-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_verify()} - 验证签名</span></li>    <li><span class="function">{@link openssl_get_publickey()} - 别名 openssl_pkey_get_public</span></li>   </ul>   </div></div>
*
 * Verifies digital signature of x509 certificate against a public key
 * @link https://www.php.net/manual/en/function.openssl-x509-verify.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key
 * @return int Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on error.
 * @since 7.4
 
*/
function openssl_x509_verify(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key
): int {}

/**
* <div id="function.openssl-pkcs12-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs12_export</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs12_export</span> — <span class="dc-title">将 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 兼容证书存储文件导出到变量</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs12-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs12_export</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$output</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = []</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs12_export()</strong></span> 以 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件格式将 <span class="parameter" style="color:#3A95FF">certificate</span> 导入到名为 <span class="parameter" style="color:#3A95FF">output</span> 的字符串变量中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs12-export-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">output</span></dt>     <dd>      <p class="para">       成功，该字符串将为 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 格式。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件的私钥部分file，       参见 <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">公/私钥参数</a> 获取更多可用列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">      用来解锁 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件的解密密码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       可选数组，其他主键将被忽略。       </p><table class="doctable informaltable">                 <thead>          <tr>           <th>Key</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><span class="literal">"extracerts"</span></td>           <td><abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件中包含的额外证书或单个证书的数组。</td>          </tr>          <tr>           <td><span class="literal">"friendly_name"</span></td>           <td>被证书和密钥使用的字符串</td>          </tr>         </tbody>               </table>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs12-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs12-export-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Exports a PKCS#12 Compatible Certificate Store File to variable.
 * @link https://php.net/manual/zh/function.openssl-pkcs12-export.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param string &$output <p>
 * On success, this will hold the PKCS#12.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key <p>
 * Private key component of PKCS#12 file.
 * </p>
 * @param string $passphrase <p>
 * Encryption password for unlocking the PKCS#12 file.
 * </p>
 * @param array $options
 * @return bool true on success or false on failure.
 * @since 5.2.2
 
*/
function openssl_pkcs12_export(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    &$output,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    string $passphrase,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] $args,
    #[PhpStormStubsElementAvailable(from: '7.1')] array $options = []
): bool {}

/**
* <div id="function.openssl-pkcs12-export-to-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs12_export_to_file</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs12_export_to_file</span> — <span class="dc-title">输出一个 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 兼容的证书存储文件</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs12-export-to-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs12_export_to_file</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = []</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs12_export_to_file()</strong></span> 以 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件格式将 <span class="parameter" style="color:#3A95FF">certificate</span> 保存至 <span class="parameter" style="color:#3A95FF">output_filename</span> 文件中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs12-export-to-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>    <dt><span class="parameter" style="color:#3A95FF">x509</span></dt><dd> <p class="para">  参见<a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥／证书参数</a>以获取有效值列表。 </p></dd>         <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">       输出文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">      <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件的私钥部分。      参见 <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">公/私钥参数</a> 获取可用值的列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">      用于解锁 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件的加密密码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       可选数组，其他主键将被忽略。       </p><table class="doctable informaltable">                 <thead>          <tr>           <th>Key</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><span class="literal">"extracerts"</span></td>           <td><abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件中包含的额外证书或单个证书的数组。</td>          </tr>          <tr>           <td><span class="literal">"friendly_name"</span></td>           <td>被证书和密钥使用的字符串</td>          </tr>         </tbody>               </table>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs12-export-to-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs12-export-to-file-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Exports a PKCS#12 Compatible Certificate Store File
 * @link https://php.net/manual/zh/function.openssl-pkcs12-export-to-file.php
 * @param OpenSSLCertificate|string|resource $certificate
 * @param string $output_filename <p>
 * Path to the output file.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key <p>
 * Private key component of PKCS#12 file.
 * </p>
 * @param string $passphrase <p>
 * Encryption password for unlocking the PKCS#12 file.
 * </p>
 * @param array $options
 * @return bool true on success or false on failure.
 * @since 5.2.2
 
*/
function openssl_pkcs12_export_to_file(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate, string $output_filename, $private_key, string $passphrase, array $options = []): bool {}

/**
* <div id="function.openssl-pkcs12-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs12_read</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.2, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs12_read</span> — <span class="dc-title">将 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 证书存储区解析到数组中</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs12-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs12_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$pkcs12</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$certificates</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs12_read()</strong></span> 将 <span class="parameter" style="color:#3A95FF">pkcs12</span> 提供的 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 证书存储区解析到以 <span class="parameter" style="color:#3A95FF">certificates</span> 命名的变量中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs12-read-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">pkcs12</span></dt>     <dd>      <p class="para">       证书存储内容，而不是它的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">certificates</span></dt>     <dd>      <p class="para">       成功，将保存证书存储数据      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">      用来解锁 <abbr title="Public Key Cryptography Standards">PKCS</abbr>#12 文件的解密密码      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs12-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkcs12-read-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-1006">   <p><strong>示例 #1 <span class="function"><strong>openssl_pkcs12_read()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">if (!</span><span style="color: #9876AA">$cert_store </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"/certs/file.p12"</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"Error: Unable to read the cert file\n"</span><span style="color: #007700">;<br>    exit;<br>}<br><br>if (</span><span style="color: #9876AA">openssl_pkcs12_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$cert_store</span><span style="color: #007700">, </span><span style="color: #9876AA">$cert_info</span><span style="color: #007700">, </span><span style="color: #DD0000">"my_secret_pass"</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"Certificate Information\n"</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$cert_info</span><span style="color: #007700">);<br>} else {<br>    echo </span><span style="color: #DD0000">"Error: Unable to read the cert store.\n"</span><span style="color: #007700">;<br>    exit;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div></div>
*
 * Parse a PKCS#12 Certificate Store into an array
 * @link https://php.net/manual/zh/function.openssl-pkcs12-read.php
 * @param string $pkcs12
 * @param array &$certificates <p>
 * On success, this will hold the Certificate Store Data.
 * </p>
 * @param string $passphrase <p>
 * Encryption password for unlocking the PKCS#12 file.
 * </p>
 * @return bool true on success or false on failure.
 * @since 5.2.2
 
*/
function openssl_pkcs12_read(string $pkcs12, &$certificates, string $passphrase): bool {}

/**
 * Generates a CSR
 * @link https://php.net/manual/en/function.openssl-csr-new.php
 * @param array $distinguished_names <p>
 * The Distinguished Name to be used in the certificate.
 * </p>
 * @param OpenSSLAsymmetricKey &$private_key <p>
 * <i>privkey</i> should be set to a private key that was
 * previously generated by <b>openssl_pkey_new</b> (or
 * otherwise obtained from the other openssl_pkey family of functions).
 * The corresponding public portion of the key will be used to sign the
 * CSR.
 * </p>
 * @param array|null $options [optional] <p>
 * By default, the information in your system openssl.conf
 * is used to initialize the request; you can specify a configuration file
 * section by setting the config_section_section key of
 * <i>configargs</i>. You can also specify an alternative
 * openssl configuration file by setting the value of the
 * config key to the path of the file you want to use.
 * The following keys, if present in <i>configargs</i>
 * behave as their equivalents in the openssl.conf, as
 * listed in the table below.
 * <table>
 * Configuration overrides
 * <tr valign="top">
 * <td><i>configargs</i> key</td>
 * <td>type</td>
 * <td>openssl.conf equivalent</td>
 * <td>description</td>
 * </tr>
 * <tr valign="top">
 * <td>digest_alg</td>
 * <td>string</td>
 * <td>default_md</td>
 * <td>Selects which digest method to use</td>
 * </tr>
 * <tr valign="top">
 * <td>x509_extensions</td>
 * <td>string</td>
 * <td>x509_extensions</td>
 * <td>Selects which extensions should be used when creating an x509
 * certificate</td>
 * </tr>
 * <tr valign="top">
 * <td>req_extensions</td>
 * <td>string</td>
 * <td>req_extensions</td>
 * <td>Selects which extensions should be used when creating a CSR</td>
 * </tr>
 * <tr valign="top">
 * <td>private_key_bits</td>
 * <td>integer</td>
 * <td>default_bits</td>
 * <td>Specifies how many bits should be used to generate a private
 * key</td>
 * </tr>
 * <tr valign="top">
 * <td>private_key_type</td>
 * <td>integer</td>
 * <td>none</td>
 * <td>Specifies the type of private key to create. This can be one
 * of <b>OPENSSL_KEYTYPE_DSA</b>,
 * <b>OPENSSL_KEYTYPE_DH</b> or
 * <b>OPENSSL_KEYTYPE_RSA</b>.
 * The default value is <b>OPENSSL_KEYTYPE_RSA</b> which
 * is currently the only supported key type.
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>encrypt_key</td>
 * <td>boolean</td>
 * <td>encrypt_key</td>
 * <td>Should an exported key (with passphrase) be encrypted?</td>
 * </tr>
 * <tr valign="top">
 * <td>encrypt_key_cipher</td>
 * <td>integer</td>
 * <td>none</td>
 * <td>
 * One of cipher constants.
 * </td>
 * </tr>
 * </table>
 * </p>
 * @param array|null $extra_attributes [optional] <p>
 * <i>extraattribs</i> is used to specify additional
 * configuration options for the CSR. Both <i>dn</i> and
 * <i>extraattribs</i> are associative arrays whose keys are
 * converted to OIDs and applied to the relevant part of the request.
 * </p>
 * @return OpenSSLCertificateSigningRequest|resource|false the CSR.
 */
#[LanguageLevelTypeAware([
    "8.0" => "OpenSSLCertificateSigningRequest|false",
    "8.2" => "OpenSSLCertificateSigningRequest|bool"
], default: "resource|false")]
/**
* <div id="function.openssl-csr-new" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_new</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_new</span> — <span class="dc-title">生成一个 <abbr title="Certificate Signing Request">CSR</abbr></span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-csr-new-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_new</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$distinguished_names</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span></span> <span class="parameter reference" style="color:#3A95FF">&amp;$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$extra_attributes</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_new()</strong></span> 根据 <span class="parameter" style="color:#3A95FF">distinguished_names</span> 提供的信息生成新的 <abbr title="Certificate Signing Request">CSR</abbr>（证书签名请求）。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 必须安装有效的 <var class="filename">openssl.cnf</var> 以保证此函数正确运行。参考有关<a href="https://php.net/manual/zh/openssl.installation.php" class="link">安装</a>的说明以获得更多信息。</span></p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-new-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">distinguished_names</span></dt>     <dd>      <p class="para">       在证书中要包含的专有名称或主题字段。<span class="parameter" style="color:#3A95FF">distinguished_names</span> 是关联数组，其中 key 表示       专有名称的属性名称，value 可以是字符串（对于单个值）或数组（如果需要设置多个值）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 应设置为由 <span class="function">{@link openssl_pkey_new()}</span> 预先生成的私钥（或从其他 openssl_pkey       系列函数获取），或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 变量。如果值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 变量，则根据提供的 <span class="parameter" style="color:#3A95FF">options</span>       生成新的私钥并将其分配给提供的变量。密钥的相应公共部分将用于签署 <abbr title="Certificate Signing Request">CSR</abbr>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       默认系统 <span class="literal">openssl.conf</span> 中的信息用于初始化请求；可以通过在 <span class="parameter" style="color:#3A95FF">options</span> 中设置       <span class="literal">config_section_section</span> key 来指定配置文件部分。还可以通过将 key <span class="literal">config</span>       的值设置为要使用的文件路径，来指定备用 OpenSSL 配置文件。如果选项中存在以下 key，它们的行为就像在       <span class="literal">openssl.conf</span> 中一样，如下表所示。       </p><table class="doctable table">        <caption><strong>配置覆盖</strong></caption>                 <thead>          <tr>           <th><span class="parameter" style="color:#3A95FF">options</span> 键</th>           <th>类型</th>           <th>等同于 <span class="literal">openssl.conf</span></th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>digest_alg</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>           <td>default_md</td>           <td>摘要算法或签名哈希算法，通常是 <span class="function">{@link openssl_get_md_methods()}</span> 之一。</td>          </tr>          <tr>           <td>x509_extensions</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>           <td>x509_extensions</td>           <td>选择在创建 x509 证书时应该使用哪些扩展</td>          </tr>          <tr>           <td>req_extensions</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>           <td>req_extensions</td>           <td>创建 <abbr title="Certificate Signing Request">CSR</abbr> 时，选择使用哪个扩展</td>          </tr>          <tr>           <td>private_key_bits</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>           <td>default_bits</td>           <td>指定应该使用多少位来生成私钥</td>          </tr>          <tr>           <td>private_key_type</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>           <td>none</td>           <td>选择在创建 CSR 时应该使用哪些扩展。可选值有            <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dsa">OPENSSL_KEYTYPE_DSA</a></span></strong>、            <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-dh">OPENSSL_KEYTYPE_DH</a></span></strong>、            <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-rsa">OPENSSL_KEYTYPE_RSA</a></span></strong> 或            <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-ec">OPENSSL_KEYTYPE_EC</a></span></strong>。            默认值是 <strong><span><a href="https://php.net/manual/zh/openssl.key-types.php#constant.openssl-keytype-rsa">OPENSSL_KEYTYPE_RSA</a></span></strong>。           </td>          </tr>          <tr>           <td>encrypt_key</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></td>           <td>encrypt_key</td>           <td>是否应该对导出的密钥（带有密码短语）进行加密?</td>          </tr>          <tr>           <td>encrypt_key_cipher</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></td>           <td>none</td>           <td>            <a href="https://php.net/manual/zh/openssl.ciphers.php" class="link">cipher constants</a> 常量之一。           </td>          </tr>          <tr>           <td>curve_name</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>           <td>none</td>           <td>            <span class="function">{@link openssl_get_curve_names()}</span> 之一。           </td>          </tr>          <tr>           <td>config</td>           <td><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></td>           <td>N/A</td>           <td>            自定义 openssl.conf 文件的路径。           </td>          </tr>         </tbody>               </table>           </dd>             <dt><span class="parameter" style="color:#3A95FF">extra_attributes</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">extra_attributes</span> 用于指定 <abbr title="Certificate Signing Request">CSR</abbr> 的附加属性。是关联数组，其中       key 转换为 OID 并应用为 <abbr title="Certificate Signing Request">CSR</abbr> 属性。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-new-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <abbr title="Certificate Signing Request">CSR</abbr>，如果 <abbr title="Certificate Signing Request">CSR</abbr> 创建成功但签名失败则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-csr-new-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       <span class="parameter" style="color:#3A95FF">distinguished_names</span> 关联数组现在支持 value 为数组，允许为单个属性指定多个值。      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       <span class="parameter" style="color:#3A95FF">extra_attributes</span> 参数现在可以正确设置 CSR 属性，而不是像以前错误地修改主题的专用名称。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       成功时，此函数现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span>       实例；之前返回类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       实例；之前接受类型 <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> 现在也支持 <span class="literal">curve_name</span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-csr-new-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-992">    <p><strong>示例 #1 创建一个自签名的证书</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// for SSL server certificates the commonName is the domain name to be secured<br>// for S/MIME email certificates the commonName is the owner of the email address<br>// location and identification fields refer to the owner of domain or email subject to be secured<br></span><span style="color: #9876AA">$dn </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"countryName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"GB"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"stateOrProvinceName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Somerset"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"localityName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Glastonbury"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"organizationName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"The Brain Room Limited"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"organizationalUnitName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"PHP Documentation Team"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Wez Furlong"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"emailAddress" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"wez@example.com"<br></span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Generate a new private (and public) key pair<br></span><span style="color: #9876AA">$privkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br><br></span><span style="color: #FF8000">// Generate a certificate signing request<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$dn</span><span style="color: #007700">, </span><span style="color: #9876AA">$privkey</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Generate a self-signed cert, valid for 365 days<br></span><span style="color: #9876AA">$x509 </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">$privkey</span><span style="color: #007700">, </span><span style="color: #9876AA">$days</span><span style="color: #007700">=</span><span style="color: #9876AA">365</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Save your private key, CSR and self-signed cert for later use<br></span><span style="color: #9876AA">openssl_csr_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">, </span><span style="color: #9876AA">$csrout</span><span style="color: #007700">) and </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$csrout</span><span style="color: #007700">);<br></span><span style="color: #9876AA">openssl_x509_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$x509</span><span style="color: #007700">, </span><span style="color: #9876AA">$certout</span><span style="color: #007700">) and </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$certout</span><span style="color: #007700">);<br></span><span style="color: #9876AA">openssl_pkey_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$privkey</span><span style="color: #007700">, </span><span style="color: #9876AA">$pkeyout</span><span style="color: #007700">, </span><span style="color: #DD0000">"mypassword"</span><span style="color: #007700">) and </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkeyout</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Show any errors that occurred here<br></span><span style="color: #007700">while ((</span><span style="color: #9876AA">$e </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">()) !== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$e </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>      <div class="example" id="example-993">    <p><strong>示例 #2 创建一个自签名的 ECC 证书（从 PHP 7.1.0 开始）</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$subject </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"docs.php.net"</span><span style="color: #007700">,<br>);<br><br></span><span style="color: #FF8000">// Generate a new private (and public) key pair<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_EC</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"curve_name" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'prime256v1'</span><span style="color: #007700">,<br>));<br><br></span><span style="color: #FF8000">// Generate a certificate signing request<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha384'</span><span style="color: #007700">));<br><br></span><span style="color: #FF8000">// Generate self-signed EC cert<br></span><span style="color: #9876AA">$x509 </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, </span><span style="color: #9876AA">$days</span><span style="color: #007700">=</span><span style="color: #9876AA">365</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha384'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">openssl_x509_export_to_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$x509</span><span style="color: #007700">, </span><span style="color: #DD0000">'ecc-cert.pem'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">openssl_pkey_export_to_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, </span><span style="color: #DD0000">'ecc-private.key'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>         </div> <div class="refsect1 seealso" id="refsect1-function.openssl-csr-new-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*/
function openssl_csr_new(
    array $distinguished_names,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey'], default: 'resource')] &$private_key,
    ?array $options,
    ?array $extra_attributes
) {}

/**
* <div id="function.openssl-csr-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_export</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_export</span> — <span class="dc-title">将 <abbr title="Certificate Signing Request">CSR</abbr> 作为字符串导出</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-csr-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$csr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$output</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$no_text</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_export()</strong></span> 获取证书签名请求（<span class="parameter" style="color:#3A95FF">csr</span>）并通过引用保存其 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的字符串（<span class="parameter" style="color:#3A95FF">output</span>）。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-export-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>      <dt><span class="parameter" style="color:#3A95FF">csr</span></dt> <dd>  <p class="para">   See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">CSR parameters</a> for a list of valid values.  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">output</span></dt>     <dd>      <p class="para">      在成功时，该字符串将包含 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的 <abbr title="Certificate Signing Request">CSR</abbr>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">no_text</span></dt>     <dd>      <p class="para">可选参数 <span class="parameter" style="color:#3A95FF">notext</span> 影响输出的冗余度。如果设为<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，输出内容将包含附加的人类可读信息。<span class="parameter" style="color:#3A95FF">notext</span> 的缺省值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-csr-export-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">csr</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-csr-export-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-988">    <p><strong>示例 #1 openssl_csr_export() 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$subject </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">,<br>);<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">$configargs </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha256WithRSAEncryption'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, </span><span style="color: #9876AA">$configargs</span><span style="color: #007700">);<br></span><span style="color: #9876AA">openssl_csr_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">, </span><span style="color: #9876AA">$csr_string</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$csr_string</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-csr-export-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_export_to_file()} - 将 CSR 导出到文件</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Exports a CSR as a string
 * @link https://php.net/manual/zh/function.openssl-csr-export.php
 * @param OpenSSLCertificateSigningRequest|string|resource $csr
 * @param string &$output
 * @param bool $no_text [optional]
 * @return bool true on success or false on failure.
 
*/
function openssl_csr_export(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificateSigningRequest|string"], default: "resource|string")] $csr, &$output, bool $no_text = true): bool {}

/**
* <div id="function.openssl-csr-export-to-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_export_to_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_export_to_file</span> — <span class="dc-title">将 <abbr title="Certificate Signing Request">CSR</abbr> 导出到文件</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-csr-export-to-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_export_to_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$csr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$no_text</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_export_to_file()</strong></span> 获取证书签名请求（<span class="parameter" style="color:#3A95FF">csr</span>）并将之保存在以 <span class="parameter" style="color:#3A95FF">output_filename</span> 命名的 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式文件中。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-export-to-file-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>     <dt><span class="parameter" style="color:#3A95FF">csr</span></dt> <dd>  <p class="para">   See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">CSR parameters</a> for a list of valid values.  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">       输出文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">no_text</span></dt>     <dd>      <p class="para">可选参数 <span class="parameter" style="color:#3A95FF">notext</span> 影响输出的冗余度。如果设为<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，输出内容将包含附加的人类可读信息。<span class="parameter" style="color:#3A95FF">notext</span> 的缺省值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。</p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-export-to-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-csr-export-to-file-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">csr</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span> 实例；之前接受类型       <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-csr-export-to-file-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-989">    <p><strong>示例 #1 openssl_csr_export_to_file() 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$subject </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">,<br>);<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha384'</span><span style="color: #007700">) );<br></span><span style="color: #9876AA">openssl_pkey_export_to_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, </span><span style="color: #DD0000">'example-priv.key'</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// Along with the subject, the CSR contains the public key corresponding to the private key<br></span><span style="color: #9876AA">openssl_csr_export_to_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">, </span><span style="color: #DD0000">'example-csr.pem'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-csr-export-to-file-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_export()} - 将 CSR 作为字符串导出</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * Exports a CSR to a file
 * @link https://php.net/manual/zh/function.openssl-csr-export-to-file.php
 * @param OpenSSLCertificateSigningRequest|string|resource $csr
 * @param string $output_filename <p>
 * Path to the output file.
 * </p>
 * @param bool $no_text [optional]
 * @return bool true on success or false on failure.
 
*/
function openssl_csr_export_to_file(#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificateSigningRequest|string"], default: "resource|string")] $csr, string $output_filename, bool $no_text = true): bool {}

/**
* <div id="function.openssl-csr-sign" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_sign</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_sign</span> — <span class="dc-title">用另一个证书签署 <abbr title="Certificate Signing Request">CSR</abbr>（或者本身）并且生成一个证书</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-csr-sign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_sign</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$csr</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">$ca_certificate</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$days</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$serial</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$serial_hex</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_sign()</strong></span> 从给定的 <abbr title="Certificate Signing Request">CSR</abbr> 生成 x509 证书。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 必须安装有效的 <var class="filename">openssl.cnf</var> 以保证此函数正确运行。参考有关<a href="https://php.net/manual/zh/openssl.installation.php" class="link">安装</a>的说明以获得更多信息。</span></p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-sign-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">csr</span></dt>     <dd>      <p class="para">       由 <span class="function">{@link openssl_csr_new()}</span> 函数生成的 <abbr title="Certificate Signing Request">CSR</abbr>。       也可以是由类似<var class="filename">file://path/to/csr</var>格式指定的指向 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 编码的 <abbr title="Certificate Signing Request">CSR</abbr> 路径，或者是一个由<span class="function">{@link openssl_csr_export()}</span>函数生成的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ca_certificate</span></dt>     <dd>      <p class="para">       生成的证书将由<span class="parameter" style="color:#3A95FF">ca_certificate</span>签名。       如果<span class="parameter" style="color:#3A95FF">ca_certificate</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>, 生成的证书将是自签名证书。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 是 <span class="parameter" style="color:#3A95FF">ca_certificate</span> 证书对应的私钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">days</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">days</span> 指定生成的证书在几天内有效的时间长度。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       可以通过 <span class="parameter" style="color:#3A95FF">options</span> 确定 <abbr title="Certificate Signing Request">CSR</abbr> 签名。       查看 <span class="function">{@link openssl_csr_new()}</span> 方法获取       <span class="parameter" style="color:#3A95FF">options</span> 的更多相关信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">serial</span></dt>     <dd>      <p class="para">       可选的已签发证书的序列号。如果未指定，将默认为 0。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">serial_hex</span></dt>     <dd>      <p class="para">       可选的十六进制字符串，表示已签发证书的序列号。       如果设置，将优先于 <span class="parameter" style="color:#3A95FF">serial</span> 参数值。       如果未指定或设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，则使用 <span class="parameter" style="color:#3A95FF">serial</span> 参数值。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-sign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>，失败则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-csr-sign-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       添加了 <span class="parameter" style="color:#3A95FF">serial_hex</span> 参数。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       成功时，此函数现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前返回类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">csr</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">ca_certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span> 或       <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-csr-sign-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-994">    <p><strong>示例 #1 <span class="function"><strong>openssl_csr_sign()</strong></span> 示例——签署 <abbr title="Certificate Signing Request">CSR</abbr>（如何实现自己的 CA）</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Let's assume that this script is set to receive a CSR that has<br>// been pasted into a textarea from another page<br></span><span style="color: #9876AA">$csrdata </span><span style="color: #007700">= </span><span style="color: #9876AA">$_POST</span><span style="color: #007700">[</span><span style="color: #DD0000">"CSR"</span><span style="color: #007700">];<br><br></span><span style="color: #FF8000">// We will sign the request using our own "certificate authority"<br>// certificate.  You can use any certificate to sign another, but<br>// the process is worthless unless the signing certificate is trusted<br>// by the software/users that will deal with the newly signed certificate<br><br>// We need our CA cert and its private key<br></span><span style="color: #9876AA">$cacert </span><span style="color: #007700">= </span><span style="color: #DD0000">"file://path/to/ca.crt"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$privkey </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"file://path/to/ca.key"</span><span style="color: #007700">, </span><span style="color: #DD0000">"your_ca_key_passphrase"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$usercert </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$csrdata</span><span style="color: #007700">, </span><span style="color: #9876AA">$cacert</span><span style="color: #007700">, </span><span style="color: #9876AA">$privkey</span><span style="color: #007700">, </span><span style="color: #9876AA">365</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">) );<br><br></span><span style="color: #FF8000">// Now display the generated certificate so that the user can<br>// copy and paste it into their local configuration (such as a file<br>// to hold the certificate for their SSL server)<br></span><span style="color: #9876AA">openssl_x509_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$usercert</span><span style="color: #007700">, </span><span style="color: #9876AA">$certout</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$certout</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// Show any errors that occurred here<br></span><span style="color: #007700">while ((</span><span style="color: #9876AA">$e </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">()) !== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$e </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Sign a CSR with another certificate (or itself) and generate a certificate
 * @link https://php.net/manual/zh/function.openssl-csr-sign.php
 * @param OpenSSLCertificateSigningRequest|string|resource $csr <p>
 * A CSR previously generated by <b>openssl_csr_new</b>.
 * It can also be the path to a PEM encoded CSR when specified as
 * file://path/to/csr or an exported string generated
 * by <b>openssl_csr_export</b>.
 * </p>
 * @param OpenSSLCertificate|resource|string|null $ca_certificate <p>
 * The generated certificate will be signed by <i>cacert</i>.
 * If <i>cacert</i> is null, the generated certificate
 * will be a self-signed certificate.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key <p>
 * <i>priv_key</i> is the private key that corresponds to
 * <i>cacert</i>.
 * </p>
 * @param int $days <p>
 * <i>days</i> specifies the length of time for which the
 * generated certificate will be valid, in days.
 * </p>
 * @param array|null $options [optional] <p>
 * You can finetune the CSR signing by <i>configargs</i>.
 * See <b>openssl_csr_new</b> for more information about
 * <i>configargs</i>.
 * </p>
 * @param int $serial [optional] <p>
 * An optional the serial number of issued certificate. If not specified
 * it will default to 0.
 * </p>
 * @return OpenSSLCertificate|resource|false an x509 certificate resource on success, false on failure.
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|false"], default: "resource|false")]
*/
function openssl_csr_sign(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificateSigningRequest|string"], default: "resource|string")] $csr,
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string|null"], default: "resource|string|null")] $ca_certificate,
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|OpenSSLCertificate|array|string"], default: "resource|array|string")] $private_key,
    int $days,
    ?array $options,
    int $serial = 0,
    #[PhpStormStubsElementAvailable(from: '8.4')] ?string $serial_hex = null
) {}

/**
* <div id="function.openssl-csr-get-subject" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_get_subject</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_get_subject</span> — <span class="dc-title">返回 <abbr title="Certificate Signing Request">CSR</abbr> 的主题</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-csr-get-subject-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_get_subject</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$csr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$short_names</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_get_subject()</strong></span> 返回 <span class="parameter" style="color:#3A95FF">csr</span> 中专有名称信息的主题，其中包含了通用名称（CN）、机构名称（O）、国家名（C）等字段。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-get-subject-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>      <dt><span class="parameter" style="color:#3A95FF">csr</span></dt> <dd>  <p class="para">   See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">CSR parameters</a> for a list of valid values.  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">short_names</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">short_names</span> 控制着数据如何在数组中被索引 - 如果 <span class="parameter" style="color:#3A95FF">short_names</span> 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> (默认) 将使用简称形式对字段进行索引，否则将使用全称形式 - 比如： CN 就是 commonName 的简称形式。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-get-subject-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有主题描述的关联数组， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>  <div class="refsect1 changelog" id="refsect1-function.openssl-csr-get-subject-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">csr</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-csr-get-subject-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-991">    <p><strong>示例 #1 openssl_csr_get_subject() 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$subject </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"countryName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"CA"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"stateOrProvinceName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Alberta"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"localityName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Calgary"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"organizationName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"XYZ Widgets Inc"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"organizationalUnitName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"PHP Documentation Team"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Wez Furlong"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"emailAddress" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"wez@example.com"</span><span style="color: #007700">,<br>);<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">$configargs </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha512WithRSAEncryption'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$privkey</span><span style="color: #007700">, </span><span style="color: #9876AA">$configargs</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">openssl_csr_get_subject</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>    [C] =&gt; CA<br>    [ST] =&gt; Alberta<br>    [L] =&gt; Calgary<br>    [O] =&gt; XYZ Widgets Inc<br>    [OU] =&gt; PHP Documentation Team<br>    [CN] =&gt; Wez Furlong<br>    [emailAddress] =&gt; wez@example.com<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-csr-get-subject-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_csr_get_public_key()} - 返回 CSR 的公钥</span></li>    <li><span class="function">{@link openssl_x509_parse()} - 解析 X509 证书并作为一个数组返回信息</span></li>   </ul>   </div></div>
*
 * Returns the subject of a CERT
 * @link https://php.net/manual/zh/function.openssl-csr-get-subject.php
 * @param OpenSSLCertificateSigningRequest|string|resource $csr
 * @param bool $short_names [optional]
 * @return array|false
 
*/
function openssl_csr_get_subject(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificateSigningRequest|string"], default: "resource|string")] $csr,
    #[PhpStormStubsElementAvailable(from: '7.1')] bool $short_names = true
): array|false {}

/**
* <div id="function.openssl-csr-get-public-key" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_csr_get_public_key</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_csr_get_public_key</span> — <span class="dc-title">返回 <abbr title="Certificate Signing Request">CSR</abbr> 的公钥</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-csr-get-public-key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_csr_get_public_key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="type OpenSSLCertificateSigningRequest" style="color:#EAB766">OpenSSLCertificateSigningRequest</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$csr</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$short_names</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_csr_get_public_key()</strong></span> 从 <span class="parameter" style="color:#3A95FF">csr</span> 中提取公钥供其他功能使用。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-csr-get-public-key-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>      <dt><span class="parameter" style="color:#3A95FF">csr</span></dt> <dd>  <p class="para">   See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">CSR parameters</a> for a list of valid values.  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">short_names</span></dt>     <dd>      <div class="warning"><strong class="warning">警告</strong>       <p class="para">        该参数可以省略。       </p>      </div>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-csr-get-public-key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>，错误则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-csr-get-public-key-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       成功时此函数现在返回 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       实例；之前返回类型 <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">csr</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificatesigningrequest.php" class="classname">OpenSSLCertificateSigningRequest</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.openssl-csr-get-public-key-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-990">    <p><strong>示例 #1 openssl_csr_get_public_key() 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$subject </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"commonName" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"example.com"</span><span style="color: #007700">,<br>);<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">$csr </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'digest_alg' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">) );<br></span><span style="color: #9876AA">$public_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_csr_get_public_key</span><span style="color: #007700">(</span><span style="color: #9876AA">$csr</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">$public_key</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'key'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-csr-get-public-key-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_get_subject()} - 返回 CSR 的主题</span></li>    <li><span class="function">{@link openssl_csr_new()} - 生成一个 CSR</span></li>    <li><span class="function">{@link openssl_pkey_get_details()} - 返回包含密钥详情的数组</span></li>    <li><span class="function">{@link openssl_pkey_export_to_file()} - 将密钥导出到文件中</span></li>    <li><span class="function">{@link openssl_pkey_export()} - 将一个密钥的可输出表示转换为字符串</span></li>      </ul>   </div> </div>
*
 * Returns the public key of a CERT
 * @link https://php.net/manual/zh/function.openssl-csr-get-public-key.php
 * @param OpenSSLCertificateSigningRequest|string|resource $csr
 * @param bool $short_names [optional]
 * @return OpenSSLAsymmetricKey|resource|false
 
#[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey|false"], default: "resource|false")]
*/
function openssl_csr_get_public_key(
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificateSigningRequest|string"], default: "resource|string")] $csr,
    #[PhpStormStubsElementAvailable(from: '7.1')] bool $short_names = true
) {}

/**
* <div id="function.openssl-digest" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_digest</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_digest</span> — <span class="dc-title">计算摘要</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-digest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_digest</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$digest_algo</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   使用给定的方法计算给定数据的摘要哈希值，并返回一个原始的或16进制编码的字符串。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-digest-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       给定的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">digest_algo</span></dt>     <dd>      <p class="para">       要使用的摘要方法，比如 "sha256", 查看 <span class="function">{@link openssl_get_md_methods()}</span> 函数获取更多可用的摘要方法。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">       为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时将会返回原始输出数据，否则返回值将会是16进制。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-digest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回摘要哈希值， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.openssl-digest-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果通过 <span class="parameter" style="color:#3A95FF">digest_algo</span> 参数传递的是未知的摘要算法，将会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级的错误。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-digest-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>   </ul>   </div></div>
*
 * Computes a digest
 * @link https://php.net/manual/zh/function.openssl-digest.php
 * @param string $data <p>
 * The data.
 * </p>
 * @param string $digest_algo <p>
 * The digest method.
 * </p>
 * @param bool $binary [optional] <p>
 * Setting to true will return as raw output data, otherwise the return
 * value is binhex encoded.
 * </p>
 * @return string|false the digested hash value on success or false on failure.
 
*/
function openssl_digest(string $data, string $digest_algo, bool $binary = false): string|false {}

/**
* <div id="function.openssl-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_encrypt</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_encrypt</span> — <span class="dc-title">加密数据</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_encrypt</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$iv</span><span class="initializer"> = ""</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$tag</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$aad</span><span class="initializer"> = ""</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$tag_length</span><span class="initializer"> = 16</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   以指定的方式和密码短语加密数据，返回原始或 base64 编码后的字符串。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-encrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       待加密的明文信息数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>     <dd>      <p class="para">       密码学方式。<span class="function">{@link openssl_get_cipher_methods()}</span> 可获取有效密码方式列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       密码短语。若 passphrase 比预期长度短，将静默用 <span class="literal">NUL</span> 填充；       若比预期长度更长，将静默截断。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        正如其名称所示，passphrase 没有用于密钥导出函数。唯一的操作是用 <span class="literal">NUL</span> 字符填充，或者如果长度与预期不同则截断。       </p>      </div>     </dd>              <dt><span class="parameter" style="color:#3A95FF">options</span></dt>      <dd>        <p class="para">          <span class="parameter" style="color:#3A95FF">options</span> 是以下标记的按位或：         <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-raw-data">OPENSSL_RAW_DATA</a></span></strong> 和         <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-zero-padding">OPENSSL_ZERO_PADDING</a></span></strong>         或 <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-dont-zero-pad-key">OPENSSL_DONT_ZERO_PAD_KEY</a></span></strong>。        </p>      </dd>             <dt><span class="parameter" style="color:#3A95FF">iv</span></dt>     <dd>      <p class="para">       非 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 的初始化向量。如果 IV 比预期短，则用 <span class="literal">NUL</span> 字符填充并发出警告；如果密码短语比预期长，则将其截断并发出警告。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">tag</span></dt>     <dd>      <p class="para">       使用 AEAD 密码模式（GCM 或 CCM）时传引用的验证标签。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">aad</span></dt>     <dd>      <p class="para">       附加的验证数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">tag_length</span></dt>     <dd>      <p class="para">       验证 <span class="parameter" style="color:#3A95FF">tag</span> 的长度。GCM 模式时，它的范围是 4 到 16。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回加密后的字符串， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-function.openssl-encrypt-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">cipher_algo</span> 传入未知算法时，产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p>  <p class="para">   <span class="parameter" style="color:#3A95FF">iv</span> 传入空字符串时产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-encrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>增加了 <span class="parameter" style="color:#3A95FF">tag</span>、<span class="parameter" style="color:#3A95FF">aad</span>、<span class="parameter" style="color:#3A95FF">tag_length</span> 参数</td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-encrypt-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-997">    <p><strong>示例 #1 PHP 7.1 之前的 GCM 模式的 AES 认证加密示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//$key should have been previously generated in a cryptographically safe way, like openssl_random_pseudo_bytes<br></span><span style="color: #9876AA">$plaintext </span><span style="color: #007700">= </span><span style="color: #DD0000">"message to be encrypted"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$cipher </span><span style="color: #007700">= </span><span style="color: #DD0000">"aes-128-gcm"</span><span style="color: #007700">;<br>if (</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher</span><span style="color: #007700">, </span><span style="color: #9876AA">openssl_get_cipher_methods</span><span style="color: #007700">()))<br>{<br>    </span><span style="color: #9876AA">$ivlen </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_cipher_iv_length</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$iv </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$ciphertext </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_encrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$plaintext</span><span style="color: #007700">, </span><span style="color: #9876AA">$cipher</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$options</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">, </span><span style="color: #9876AA">$tag</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">//store $cipher, $iv, and $tag for decryption later<br>    </span><span style="color: #9876AA">$original_plaintext </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ciphertext</span><span style="color: #007700">, </span><span style="color: #9876AA">$cipher</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$options</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">, </span><span style="color: #9876AA">$tag</span><span style="color: #007700">);<br>    echo </span><span style="color: #9876AA">$original_plaintext</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-998">    <p><strong>示例 #2 PHP 5.6+ 的 AES 认证加密例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//$key previously generated safely, ie: openssl_random_pseudo_bytes<br></span><span style="color: #9876AA">$plaintext </span><span style="color: #007700">= </span><span style="color: #DD0000">"message to be encrypted"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$ivlen </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_cipher_iv_length</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher</span><span style="color: #007700">=</span><span style="color: #DD0000">"AES-128-CBC"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$iv </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$ciphertext_raw </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_encrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$plaintext</span><span style="color: #007700">, </span><span style="color: #9876AA">$cipher</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$options</span><span style="color: #007700">=</span><span style="color: #9876AA">OPENSSL_RAW_DATA</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$hmac </span><span style="color: #007700">= </span><span style="color: #9876AA">hash_hmac</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$ciphertext_raw</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$as_binary</span><span style="color: #007700">=</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$ciphertext </span><span style="color: #007700">= </span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">( </span><span style="color: #9876AA">$iv</span><span style="color: #007700">.</span><span style="color: #9876AA">$hmac</span><span style="color: #007700">.</span><span style="color: #9876AA">$ciphertext_raw </span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//decrypt later....<br></span><span style="color: #9876AA">$c </span><span style="color: #007700">= </span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$ciphertext</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$ivlen </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_cipher_iv_length</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher</span><span style="color: #007700">=</span><span style="color: #DD0000">"AES-128-CBC"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$iv </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$hmac </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">, </span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">, </span><span style="color: #9876AA">$sha2len</span><span style="color: #007700">=</span><span style="color: #9876AA">32</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$ciphertext_raw </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">, </span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">+</span><span style="color: #9876AA">$sha2len</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$original_plaintext </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ciphertext_raw</span><span style="color: #007700">, </span><span style="color: #9876AA">$cipher</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$options</span><span style="color: #007700">=</span><span style="color: #9876AA">OPENSSL_RAW_DATA</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$calcmac </span><span style="color: #007700">= </span><span style="color: #9876AA">hash_hmac</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$ciphertext_raw</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$as_binary</span><span style="color: #007700">=</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">$hmac</span><span style="color: #007700">, </span><span style="color: #9876AA">$calcmac</span><span style="color: #007700">))</span><span style="color: #FF8000">// timing attack safe comparison<br></span><span style="color: #007700">{<br>    echo </span><span style="color: #9876AA">$original_plaintext</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-encrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_decrypt()} - 解密数据</span></li>   </ul>   </div></div>
*
 * Encrypts data
 * @link https://php.net/manual/zh/function.openssl-encrypt.php
 * @param string $data <p>
 * The data.
 * </p>
 * @param string $cipher_algo <p>
 * The cipher method. For a list of available cipher methods, use {@see openssl_get_cipher_methods()}.
 * </p>
 * @param string $passphrase <p>
 * The key.
 * </p>
 * @param int $options [optional] <p>
 * options is a bitwise disjunction of the flags OPENSSL_RAW_DATA and OPENSSL_ZERO_PADDING.
 * </p>
 * @param string $iv [optional] <p>
 * A non-NULL Initialization Vector.
 * </p>
 * @param string &$tag [optional] <p>The authentication tag passed by reference when using AEAD cipher mode (GCM or CCM).</p>
 * @param string $aad [optional] <p>Additional authentication data.</p>
 * @param int $tag_length [optional] <p>
 * The length of the authentication tag. Its value can be between 4 and 16 for GCM mode.
 * </p>
 * @return string|false the encrypted string on success or false on failure.
 
*/
function openssl_encrypt(
    string $data,
    string $cipher_algo,
    string $passphrase,
    int $options = 0,
    string $iv = "",
    #[PhpStormStubsElementAvailable(from: '7.1')] &$tag,
    #[PhpStormStubsElementAvailable(from: '7.1')] string $aad = "",
    #[PhpStormStubsElementAvailable(from: '7.1')] int $tag_length = 16
): string|false {}

/**
* <div id="function.openssl-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_decrypt</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_decrypt</span> — <span class="dc-title">解密数据</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_decrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$iv</span><span class="initializer"> = ""</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$tag</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$aad</span><span class="initializer"> = ""</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   采用原始或base64编码的字符串，并使用给定的方法和密码短语对其进行解密。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-decrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       将被解密的密文。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>     <dd>      <p class="para">       加密算法，使用<span class="function">{@link openssl_get_cipher_methods()}</span>函数获取可用的加密算法列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       密码短语。若提供的密码短语比期望短，系统会自动用 <span class="literal">NUL</span> 字符静默填充；若密码短语比期望长，则会静默截断。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        正如其名称所示，passphrase 没有用于密钥导出函数。唯一的操作是用 <span class="literal">NUL</span> 字符填充，或者如果长度与预期不同则截断。       </p>      </div>     </dd>              <dt><span class="parameter" style="color:#3A95FF">options</span></dt>      <dd>       <p class="para">        <span class="parameter" style="color:#3A95FF">options</span> 可以是以下常量之一：        <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-raw-data">OPENSSL_RAW_DATA</a></span></strong>、        <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-zero-padding">OPENSSL_ZERO_PADDING</a></span></strong>        或 <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-dont-zero-pad-key">OPENSSL_DONT_ZERO_PAD_KEY</a></span></strong>。       </p>      </dd>             <dt><span class="parameter" style="color:#3A95FF">iv</span></dt>     <dd>      <p class="para">       非 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> 的初始化向量。如果 IV 比预期短，则用 <span class="literal">NUL</span> 字符填充并发出警告；如果密码短语比预期长，则将其截断并发出警告。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">tag</span></dt>     <dd>      <p class="para">       AEAD密码模式中的身份验证标签。 如果是错误的，验证失败，函数返回<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        函数不检查 <span class="parameter" style="color:#3A95FF">tag</span> 的长度。调用者有责任确保 tag 的长度与调用 <span class="function">{@link openssl_encrypt()}</span>        时检索到的 tag 的长度相匹配。否则，如果给定的 tag 仅匹配正确 tag 的开头，解密可能会成功。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">aad</span></dt>     <dd>      <p class="para">       额外的认证数据。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时已解密的字符串 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-function.openssl-decrypt-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果通过 <span class="parameter" style="color:#3A95FF">cipher_algo</span> 参数传递的是未知的加密算法，将会抛出 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 等级的错误。  </p>  <p class="para">   如果通过<span class="parameter" style="color:#3A95FF">iv</span>参数传递的是一个空值，将会抛出一个 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 等级的错误。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-decrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td><span class="parameter" style="color:#3A95FF">tag</span> 现在可为 null。</td>     </tr>     <tr>      <td>7.1.0</td>      <td>添加了 <span class="parameter" style="color:#3A95FF">tag</span> 和 <span class="parameter" style="color:#3A95FF">aad</span> 参数。</td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-decrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_encrypt()} - 加密数据</span></li>   </ul>   </div></div>
*
 * Decrypts data
 * @link https://php.net/manual/zh/function.openssl-decrypt.php
 * @param string $data <p>
 * The data.
 * </p>
 * @param string $cipher_algo <p>
 * The cipher method.
 * </p>
 * @param string $passphrase <p>
 * The password.
 * </p>
 * @param int $options [optional] <p>
 * Setting to true will take a raw encoded string,
 * otherwise a base64 string is assumed for the
 * <i>data</i> parameter.
 * </p>
 * @param string $iv [optional] <p>
 * A non-NULL Initialization Vector.
 * </p>
 * @param string|null $tag <p>
 * The authentication tag in AEAD cipher mode. If it is incorrect, the authentication fails and the function returns <b>FALSE</b>.
 * </p>
 * @param string $aad [optional] <p>Additional authentication data.</p>
 * @return string|false The decrypted string on success or false on failure.
 
*/
function openssl_decrypt(
    string $data,
    string $cipher_algo,
    string $passphrase,
    int $options = 0,
    string $iv = "",
    #[PhpStormStubsElementAvailable(from: '7.1')] #[LanguageLevelTypeAware(['8.1' => 'string|null'], default: 'string')] $tag = null,
    #[PhpStormStubsElementAvailable(from: '7.1')] string $aad = ""
): string|false {}

/**
* <div id="function.openssl-cipher-iv-length" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cipher_iv_length</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cipher_iv_length</span> — <span class="dc-title">获取密码iv长度</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cipher-iv-length-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cipher_iv_length</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   获取密码初始化向量(iv)长度。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cipher-iv-length-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>    <dd>     <p class="para">      密码的方法，更多值查看 <span class="function">{@link openssl_get_cipher_methods()}</span> 函数。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cipher-iv-length-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回密码长度, 失败返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> .   </p> </div> <div class="refsect1 errors" id="refsect1-function.openssl-cipher-iv-length-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当密码方法未知时，抛出一个<strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级的错误。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-cipher-iv-length-examples">  <h3 class="title">示例</h3>  <div class="example" id="openssl-cipher-iv-length.example.basic">   <p><strong>示例 #1 <span class="function"><strong>openssl_cipher_iv_length()</strong></span> 范例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$method </span><span style="color: #007700">= </span><span style="color: #DD0000">'AES-128-CBC'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$ivlen </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_cipher_iv_length</span><span style="color: #007700">(</span><span style="color: #9876AA">$method</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">$ivlen</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">16</blockquote></div>   </div>  </div> </div></div>
*
 * (PHP 5 &gt;= PHP 5.3.3)<br/>
 * Gets the cipher iv length
 * @link https://php.net/manual/zh/function.openssl-cipher-iv-length.php
 * @param string $cipher_algo <p>
 * The method.
 * </p>
 * @return int|false the cipher length on success, or false on failure.
 
*/
function openssl_cipher_iv_length(string $cipher_algo): int|false {}

/**
* <div id="function.openssl-cipher-key-length" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cipher_key_length</h1>  <p class="verinfo">(PHP 8 &gt;= 8.2.0)</p><p class="refpurpose"><span class="refname">openssl_cipher_key_length</span> — <span class="dc-title">Gets the cipher key length</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cipher-key-length-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cipher_key_length</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets the cipher key length.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cipher-key-length-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>    <dd>     <p class="para">      The cipher method, see <span class="function">{@link openssl_get_cipher_methods()}</span> for a list of potential values.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cipher-key-length-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the cipher length on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.openssl-cipher-key-length-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Emits an <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> level error when the cipher algorithm   is unknown.  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-cipher-key-length-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-986">   <p><strong>示例 #1 <span class="function"><strong>openssl_cipher_key_length()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$method </span><span style="color: #007700">= </span><span style="color: #DD0000">'AES-128-CBC'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">openssl_cipher_key_length</span><span style="color: #007700">(</span><span style="color: #9876AA">$method</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(16)</blockquote></div>   </div>  </div> </div></div>
*
 * This function works in exactly the same way as openssl_cipher_iv_length but for a key length. This is especially
 * useful to make sure that the right key length is provided to openssl_encrypt and openssl_decrypt.
 * @param string $cipher_algo
 * @return int|false
 * @since 8.2
 
*/
function openssl_cipher_key_length(string $cipher_algo): int|false {}

/**
* <div id="function.openssl-sign" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_sign</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_sign</span> — <span class="dc-title">Generate signature</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-sign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_sign</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$signature</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">$algorithm</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.signature-algos.php#constant.openssl-algo-sha1">OPENSSL_ALGO_SHA1</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_sign()</strong></span> computes a signature for the   specified <span class="parameter" style="color:#3A95FF">data</span> by generating a cryptographic   digital signature using the private key associated with   <span class="parameter" style="color:#3A95FF">private_key</span>. Note that the data itself is   not encrypted.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-sign-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The string of data you wish to sign      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">signature</span></dt>     <dd>      <p class="para">       If the call was successful the signature is returned in       <span class="parameter" style="color:#3A95FF">signature</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> - a key, returned by <span class="function">{@link openssl_get_privatekey()}</span>      </p>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> - a <abbr title="Privacy-Enhanced Mail">PEM</abbr> formatted key      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">algorithm</span></dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> - one of these <a href="https://php.net/manual/zh/openssl.signature-algos.php" class="link">Signature Algorithms</a>.      </p>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> - a valid string returned by <span class="function">{@link openssl_get_md_methods()}</span> example, "sha256WithRSAEncryption" or "sha384".      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-sign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-sign-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> accepts an <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       or <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> instance now;       previously, a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> of type <span class="literal">OpenSSL key</span> or <span class="literal">OpenSSL X.509</span>       was accepted.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-sign-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1015">    <p><strong>示例 #1 <span class="function"><strong>openssl_sign()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// $data is assumed to contain the data to be signed<br><br>// fetch private key from file and ready it<br></span><span style="color: #9876AA">$pkeyid </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_private</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://src/openssl-0.9.6/demos/sign/key.pem"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// compute signature<br></span><span style="color: #9876AA">openssl_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$pkeyid</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// free the key from memory<br></span><span style="color: #9876AA">openssl_free_key</span><span style="color: #007700">(</span><span style="color: #9876AA">$pkeyid</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-1016">    <p><strong>示例 #2 <span class="function"><strong>openssl_sign()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//data you want to sign<br></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #DD0000">'my data'</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">//create new private and public key<br></span><span style="color: #9876AA">$new_key_pair </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">openssl_pkey_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$new_key_pair</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key_pem</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$details </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">$new_key_pair</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$public_key_pem </span><span style="color: #007700">= </span><span style="color: #9876AA">$details</span><span style="color: #007700">[</span><span style="color: #DD0000">'key'</span><span style="color: #007700">];<br><br></span><span style="color: #FF8000">//create signature<br></span><span style="color: #9876AA">openssl_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key_pem</span><span style="color: #007700">, </span><span style="color: #9876AA">OPENSSL_ALGO_SHA256</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//save for later<br></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'private_key.pem'</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key_pem</span><span style="color: #007700">);<br></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'public_key.pem'</span><span style="color: #007700">, </span><span style="color: #9876AA">$public_key_pem</span><span style="color: #007700">);<br></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'signature.dat'</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//verify signature<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$public_key_pem</span><span style="color: #007700">, </span><span style="color: #DD0000">"sha256WithRSAEncryption"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    </div> <div class="refsect1 seealso" id="refsect1-function.openssl-sign-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_verify()} - 验证签名</span></li>   </ul>   </div></div>
*
 * Generate signature
 * @link https://php.net/manual/zh/function.openssl-sign.php
 * @param string $data
 * @param string &$signature <p>
 * If the call was successful the signature is returned in
 * <i>signature</i>.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param string|int $algorithm [optional] <p>
 * For more information see the list of Signature Algorithms.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_sign(
    string $data,
    &$signature,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    string|int $algorithm = OPENSSL_ALGO_SHA1
): bool {}

/**
* <div id="function.openssl-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_verify</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_verify</span> — <span class="dc-title">验证签名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_verify</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$signature</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">$algorithm</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.signature-algos.php#constant.openssl-algo-sha1">OPENSSL_ALGO_SHA1</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_verify()</strong></span> 使用与 <span class="parameter" style="color:#3A95FF">public_key</span> 关联的公钥验证指定数据 <span class="parameter" style="color:#3A95FF">data</span>   的签名 <span class="parameter" style="color:#3A95FF">signature</span> 是否正确。这必须是与用于签名的私钥相对应的公钥。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-verify-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       以前用来生成签名的数据字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">signature</span></dt>     <dd>      <p class="para">       原始二进制字符串，通过 <span class="function">{@link openssl_sign()}</span> 或类似的函数生成。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> - 一个密钥, 通过 <span class="function">{@link openssl_get_publickey()}</span> 函数返回。      </p>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> - 一个 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式的密钥（比如 <span class="literal">-----BEGIN PUBLIC KEY-----MIIBCgK...</span>）      </p>          </dd>             <dt><span class="parameter" style="color:#3A95FF">algorithm</span></dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> - 以下签名算法之一 <a href="https://php.net/manual/zh/openssl.signature-algos.php" class="link">Signature Algorithms</a>.      </p>      <p class="para">       <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> - 由 <span class="function">{@link openssl_get_md_methods()}</span> 函数返回的可用字符串，比如，"sha1WithRSAEncryption" 或者 "sha512".      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果签名正确返回 1，签名错误返回 0，错误时返回 -1 或 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-verify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span> 或       <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-verify-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1024">    <p><strong>示例 #1 <span class="function"><strong>openssl_verify()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// $data and $signature are assumed to contain the data and the signature<br><br>// fetch public key from certificate and ready it<br></span><span style="color: #9876AA">$pubkeyid </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_public</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://src/openssl-0.9.6/demos/sign/cert.pem"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// state whether signature is okay or not<br></span><span style="color: #9876AA">$ok </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$pubkeyid</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$ok </span><span style="color: #007700">== </span><span style="color: #9876AA">1</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"good"</span><span style="color: #007700">;<br>} elseif (</span><span style="color: #9876AA">$ok </span><span style="color: #007700">== </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"bad"</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"ugly, error checking signature"</span><span style="color: #007700">;<br>}<br></span><span style="color: #FF8000">// free the key from memory<br></span><span style="color: #9876AA">openssl_free_key</span><span style="color: #007700">(</span><span style="color: #9876AA">$pubkeyid</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-1025">    <p><strong>示例 #2 <span class="function"><strong>openssl_verify()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//data you want to sign<br></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #DD0000">'my data'</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">//create new private and public key<br></span><span style="color: #9876AA">$private_key_res </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(<br>    </span><span style="color: #DD0000">"private_key_bits" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">2048</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"private_key_type" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">OPENSSL_KEYTYPE_RSA</span><span style="color: #007700">,<br>));<br></span><span style="color: #9876AA">$details </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key_res</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$public_key_res </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_public</span><span style="color: #007700">(</span><span style="color: #9876AA">$details</span><span style="color: #007700">[</span><span style="color: #DD0000">'key'</span><span style="color: #007700">]);<br><br></span><span style="color: #FF8000">//create signature<br></span><span style="color: #9876AA">openssl_sign</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key_res</span><span style="color: #007700">, </span><span style="color: #DD0000">"sha256WithRSAEncryption"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//verify signature<br></span><span style="color: #9876AA">$ok </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_verify</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$signature</span><span style="color: #007700">, </span><span style="color: #9876AA">$public_key_res</span><span style="color: #007700">, </span><span style="color: #9876AA">OPENSSL_ALGO_SHA256</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$ok </span><span style="color: #007700">== </span><span style="color: #9876AA">1</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"valid"</span><span style="color: #007700">;<br>} elseif (</span><span style="color: #9876AA">$ok </span><span style="color: #007700">== </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"invalid"</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"error: "</span><span style="color: #007700">.</span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">();<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-verify-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_sign()} - Generate signature</span></li>   </ul>   </div></div>
*
 * Verify signature
 * @link https://php.net/manual/zh/function.openssl-verify.php
 * @param string $data
 * @param string $signature
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key
 * @param string|int $algorithm [optional] <p>
 * For more information see the list of Signature Algorithms.
 * </p>
 * @return int|false 1 if the signature is correct, 0 if it is incorrect, and
 * -1 on error.
 
*/
function openssl_verify(
    string $data,
    string $signature,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key,
    string|int $algorithm = OPENSSL_ALGO_SHA1
): int|false {}

/**
* <div id="function.openssl-seal" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_seal</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_seal</span> — <span class="dc-title">密封 (加密) 数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-seal-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_seal</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$sealed_data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$encrypted_keys</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$iv</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_seal()</strong></span> 使用指定 <span class="parameter" style="color:#3A95FF">cipher_algo</span> 和随机生成的密钥密封（加密）<span class="parameter" style="color:#3A95FF">data</span>。使用   <span class="parameter" style="color:#3A95FF">public_key</span> 数组中的每个公钥对秘钥加密，并在 <span class="parameter" style="color:#3A95FF">encrypted_keys</span> 返回每个加密的 envelope 密钥。   这允许将密封的数据发送给多个接收方（前提是公钥可用）。每个接收方都必须同时接收加密的数据和用接收方的公钥加密的 envelope 密钥。生成 IV（初始化向量），并在   <span class="parameter" style="color:#3A95FF">iv</span> 中返回其值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-seal-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       要密封的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sealed_data</span></dt>     <dd>      <p class="para">       被密封后的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encrypted_keys</span></dt>     <dd>      <p class="para">       已被加密的密钥数组。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       包含公钥的 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 实例数组。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>     <dd>      <p class="para">       加密算法。       </p><div class="caution"><strong class="caution">警告</strong>        <p class="simpara">         默认值在 PHP 8.0 之前为（<span class="literal">'RC4'</span>），这不安全。强烈建议明确指定安全密码方法。        </p>       </div>           </dd>             <dt><span class="parameter" style="color:#3A95FF">iv</span></dt>     <dd>      <p class="para">       用于解密 <span class="parameter" style="color:#3A95FF">data</span> 的初始化向量。如果密码方法需要 IV，则需要它。可以通过调用 <span class="function">{@link openssl_cipher_iv_length()}</span> 时传入 <span class="parameter" style="color:#3A95FF">cipher_algo</span> 来找到它。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="simpara">        IV 无法明确设置。其中设置的任何值都将被随机生成的值覆盖。       </p>      </div>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-seal-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回密封后数据的长度，错误为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。   如果密封后的数据成功地通过 <span class="parameter" style="color:#3A95FF">sealed_data</span> 变量返回，那么信封密钥也将会通过 <span class="parameter" style="color:#3A95FF">encrypted_keys</span> 变量返回。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-seal-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       实例 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>；之前接受类型 <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span> 数组。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">cipher_algo</span> 不再是可选参数。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">iv</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-seal-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1014">    <p><strong>示例 #1 <span class="function"><strong>openssl_seal()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 假设 $data 包含要密封的数据<br></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #DD0000">"test"</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// 获取公钥<br></span><span style="color: #9876AA">$pk1 </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_publickey</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://cert1.pem"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$pk2 </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_publickey</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://cert2.pem"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 密封消息，只有 $pk1 和 $pk2 的所有者才能分别使用密钥<br>// $ekeys[0] 和 $ekeys[1] 解密 $sealed。<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_seal</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$sealed</span><span style="color: #007700">, </span><span style="color: #9876AA">$ekeys</span><span style="color: #007700">, array(</span><span style="color: #9876AA">$pk1</span><span style="color: #007700">, </span><span style="color: #9876AA">$pk2</span><span style="color: #007700">), </span><span style="color: #DD0000">'AES256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">) &gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// 可能存储 $sealed 和 $iv 值并稍后在 openssl_open 中使用<br>    </span><span style="color: #007700">echo </span><span style="color: #DD0000">"success\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-seal-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_open()} - 打开密封的数据</span></li>   </ul>   </div></div>
*
 * Seal (encrypt) data
 * @link https://php.net/manual/zh/function.openssl-seal.php
 * @param string $data
 * @param string &$sealed_data
 * @param array &$encrypted_keys
 * @param array $public_key
 * @param string $cipher_algo
 * @param string &$iv
 * @return int|false the length of the sealed data on success, or false on error.
 * If successful the sealed data is returned in
 * <i>sealed_data</i>, and the envelope keys in
 * <i>env_keys</i>.
 
*/
function openssl_seal(
    string $data,
    &$sealed_data,
    &$encrypted_keys,
    array $public_key,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] string $cipher_algo = '',
    #[PhpStormStubsElementAvailable(from: '8.0')] string $cipher_algo,
    #[PhpStormStubsElementAvailable(from: '7.0')] &$iv = null
): int|false {}

/**
* <div id="function.openssl-open" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_open</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_open</span> — <span class="dc-title">打开密封的数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_open</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$output</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$encrypted_key</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$iv</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_open()</strong></span> 使用通过 <span class="parameter" style="color:#3A95FF">private_key</span> 从 <span class="parameter" style="color:#3A95FF">encrypted_key</span> 解密得到的信封密钥来打开/解密   <span class="parameter" style="color:#3A95FF">data</span>。解密过程采用 <span class="parameter" style="color:#3A95FF">cipher_algo</span> 和 <span class="parameter" style="color:#3A95FF">iv</span>。仅当加密方法需要时，才需提供   iv。该函数将解密后的数据填充至 <span class="parameter" style="color:#3A95FF">output</span>。信封密钥通常在使用与私钥对应的公钥密封数据时生成。更多信息请参阅 <span class="function">{@link openssl_seal()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-open-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       密封数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output</span></dt>     <dd>      <p class="para">       如果调用成功，则在这个参数中返回打开的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encrypted_key</span></dt>     <dd>      <p class="para">       可使用 <span class="parameter" style="color:#3A95FF">private_key</span> 解密的对称加密密钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       用于解密 <span class="parameter" style="color:#3A95FF">encrypted_key</span> 的私钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>     <dd>      <p class="para">       用于解密 <span class="parameter" style="color:#3A95FF">data</span> 的密码算法。       </p><div class="caution"><strong class="caution">警告</strong>        <p class="simpara">         PHP 8.0 之前版本的默认值为（<span class="literal">'RC4'</span>），该算法存在安全隐患。强烈建议明确指定安全密码方法。        </p>       </div>           </dd>             <dt><span class="parameter" style="color:#3A95FF">iv</span></dt>     <dd>      <p class="para">       用于解密 <span class="parameter" style="color:#3A95FF">data</span> 的初始化向量。当密码算法需要 IV 时，必须提供该参数。可通过调用       <span class="function">{@link openssl_cipher_iv_length()}</span> 并传入 <span class="parameter" style="color:#3A95FF">cipher_algo</span> 来确认是否需要 IV。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-open-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">cipher_algo</span> 不再是可选参数。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-open-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1004">    <p><strong>示例 #1 <span class="function"><strong>openssl_open()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// $sealed、$env_key 和 $iv 分别假设包含密封数据、信封密钥和初始化向量，这些参数均由数据密封方提供。<br><br>// 从 private_key.pem 文件中获取私钥<br></span><span style="color: #9876AA">$pkey </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_privatekey</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://private_key.pem"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 解密数据并存储到 $open<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_open</span><span style="color: #007700">(</span><span style="color: #9876AA">$sealed</span><span style="color: #007700">, </span><span style="color: #9876AA">$open</span><span style="color: #007700">, </span><span style="color: #9876AA">$env_key</span><span style="color: #007700">, </span><span style="color: #9876AA">$pkey</span><span style="color: #007700">, </span><span style="color: #DD0000">'AES256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"Here is the opened data: "</span><span style="color: #007700">, </span><span style="color: #9876AA">$open</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"Failed to open data"</span><span style="color: #007700">;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-open-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_seal()} - 密封 (加密) 数据</span></li>   </ul>   </div></div>
*
 * Open sealed data
 * @link https://php.net/manual/zh/function.openssl-open.php
 * @param string $data
 * @param string &$output <p>
 * If the call is successful the opened data is returned in this
 * parameter.
 * </p>
 * @param string $encrypted_key
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param string $cipher_algo The cipher method.
 * @param string|null $iv [optional] The initialization vector.
 * @return bool true on success or false on failure.
 
*/
function openssl_open(
    string $data,
    &$output,
    string $encrypted_key,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    #[PhpStormStubsElementAvailable(from: '7.0', to: '7.4')] string $cipher_algo = '',
    #[PhpStormStubsElementAvailable(from: '8.0')] string $cipher_algo,
    #[PhpStormStubsElementAvailable(from: '7.0')] ?string $iv
): bool {}

/**
* <div id="function.openssl-pbkdf2" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pbkdf2</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pbkdf2</span> — <span class="dc-title">生成 PKCS5 v2 PBKDF2 字符串</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-pbkdf2-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pbkdf2</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$salt</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$key_length</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$iterations</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$digest_algo</span><span class="initializer"> = "sha1"</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pbkdf2()</strong></span> 计算 PBKDF2 (Password-Based Key Derivation Function 2)，在 PKCS5 v2 中定义的密钥的推导函数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pbkdf2-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      派生密钥所生成的密码。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">salt</span></dt>    <dd>     <p class="para">      PBKDF2 推荐不少于 128 位（16 字节）的密码盐值。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key_length</span></dt>    <dd>     <p class="para">      希望输出密钥的长度。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">iterations</span></dt>    <dd>     <p class="para">      需要的迭代次数。<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf" class="link external">» NIST       建议至少 10,000 次</a>。自 2023 年起，OWASP 针对 PBKDF2-HMAC-SHA256 推荐 600,000 次迭代，针对 PBKDF2-HMAC-SHA512 推荐 210,000 次。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">digest_algo</span></dt>    <dd>     <p class="para">      在 <span class="function">{@link openssl_get_md_methods()}</span> 中可选的散列或摘要算法。默认是 SHA-1。推荐设置为 SHA-256 或 SHA-512。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pbkdf2-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回原始二进制字符串 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pbkdf2-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1005">    <p><strong>示例 #1 openssl_pbkdf2() 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$password </span><span style="color: #007700">= </span><span style="color: #DD0000">'password'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$salt </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">16</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$keyLength </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$iterations </span><span style="color: #007700">= </span><span style="color: #9876AA">600000</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$generated_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pbkdf2</span><span style="color: #007700">(</span><span style="color: #9876AA">$password</span><span style="color: #007700">, </span><span style="color: #9876AA">$salt</span><span style="color: #007700">, </span><span style="color: #9876AA">$keyLength</span><span style="color: #007700">, </span><span style="color: #9876AA">$iterations</span><span style="color: #007700">, </span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$generated_key</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$generated_key</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-pbkdf2-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link hash_pbkdf2()} - 生成所提供密码的 PBKDF2 密钥导出</span></li>    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>   </ul>   </div></div>
*
 * Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1
 * @link https://secure.php.net/manual/en/function.openssl-pbkdf2.php
 * @param string $password
 * @param string $salt
 * @param int $key_length
 * @param int $iterations
 * @param string $digest_algo [optional]
 * @return string|false Returns string or FALSE on failure.
 * @since 5.5
 
*/
function openssl_pbkdf2(string $password, string $salt, int $key_length, int $iterations, string $digest_algo = 'sha1'): string|false {}

/**
* <div id="function.openssl-pkcs7-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs7_verify</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs7_verify</span> — <span class="dc-title">校验一个已签名的 S/MIME 消息的签名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs7-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs7_verify</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$signers_certificates_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$ca_info</span><span class="initializer"> = []</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$untrusted_certificates_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$content</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$output_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs7_verify()</strong></span>   读取给定文件中的 S/MIME 消息并且检查数字签名。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs7-verify-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>     <dd>      <p class="para">       消息的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">flags</span> 可以用来影响如何校验签名 - 参见       <a href="https://php.net/manual/zh/openssl.pkcs7.flags.php" class="link">PKCS7 常量</a>       获取更多信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">signers_certificates_filename</span></dt>     <dd>      <p class="para">       如果已指定 <span class="parameter" style="color:#3A95FF">signers_certificates_filename</span>       输出文件，它应该是一个用以保存文件的字符串名称，签名消息的个人证书将以 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 的格式保存起来。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ca_info</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">ca_info</span> 被指定了，它应该保存关于受信任的CA证书的信息供在验证过程中使用 - 参见       <a href="https://php.net/manual/zh/openssl.cert.verification.php" class="link">证书校验</a>       获取关于该参数的更多信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span> 被指定了，该文件包含了一堆会被作为不受信任的ca使用的证书。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">content</span></dt>     <dd>      <p class="para">       你可以使用 <span class="parameter" style="color:#3A95FF">content</span> 来指定带有已被验证数据的文件名，该文件内容已去掉了签名信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">      </p>     </dd>        </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs7-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果签名已被认证，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, 如果不正确 (消息已被篡改或者签名证书不可用) 则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>,   或者 - 错误时返回1.  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs7-verify-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">signers_certificates_filename</span>、<span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span>、<span class="parameter" style="color:#3A95FF">content</span>       和 <span class="parameter" style="color:#3A95FF">output_filename</span> 现在可为 null。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       新增 <span class="parameter" style="color:#3A95FF">output_filename</span> 参数。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 notes" id="refsect1-function.openssl-pkcs7-verify-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    正如 RFC 2045 中指定的，<span class="parameter" style="color:#3A95FF">input_filename</span> 参数最多不可超过 76 个字符串。   </span>  </p></blockquote> </div></div>
*
 * Verifies the signature of an S/MIME signed message
 * @link https://php.net/manual/zh/function.openssl-pkcs7-verify.php
 * @param string $input_filename <p>
 * Path to the message.
 * </p>
 * @param int $flags <p>
 * <i>flags</i> can be used to affect how the signature is
 * verified - see PKCS7 constants
 * for more information.
 * </p>
 * @param string|null $signers_certificates_filename [optional] <p>
 * If the <i>outfilename</i> is specified, it should be a
 * string holding the name of a file into which the certificates of the
 * persons that signed the messages will be stored in PEM format.
 * </p>
 * @param array $ca_info <p>
 * If the <i>cainfo</i> is specified, it should hold
 * information about the trusted CA certificates to use in the verification
 * process - see certificate
 * verification for more information about this parameter.
 * </p>
 * @param string|null $untrusted_certificates_filename [optional] <p>
 * If the <i>extracerts</i> is specified, it is the filename
 * of a file containing a bunch of certificates to use as untrusted CAs.
 * </p>
 * @param string|null $content [optional] <p>
 * You can specify a filename with <i>content</i> that will
 * be filled with the verified data, but with the signature information
 * stripped.
 * @param string|null $output_filename [optional]
 * </p>
 * @return bool|int true if the signature is verified, false if it is not correct
 * (the message has been tampered with, or the signing certificate is invalid),
 * or -1 on error.
 
*/
function openssl_pkcs7_verify(
    string $input_filename,
    int $flags,
    ?string $signers_certificates_filename,
    array $ca_info = [],
    ?string $untrusted_certificates_filename,
    ?string $content,
    #[PhpStormStubsElementAvailable("7.2")] ?string $output_filename
): int|bool {}

/**
* <div id="function.openssl-pkcs7-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs7_decrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs7_decrypt</span> — <span class="dc-title">解密一个 S/MIME 加密的消息</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs7-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs7_decrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   使用由 <span class="parameter" style="color:#3A95FF">certificate</span> 和 <span class="parameter" style="color:#3A95FF">private_key</span> 指定的证书和与之关联的私钥解密 <span class="parameter" style="color:#3A95FF">input_filename</span> 文件中包含的 S/MIME 加密消息。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs7-decrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">       解密的消息将被存入的文件中，以 <span class="parameter" style="color:#3A95FF">output_filename</span> 命名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs7-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs7-decrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkcs7-decrypt-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1007">    <p><strong>示例 #1 <span class="function"><strong>openssl_pkcs7_decrypt()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// $cert and $key are assumed to contain your personal certificate and private<br>// key pair, and that you are the recipient of an S/MIME message<br></span><span style="color: #9876AA">$infilename </span><span style="color: #007700">= </span><span style="color: #DD0000">"encrypted.msg"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// this file holds your encrypted message<br></span><span style="color: #9876AA">$outfilename </span><span style="color: #007700">= </span><span style="color: #DD0000">"decrypted.msg"</span><span style="color: #007700">; </span><span style="color: #FF8000">// make sure you can write to this file<br><br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_pkcs7_decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$infilename</span><span style="color: #007700">, </span><span style="color: #9876AA">$outfilename</span><span style="color: #007700">, </span><span style="color: #9876AA">$cert</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">)) {<br>    echo </span><span style="color: #DD0000">"decrypted!"</span><span style="color: #007700">;<br>} else {<br>    echo </span><span style="color: #DD0000">"failed to decrypt!"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Decrypts an S/MIME encrypted message
 * @link https://php.net/manual/zh/function.openssl-pkcs7-decrypt.php
 * @param string $input_filename
 * @param string $output_filename <p>
 * The decrypted message is written to the file specified by
 * <i>outfilename</i>.
 * </p>
 * @param OpenSSLCertificate|string|resource $certificate
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string|null $private_key [optional]
 * @return bool true on success or false on failure.
 
*/
function openssl_pkcs7_decrypt(
    string $input_filename,
    string $output_filename,
    $certificate,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string|null'], default: 'resource|array|string|null')] $private_key
): bool {}

/**
* <div id="function.openssl-pkcs7-sign" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs7_sign</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs7_sign</span> — <span class="dc-title">对一个 S/MIME 消息进行签名</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs7-sign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs7_sign</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$headers</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.pkcs7.flags.php#constant.pkcs7-detached">PKCS7_DETACHED</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$untrusted_certificates_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs7_sign()</strong></span> 获取名为 <span class="parameter" style="color:#3A95FF">input_filename</span> 的文件内容，并使用由 <span class="parameter" style="color:#3A95FF">certificate</span> 和 <span class="parameter" style="color:#3A95FF">private_key</span> 指定的证书和与之匹配的私钥对其进行加密  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs7-sign-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>     <dd>      <p class="para">        你打算用来进行数字签名的输入文件。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">        将写入数字签名的文件。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">        用来对 <span class="parameter" style="color:#3A95FF">input_filename</span> 进行数字签名的 X.509 证书，参见 <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">密钥/证书参数</a>获取可用列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">        <span class="parameter" style="color:#3A95FF">private_key</span> 是对应 <span class="parameter" style="color:#3A95FF">certificate</span> 证书的私钥。        参见 <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">公/私钥参数</a>获取可用列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">headers</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">headers</span>是一个包含头信息的数组，在它被签名后，它将被预先对数据进行预处理 (参见       <span class="function">{@link openssl_pkcs7_encrypt()}</span> 获取关于该参数格式的更多信息)。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">flags</span> 可以用来改变输出 - 参见 <a href="https://php.net/manual/zh/openssl.pkcs7.flags.php" class="link">PKCS7常量</a>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span> 指定一个文件的名称，其中包含一组含有签名的额外的证书，这些证书可以用来帮助接收者验证您使用的证书。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs7-sign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs7-sign-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型 <span class="literal">OpenSSL key</span>       或 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkcs7-sign-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1010">    <p><strong>示例 #1 <span class="function"><strong>openssl_pkcs7_sign()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// the message you want to sign so that recipient can be sure it was you that<br>// sent it<br></span><span style="color: #9876AA">$data </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000"><br>You have my authorization to spend $10,000 on dinner expenses.<br><br>The CEO<br></span><span style="color: #007700">EOD;<br></span><span style="color: #FF8000">// save message to file<br></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"msg.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// encrypt it<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_pkcs7_sign</span><span style="color: #007700">(</span><span style="color: #DD0000">"msg.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"signed.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"file://mycert.pem"</span><span style="color: #007700">,<br>    array(</span><span style="color: #DD0000">"file://mycert.pem"</span><span style="color: #007700">, </span><span style="color: #DD0000">"mypassphrase"</span><span style="color: #007700">),<br>    array(</span><span style="color: #DD0000">"To" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"joes@example.com"</span><span style="color: #007700">, </span><span style="color: #FF8000">// keyed syntax<br>          </span><span style="color: #DD0000">"From: HQ &lt;ceo@example.com&gt;"</span><span style="color: #007700">, </span><span style="color: #FF8000">// indexed syntax<br>          </span><span style="color: #DD0000">"Subject" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Eyes only"</span><span style="color: #007700">)<br>    )) {<br>    </span><span style="color: #FF8000">// message signed - send it!<br>    </span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">"sendmail_path"</span><span style="color: #007700">) . </span><span style="color: #DD0000">" &lt; signed.txt"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Sign an S/MIME message
 * @link https://php.net/manual/zh/function.openssl-pkcs7-sign.php
 * @param string $input_filename
 * @param string $output_filename
 * @param OpenSSLCertificate|string|resource $certificate
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param array|null $headers <p>
 * <i>headers</i> is an array of headers that
 * will be prepended to the data after it has been signed (see
 * <b>openssl_pkcs7_encrypt</b> for more information about
 * the format of this parameter).
 * </p>
 * @param int $flags [optional] <p>
 * <i>flags</i> can be used to alter the output - see PKCS7 constants.
 * </p>
 * @param string|null $untrusted_certificates_filename [optional] <p>
 * <i>extracerts</i> specifies the name of a file containing
 * a bunch of extra certificates to include in the signature which can for
 * example be used to help the recipient to verify the certificate that you used.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_pkcs7_sign(
    string $input_filename,
    string $output_filename,
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|string"], default: "resource|string")] $certificate,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    ?array $headers,
    int $flags = PKCS7_DETACHED,
    ?string $untrusted_certificates_filename
): bool {}

/**
* <div id="function.openssl-pkcs7-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs7_encrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs7_encrypt</span> — <span class="dc-title">加密一个 S/MIME 消息</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-pkcs7-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs7_encrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$headers</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-aes-128-cbc">OPENSSL_CIPHER_AES_128_CBC</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkcs7_encrypt()</strong></span> 获取名为 <span class="parameter" style="color:#3A95FF">input_filename</span> 的文件内容并使用 RC2 40   位的密码将之加密，以至于他们只能被预期的名为 <span class="parameter" style="color:#3A95FF">certificate</span> 的接收者阅读。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs7-encrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>     <dd>      <p class="para">       一个单独的X.509证书，或者一个X.509证书的数组。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">headers</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">headers</span> 是包含头信息的数组，在被加密后将对数据进行预处理。      </p>      <p class="para">       <span class="parameter" style="color:#3A95FF">headers</span> 可以是以头名为键值的关联数组，也可以是一个索引数组，其中每个元素都包含一个单独的标题行      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">flags</span>用来指定影响编码过程的选项 - 参见 <a href="https://php.net/manual/zh/openssl.pkcs7.flags.php" class="link">PKCS7       常量</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cipcipher_algoherid</span></dt>     <dd>      <p class="para">       <a href="https://php.net/manual/zh/openssl.ciphers.php" class="link">密码常量</a>之一。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs7-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-pkcs7-encrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       默认密码算法（<span class="parameter" style="color:#3A95FF">cipher_algo</span>）现在是 AES-128-CBC（<strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-aes-128-cbc">OPENSSL_CIPHER_AES_128_CBC</a></span></strong>）。以前，使用       PKCS7/CMS (<strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-rc2-40">OPENSSL_CIPHER_RC2_40</a></span></strong>)。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">certificate</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例；之前接受类型 <span class="literal">OpenSSL X.509 CSR</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkcs7-encrypt-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1008">    <p><strong>示例 #1 <span class="function"><strong>openssl_pkcs7_encrypt()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// the message you want to encrypt and send to your secret agent<br>// in the field, known as nighthawk.  You have his certificate<br>// in the file nighthawk.pem<br></span><span style="color: #9876AA">$data </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br></span><span style="color: #DD0000">Nighthawk,<br><br>Top secret, for your eyes only!<br><br>The enemy is closing in! Meet me at the cafe at 8.30am<br>to collect your forged passport!<br><br>HQ<br></span><span style="color: #007700">EOD;<br><br></span><span style="color: #FF8000">// load key<br></span><span style="color: #9876AA">$key </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"nighthawk.pem"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// save message to file<br></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"msg.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// encrypt it<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">openssl_pkcs7_encrypt</span><span style="color: #007700">(</span><span style="color: #DD0000">"msg.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"enc.txt"</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">,<br>    array(</span><span style="color: #DD0000">"To" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"nighthawk@example.com"</span><span style="color: #007700">, </span><span style="color: #FF8000">// keyed syntax<br>          </span><span style="color: #DD0000">"From: HQ &lt;hq@example.com&gt;"</span><span style="color: #007700">, </span><span style="color: #FF8000">// indexed syntax<br>          </span><span style="color: #DD0000">"Subject" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Eyes only"</span><span style="color: #007700">))) {<br>    </span><span style="color: #FF8000">// message encrypted - send it!<br>    </span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">"sendmail_path"</span><span style="color: #007700">) . </span><span style="color: #DD0000">" &lt; enc.txt"</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Encrypt an S/MIME message
 * @link https://php.net/manual/zh/function.openssl-pkcs7-encrypt.php
 * @param string $input_filename
 * @param string $output_filename
 * @param OpenSSLCertificate|array|string|resource $certificate <p>
 * Either a lone X.509 certificate, or an array of X.509 certificates.
 * </p>
 * @param array|null $headers <p>
 * <i>headers</i> is an array of headers that
 * will be prepended to the data after it has been encrypted.
 * </p>
 * <p>
 * <i>headers</i> can be either an associative array
 * keyed by header name, or an indexed array, where each element contains
 * a single header line.
 * </p>
 * @param int $flags [optional] <p>
 * <i>flags</i> can be used to specify options that affect
 * the encoding process - see PKCS7
 * constants.
 * </p>
 * @param int $cipher_algo [optional] <p>
 * One of cipher constants.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_pkcs7_encrypt(
    string $input_filename,
    string $output_filename,
    #[LanguageLevelTypeAware(["8.0" => "OpenSSLCertificate|array|string"], default: "resource|array|string")] $certificate,
    ?array $headers,
    int $flags = 0,
    int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC
): bool {}

/**
* <div id="function.openssl-private-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_private_encrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_private_encrypt</span> — <span class="dc-title">使用私钥加密数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-private-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_private_encrypt</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$encrypted_data</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$padding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_private_encrypt()</strong></span> 使用私钥 <span class="parameter" style="color:#3A95FF">private_key</span> 加密数据 <span class="parameter" style="color:#3A95FF">data</span>   并且将结果保存至变量 <span class="parameter" style="color:#3A95FF">encrypted_data</span>中。加密后的数据可以通过<span class="function">{@link openssl_public_decrypt()}</span>函数来解密。   </p>  <p class="para">   该函数用来签名数据（或者哈希）让别人相信数据并不是其他人写的。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-private-encrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encrypted_data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 必须是与用于解密数据的公钥对应的私钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">padding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">padding</span> 可以是如下之一：       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-no-padding">OPENSSL_NO_PADDING</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-private-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-private-encrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>       或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span> 实例；之前接受类型       <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-private-encrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_public_encrypt()} - 使用公钥加密数据</span></li>    <li><span class="function">{@link openssl_public_decrypt()} - 使用公钥解密数据</span></li>   </ul>   </div></div>
*
 * Encrypts data with private key
 * @link https://php.net/manual/zh/function.openssl-private-encrypt.php
 * @param string $data
 * @param string &$encrypted_data
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param int $padding [optional] <p>
 * <i>padding</i> can be one of
 * <b>OPENSSL_PKCS1_PADDING</b>,
 * <b>OPENSSL_NO_PADDING</b>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_private_encrypt(
    string $data,
    &$encrypted_data,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    int $padding = OPENSSL_PKCS1_PADDING
): bool {}

/**
* <div id="function.openssl-private-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_private_decrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_private_decrypt</span> — <span class="dc-title">使用私钥解密数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-private-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_private_decrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$decrypted_data</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$padding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">      <span class="function"><strong>openssl_private_decrypt()</strong></span> 解密之前通过 <span class="function">{@link openssl_public_encrypt()}</span> 加密的   <span class="parameter" style="color:#3A95FF">data</span>，并将结果保存至 <span class="parameter" style="color:#3A95FF">decrypted_data</span> 中。   </p>  <p class="para">   可以使用该函数来解密只对个人有效的数据。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-private-decrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">decrypted_data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 必须是与用于加密数据的公钥对应的私钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">padding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">padding</span>        可以是如下值：<strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-sslv23-padding">OPENSSL_SSLV23_PADDING</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-oaep-padding">OPENSSL_PKCS1_OAEP_PADDING</a></span></strong>、<strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-no-padding">OPENSSL_NO_PADDING</a></span></strong>。      </p>     </dd>       </dl>   </div> <div class="refsect1 changelog" id="refsect1-function.openssl-private-decrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例。之前接受 <span class="literal">OpenSSL key</span> 类型或 <span class="literal">OpenSSL X.509</span> 类型的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-private-decrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_public_encrypt()} - 使用公钥加密数据</span></li>    <li><span class="function">{@link openssl_public_decrypt()} - 使用公钥解密数据</span></li>   </ul>   </div></div>
*
 * Decrypts data with private key
 * @link https://php.net/manual/zh/function.openssl-private-decrypt.php
 * @param string $data
 * @param string &$decrypted_data
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key <p>
 * <i>key</i> must be the private key corresponding that
 * was used to encrypt the data.
 * </p>
 * @param int $padding [optional] <p>
 * <i>padding</i> can be one of
 * <b>OPENSSL_PKCS1_PADDING</b>,
 * <b>OPENSSL_SSLV23_PADDING</b>,
 * <b>OPENSSL_PKCS1_OAEP_PADDING</b>,
 * <b>OPENSSL_NO_PADDING</b>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_private_decrypt(
    string $data,
    &$decrypted_data,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    int $padding = OPENSSL_PKCS1_PADDING
): bool {}

/**
* <div id="function.openssl-public-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_public_encrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_public_encrypt</span> — <span class="dc-title">使用公钥加密数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-public-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_public_encrypt</strong></span>(<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$encrypted_data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$padding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_public_encrypt()</strong></span> 使用公钥 <span class="parameter" style="color:#3A95FF">public_key</span> 解密数据 <span class="parameter" style="color:#3A95FF">data</span>   并且将结果保存到变量 <span class="parameter" style="color:#3A95FF">encrypted_data</span> 中。加密的数据可以通过 <span class="function">{@link openssl_private_decrypt()}</span> 函数解密。   </p>  <p class="para">   该函数可以用来加密数据，供该公钥匹配的私钥拥有者读取。 它也可以用来在数据库中存储安全数据。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-public-encrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encrypted_data</span></dt>     <dd>      <p class="para">       这将保存加密的结果。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">public_key</span> 必须是与用于解密数据的私钥对应的公钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">padding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">padding</span> can be one of       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-sslv23-padding">OPENSSL_SSLV23_PADDING</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-oaep-padding">OPENSSL_PKCS1_OAEP_PADDING</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-no-padding">OPENSSL_NO_PADDING</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-public-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-public-encrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例。之前接受类型 <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-public-encrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_private_encrypt()} - 使用私钥加密数据</span></li>    <li><span class="function">{@link openssl_private_decrypt()} - 使用私钥解密数据</span></li>   </ul>   </div></div>
*
 * Encrypts data with public key
 * @link https://php.net/manual/zh/function.openssl-public-encrypt.php
 * @param string $data
 * @param string &$encrypted_data <p>
 * This will hold the result of the encryption.
 * </p>
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key <p>
 * The public key.
 * </p>
 * @param int $padding [optional] <p>
 * <i>padding</i> can be one of
 * <b>OPENSSL_PKCS1_PADDING</b>,
 * <b>OPENSSL_SSLV23_PADDING</b>,
 * <b>OPENSSL_PKCS1_OAEP_PADDING</b>,
 * <b>OPENSSL_NO_PADDING</b>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_public_encrypt(
    string $data,
    &$encrypted_data,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key,
    int $padding = OPENSSL_PKCS1_PADDING
): bool {}

/**
* <div id="function.openssl-public-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_public_decrypt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_public_decrypt</span> — <span class="dc-title">使用公钥解密数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-public-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_public_decrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$decrypted_data</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$padding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_public_decrypt()</strong></span> 解密先前由 <span class="function">{@link openssl_private_encrypt()}</span> 加密的数据 <span class="parameter" style="color:#3A95FF">data</span> 并且将结果保存至变量 <span class="parameter" style="color:#3A95FF">decrypted_data</span>中。    </p>  <p class="para">   你可以用该函数来校验消息是否是私钥拥有者写的。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-public-decrypt-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">decrypted_data</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">private_key</span> 必须是与用于加密数据的公钥对应的私钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">padding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">padding</span> 可以是如下至       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-pkcs1-padding">OPENSSL_PKCS1_PADDING</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/openssl.padding.php#constant.openssl-no-padding">OPENSSL_NO_PADDING</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-public-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-public-decrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">public_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span> 或 <span class="classname"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="classname">OpenSSLCertificate</a></span>       实例。之前接受类型 <span class="literal">OpenSSL key</span> 或 <span class="literal">OpenSSL X.509</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.openssl-public-decrypt-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_private_encrypt()} - 使用私钥加密数据</span></li>    <li><span class="function">{@link openssl_private_decrypt()} - 使用私钥解密数据</span></li>   </ul>   </div></div>
*
 * Decrypts data with public key
 * @link https://php.net/manual/zh/function.openssl-public-decrypt.php
 * @param string $data
 * @param string &$decrypted_data
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key <p>
 * <i>key</i> must be the public key corresponding that
 * was used to encrypt the data.
 * </p>
 * @param int $padding [optional] <p>
 * <i>padding</i> can be one of
 * <b>OPENSSL_PKCS1_PADDING</b>,
 * <b>OPENSSL_NO_PADDING</b>.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function openssl_public_decrypt(
    string $data,
    &$decrypted_data,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $public_key,
    int $padding = OPENSSL_PKCS1_PADDING
): bool {}

/**
* <div id="function.openssl-get-md-methods" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_md_methods</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_md_methods</span> — <span class="dc-title">获取可用的摘要算法</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-md-methods-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_get_md_methods</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$aliases</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取可用的摘要算法列表  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-get-md-methods-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">aliases</span></dt>     <dd>      <p class="para">       设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，返回的<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>中将会包含摘要的别名.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-get-md-methods-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   含有可用摘要算法的<span class="type" style="color:#EAB766">数组</span>  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-get-md-methods-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1003">    <p><strong>示例 #1 <span class="function"><strong>openssl_get_md_methods()</strong></span> 范例：</strong></p>    <div class="example-contents"><p>     显示了可用的摘要，以及哪些别名可能是可用的。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$digests             </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_md_methods</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$digests_and_aliases </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_md_methods</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$digest_aliases      </span><span style="color: #007700">= </span><span style="color: #9876AA">array_diff</span><span style="color: #007700">(</span><span style="color: #9876AA">$digests_and_aliases</span><span style="color: #007700">, </span><span style="color: #9876AA">$digests</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$digests</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$digest_aliases</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>    [0] =&gt; DSA<br>    [1] =&gt; DSA-SHA<br>    [2] =&gt; MD2<br>    [3] =&gt; MD4<br>    [4] =&gt; MD5<br>    [5] =&gt; RIPEMD160<br>    [6] =&gt; SHA<br>    [7] =&gt; SHA1<br>    [8] =&gt; SHA224<br>    [9] =&gt; SHA256<br>    [10] =&gt; SHA384<br>    [11] =&gt; SHA512<br>    [12] =&gt; dsaEncryption<br>    [13] =&gt; dsaWithSHA<br>    [14] =&gt; ecdsa-with-SHA1<br>    [15] =&gt; md2<br>    [16] =&gt; md4<br>    [17] =&gt; md5<br>    [18] =&gt; ripemd160<br>    [19] =&gt; sha<br>    [20] =&gt; sha1<br>    [21] =&gt; sha224<br>    [22] =&gt; sha256<br>    [23] =&gt; sha384<br>    [24] =&gt; sha512<br>)<br>Array<br>(<br>    [2] =&gt; DSA-SHA1<br>    [3] =&gt; DSA-SHA1-old<br>    [4] =&gt; DSS1<br>    [9] =&gt; RSA-MD2<br>    [10] =&gt; RSA-MD4<br>    [11] =&gt; RSA-MD5<br>    [12] =&gt; RSA-RIPEMD160<br>    [13] =&gt; RSA-SHA<br>    [14] =&gt; RSA-SHA1<br>    [15] =&gt; RSA-SHA1-2<br>    [16] =&gt; RSA-SHA224<br>    [17] =&gt; RSA-SHA256<br>    [18] =&gt; RSA-SHA384<br>    [19] =&gt; RSA-SHA512<br>    [28] =&gt; dsaWithSHA1<br>    [29] =&gt; dss1<br>    [32] =&gt; md2WithRSAEncryption<br>    [34] =&gt; md4WithRSAEncryption<br>    [36] =&gt; md5WithRSAEncryption<br>    [37] =&gt; ripemd<br>    [39] =&gt; ripemd160WithRSA<br>    [40] =&gt; rmd160<br>    [43] =&gt; sha1WithRSAEncryption<br>    [45] =&gt; sha224WithRSAEncryption<br>    [47] =&gt; sha256WithRSAEncryption<br>    [49] =&gt; sha384WithRSAEncryption<br>    [51] =&gt; sha512WithRSAEncryption<br>    [52] =&gt; shaWithRSAEncryption<br>    [53] =&gt; ssl2-md5<br>    [54] =&gt; ssl3-md5<br>    [55] =&gt; ssl3-sha1<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-get-md-methods-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_digest()} - 计算摘要</span></li>    <li><span class="function">{@link openssl_get_cipher_methods()} - 获取可用的加密算法</span></li>   </ul>   </div></div>
*
 * Gets available digest methods
 * @link https://php.net/manual/zh/function.openssl-get-md-methods.php
 * @param bool $aliases [optional] <p>
 * Set to true if digest aliases should be included within the
 * returned array.
 * </p>
 * @return array An array of available digest methods.
 
*/
function openssl_get_md_methods(bool $aliases = false): array {}

/**
* <div id="function.openssl-get-cipher-methods" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_cipher_methods</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_cipher_methods</span> — <span class="dc-title">获取可用的加密算法</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-cipher-methods-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_get_cipher_methods</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$aliases</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取可用的加密算法的列表。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-get-cipher-methods-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">aliases</span></dt>     <dd>      <p class="para">       如果密码别名应该包含在返回的<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>中，则设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-get-cipher-methods-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   包含可用加密算法的<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>。   请注意：在 OpenSSL 1.1.1 版本之前，返回加密算法的拼法大小写都有；   从 OpenSSL 1.1.1 开始，统一只返回小写的形式。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-get-cipher-methods-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1001">    <p><strong>示例 #1 <span class="function"><strong>openssl_get_cipher_methods()</strong></span> example</strong></p>    <div class="example-contents"><p>     展示了哪些加密算法能被找到，哪些别名可用。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$ciphers             </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_cipher_methods</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$ciphers_and_aliases </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_cipher_methods</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$cipher_aliases      </span><span style="color: #007700">= </span><span style="color: #9876AA">array_diff</span><span style="color: #007700">(</span><span style="color: #9876AA">$ciphers_and_aliases</span><span style="color: #007700">, </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">//ECB mode should be avoided<br></span><span style="color: #9876AA">$ciphers </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">( </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$n</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$n</span><span style="color: #007700">,</span><span style="color: #DD0000">"ecb"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br><br></span><span style="color: #FF8000">//At least as early as Aug 2016, Openssl declared the following weak: RC2, RC4, DES, 3DES, MD5 based<br></span><span style="color: #9876AA">$ciphers </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">( </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"des"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br></span><span style="color: #9876AA">$ciphers </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">( </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"rc2"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br></span><span style="color: #9876AA">$ciphers </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">( </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"rc4"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br></span><span style="color: #9876AA">$ciphers </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">( </span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">, function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"md5"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br></span><span style="color: #9876AA">$cipher_aliases </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher_aliases</span><span style="color: #007700">,function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"des"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br></span><span style="color: #9876AA">$cipher_aliases </span><span style="color: #007700">= </span><span style="color: #9876AA">array_filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher_aliases</span><span style="color: #007700">,function(</span><span style="color: #9876AA">$c</span><span style="color: #007700">) { return </span><span style="color: #9876AA">stripos</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">,</span><span style="color: #DD0000">"rc2"</span><span style="color: #007700">)===</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; } );<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$ciphers</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$cipher_aliases</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>    [0] =&gt; aes-128-cbc<br>    [1] =&gt; aes-128-cbc-hmac-sha1<br>    [2] =&gt; aes-128-cbc-hmac-sha256<br>    [3] =&gt; aes-128-ccm<br>    [4] =&gt; aes-128-cfb<br>    [5] =&gt; aes-128-cfb1<br>    [6] =&gt; aes-128-cfb8<br>    [7] =&gt; aes-128-ctr<br>    [9] =&gt; aes-128-gcm<br>    [10] =&gt; aes-128-ocb<br>    [11] =&gt; aes-128-ofb<br>    [12] =&gt; aes-128-xts<br>    [13] =&gt; aes-192-cbc<br>    [14] =&gt; aes-192-ccm<br>    [15] =&gt; aes-192-cfb<br>    [16] =&gt; aes-192-cfb1<br>    [17] =&gt; aes-192-cfb8<br>    [18] =&gt; aes-192-ctr<br>    [20] =&gt; aes-192-gcm<br>    [21] =&gt; aes-192-ocb<br>    [22] =&gt; aes-192-ofb<br>    [23] =&gt; aes-256-cbc<br>    [24] =&gt; aes-256-cbc-hmac-sha1<br>    [25] =&gt; aes-256-cbc-hmac-sha256<br>    [26] =&gt; aes-256-ccm<br>    [27] =&gt; aes-256-cfb<br>    [28] =&gt; aes-256-cfb1<br>    [29] =&gt; aes-256-cfb8<br>    [30] =&gt; aes-256-ctr<br>    [32] =&gt; aes-256-gcm<br>    [33] =&gt; aes-256-ocb<br>    [34] =&gt; aes-256-ofb<br>    [35] =&gt; aes-256-xts<br>    [36] =&gt; aria-128-cbc<br>    [37] =&gt; aria-128-ccm<br>    [38] =&gt; aria-128-cfb<br>    [39] =&gt; aria-128-cfb1<br>    [40] =&gt; aria-128-cfb8<br>    [41] =&gt; aria-128-ctr<br>    [43] =&gt; aria-128-gcm<br>    [44] =&gt; aria-128-ofb<br>    [45] =&gt; aria-192-cbc<br>    [46] =&gt; aria-192-ccm<br>    [47] =&gt; aria-192-cfb<br>    [48] =&gt; aria-192-cfb1<br>    [49] =&gt; aria-192-cfb8<br>    [50] =&gt; aria-192-ctr<br>    [52] =&gt; aria-192-gcm<br>    [53] =&gt; aria-192-ofb<br>    [54] =&gt; aria-256-cbc<br>    [55] =&gt; aria-256-ccm<br>    [56] =&gt; aria-256-cfb<br>    [57] =&gt; aria-256-cfb1<br>    [58] =&gt; aria-256-cfb8<br>    [59] =&gt; aria-256-ctr<br>    [61] =&gt; aria-256-gcm<br>    [62] =&gt; aria-256-ofb<br>    [63] =&gt; bf-cbc<br>    [64] =&gt; bf-cfb<br>    [66] =&gt; bf-ofb<br>    [67] =&gt; camellia-128-cbc<br>    [68] =&gt; camellia-128-cfb<br>    [69] =&gt; camellia-128-cfb1<br>    [70] =&gt; camellia-128-cfb8<br>    [71] =&gt; camellia-128-ctr<br>    [73] =&gt; camellia-128-ofb<br>    [74] =&gt; camellia-192-cbc<br>    [75] =&gt; camellia-192-cfb<br>    [76] =&gt; camellia-192-cfb1<br>    [77] =&gt; camellia-192-cfb8<br>    [78] =&gt; camellia-192-ctr<br>    [80] =&gt; camellia-192-ofb<br>    [81] =&gt; camellia-256-cbc<br>    [82] =&gt; camellia-256-cfb<br>    [83] =&gt; camellia-256-cfb1<br>    [84] =&gt; camellia-256-cfb8<br>    [85] =&gt; camellia-256-ctr<br>    [87] =&gt; camellia-256-ofb<br>    [88] =&gt; cast5-cbc<br>    [89] =&gt; cast5-cfb<br>    [91] =&gt; cast5-ofb<br>    [92] =&gt; chacha20<br>    [93] =&gt; chacha20-poly1305<br>    [111] =&gt; id-aes128-CCM<br>    [112] =&gt; id-aes128-GCM<br>    [113] =&gt; id-aes128-wrap<br>    [114] =&gt; id-aes128-wrap-pad<br>    [115] =&gt; id-aes192-CCM<br>    [116] =&gt; id-aes192-GCM<br>    [117] =&gt; id-aes192-wrap<br>    [118] =&gt; id-aes192-wrap-pad<br>    [119] =&gt; id-aes256-CCM<br>    [120] =&gt; id-aes256-GCM<br>    [121] =&gt; id-aes256-wrap<br>    [122] =&gt; id-aes256-wrap-pad<br>    [124] =&gt; idea-cbc<br>    [125] =&gt; idea-cfb<br>    [127] =&gt; idea-ofb<br>    [137] =&gt; seed-cbc<br>    [138] =&gt; seed-cfb<br>    [140] =&gt; seed-ofb<br>    [141] =&gt; sm4-cbc<br>    [142] =&gt; sm4-cfb<br>    [143] =&gt; sm4-ctr<br>    [145] =&gt; sm4-ofb<br>)<br>Array<br>(<br>    [36] =&gt; aes128<br>    [37] =&gt; aes128-wrap<br>    [38] =&gt; aes192<br>    [39] =&gt; aes192-wrap<br>    [40] =&gt; aes256<br>    [41] =&gt; aes256-wrap<br>    [69] =&gt; aria128<br>    [70] =&gt; aria192<br>    [71] =&gt; aria256<br>    [72] =&gt; bf<br>    [77] =&gt; blowfish<br>    [99] =&gt; camellia128<br>    [100] =&gt; camellia192<br>    [101] =&gt; camellia256<br>    [102] =&gt; cast<br>    [103] =&gt; cast-cbc<br>    [146] =&gt; idea<br>    [164] =&gt; seed<br>    [169] =&gt; sm4<br>)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-get-cipher-methods-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_get_md_methods()} - 获取可用的摘要算法</span></li>   </ul>   </div></div>
*
 * Gets available cipher methods
 * @link https://php.net/manual/zh/function.openssl-get-cipher-methods.php
 * @param bool $aliases [optional] <p>
 * Set to true if cipher aliases should be included within the
 * returned array.
 * </p>
 * @return array An array of available cipher methods.
 
*/
function openssl_get_cipher_methods(bool $aliases = false): array {}

/**
* <div id="function.openssl-dh-compute-key" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_dh_compute_key</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_dh_compute_key</span> — <span class="dc-title">计算远程 DH 公钥和本地 DH 密钥的共享密钥</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-dh-compute-key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_dh_compute_key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_dh_compute_key()</strong></span> 返回的共享密钥通常用作与远端秘密通信的加密密钥。这称为 Diffie-Hellman 密钥交换。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    必须确保远程与本地密钥对使用相同的 DH（Diffie-Hellman）参数，否则双方生成的共享密钥将无法匹配。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    ECDH 仅从 PHP 8.1.0 <em>和</em> OpenSSL 3.0.0 开始受支持。   </span>  </p></blockquote> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-dh-compute-key-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>     <dd>      <p class="para">       远端的 DH 公钥。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>     <dd>      <p class="para">       本地 DH 私钥，对应于要与远端共享的公钥。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-dh-compute-key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回共享密钥， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-dh-compute-key-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">private_key</span> 现在接受 <span class="classname"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="classname">OpenSSLAsymmetricKey</a></span>；之前接受类型       <span class="literal">OpenSSL key</span> 的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>。      </td>     </tr>    </tbody>     </table> </div>  <div class="refsect1 examples" id="refsect1-function.openssl-dh-compute-key-examples">  <h3 class="title">示例</h3>  <p class="para">      </p><div class="example" id="example-995">    <p><strong>示例 #1 计算共享秘密</strong></p>    <div class="example-contents"><p>首先在本地生成公私 DH 密钥对，让远端也这样做。需要使用 <span class="literal">openssl</span> 命令行实用程序。</p></div>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;"># generate private/public key keypair<br>openssl dhparam -out dhparam.pem 2048<br>openssl genpkey -paramfile dhparam.pem -out privatekey.pem<br><br># extract public key only<br>openssl pkey -in privatekey.pem -pubout -out publickey.pem</blockquote></div>    </div>    <div class="example-contents"><p>    接下来，将公钥发送给远端。使用 <span class="literal">openssl pkey</span> 命令查看从远端发送的公钥。</p></div>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">openssl pkey -pubin -in remotepublickey.pem -text -noout</blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">PKCS#3 DH Public-Key: (2048 bit)<br>    public-key:<br>        67:e5:e5:fa:e0:7b:0f:96:2c:dc:96:44:5f:50:02:<br>        9e:8d:c2:6c:04:68:b0:d1:1d:75:66:fc:63:f5:e3:<br>        42:30:b8:96:c1:45:cc:08:60:b4:21:3b:dd:ee:66:<br>        88:db:77:d9:1e:11:89:d4:5c:f2:7a:f2:f1:fe:1c:<br>        77:9d:6f:13:b8:b2:56:00:ef:cb:3b:60:79:74:02:<br>        98:f5:f9:8e:3e:b5:62:08:de:ca:8c:c3:40:4a:80:<br>        79:d5:43:06:17:a8:19:56:af:cc:95:5e:e2:32:2d:<br>        d2:14:7b:76:5a:9a:f1:3c:76:76:35:cc:7b:c1:a5:<br>        f4:39:e5:b6:ca:71:3f:7c:3f:97:e5:ab:86:c1:cd:<br>        0e:e6:ee:04:c9:e6:2d:80:7e:59:c0:49:eb:b6:64:<br>        4f:a8:f9:bb:a3:87:b3:3d:76:01:9e:2b:16:94:a4:<br>        37:30:fb:35:e2:63:be:23:90:b9:ef:3f:46:46:04:<br>        94:8f:60:79:7a:51:55:d6:1a:1d:f5:d9:7f:4a:3e:<br>        aa:ac:b0:d0:82:cc:c2:e0:94:e0:54:c1:17:83:0b:<br>        74:08:4d:5a:79:ae:ff:7f:1c:04:ab:23:39:4a:ae:<br>        87:83:55:43:ab:7a:7c:04:9d:20:80:bb:af:5f:16:<br>        a3:e3:20:b9:21:47:8c:f8:7f:a8:60:80:9e:61:77:<br>        36<br> [...abbreviated...]</blockquote></div>    </div>    <div class="example-contents"><p>使用此公钥作为 <span class="function"><strong>openssl_dh_compute_key()</strong></span> 的参数以计算共享密钥。</p></div>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$remote_public_key </span><span style="color: #007700">= </span><span style="color: #DD0000">'67e5e5fae07b0f962cdc96445f50029e8dc26c0468b0d11d7566fc63f5e34230b896c145cc0860b4213bddee6688db77d91e1189d45cf27af2f1fe1c779d6f13b8b25600efcb3b6079740298f5f98e3eb56208deca8cc3404a8079d5430617a81956afcc955ee2322dd2147b765a9af13c767635cc7bc1a5f439e5b6ca713f7c3f97e5ab86c1cd0ee6ee04c9e62d807e59c049ebb6644fa8f9bba387b33d76019e2b1694a43730fb35e263be2390b9ef3f464604948f60797a5155d61a1df5d97f4a3eaaacb0d082ccc2e094e054c117830b74084d5a79aeff7f1c04ab23394aae87835543ab7a7c049d2080bbaf5f16a3e320b921478cf87fa860809e617736'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">$local_priv_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_private</span><span style="color: #007700">(</span><span style="color: #DD0000">'file://privatekey.pem'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$shared_secret </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_dh_compute_key</span><span style="color: #007700">(</span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #9876AA">$remote_public_key</span><span style="color: #007700">), </span><span style="color: #9876AA">$local_priv_key</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$shared_secret</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>    <p class="para">   </p><div class="example" id="example-996">    <p><strong>示例 #2 在 php 中生成 DH 公/私钥对</strong></p>    <div class="example-contents"><p>首先，生成 DH 质数</p></div>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">openssl dhparam -out dhparam.pem 2048<br>openssl dh -in dhparam.pem -noout  -text</blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">PKCS#3 DH Parameters: (2048 bit)<br>        prime:<br>            00:a3:25:1e:73:3f:44:b9:2b:ee:f4:9d:9f:37:6a:<br>            4b:fd:1d:bd:f4:af:da:c8:10:77:59:41:c6:5f:73:<br>            d2:88:29:39:cd:1c:5f:c3:9f:0f:22:d2:9c:20:c1:<br>            e4:c0:18:03:b8:b6:d8:da:ad:3b:39:a6:da:8e:fe:<br>            12:30:e9:03:5d:22:ba:ef:18:d2:7b:69:f9:5b:cb:<br>            78:c6:0c:8c:6b:f2:49:92:c2:49:e0:45:77:72:b3:<br>            55:36:30:f2:40:17:89:18:50:03:fa:2d:54:7a:7f:<br>            34:4c:73:32:b6:88:14:51:14:be:80:57:95:e6:a3:<br>            f6:51:ff:17:47:4f:15:d6:0e:6c:47:53:72:2c:2a:<br>            4c:21:cb:7d:f3:49:97:c9:47:5e:40:33:7b:99:52:<br>            7e:7a:f3:52:27:80:de:1b:26:6b:40:bb:14:11:0b:<br>            fb:e6:d8:2f:cf:a0:06:2f:96:b9:1c:0b:b4:cb:d3:<br>            a6:62:9c:48:67:f6:81:f2:c6:ff:45:03:0a:9d:67:<br>            9d:ce:27:d9:6b:48:5d:ca:fb:c2:5d:84:9b:8b:cb:<br>            40:c7:a4:0c:8a:6e:f4:ab:ba:b6:10:c3:b8:25:4d:<br>            cf:60:96:f4:db:e8:00:1c:58:47:7a:fb:51:86:d1:<br>            22:d7:4e:94:31:7a:d5:da:3d:53:de:da:bb:64:8d:<br>            62:6b<br>        generator: 2 (0x2)</blockquote></div>    </div>    <div class="example-contents"><p>质数和生成器值作为 p 和 g 传递给 <span class="function">{@link openssl_pkey_new()}</span></p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$configargs </span><span style="color: #007700">= array();<br></span><span style="color: #9876AA">$configargs</span><span style="color: #007700">[</span><span style="color: #DD0000">'p'</span><span style="color: #007700">] = </span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #DD0000">'00a3251e733f44b92beef49d9f376a4bfd1dbdf4afdac810775941c65f73d2882939cd1c5fc39f0f22d29c20c1e4c01803b8b6d8daad3b39a6da8efe1230e9035d22baef18d27b69f95bcb78c60c8c6bf24992c249e0457772b3553630f2401789185003fa2d547a7f344c7332b688145114be805795e6a3f651ff17474f15d60e6c4753722c2a4c21cb7df34997c9475e40337b99527e7af3522780de1b266b40bb14110bfbe6d82fcfa0062f96b91c0bb4cbd3a6629c4867f681f2c6ff45030a9d679dce27d96b485dcafbc25d849b8bcb40c7a40c8a6ef4abbab610c3b8254dcf6096f4dbe8001c58477afb5186d122d74e94317ad5da3d53dedabb648d626b'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$configargs</span><span style="color: #007700">[</span><span style="color: #DD0000">'g'</span><span style="color: #007700">] = </span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #DD0000">'02'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$private_key </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_new</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'dh' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$configargs</span><span style="color: #007700">));<br></span><span style="color: #9876AA">openssl_pkey_export_to_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key</span><span style="color: #007700">,</span><span style="color: #DD0000">'privatekey.pem'</span><span style="color: #007700">,</span><span style="color: #9876AA">$passphrase</span><span style="color: #007700">=</span><span style="color: #DD0000">'y0urp@s5phr@se'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$details </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">$private_key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$local_pub_key </span><span style="color: #007700">= </span><span style="color: #9876AA">$details</span><span style="color: #007700">[</span><span style="color: #DD0000">'dh'</span><span style="color: #007700">][</span><span style="color: #DD0000">'pub_key'</span><span style="color: #007700">];<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$local_pub_key</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span><span style="color: #FF8000">//you can send your public key to the remote party<br><br></span><span style="color: #9876AA">$details </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_details</span><span style="color: #007700">(</span><span style="color: #9876AA">openssl_pkey_get_public</span><span style="color: #007700">(</span><span style="color: #DD0000">"file://remotepublickey.pem"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">$remote_public_key </span><span style="color: #007700">= </span><span style="color: #9876AA">$details</span><span style="color: #007700">[</span><span style="color: #DD0000">'dh'</span><span style="color: #007700">][</span><span style="color: #DD0000">'pub_key'</span><span style="color: #007700">];<br></span><span style="color: #9876AA">$shared_secret </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_dh_compute_key</span><span style="color: #007700">(</span><span style="color: #9876AA">$remote_public_key</span><span style="color: #007700">, </span><span style="color: #9876AA">$private_key</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$shared_secret</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-dh-compute-key-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_pkey_new()} - 生成新的私钥</span></li>    <li><span class="function">{@link openssl_pkey_get_details()} - 返回包含密钥详情的数组</span></li>    <li><span class="function">{@link openssl_pkey_get_private()} - 获取私钥</span></li>    <li><span class="function">{@link openssl_pkey_get_public()} - 从证书中解析公钥，以供使用</span></li>   </ul>   </div> </div>
*
 * Computes shared secret for public value of remote DH key and local DH key
 * @link https://php.net/manual/zh/function.openssl-dh-compute-key.php
 * @param string $public_key <p>
 * Public key
 * </p>
 * @param OpenSSLAsymmetricKey|resource $private_key <p>
 * DH key
 * </p>
 * @return string|false computed key on success or false on failure.
 * @since 5.3
 
*/
function openssl_dh_compute_key(string $public_key, #[LanguageLevelTypeAware(["8.0" => "OpenSSLAsymmetricKey"], default: "resource")] $private_key): string|false {}

/**
* <div id="function.openssl-pkey-derive" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkey_derive</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3.0, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkey_derive</span> — <span class="dc-title">Computes shared secret for public value of remote and local DH or ECDH key</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-pkey-derive-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkey_derive</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$public_key</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$key_length</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_pkey_derive()</strong></span> takes a set of a <span class="parameter" style="color:#3A95FF">public_key</span>   and <span class="parameter" style="color:#3A95FF">private_key</span> and derives a shared secret, for either DH or EC keys.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkey-derive-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      <span class="parameter" style="color:#3A95FF">public_key</span> is the public key for the derivation.      See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">Public/Private Key parameters</a> for a list of valid values.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>    <dd>     <p class="para">      <span class="parameter" style="color:#3A95FF">private_key</span> is the private key for the derivation.      See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">Public/Private Key parameters</a> for a list of valid values.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key_length</span></dt>    <dd>     <p class="para">      If not zero, will attempt to set the desired length of the derived secret.     </p>     <div class="caution"><strong class="caution">警告</strong>      <p class="simpara">       This parameter should not be used, as it does not work as expected. It never returns a secret       longer than the size of the prime. If the desired length is smaller than the size of the       prime, it truncates the length only for ECDH keys but fails for DH keys.      </p>     </div>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkey-derive-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The derived secret on success 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkey-derive-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="openssl-pkey-derive.example.basic">    <p><strong>示例 #1 <span class="function"><strong>openssl_pkey_derive()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Load in private key<br></span><span style="color: #9876AA">$priv </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_private</span><span style="color: #007700">(</span><span style="color: #DD0000">"-----BEGIN PRIVATE KEY-----<br>MIICJgIBADCCARcGCSqGSIb3DQEDATCCAQgCggEBAJLxRCaZ933uW+AXmabHFDDy<br>upojBIRlbmQLJZfigDaSA1f9YOTsIv+WwVFTX/J1mtCyx9uBcz0Nt2kmVwxWuc2f<br>VtCEMPsmLsVXX7xRUFLpyX1Y1IYGBVXQOoOvLWYQjpZgnx47Pkh1Ok1+smffztfC<br>0DCNt4KorWrbsPcmqBejXHN79KvWFjZmXOksRiNu/Bn76RiqvofC4z8Ri3kHXQG2<br>197JGZzzFXHadGC3xbkg8UxsNbYhVMKbm0iANfafUH7/hoS9UjAVQYtvwe7YNiW/<br>HnyfVCrKwcc7sadd8Iphh+3lf5P1AhaQEAMytanrzq9RDXKBxuvpSJifRYasZYsC<br>AQIEggEEAoIBAGwAYC2E81Y1U2Aox0U7u1+vBcbht/OO87tutMvc4NTLf6NLPHsW<br>cPqBixs+3rSn4fADzAIvdLBmogjtiIZoB6qyHrllF/2xwTVGEeYaZIupQH3bMK2b<br>6eUvnpuu4Ytksiz6VpXBBRMrIsj3frM+zUtnq8vKUr+TbjV2qyKR8l3eNDwzqz30<br>dlbKh9kIhZafclHfRVfyp+fVSKPfgrRAcLUgAbsVjOjPeJ90xQ4DTMZ6vjiv6tHM<br>hkSjJIcGhRtSBzVF/cT38GyCeTmiIA/dRz2d70lWrqDQCdp9ArijgnpjNKAAulSY<br>CirnMsGZTDGmLOHg4xOZ5FEAzZI2sFNLlcw=<br>-----END PRIVATE KEY-----<br>"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Load in public key<br></span><span style="color: #9876AA">$pub </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkey_get_public</span><span style="color: #007700">(</span><span style="color: #DD0000">"-----BEGIN PUBLIC KEY-----<br>MIICJDCCARcGCSqGSIb3DQEDATCCAQgCggEBAJLxRCaZ933uW+AXmabHFDDyupoj<br>BIRlbmQLJZfigDaSA1f9YOTsIv+WwVFTX/J1mtCyx9uBcz0Nt2kmVwxWuc2fVtCE<br>MPsmLsVXX7xRUFLpyX1Y1IYGBVXQOoOvLWYQjpZgnx47Pkh1Ok1+smffztfC0DCN<br>t4KorWrbsPcmqBejXHN79KvWFjZmXOksRiNu/Bn76RiqvofC4z8Ri3kHXQG2197J<br>GZzzFXHadGC3xbkg8UxsNbYhVMKbm0iANfafUH7/hoS9UjAVQYtvwe7YNiW/Hnyf<br>VCrKwcc7sadd8Iphh+3lf5P1AhaQEAMytanrzq9RDXKBxuvpSJifRYasZYsCAQID<br>ggEFAAKCAQAiCSBpxvGgsTorxAWtcAlSmzAJnJxFgSPef0g7OjhESytnc8G2QYmx<br>ovMt5KVergcitztWh08hZQUdAYm4rI+zMlAFDdN8LWwBT/mGKSzRkWeprd8E7mvy<br>ucqC1YXCMqmIwPySvLQUB/Dl8kgau7BLAnIJm8VP+MVrn8g9gghD0qRCgPgtEaDV<br>vocfgnOU43rhKnIgO0cHOKtw2qybSFB8QuZrYugq4j8Bwkrzh6rdMMeyMl/ej5Aj<br>c0wamOzuBDtXt0T9+Fx3khHaowjCc7xJZRgZCxg43SbqMWJ9lUg94I7+LTX61Gyv<br>dtlkbGbtoDOnxeNnN93gwQZngGYZYciu<br>-----END PUBLIC KEY-----<br>"</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Outputs the hex version of the derived key<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">openssl_pkey_derive</span><span style="color: #007700">(</span><span style="color: #9876AA">$pub</span><span style="color: #007700">,</span><span style="color: #9876AA">$priv</span><span style="color: #007700">));</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param int $key_length
 * @return string|false
 * @since 7.3
 
*/
function openssl_pkey_derive(
    $public_key,
    #[LanguageLevelTypeAware(['8.0' => 'OpenSSLAsymmetricKey|OpenSSLCertificate|array|string'], default: 'resource|array|string')] $private_key,
    int $key_length = 0
): string|false {}

/**
* <div id="function.openssl-random-pseudo-bytes" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_random_pseudo_bytes</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_random_pseudo_bytes</span> — <span class="dc-title">生成一个伪随机字节串</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-random-pseudo-bytes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_random_pseudo_bytes</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$length</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$strong_result</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   生成一个伪随机字节串 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> ，字节数由 <span class="parameter" style="color:#3A95FF">length</span> 参数指定。   </p>  <p class="para">   通过 <span class="parameter" style="color:#3A95FF">strong_result</span> 参数可以表示在生成随机字节的过程中是否使用了强加密算法。返回值为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的情况很少见，但已损坏或老化的有些系统上会出现。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-random-pseudo-bytes-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       所需字节串的长度，必须为正整数且小于等于 <span class="literal">2147483647</span>。PHP 会试着将该参数转换为非空整数来使用它。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">strong_result</span></dt>     <dd>      <p class="para">       如果传递到该函数中，将会保存为一个 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> 值来表明是否使用了“强加密”，如果被用于GPG和密码之类的将返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-random-pseudo-bytes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回生成的字节 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。  </p> </div>  <div class="refsect1 errors" id="refsect1-function.openssl-random-pseudo-bytes-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   <span class="function"><strong>openssl_random_pseudo_bytes()</strong></span> 失败时抛出 <span class="classname"><a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a></span>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-random-pseudo-bytes-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">strong_result</span> 现在可为 null。      </td>     </tr>     <tr>      <td>7.4.0</td>      <td>       此函数失败时不再返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，而是会抛出 <span class="classname"><a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.openssl-random-pseudo-bytes-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1013">    <p><strong>示例 #1 <span class="function"><strong>openssl_random_pseudo_bytes()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt;= </span><span style="color: #9876AA">4</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br>    </span><span style="color: #9876AA">$bytes </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">$i</span><span style="color: #007700">, </span><span style="color: #9876AA">$cstrong</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$hex   </span><span style="color: #007700">= </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$bytes</span><span style="color: #007700">);<br><br>    echo </span><span style="color: #DD0000">"Lengths: Bytes: </span><span style="color: #9876AA">$i</span><span style="color: #DD0000"> and Hex: " </span><span style="color: #007700">. </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$hex</span><span style="color: #007700">) . </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$hex</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cstrong</span><span style="color: #007700">);<br>    echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Lengths: Bytes: 1 and Hex: 2<br>string(2) "42"<br>bool(true)<br><br>Lengths: Bytes: 2 and Hex: 4<br>string(4) "dc6e"<br>bool(true)<br><br>Lengths: Bytes: 3 and Hex: 6<br>string(6) "288591"<br>bool(true)<br><br>Lengths: Bytes: 4 and Hex: 8<br>string(8) "ab86d144"<br>bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-random-pseudo-bytes-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link random_bytes()} - Get cryptographically secure random bytes</span></li>   <li><span class="function">{@link bin2hex()} - 将二进制数据转换为十六进制表示</span></li>   <li><span class="function">{@link crypt()} - 单向字符串散列</span></li>   <li><span class="function">{@link random_int()} - 获取生成加密安全、均匀分布的整数</span></li>  </ul> </div></div>
*
 * Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter.
 * <p>It also indicates if a cryptographically strong algorithm was used to produce the pseudo-random bytes,
 * and does this via the optional crypto_strong parameter. It's rare for this to be FALSE, but some systems may be broken or old.</p>
 * @link https://php.net/manual/zh/function.openssl-random-pseudo-bytes.php
 * @param positive-int $length <p>
 * The length of the desired string of bytes. Must be a positive integer. PHP will
 * try to cast this parameter to a non-null integer to use it.
 * </p>
 * @param bool &$strong_result [optional]<p>
 * If passed into the function, this will hold a boolean value that determines
 * if the algorithm used was "cryptographically strong", e.g., safe for usage with GPG,
 * passwords, etc. true if it did, otherwise false
 * </p>
 * @return string|false the generated string of bytes on success, or false on failure.
 
#[LanguageLevelTypeAware(["7.4" => "string"], default: "string|false")]
*/
function openssl_random_pseudo_bytes(int $length, &$strong_result) {}

/**
* <div id="function.openssl-error-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_error_string</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_error_string</span> — <span class="dc-title">返回 openSSL 错误消息</span></p> </div>  <div class="refsect1 description" id="refsect1-function.openssl-error-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_error_string</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_error_string()</strong></span> 从openSSL库返回最后一个错误。错误消息已被队列化，因此这个函数可以多次调用用来收集所有的信息。最后一个错误将是最近的一个。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-error-string-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-error-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回错误信息字符串，如果没有任何错误信息则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-error-string-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-999">    <p><strong>示例 #1 <span class="function"><strong>openssl_error_string()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// lets assume you just called an openssl function that failed<br></span><span style="color: #007700">while (</span><span style="color: #9876AA">$msg </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">())<br>    echo </span><span style="color: #9876AA">$msg </span><span style="color: #007700">. </span><span style="color: #DD0000">"&lt;br /&gt;\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Return openSSL error message
 * @link https://php.net/manual/zh/function.openssl-error-string.php
 * @return string|false an error message string, or false if there are no more error
 * messages to return.
 
*/
function openssl_error_string(): string|false {}

/**
 * Retrieve the available certificate locations
 * @link https://php.net/manual/en/function.openssl-get-cert-locations.php
 * @return array an array with the available certificate locations
 * @since 5.6
 */
#[ArrayShape([
    'default_cert_file' => 'string',
    'default_cert_file_env' => 'string',
    'default_cert_dir' => 'string',
    'default_cert_dir_env' => 'string',
    'default_private_dir' => 'string',
    'default_default_cert_area' => 'string',
    'ini_cafile' => 'string',
    'ini_capath' => 'string'
])]
/**
* <div id="function.openssl-get-cert-locations" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_cert_locations</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_cert_locations</span> — <span class="dc-title">检索可用的证书位置</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-cert-locations-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_get_cert_locations</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>openssl_get_cert_locations()</strong></span> 返回一个数组，其中包含要搜索SSL证书的可用证书位置的信息。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-get-cert-locations-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-get-cert-locations-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个带有可用证书位置信息的数组。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-get-cert-locations-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1000">    <p><strong>示例 #1 <span class="function"><strong>openssl_get_cert_locations()</strong></span> 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">openssl_get_cert_locations</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">array(8) {<br>  ["default_cert_file"]=&gt;<br>  string(21) "/usr/lib/ssl/cert.pem"<br>  ["default_cert_file_env"]=&gt;<br>  string(13) "SSL_CERT_FILE"<br>  ["default_cert_dir"]=&gt;<br>  string(18) "/usr/lib/ssl/certs"<br>  ["default_cert_dir_env"]=&gt;<br>  string(12) "SSL_CERT_DIR"<br>  ["default_private_dir"]=&gt;<br>  string(20) "/usr/lib/ssl/private"<br>  ["default_default_cert_area"]=&gt;<br>  string(12) "/usr/lib/ssl"<br>  ["ini_cafile"]=&gt;<br>  string(0) ""<br>  ["ini_capath"]=&gt;<br>  string(0) ""<br>}</blockquote></div>    </div>   </div>   </div></div>
*/
function openssl_get_cert_locations(): array {}

/**
* <div id="function.openssl-get-curve-names" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_get_curve_names</h1>  <p class="verinfo">(PHP 7 &gt;= 7.1.0, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_get_curve_names</span> — <span class="dc-title">获得ECC的可用曲线名称列表</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-get-curve-names-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_get_curve_names</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   获取用于公钥/私钥操作的椭圆曲线密码（ECC）中可用曲线名称的列表。两个最广泛的标准化/支持的曲线是   <em>prime256v1</em>（NIST P-256）和 <em>secp384r1</em>（NIST P-384）。   </p><table class="doctable table">    <caption><strong>AES、RSA、DSA 和 ECC 密钥长度近似等值</strong></caption>         <thead>      <tr>       <th>AES Symmetric Keysize (Bits)</th>       <th>RSA and DSA Keysize (Bits)</th>       <th>ECC Keysize (Bits)</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>80</td>       <td>1024</td>       <td>160</td>      </tr>      <tr>       <td>112</td>       <td>2048</td>       <td>224</td>      </tr>      <tr>       <td>128</td>       <td>3072</td>       <td>256</td>      </tr>      <tr>       <td>192</td>       <td>7680</td>       <td>384</td>      </tr>      <tr>       <td>256</td>       <td>15360</td>       <td>512</td>      </tr>     </tbody>       </table>   <a href="http://dx.doi.org/10.6028/NIST.SP.800-57pt1r4" class="link external">» NIST    推荐使用的 ECC 曲线最少为 256 位</a>。   </div> <div class="refsect1 parameters" id="refsect1-function.openssl-get-curve-names-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-get-curve-names-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   有效曲线名称的 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-get-curve-names-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1002">    <p><strong>示例 #1 <span class="function"><strong>openssl_get_curve_names()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$curve_names </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_get_curve_names</span><span style="color: #007700">();<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$curve_names</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>    [0] =&gt; secp112r1<br>    [1] =&gt; secp112r2<br>    [2] =&gt; secp128r1<br>    [3] =&gt; secp128r2<br>    [4] =&gt; secp160k1<br>    [5] =&gt; secp160r1<br>    [6] =&gt; secp160r2<br>    [7] =&gt; secp192k1<br>    [8] =&gt; secp224k1<br>    [9] =&gt; secp224r1<br>    [10] =&gt; secp256k1<br>    [11] =&gt; secp384r1<br>    [12] =&gt; secp521r1<br>    [13] =&gt; prime192v1<br>    [14] =&gt; prime192v2<br>    [15] =&gt; prime192v3<br>    [16] =&gt; prime239v1<br>    [17] =&gt; prime239v2<br>    [18] =&gt; prime239v3<br>    [19] =&gt; prime256v1<br>    [20] =&gt; sect113r1<br>    [21] =&gt; sect113r2<br>    [22] =&gt; sect131r1<br>    [23] =&gt; sect131r2<br>    [24] =&gt; sect163k1<br>    [25] =&gt; sect163r1<br>    [26] =&gt; sect163r2<br>    [27] =&gt; sect193r1<br>    [28] =&gt; sect193r2<br>    [29] =&gt; sect233k1<br>    [30] =&gt; sect233r1<br>    [31] =&gt; sect239k1<br>    [32] =&gt; sect283k1<br>    [33] =&gt; sect283r1<br>    [34] =&gt; sect409k1<br>    [35] =&gt; sect409r1<br>    [36] =&gt; sect571k1<br>    [37] =&gt; sect571r1<br>    [38] =&gt; c2pnb163v1<br>    [39] =&gt; c2pnb163v2<br>    [40] =&gt; c2pnb163v3<br>    [41] =&gt; c2pnb176v1<br>    [42] =&gt; c2tnb191v1<br>    [43] =&gt; c2tnb191v2<br>    [44] =&gt; c2tnb191v3<br>    [45] =&gt; c2pnb208w1<br>    [46] =&gt; c2tnb239v1<br>    [47] =&gt; c2tnb239v2<br>    [48] =&gt; c2tnb239v3<br>    [49] =&gt; c2pnb272w1<br>    [50] =&gt; c2pnb304w1<br>    [51] =&gt; c2tnb359v1<br>    [52] =&gt; c2pnb368w1<br>    [53] =&gt; c2tnb431r1<br>    [54] =&gt; wap-wsg-idm-ecid-wtls1<br>    [55] =&gt; wap-wsg-idm-ecid-wtls3<br>    [56] =&gt; wap-wsg-idm-ecid-wtls4<br>    [57] =&gt; wap-wsg-idm-ecid-wtls5<br>    [58] =&gt; wap-wsg-idm-ecid-wtls6<br>    [59] =&gt; wap-wsg-idm-ecid-wtls7<br>    [60] =&gt; wap-wsg-idm-ecid-wtls8<br>    [61] =&gt; wap-wsg-idm-ecid-wtls9<br>    [62] =&gt; wap-wsg-idm-ecid-wtls10<br>    [63] =&gt; wap-wsg-idm-ecid-wtls11<br>    [64] =&gt; wap-wsg-idm-ecid-wtls12<br>    [65] =&gt; Oakley-EC2N-3<br>    [66] =&gt; Oakley-EC2N-4<br>    [67] =&gt; brainpoolP160r1<br>    [68] =&gt; brainpoolP160t1<br>    [69] =&gt; brainpoolP192r1<br>    [70] =&gt; brainpoolP192t1<br>    [71] =&gt; brainpoolP224r1<br>    [72] =&gt; brainpoolP224t1<br>    [73] =&gt; brainpoolP256r1<br>    [74] =&gt; brainpoolP256t1<br>    [75] =&gt; brainpoolP320r1<br>    [76] =&gt; brainpoolP320t1<br>    [77] =&gt; brainpoolP384r1<br>    [78] =&gt; brainpoolP384t1<br>    [79] =&gt; brainpoolP512r1<br>    [80] =&gt; brainpoolP512t1<br>)</blockquote></div>    </div>   </div>   </div></div>
*/
function openssl_get_curve_names(): array|false {}

/**
* <div id="function.openssl-pkcs7-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_pkcs7_read</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">openssl_pkcs7_read</span> — <span class="dc-title">将 PKCS7 文件导出为 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式证书的数组</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-pkcs7-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_pkcs7_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$certificates</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-pkcs7-read-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">      想要解析的字符串数据（p7b 格式）。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificates</span></dt>    <dd>     <p class="para">      <abbr title="Privacy-Enhanced Mail">PEM</abbr> 格式证书的数组，来源于输入的 p7b 数据。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-pkcs7-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-pkcs7-read-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1009">    <p><strong>示例 #1 根据 P7B 文件获取 <abbr title="Privacy-Enhanced Mail">PEM</abbr> 数组</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'certs.p7b'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">$f </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$p7 </span><span style="color: #007700">= array();<br></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_pkcs7_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$f</span><span style="color: #007700">, </span><span style="color: #9876AA">$p7</span><span style="color: #007700">);<br><br>if (</span><span style="color: #9876AA">$r </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"ERROR: %s is not a proper p7b file"</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">, </span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br>        for(</span><span style="color: #9876AA">$e </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">(), </span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$e</span><span style="color: #007700">; </span><span style="color: #9876AA">$e </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_error_string</span><span style="color: #007700">(), </span><span style="color: #9876AA">$i</span><span style="color: #007700">++)<br>            </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"SSL l%d: %s"</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">, </span><span style="color: #9876AA">$e</span><span style="color: #007700">);<br>    exit(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$p7</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.openssl-pkcs7-read-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link openssl_csr_sign()} - 用另一个证书签署 CSR（或者本身）并且生成一个证书</span></li>   </ul>   </div></div>
*
 * @param string $data
 * @param array &$certificates
 * @return bool
 * @since 7.2
 
*/
function openssl_pkcs7_read(string $data, &$certificates): bool {}

/**
* <div id="function.openssl-cms-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cms_verify</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cms_verify</span> — <span class="dc-title">Verify a CMS signature</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cms-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cms_verify</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificates</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$ca_info</span><span class="initializer"> = []</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$untrusted_certificates_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$content</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$pk7</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$sigfile</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function verifies a CMS signature, either attached or detached, with the specified encoding.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cms-verify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>    <dd>     <p class="para">      The input file.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>    <dd>     <p class="para">      Flags to pass to <span class="function"><strong>cms_verify()</strong></span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificates</span></dt>    <dd>     <p class="para">      A file with the signer certificate and optionally intermediate certificates.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">ca_info</span></dt>    <dd>     <p class="para">      An array containing self-signed certificate authority certificates.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span></dt>    <dd>     <p class="para">      A file containing additional intermediate certificates.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">content</span></dt>    <dd>     <p class="para">      A file pointing to the content when signatures are detached.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">pk7</span></dt>    <dd>     <p class="para">     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sigfile</span></dt>    <dd>     <p class="para">      A file to save the signature to.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">      The encoding of the input file. One of <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong>,      <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-der">OPENSSL_ENCODING_DER</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-pem">OPENSSL_ENCODING_PEM</a></span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cms-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
*
 * Verifies that the data block is intact, the signer is who they say they are, and returns the certs of the signers.
 * @param string $input_filename
 * @param int $flags [optional]
 * @param string|null $certificates [optional]
 * @param array $ca_info
 * @param string|null $untrusted_certificates_filename [optional]
 * @param string|null $content [optional]
 * @param string|null $pk7 [optional]
 * @param string|null $sigfile [optional]
 * @param int $encoding [optional]
 * @return bool
 * @since 8.0
 
*/
function openssl_cms_verify(string $input_filename, int $flags = 0, ?string $certificates, array $ca_info = [], ?string $untrusted_certificates_filename, ?string $content, ?string $pk7, ?string $sigfile, int $encoding = OPENSSL_ENCODING_SMIME): bool {}

/**
* <div id="function.openssl-cms-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cms_encrypt</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cms_encrypt</span> — <span class="dc-title">Encrypt a CMS message</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cms-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cms_encrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$headers</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$cipher_algo</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-aes-128-cbc">OPENSSL_CIPHER_AES_128_CBC</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function encrypts content to one or more recipients,   based on the certificates that are passed to it.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cms-encrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>    <dd>     <p class="para">       The file to be encrypted.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>    <dd>     <p class="para">      The output file.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>    <dd>     <p class="para">      Recipients to encrypt to.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">headers</span></dt>    <dd>     <p class="para">      Headers to include when S/MIME is used.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>    <dd>     <p class="para">      Flags to be passed to CMS_sign.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">      An encoding to output. One of <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong>,      <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-der">OPENSSL_ENCODING_DER</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-pem">OPENSSL_ENCODING_PEM</a></span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cipher_algo</span></dt>    <dd>     <p class="para">      A cypher to use.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cms-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.openssl-cms-encrypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       The default cipher algorithm (<span class="parameter" style="color:#3A95FF">cipher_algo</span>) is now       AES-128-CBC (<strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-aes-128-cbc">OPENSSL_CIPHER_AES_128_CBC</a></span></strong>). Previously,       PKCS7/CMS was used (<strong><span><a href="https://php.net/manual/zh/openssl.ciphers.php#constant.openssl-cipher-rc2-40">OPENSSL_CIPHER_RC2_40</a></span></strong>).      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Encrypts the message in the file with the certificates and outputs the result to the supplied file.
 * @param string $input_filename
 * @param string $output_filename
 * @param resource|string|array $certificate
 * @param null|array $headers
 * @param int $flags
 * @param int $encoding
 * @param int $cipher_algo
 * @return bool
 * @since 8.0
 
*/
function openssl_cms_encrypt(string $input_filename, string $output_filename, $certificate, ?array $headers, int $flags = 0, int $encoding = OPENSSL_ENCODING_SMIME, int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC): bool {}

/**
* <div id="function.openssl-cms-sign" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cms_sign</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cms_sign</span> — <span class="dc-title">Sign a file</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cms-sign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cms_sign</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$headers</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$untrusted_certificates_filename</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function signs a file with an X.509 certificate and key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cms-sign-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>    <dd>     <p class="para">      The name of the file to be signed.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>    <dd>     <p class="para">      The name of the file to deposit the results.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>    <dd>     <p class="para">      The signing certificate.      See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">Key/Certificate parameters</a> for a list of valid values.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>    <dd>     <p class="para">      The key associated with <span class="parameter" style="color:#3A95FF">certificate</span>.      See <a href="https://php.net/manual/zh/openssl.certparams.php" class="link">Key/Certificate parameters</a> for a list of valid values.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">headers</span></dt>    <dd>     <p class="para">      An array of headers to be included in S/MIME output.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>    <dd>     <p class="para">      Flags to be passed to <span class="function"><strong>cms_sign()</strong></span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">      The encoding of the output file. One of <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong>,      <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-der">OPENSSL_ENCODING_DER</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-pem">OPENSSL_ENCODING_PEM</a></span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">untrusted_certificates_filename</span></dt>    <dd>     <p class="para">      Intermediate certificates to be included in the signature.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cms-sign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.openssl-cms-sign-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-987">    <p><strong>示例 #1 <span class="function"><strong>openssl_cms_sign()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>openssl_cms_sign</span><span style="color: #007700">(</span><span style="color: #DD0000">'input.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'file://cert.pem'</span><span style="color: #007700">, </span><span style="color: #DD0000">'file://privkey.pem'</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">OPENSSL_CMS_BINARY</span><span style="color: #007700">, </span><span style="color: #9876AA">OPENSSL_ENCODING_DER</span><span style="color: #007700">, </span><span style="color: #DD0000">'chain.pem'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
*
 * Signs the MIME message in the file with a cert and key and output the result to the supplied file.
 * @param string $input_filename
 * @param string $output_filename
 * @param OpenSSLCertificate|string $certificate
 * @param OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key
 * @param array|null $headers
 * @param int $flags [optional]
 * @param int $encoding [optional]
 * @param string|null $untrusted_certificates_filename [optional]
 * @return bool
 * @since 8.0
 
*/
function openssl_cms_sign(string $input_filename, string $output_filename, OpenSSLCertificate|string $certificate, $private_key, ?array $headers, int $flags = 0, int $encoding = OPENSSL_ENCODING_SMIME, ?string $untrusted_certificates_filename): bool {}

/**
* <div id="function.openssl-cms-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cms_decrypt</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cms_decrypt</span> — <span class="dc-title">Decrypt a CMS message</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cms-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cms_decrypt</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$output_filename</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$certificate</span></span>,<br>    <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslasymmetrickey.php" class="type OpenSSLAsymmetricKey" style="color:#EAB766">OpenSSLAsymmetricKey</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.opensslcertificate.php" class="type OpenSSLCertificate" style="color:#EAB766">OpenSSLCertificate</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">$private_key</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Decrypts a CMS message.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cms-decrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>    <dd>     <p class="para">      The name of a file containing encrypted content.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">output_filename</span></dt>    <dd>     <p class="para">      The name of the file to deposit the decrypted content.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificate</span></dt>    <dd>     <p class="para">      The name of the file containing a certificate of the recipient.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">private_key</span></dt>    <dd>     <p class="para">      The name of the file containing a <abbr title="Public Key Cryptography Standards">PKCS</abbr>#8 key.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">      The encoding of the input file. One of <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-smime">OPENSSL_ENCODING_SMIME</a></span></strong>,      <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-der">OPENSSL_ENCODING_DER</a></span></strong> or <strong><span><a href="https://php.net/manual/zh/openssl.constants.other.php#constant.openssl-encoding-pem">OPENSSL_ENCODING_PEM</a></span></strong>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cms-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
*
 * Decrypts the S/MIME message in the file and outputs the results to the supplied file.
 * @param string $input_filename
 * @param string $output_filename
 * @param resource|string $certificate
 * @param resource|string|array $private_key
 * @param int $encoding
 * @return bool
 * @since 8.0
 
*/
function openssl_cms_decrypt(string $input_filename, string $output_filename, $certificate, $private_key = null, int $encoding = OPENSSL_ENCODING_SMIME): bool {}

/**
* <div id="function.openssl-cms-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">openssl_cms_read</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">openssl_cms_read</span> — <span class="dc-title">Export the CMS file to an array of <abbr title="Privacy-Enhanced Mail">PEM</abbr> certificates</span></p> </div> <div class="refsect1 description" id="refsect1-function.openssl-cms-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openssl_cms_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$input_filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$certificates</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Performs the exact analog to <span class="function">{@link openssl_pkcs7_read()}</span>.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.openssl-cms-read-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">input_filename</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">certificates</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.openssl-cms-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
*
 * Exports the CMS file to an array of PEM certificates.
 * @param string $input_filename
 * @param array &$certificates
 * @return bool
 * @since 8.0
 
*/
function openssl_cms_read(string $input_filename, &$certificates): bool {}

define('OPENSSL_VERSION_TEXT', "OpenSSL 1.0.0e 6 Sep 2011");
define('OPENSSL_VERSION_NUMBER', 268435551);
define('X509_PURPOSE_SSL_CLIENT', 1);
define('X509_PURPOSE_SSL_SERVER', 2);
define('X509_PURPOSE_NS_SSL_SERVER', 3);
define('X509_PURPOSE_SMIME_SIGN', 4);
define('X509_PURPOSE_SMIME_ENCRYPT', 5);
define('X509_PURPOSE_CRL_SIGN', 6);
define('X509_PURPOSE_ANY', 7);
/**
 * @since 8.4
 */
define('X509_PURPOSE_OCSP_HELPER', 8);
/**
 * @since 8.4
 */
define('X509_PURPOSE_TIMESTAMP_SIGN', 9);

/**
 * Used as default algorithm by <b>openssl_sign</b> and
 * <b>openssl_verify</b>.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('OPENSSL_ALGO_SHA1', 1);
define('OPENSSL_ALGO_MD5', 2);
define('OPENSSL_ALGO_MD4', 3);
define('OPENSSL_ALGO_MD2', 4);
define('OPENSSL_ALGO_DSS1', 5);
define('OPENSSL_ALGO_SHA224', 6);
define('OPENSSL_ALGO_SHA256', 7);
define('OPENSSL_ALGO_SHA384', 8);
define('OPENSSL_ALGO_SHA512', 9);
define('OPENSSL_ALGO_RMD160', 10);
/**
 * When signing a message, use cleartext signing with the MIME
 * type "multipart/signed". This is the default
 * if you do not specify any <i>flags</i> to
 * <b>openssl_pkcs7_sign</b>.
 * If you turn this option off, the message will be signed using
 * opaque signing, which is more resistant to translation by mail relays
 * but cannot be read by mail agents that do not support S/MIME.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_DETACHED', 64);

/**
 * Adds text/plain content type headers to encrypted/signed
 * message. If decrypting or verifying, it strips those headers from
 * the output - if the decrypted or verified message is not of MIME type
 * text/plain then an error will occur.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_TEXT', 1);

/**
 * When verifying a message, certificates (if
 * any) included in the message are normally searched for the
 * signing certificate. With this option only the
 * certificates specified in the <i>extracerts</i>
 * parameter of <b>openssl_pkcs7_verify</b> are
 * used. The supplied certificates can still be used as
 * untrusted CAs however.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOINTERN', 16);

/**
 * Do not verify the signers certificate of a signed
 * message.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOVERIFY', 32);

/**
 * Do not chain verification of signers certificates: that is
 * don't use the certificates in the signed message as untrusted CAs.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOCHAIN', 8);

/**
 * When signing a message the signer's certificate is normally
 * included - with this option it is excluded. This will reduce the
 * size of the signed message but the verifier must have a copy of the
 * signers certificate available locally (passed using the
 * <i>extracerts</i> to
 * <b>openssl_pkcs7_verify</b> for example).
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOCERTS', 2);

/**
 * Normally when a message is signed, a set of attributes are
 * included which include the signing time and the supported symmetric
 * algorithms. With this option they are not included.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOATTR', 256);

/**
 * Normally the input message is converted to "canonical" format
 * which is effectively using CR and LF
 * as end of line: as required by the S/MIME specification. When this
 * option is present, no translation occurs. This is useful when
 * handling binary data which may not be in MIME format.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_BINARY', 128);

/**
 * @since 8.3
 */
define('PKCS7_NOOLDMIMETYPE', 1024);

/**
 * Don't try and verify the signatures on a message
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('PKCS7_NOSIGS', 4);
define('OPENSSL_PKCS1_PADDING', 1);
define('OPENSSL_SSLV23_PADDING', 2);
define('OPENSSL_NO_PADDING', 3);
define('OPENSSL_PKCS1_OAEP_PADDING', 4);
define('OPENSSL_CIPHER_RC2_40', 0);
define('OPENSSL_CIPHER_RC2_128', 1);
define('OPENSSL_CIPHER_RC2_64', 2);
define('OPENSSL_CIPHER_DES', 3);
define('OPENSSL_CIPHER_3DES', 4);
define('OPENSSL_KEYTYPE_RSA', 0);
define('OPENSSL_KEYTYPE_DSA', 1);
define('OPENSSL_KEYTYPE_DH', 2);
define('OPENSSL_KEYTYPE_EC', 3);
/**
 * @since 8.4
 */
define('OPENSSL_KEYTYPE_X25519', 4);
/**
 * @since 8.4
 */
define('OPENSSL_KEYTYPE_ED25519', 5);
/**
 * @since 8.4
 */
define('OPENSSL_KEYTYPE_X448', 6);
/**
 * @since 8.4
 */
define('OPENSSL_KEYTYPE_ED448', 7);

/**
 * Whether SNI support is available or not.
 * @link https://php.net/manual/en/openssl.constants.php
 */
define('OPENSSL_TLSEXT_SERVER_NAME', 1);

// End of openssl v.

/** @link https://php.net/manual/en/openssl.ciphers.php */
define('OPENSSL_CIPHER_AES_128_CBC', 5);
/** @link https://php.net/manual/en/openssl.ciphers.php */
define('OPENSSL_CIPHER_AES_192_CBC', 6);
/** @link https://php.net/manual/en/openssl.ciphers.php */
define('OPENSSL_CIPHER_AES_256_CBC', 7);
define('OPENSSL_RAW_DATA', 1);
define('OPENSSL_ZERO_PADDING', 2);
define('OPENSSL_DONT_ZERO_PAD_KEY', 4);

/**
 * @since 8.0
 */
define('OPENSSL_CMS_DETACHED', 64);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_TEXT', 1);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_NOINTERN', 16);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_NOVERIFY', 32);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_NOCERTS', 2);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_NOATTR', 256);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_BINARY', 128);
/**
 * @since 8.0
 */
define('OPENSSL_CMS_NOSIGS', 12);
/**
 * @since 8.0
 */
define('OPENSSL_ENCODING_DER', 0);
/**
 * @since 8.0
 */
define('OPENSSL_ENCODING_SMIME', 1);
/**
 * @since 8.0
 */
define('OPENSSL_ENCODING_PEM', 2);

define('OPENSSL_DEFAULT_STREAM_CIPHERS', "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:" .
"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:" .
"DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:" .
"ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:" .
"ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:" .
"DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:" .
"AES256-GCM-SHA384:AES128:AES256:HIGH:!SSLv2:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!RC4:!ADH");

/**
 * @since 8.3
 */
define('OPENSSL_CMS_OLDMIMETYPE', 1024);

/**
* <div id="class.opensslcertificate" class="reference"> <h1 class="title">OpenSSLCertificate 类</h1>  <div class="partintro"><p class="verinfo">(PHP 8)</p>    <div class="section" id="opensslcertificate.intro">   <h2 class="title">简介</h2>   <p class="para">    从 PHP 8.0.0 开始替换 <span class="literal">OpenSSL X.509</span> 资源的完全不透明类。   </p>  </div>    <div class="section" id="opensslcertificate.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">OpenSSLCertificate</strong></strong>     {</div>   }</div>     </div> </div> </div>
*
 * @since 8.0
 
*/
final class OpenSSLCertificate
{
    /**
     * Cannot directly construct OpenSSLCertificate, use openssl_x509_read() instead
     * @see openssl_x509_read()
     */
    private function __construct() {}
}

/**
* <div id="class.opensslcertificatesigningrequest" class="reference"> <h1 class="title">OpenSSLCertificateSigningRequest 类</h1>  <div class="partintro"><p class="verinfo">(PHP 8)</p>    <div class="section" id="opensslcertificatesigningrequest.intro">   <h2 class="title">简介</h2>   <p class="para">    从 PHP 8.0.0 开始替换 <span class="literal">OpenSSL X.509 CSR</span> 资源的完全不透明类。   </p>  </div>    <div class="section" id="opensslcertificatesigningrequest.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">OpenSSLCertificateSigningRequest</strong></strong>     {</div>   }</div>     </div> </div> </div>
*
 * @since 8.0
 
*/
final class OpenSSLCertificateSigningRequest
{
    /**
     * Cannot directly construct OpenSSLCertificateSigningRequest, use openssl_csr_new() instead
     * @see openssl_csr_new()
     */
    private function __construct() {}
}

/**
* <div id="class.opensslasymmetrickey" class="reference"> <h1 class="title">OpenSSLAsymmetricKey 类</h1>  <div class="partintro"><p class="verinfo">(PHP 8)</p>    <div class="section" id="opensslasymmetrickey.intro">   <h2 class="title">简介</h2>   <p class="para">    从 PHP 8.0.0 开始替换 <span class="literal">OpenSSL key</span> 资源的完全不透明类。   </p>  </div>    <div class="section" id="opensslasymmetrickey.synopsis">   <h2 class="title">类摘要</h2>      <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">OpenSSLAsymmetricKey</strong></strong>     {</div>   }</div>     </div> </div> </div>
*
 * @since 8.0
 
*/
final class OpenSSLAsymmetricKey
{
    /**
     * Cannot directly construct OpenSSLAsymmetricKey, use openssl_pkey_new() instead
     * @see openssl_pkey_new()
     */
    private function __construct() {}
}
