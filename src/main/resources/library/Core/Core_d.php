<?php

// Start of Core v.5.3.6-13ubuntu3.2

/**
 * <span class="simpara">     致命的运行时错误。这类错误一般是不可恢复的情况，例如内存分配导致的问题。后果是导致脚本终止不再继续运行。    </span>
 * 
 * Fatal run-time errors. These indicate errors that can not be
 * recovered from, such as a memory allocation problem.
 * Execution of the script is halted.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_ERROR', 1);

/**
 * <span class="simpara">     旧引擎“exception”对应于可捕获的致命错误。与 <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span>     类似，但必须通过用户定义的错误处理程序捕获（请参阅     <span class="function">{@link set_error_handler()}</span>）。如果不处理，则其行为类似于 <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-error">E_ERROR</a></code></strong>。    </span>
 * 
 * Catchable fatal error. It indicates that a probably dangerous error
 * occurred, but did not leave the Engine in an unstable state. If the error
 * is not caught by a user defined handle (see also
 * <b>set_error_handler</b>), the application aborts as it
 * was an <b>E_ERROR</b>.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_RECOVERABLE_ERROR', 4096);

/**
 * <span class="simpara">     运行时警告 (非致命错误)。仅给出提示信息，但是脚本不会终止运行。    </span>
 * 
 * Run-time warnings (non-fatal errors). Execution of the script is not
 * halted.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_WARNING', 2);

/**
 * <span class="simpara">     编译时解析错误。解析错误只由解析器产生。    </span>
 * 
 * Compile-time parse errors. Parse errors should only be generated by
 * the parser.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_PARSE', 4);

/**
 * <span class="simpara">     运行时通知。表示脚本遇到可能会表现为错误的情况，但是在可以正常运行的脚本里面也可能会有类似的通知。    </span>
 * 
 * Run-time notices. Indicate that the script encountered something that
 * could indicate an error, but could also happen in the normal course of
 * running a script.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_NOTICE', 8);

/**
 * <span class="simpara">     PHP 发出有关执行代码的运行时建议，以确保向前兼容。    </span>
 * 
 * Enable to have PHP suggest changes
 * to your code which will ensure the best interoperability
 * and forward compatibility of your code.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 * @deprecated 8.4
 */
define('E_STRICT', 2048);

/**
 * <span class="simpara">     运行时弃用通知。启用后将会对在未来版本中可能无法正常工作的代码给出警告。    </span>
 * 
 * Run-time notices. Enable this to receive warnings about code
 * that will not work in future versions.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_DEPRECATED', 8192);

/**
 * <span class="simpara">     在 PHP 初始化启动过程中发生的致命错误。该错误类似     <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-error">E_ERROR</a></code></strong>，但是是由 PHP 引擎核心产生。    </span>
 * 
 * Fatal errors that occur during PHP's initial startup. This is like an
 * <b>E_ERROR</b>, except it is generated by the core of PHP.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_CORE_ERROR', 16);

/**
 * <span class="simpara">     PHP 初始化启动过程中发生的警告 (非致命错误) 。类似 <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></code></strong>，但是是由 PHP 引擎核心产生。    </span>
 * 
 * Warnings (non-fatal errors) that occur during PHP's initial startup.
 * This is like an <b>E_WARNING</b>, except it is generated
 * by the core of PHP.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_CORE_WARNING', 32);

/**
 * <span class="simpara">     致命编译时错误。类似 <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-error">E_ERROR</a></code></strong>，但是是由 Zend 脚本引擎产生。    </span>
 * 
 * Fatal compile-time errors. This is like an <b>E_ERROR</b>,
 * except it is generated by the Zend Scripting Engine.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_COMPILE_ERROR', 64);

/**
 * <span class="simpara">     编译时警告 (非致命错误)。类似     <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></code></strong>，但是是由 Zend 脚本引擎产生。    </span>
 * 
 * Compile-time warnings (non-fatal errors). This is like an
 * <b>E_WARNING</b>, except it is generated by the Zend
 * Scripting Engine.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_COMPILE_WARNING', 128);

/**
 * <span class="simpara">     用户产生的错误信息。类似     <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-error">E_ERROR</a></code></strong>，但是是由用户自己在代码中使用 PHP     函数 <span class="function">{@link trigger_error()}</span> 来产生。    </span>
 * 
 * User-generated error message. This is like an
 * <b>E_ERROR</b>, except it is generated in PHP code by
 * using the PHP function <b>trigger_error</b>.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_USER_ERROR', 256);

/**
 * <span class="simpara">     用户产生的警告信息。类似     <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></code></strong>，由用户自己在代码中使用 PHP     函数 <span class="function">{@link trigger_error()}</span> 来产生。    </span>
 * 
 * User-generated warning message. This is like an
 * <b>E_WARNING</b>, except it is generated in PHP code by
 * using the PHP function <b>trigger_error</b>.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_USER_WARNING', 512);

/**
 * <span class="simpara">     用户产生的通知信息。类似      <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-notice">E_NOTICE</a></code></strong>，由用户自己在代码中使用 PHP      函数 <span class="function">{@link trigger_error()}</span> 来产生。    </span>
 * 
 * User-generated notice message. This is like an
 * <b>E_NOTICE</b>, except it is generated in PHP code by
 * using the PHP function <b>trigger_error</b>.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_USER_NOTICE', 1024);

/**
 * <span class="simpara">     用户产生的警告信息。 类似     <strong><code><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-deprecated">E_DEPRECATED</a></code></strong>, 由用户自己在代码中使用 PHP     函数 <span class="function">{@link trigger_error()}</span> 来产生。    </span>
 * 
 * User-generated warning message. This is like an
 * <b>E_DEPRECATED</b>, except it is generated in PHP code by
 * using the PHP function <b>trigger_error</b>.
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_USER_DEPRECATED', 16384);

/**
 * <span class="simpara">     包含每个错误、警告和通知的位掩码。    </span>
 * 
 * All errors and warnings, as supported, except of level
 * <b>E_STRICT</b> prior to PHP 5.4.0.
 * Value of <b>E_ALL</b> is 32767 since PHP 5.4.x,
 * 30719 in PHP 5.3.x, 6143 in PHP 5.2.x, 2047 previously
 * @link https://php.net/manual/zh/errorfunc.constants.php
 */
define('E_ALL', 30719);
/**
 * <span class="simpara">    填充 object 的索引。   </span>
 */
define('DEBUG_BACKTRACE_PROVIDE_OBJECT', 1);
/**
 * <span class="simpara">    不要在堆跟踪中包含函数的参数信息。   </span>
 */
define('DEBUG_BACKTRACE_IGNORE_ARGS', 2);

define('S_MEMORY', 1);

define('S_VARS', 4);

define('S_FILES', 8);

define('S_INCLUDE', 16);

define('S_SQL', 32);

define('S_EXECUTOR', 64);

define('S_MAIL', 128);

define('S_SESSION', 256);

define('S_MISC', 2);

define('S_INTERNAL', 536870912);

define('S_ALL', 511);

/**
 * <span class="simpara">     参阅 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔值</a>。    </span>
 */
define('true', (bool)1, true);
/**
 * <span class="simpara">     参阅 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔值</a>。    </span>
 */
define('false', (bool)0, true);
/**
 * <span class="simpara">     参阅 <a href="https://php.net/manual/zh/language.types.null.php" class="link">Null</a>。    </span>
 */
define('null', null, true);
/**
 * <span class="simpara">     指示当前 PHP 版本是否是线程安全。    </span>
 */
define('ZEND_THREAD_SAFE', false);
/**
 * <span class="simpara">     表示当前 PHP 版本是否为调试版本。    </span>
 */
define('ZEND_DEBUG_BUILD', false);
/**
 * <span class="simpara">     Windows 内部版本号（例如 Windows Vista SP1 是 build 6001）    </span>
 */
define('PHP_WINDOWS_VERSION_BUILD', 0);
/**
 * <span class="simpara">     windows 主版本，可以是 <code class="literal">4</code>（NT4/Me/98/95）、<code class="literal">5</code>（XP/2003     R2/2003/2000）或 <code class="literal">6</code>（Vista/2008/7/8/8.1）。    </span>
 */
define('PHP_WINDOWS_VERSION_MAJOR', 0);
/**
 * <span class="simpara">     Windows 副版本号，可以是 <code class="literal">0</code> (Vista/2008/2000/NT4/95)、<code class="literal">1</code> (XP)、<code class="literal">2</code> (2003     R2/2003/XP x64)、<code class="literal">10</code>（98）或 <code class="literal">90</code>（ME）。    </span>
 */
define('PHP_WINDOWS_VERSION_MINOR', 0);
/**
 * <span class="simpara">     PHP 当前运行的平台， Windows Vista/XP/2000/NT4、Server 2008/2003 的值是 <code class="literal">2</code>，Windows ME/98/95 下值是 <code class="literal">1</code>。    </span>
 */
define('PHP_WINDOWS_VERSION_PLATFORM', 0);
/**
 * <span class="simpara">     包含用于确定 <code class="literal">PHP_WINDOWS_NT_<span class="replaceable">*</span></code> 常量的值。该值可能是     <code class="literal">PHP_WINDOWS_NT_<span class="replaceable">*</span></code> 常量之一，表示平台类型的值。    </span>
 */
define('PHP_WINDOWS_VERSION_PRODUCTTYPE', 0);
/**
 * <span class="simpara">     安装的 service pack 主版本号，没有安装是 <code class="literal">0</code>。例如     Windows XP service pack 3 上这个值是 <code class="literal">3</code>。    </span>
 */
define('PHP_WINDOWS_VERSION_SP_MAJOR', 0);
/**
 * <span class="simpara">     安装的 service pack 副版本号，如果没有安装则是 <code class="literal">0</code>。    </span>
 */
define('PHP_WINDOWS_VERSION_SP_MINOR', 0);
/**
 * <span class="simpara">     suitemask 是位掩码，用来判断 Windows 是否安装了各种功能，参阅下表获取可能的位阈值。    </span>
 */
define('PHP_WINDOWS_VERSION_SUITEMASK', 0);
/**
 * <span class="simpara">     这是域控制器    </span>
 */
define('PHP_WINDOWS_NT_DOMAIN_CONTROLLER', 2);
/**
 * <span class="simpara">     这是一个服务器系统（例如 Server 2008/2003/2000），注意，如果这是一个域控制器，通过      <strong><code><a href="https://php.net/manual/zh/info.constants.php#constant.php-windows-nt-domain-controller">PHP_WINDOWS_NT_DOMAIN_CONTROLLER</a></code></strong> 报告。    </span>
 */
define('PHP_WINDOWS_NT_SERVER', 3);
/**
 * <span class="simpara">     这是一个工作站系统（例如 Vista/XP/2000/NT4）    </span>
 */
define('PHP_WINDOWS_NT_WORKSTATION', 1);
/**
 * <span class="simpara">    Windows <kbd class="keycombo">     <kbd class="keycap">CTRL</kbd>     +<kbd class="keycap">C</kbd>    </kbd> 事件。自 PHP 7.4.0 起可用（仅限 Windows）。   </span>
 * 
 * @since 7.4
 */
define('PHP_WINDOWS_EVENT_CTRL_C', 0);
/**
 * <span class="simpara">    Windows <kbd class="keycombo">     <kbd class="keycap">CTRL</kbd>     +<kbd class="keycap">BREAK</kbd>    </kbd> 事件。自 PHP 7.4.0 起可用（仅限 Windows）。   </span>
 * 
 * @since 7.4
 */
define('PHP_WINDOWS_EVENT_CTRL_BREAK', 1);
/**
 * <span class="simpara">     当前 PHP 版本的字符串，“主版本号.子版本号.阶段版本号[扩展信息]”形式。    </span>
 */
define('PHP_VERSION', "5.3.6-13ubuntu3.2");
/**
 * <span class="simpara">     当前 PHP 版本的主版本号，为整数形式（例如：“5.2.7-extra” 版本是 int(5) ）。    </span>
 */
define('PHP_MAJOR_VERSION', 5);
/**
 * <span class="simpara">     当前 PHP 版本的子版本号，为整数形式（例如：“5.2.7-extra” 版本是 int(2) ）。    </span>
 */
define('PHP_MINOR_VERSION', 3);
/**
 * <span class="simpara">     当前 PHP 版本的阶段版本号，为整数形式（例如：“5.2.7-extra” 版本是 int(7) ）。    </span>
 */
define('PHP_RELEASE_VERSION', 6);
/**
 * <span class="simpara">     当前 PHP 版本的"扩展信息"信息，为字符串形式（例如：“5.2.7-extra” 版本是 '-extra' ）。     通常由发行版供应商用来指示包的版本。    </span>
 */
define('PHP_EXTRA_VERSION', "-13ubuntu3.2");
/**
 * <span class="simpara">     当前 PHP 版本的整数，用于版本比较（例如：“5.2.7-extra” 版本是 int(50207) ）。    </span>
 */
define('PHP_VERSION_ID', 50306);
/**
 * <span class="simpara">     表示 PHP 的当前版本是否为线程安全版本。    </span>
 */
define('PHP_ZTS', 0);
/**
 * <span class="simpara">     表示当前 PHP 版本是否为调试版本。    </span>
 */
define('PHP_DEBUG', 0);
/**
 * <span class="simpara">     运行 PHP 的操作系统。    </span>
 */
define('PHP_OS', "Linux");
/**
 * <span class="simpara">     运行 PHP 的操作系统家族。     <code class="literal">'Windows'</code>、 <code class="literal">'BSD'</code>、     <code class="literal">'Darwin'</code>、 <code class="literal">'Solaris'</code>、     <code class="literal">'Linux'</code> 或 <code class="literal">'Unknown'</code> 中的一个。     从 PHP 7.2.0 起可用。    </span>
 * 
 * The operating system family PHP was built for. Either of 'Windows', 'BSD', 'Darwin', 'Solaris', 'Linux' or 'Unknown'. Available as of PHP 7.2.0.
 * @since 7.2
 */
define('PHP_OS_FAMILY', "Linux");
/**
 * <span class="simpara">     运行 PHP 的服务器接口类型（Server API）。参见 <span class="function">{@link php_sapi_name()}</span>。    </span>
 */
define('PHP_SAPI', "cli");
/**
 * <span class="simpara">     表示是否可以设置和获取流程标题。     仅在 CLI SAPI 下可用。    </span>
 * 
 * @since 7.4
 */
define('PHP_CLI_PROCESS_TITLE', 1);
/**
 * <span class="simpara">    </span>
 */
define('DEFAULT_INCLUDE_PATH', ".:/usr/share/php:/usr/share/pear");
/**
 * <span class="simpara">    </span>
 */
define('PEAR_INSTALL_DIR', "/usr/share/php");
/**
 * <span class="simpara">    </span>
 */
define('PEAR_EXTENSION_DIR', "/usr/lib/php5/20090626");
/**
 * <span class="simpara">     寻找可动态加载扩展的默认目录（除非被 <a href="https://php.net/manual/zh/ini.core.php#ini.extension-dir" class="link">extension_dir</a>覆盖）。     默认为 <strong><code><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-prefix">PHP_PREFIX</a></code></strong> （在 Windows 上是 <code class="code">PHP_PREFIX . "\\ext"</code>）。    </span>
 */
define('PHP_EXTENSION_DIR', "/usr/lib/php5/20090626");
/**
 * <span class="simpara">     脚本执行期间的 PHP 二进制路径。    </span>
 * 
 * Specifies where the binaries were installed into.
 * @link https://php.net/manual/zh/reserved.constants.php
 */
define('PHP_BINARY', '/usr/local/php/bin/php');
/**
 * <span class="simpara">     配置（configure）时设置的 <strong class="option configure">--prefix</strong> 值。     在 Windows 上，它是配置（configure）时设置的 <strong class="option configure">--with-prefix</strong> 值。    </span>
 */
define('PHP_PREFIX', "/usr");
/**
 * <span class="simpara">     配置（configure）时设置的 <strong class="option configure">--bindir</strong> 值。     在 Windows 上，它是配置（configure）时设置的 <strong class="option configure">--with-prefix</strong> 值。    </span>
 */
define('PHP_BINDIR', "/usr/bin");
/**
 * <span class="simpara">    </span>
 */
define('PHP_LIBDIR', "/usr/lib/php5");
/**
 * <span class="simpara">    </span>
 */
define('PHP_DATADIR', "/usr/share");
/**
 * <span class="simpara">    </span>
 */
define('PHP_SYSCONFDIR', "/etc");
/**
 * <span class="simpara">    </span>
 */
define('PHP_LOCALSTATEDIR', "/var");
/**
 * <span class="simpara">    </span>
 */
define('PHP_CONFIG_FILE_PATH', "/etc/php5/cli");
/**
 * <span class="simpara">    </span>
 */
define('PHP_CONFIG_FILE_SCAN_DIR', "/etc/php5/cli/conf.d");
/**
 * <span class="simpara">     构建平台的共享库后缀，例如 “so”（大多数 Unix） 或 “dll”（Windows）。    </span>
 */
define('PHP_SHLIB_SUFFIX', "so");
/**
 * <span class="simpara">     当前平台中对于换行符的定义。    </span>
 */
define('PHP_EOL', "\n");

define('SUHOSIN_PATCH', 1);

define('SUHOSIN_PATCH_VERSION', "0.9.10");
/**
 * <span class="simpara">     当前 PHP 版本支持的最大文件名（包括路径）长度。    </span>
 */
define('PHP_MAXPATHLEN', 4096);
/**
 * <span class="simpara">     当前 PHP 版本支持的最大整型数字。在 32 位系统中通常为 int(2147483647)，64 位系统中为 int(9223372036854775807)。    </span>
 */
define('PHP_INT_MAX', 9223372036854775807);
/**
 * <span class="simpara">     当前 PHP 版本支持的最小整型数字。在 32 位系统中通常为 int(-2147483648)，64 系统中为 int(-9223372036854775808)。通常情况下 PHP_INT_MIN === ~PHP_INT_MAX。    </span>
 */
define('PHP_INT_MIN', -9223372036854775808);
/**
 * <span class="simpara">     当前 PHP 版本的整数大小（以字节为单位）。    </span>
 */
define('PHP_INT_SIZE', 8);
/**
 * <span class="simpara">     可以返回四舍五入为浮点数后不会造成精度损失的小数位数。     从 PHP 7.2.0 起可用。    </span>
 * 
 * Number of decimal digits that can be rounded into a float and back without precision loss. Available as of PHP 7.2.0.
 * @since 7.2
 */
define('PHP_FLOAT_DIG', 15);
/**
 * <span class="simpara">     最小的可表示正数 x，使 <code class="literal">x + 1.0 != 1.0</code>。     从 PHP 7.2.0 起可用。    </span>
 * 
 * Smallest representable positive number x, so that x + 1.0 != 1.0. Available as of PHP 7.2.0.
 * @since 7.2
 */
define('PHP_FLOAT_EPSILON', 2.2204460492503e-16);

/**
 * <span class="simpara">     最大的可表示浮点数。     从 PHP 7.2.0 起可用。    </span>
 * 
 * Largest representable floating point number. Available as of PHP 7.2.0.
 * @since 7.2
 */
define('PHP_FLOAT_MAX', 1.7976931348623e+308);
/**
 * <span class="simpara">     最小可表示的<em>正</em>浮点数。     如果你需要最小的可表示<em>负</em>浮点数，可以使用 <code class="literal">- PHP_FLOAT_MAX</code>。     从 PHP 7.2.0 起可用。    </span>
 * 
 * Smallest representable floating point number. Available as of PHP 7.2.0.
 * @since 7.2
 */
define('PHP_FLOAT_MIN', 2.2250738585072e-308);

define('ZEND_MULTIBYTE', 0);

define('PHP_OUTPUT_HANDLER_START', 1);

define('PHP_OUTPUT_HANDLER_CONT', 2);

define('PHP_OUTPUT_HANDLER_END', 4);

define('UPLOAD_ERR_OK', 0);

define('UPLOAD_ERR_INI_SIZE', 1);

define('UPLOAD_ERR_FORM_SIZE', 2);

define('UPLOAD_ERR_PARTIAL', 3);

define('UPLOAD_ERR_NO_FILE', 4);

define('UPLOAD_ERR_NO_TMP_DIR', 6);

define('UPLOAD_ERR_CANT_WRITE', 7);

define('UPLOAD_ERR_EXTENSION', 8);
/**
 * <span class="simpara">     已打开的数据流到 <code class="literal">stdin</code>。     仅在 CLI SAPI 下可用。    </span>
 */
define('STDIN', fopen('php://stdin', 'r'));
/**
 * <span class="simpara">     已打开的数据流到 <code class="literal">stdout</code>。     仅在 CLI SAPI 下可用。    </span>
 */
define('STDOUT', fopen('php://stdout', 'w'));
/**
 * <span class="simpara">     已打开的数据流到 <code class="literal">stderr</code>。     仅在 CLI SAPI 下可用。    </span>
 */
define('STDERR', fopen('php://stderr', 'w'));

/**
 * <span class="simpara">     系统调用的文件描述符的最大数目。从 PHP 7.1.0 起可用。    </span>
 */
define('PHP_FD_SETSIZE', 1024);

/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_WRITE', 0);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_FLUSH', 4);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_CLEAN', 2);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_FINAL', 8);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_CLEANABLE', 16);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_FLUSHABLE', 32);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_REMOVABLE', 64);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_STDFLAGS', 112);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_STARTED', 4096);
/** @link https://php.net/manual/en/outcontrol.constants.php */
define('PHP_OUTPUT_HANDLER_DISABLED', 8192);

/**
 * @since 8.4
 */
const PHP_SBINDIR = '/usr/local/sbin', PHP_OUTPUT_HANDLER_PROCESSED = 16384;

/**
 * <span class="simpara">     安装手册页的位置。    </span>
 * 
 * Specifies where the manpages were installed into.
 * @since 5.3.7
 * @link https://php.net/manual/zh/reserved.constants.php
 */
define('PHP_MANDIR', '/usr/local/php/php/man');
