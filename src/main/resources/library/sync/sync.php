<?php
/**
 * <div id="class.syncmutex" class="reference"> <h1 class="title">The SyncMutex class</h1>  <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>  <div class="section" id="syncmutex.intro">   <h2 class="title">简介</h2>   <p class="para">    A cross-platform, native implementation of named and unnamed countable mutex objects.   </p>   <p class="para">    A mutex is a mutual exclusion object that restricts access to a shared resource (e.g. a file) to a single instance.    Countable mutexes acquire the mutex a single time and internally track the number of times the mutex is locked.    The mutex is unlocked as soon as it goes out of scope or is unlocked the same number of times that it was locked.   </p>  </div>  <div class="section" id="syncmutex.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SyncMutex</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncmutex.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span><span class="initializer"> = ?</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncmutex.lock.php" class="methodname" style="color:#CC7832">lock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncmutex.unlock.php" class="methodname" style="color:#CC7832">unlock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$all</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SyncMutex::__construct} — Constructs a new SyncMutex object</li><li>{@link SyncMutex::lock} — Waits for an exclusive lock</li><li>{@link SyncMutex::unlock} — Unlocks the mutex</li></ul></div>
 * 
 * sync PECL extension stubs v.0.1
 * @link https://php.net/manual/zh/book.sync.php
 */
/**
 * SyncMutex
 *
 * A cross-platform, native implementation of named and unnamed countable mutex objects.
 * A mutex is a mutual exclusion object that restricts access to a shared resource (e.g. a file) to a single instance. Countable mutexes acquire the mutex a single time and internally track the number of times the mutex is locked. The mutex is unlocked as soon as it goes out of scope or is unlocked the same number of times that it was locked.
 *
 * @link https://php.net/manual/zh/class.syncmutex.php
 */
class SyncMutex
{
    /**
     * Constructs a new SyncMutex object
     *
     * Constructs a named or unnamed countable mutex.
     *
     * @param string $name [optional] The name of the mutex if this is a named mutex object. If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @throws Exception if the mutex cannot be created or opened
     * @link https://php.net/manual/en/syncmutex.construct.php
     */
    public function __construct($name) {}

    /**
 * <div id="syncmutex.lock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncMutex::lock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncMutex::lock</span> — <span class="dc-title">Waits for an exclusive lock</span></p> </div> <div class="refsect1 description" id="refsect1-syncmutex.lock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncMutex::lock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Obtains an exclusive lock on a <span class="classname"><a href="https://php.net/manual/zh/class.syncmutex.php" class="classname">SyncMutex</a></span> object.   If the lock is already acquired, then this increments an internal counter.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncmutex.lock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">wait</span></dt>    <dd>     <p class="para">      The number of milliseconds to wait for the exclusive lock.      A value of -1 is infinite.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncmutex.lock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncmutex.lock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3626">   <p><strong>示例 #1 <span class="function"><strong>SyncMutex::lock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$mutex </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncMutex</span><span style="color: #007700">(</span><span style="color: #DD0000">"UniqueName"</span><span style="color: #007700">);<br><br>if (!</span><span style="color: #9876AA">\$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br>{<br>    echo </span><span style="color: #DD0000">"Unable to lock mutex."</span><span style="color: #007700">;<br><br>    exit();<br>}<br><br></span><span style="color: #FF8000">// ... <br><br></span><span style="color: #9876AA">\$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncmutex.lock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncMutex::unlock()} - Unlocks the mutex</span></li>  </ul> </div></div>
 * 
     * Waits for an exclusive lock
     *
     * Obtains an exclusive lock on a SyncMutex object. If the lock is already acquired, then this increments an internal counter.
     *
     * @param int $wait [optional] The number of milliseconds to wait for the exclusive lock. A value of -1 is infinite.
     * @return bool TRUE if the lock was obtained, FALSE otherwise.
     * @see SyncMutex::unlock()
     * @link https://php.net/manual/zh/syncmutex.lock.php
     */
    public function lock($wait = -1) {}

    /**
 * <div id="syncmutex.unlock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncMutex::unlock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncMutex::unlock</span> — <span class="dc-title">Unlocks the mutex</span></p> </div> <div class="refsect1 description" id="refsect1-syncmutex.unlock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncMutex::unlock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$all</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Decreases the internal counter of a <span class="classname"><a href="https://php.net/manual/zh/class.syncmutex.php" class="classname">SyncMutex</a></span> object.   When the internal counter reaches zero, the actual lock on the object is released.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncmutex.unlock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">all</span></dt>    <dd>     <p class="para">      Specifies whether or not to set the internal counter to zero and therefore release the lock.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncmutex.unlock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncmutex.unlock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3627">   <p><strong>示例 #1 <span class="function"><strong>SyncMutex::unlock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$mutex </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncMutex</span><span style="color: #007700">(</span><span style="color: #DD0000">"UniqueName"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// ... <br><br></span><span style="color: #9876AA">\$mutex</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncmutex.unlock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncMutex::lock()} - Waits for an exclusive lock</span></li>  </ul> </div></div>
 * 
     * Unlocks the mutex
     *
     * Decreases the internal counter of a SyncMutex object. When the internal counter reaches zero, the actual lock on the object is released.
     *
     * @param bool $all [optional] Specifies whether or not to set the internal counter to zero and therefore release the lock.
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.
     * @see SyncMutex::lock()
     * @link https://php.net/manual/zh/syncmutex.unlock.php
     */
    public function unlock($all = false) {}
    }

/**
 * <div id="class.syncsemaphore" class="reference"> <h1 class="title">The SyncSemaphore class</h1>  <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>  <div class="section" id="syncsemaphore.intro">   <h2 class="title">简介</h2>   <p class="para">    A cross-platform, native implementation of named and unnamed semaphore objects.   </p>   <p class="para">    A semaphore restricts access to a limited resource to a limited number of instances.    Semaphores differ from mutexes in that they can allow more than one instance to    access a resource at one time while a mutex only allows one instance at a time.   </p>  </div>  <div class="section" id="syncsemaphore.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SyncSemaphore</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsemaphore.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$initialval</span><span class="initializer"> = 1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$autounlock</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsemaphore.lock.php" class="methodname" style="color:#CC7832">lock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsemaphore.unlock.php" class="methodname" style="color:#CC7832">unlock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$prevcount</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SyncSemaphore::__construct} — Constructs a new SyncSemaphore object</li><li>{@link SyncSemaphore::lock} — Decreases the count of the semaphore or waits</li><li>{@link SyncSemaphore::unlock} — Increases the count of the semaphore</li></ul></div>
 * 
 * SyncSemaphore
 *
 * A cross-platform, native implementation of named and unnamed semaphore objects.
 * A semaphore restricts access to a limited resource to a limited number of instances. Semaphores differ from mutexes in that they can allow more than one instance to access a resource at one time while a mutex only allows one instance at a time.
 *
 * @link https://php.net/manual/zh/class.syncsemaphore.php
 */
class SyncSemaphore
{
    /**
     * Constructs a new SyncSemaphore object
     *
     * Constructs a named or unnamed semaphore.
     *
     * @param string $name       [optional] The name of the semaphore if this is a named semaphore object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param int    $initialval [optional] The initial value of the semaphore. This is the number of locks that may be obtained.
     * @param bool   $autounlock [optional] Specifies whether or not to automatically unlock the semaphore at the conclusion of the PHP script. Warning: If an object is: A named semaphore with an autounlock of FALSE, the object is locked, and the PHP script concludes before the object is unlocked, then the underlying semaphore will end up in an inconsistent state.
     * @throws Exception if the semaphore cannot be created or opened
     * @link https://php.net/manual/en/syncsemaphore.construct.php
     */
    public function __construct($name, $initialval = 1, $autounlock = true) {}

    /**
 * <div id="syncsemaphore.lock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSemaphore::lock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncSemaphore::lock</span> — <span class="dc-title">Decreases the count of the semaphore or waits</span></p> </div> <div class="refsect1 description" id="refsect1-syncsemaphore.lock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSemaphore::lock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Decreases the count of a <span class="classname"><a href="https://php.net/manual/zh/class.syncsemaphore.php" class="classname">SyncSemaphore</a></span> object or waits until the semaphore becomes non-zero.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsemaphore.lock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">wait</span></dt>    <dd>     <p class="para">      The number of milliseconds to wait for the semaphore.      A value of -1 is infinite.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncsemaphore.lock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncsemaphore.lock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3629">   <p><strong>示例 #1 <span class="function"><strong>SyncSemaphore::lock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$semaphore </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSemaphore</span><span style="color: #007700">(</span><span style="color: #DD0000">"LimitedResource_2clients"</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br><br>if (!</span><span style="color: #9876AA">\$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br>{<br>    echo </span><span style="color: #DD0000">"Unable to lock semaphore."</span><span style="color: #007700">;<br><br>    exit();<br>}<br><br></span><span style="color: #FF8000">// ... <br><br></span><span style="color: #9876AA">\$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsemaphore.lock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSemaphore::unlock()} - Increases the count of the semaphore</span></li>  </ul> </div></div>
 * 
     * Decreases the count of the semaphore or waits
     *
     * Decreases the count of a SyncSemaphore object or waits until the semaphore becomes non-zero.
     *
     * @param int $wait The number of milliseconds to wait for the semaphore. A value of -1 is infinite.
     * @return bool TRUE if the lock operation was successful, FALSE otherwise.
     * @see SyncSemaphore::unlock()
     * @link https://php.net/manual/zh/syncsemaphore.lock.php
     */
    public function lock($wait = -1) {}

    /**
 * <div id="syncsemaphore.unlock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSemaphore::unlock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncSemaphore::unlock</span> — <span class="dc-title">Increases the count of the semaphore</span></p> </div> <div class="refsect1 description" id="refsect1-syncsemaphore.unlock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSemaphore::unlock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$prevcount</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Increases the count of a <span class="classname"><a href="https://php.net/manual/zh/class.syncsemaphore.php" class="classname">SyncSemaphore</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsemaphore.unlock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">prevcount</span></dt>    <dd>     <p class="para">      Returns the previous count of the semaphore.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncsemaphore.unlock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncsemaphore.unlock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3630">   <p><strong>示例 #1 <span class="function"><strong>SyncSemaphore::unlock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$semaphore </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSemaphore</span><span style="color: #007700">(</span><span style="color: #DD0000">"LimitedResource_2clients"</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br><br>if (!</span><span style="color: #9876AA">\$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lock</span><span style="color: #007700">(</span><span style="color: #9876AA">3000</span><span style="color: #007700">))<br>{<br>    echo </span><span style="color: #DD0000">"Unable to lock semaphore."</span><span style="color: #007700">;<br><br>    exit();<br>}<br><br></span><span style="color: #FF8000">// ... <br><br></span><span style="color: #9876AA">\$semaphore</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsemaphore.unlock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSemaphore::lock()} - Decreases the count of the semaphore or waits</span></li>  </ul> </div></div>
 * 
     * Increases the count of the semaphore
     *
     * Increases the count of a SyncSemaphore object.
     *
     * @param int &$prevcount Returns the previous count of the semaphore.
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.
     * @see SyncSemaphore::lock()
     * @link https://php.net/manual/zh/syncsemaphore.unlock.php
     */
    public function unlock(&$prevcount = 0) {}
    }

/**
 * <div id="class.syncevent" class="reference"> <h1 class="title">The SyncEvent class</h1>  <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>  <div class="section" id="syncevent.intro">   <h2 class="title">简介</h2>   <p class="para">    A cross-platform, native implementation of named and unnamed event objects.    Both automatic and manual event objects are supported.   </p>   <p class="para">    An event object waits, without polling, for the object to be fired/set.    One instance waits on the event object while another instance fires/sets    the event. Event objects are useful wherever a long-running process would    otherwise poll a resource (e.g. checking to see if uploaded data needs to    be processed).   </p>  </div>  <div class="section" id="syncevent.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SyncEvent</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncevent.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$manual</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">\$prefire</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncevent.fire.php" class="methodname" style="color:#CC7832">fire</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncevent.reset.php" class="methodname" style="color:#CC7832">reset</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncevent.wait.php" class="methodname" style="color:#CC7832">wait</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SyncEvent::__construct} — Constructs a new SyncEvent object</li><li>{@link SyncEvent::fire} — Fires/sets the event</li><li>{@link SyncEvent::reset} — Resets a manual event</li><li>{@link SyncEvent::wait} — Waits for the event to be fired/set</li></ul></div>
 * 
 * SyncEvent
 *
 * A cross-platform, native implementation of named and unnamed event objects. Both automatic and manual event objects are supported.
 * An event object waits, without polling, for the object to be fired/set. One instance waits on the event object while another instance fires/sets the event. Event objects are useful wherever a long-running process would otherwise poll a resource (e.g. checking to see if uploaded data needs to be processed).
 *
 * @link https://php.net/manual/zh/class.syncevent.php
 */
class SyncEvent
{
    /**
     * SyncEvent constructor.
     *
     * @param string $name    The name of the event if this is a named event object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param bool   $manual  [optional] Specifies whether or not the event object must be reset manually. Note: Manual reset event objects allow all waiting processes through until the object is reset.
     * @param bool   $prefire [optional] Specifies whether or not to prefire (signal) the event object. Note: Only has impact if the calling process/thread is the first to create the object.
     * @throws Exception if the event object cannot be created or opened
     * @since 1.0.0
     * @since 1.1.0 Added $prefire
     * @link https://php.net/manual/en/syncevent.construct.php
     */
    public function __construct(string $name, bool $manual = false, bool $prefire = false) {}

    /**
 * <div id="syncevent.fire" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncEvent::fire</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::fire</span> — <span class="dc-title">Fires/sets the event</span></p> </div> <div class="refsect1 description" id="refsect1-syncevent.fire-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncEvent::fire</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Fires/sets a <span class="classname"><a href="https://php.net/manual/zh/class.syncevent.php" class="classname">SyncEvent</a></span> object. Lets multiple threads through that are waiting   if the event object was created with a manual value of <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncevent.fire-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncevent.fire-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncevent.fire-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3632">   <p><strong>示例 #1 <span class="function"><strong>SyncEvent::fire()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// In a web application:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// In a cron job:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncevent.fire-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncEvent::reset()} - Resets a manual event</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncEvent::wait()} - Waits for the event to be fired/set</span></li>  </ul> </div></div>
 * 
     * Fires/sets the event
     *
     * Fires/sets a SyncEvent object. Lets multiple threads through that are waiting if the event object was created with a manual value of TRUE.
     *
     * @return bool TRUE if the event was fired, FALSE otherwise.
     * @see SyncEvent::wait()
     * @link https://php.net/manual/zh/syncevent.fire.php
     */
    public function fire() {}

    /**
 * <div id="syncevent.reset" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncEvent::reset</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::reset</span> — <span class="dc-title">Resets a manual event</span></p> </div> <div class="refsect1 description" id="refsect1-syncevent.reset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncEvent::reset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Resets a <span class="classname"><a href="https://php.net/manual/zh/class.syncevent.php" class="classname">SyncEvent</a></span> object that has been fired/set. Only valid for manual event objects.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncevent.reset-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncevent.reset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncevent.reset-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3633">   <p><strong>示例 #1 <span class="function"><strong>SyncEvent::reset()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// In a web application:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"DemoApplication"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// In a cron job:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"DemoApplication"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">reset</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// ... Do some maintenance task(s) ... <br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncevent.reset-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncEvent::fire()} - Fires/sets the event</span></li>   <li><span class="methodname" style="color:#CC7832"><strong>SyncEvent::reset()</strong></span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncEvent::wait()} - Waits for the event to be fired/set</span></li>  </ul> </div></div>
 * 
     * Resets a manual event
     *
     * Resets a SyncEvent object that has been fired/set. Only valid for manual event objects.
     *
     * @return bool TRUE if the object was successfully reset, FALSE otherwise.
     * @link https://php.net/manual/zh/syncevent.reset.php
     */
    public function reset() {}

    /**
 * <div id="syncevent.wait" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncEvent::wait</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncEvent::wait</span> — <span class="dc-title">Waits for the event to be fired/set</span></p> </div> <div class="refsect1 description" id="refsect1-syncevent.wait-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncEvent::wait</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Waits for the <span class="classname"><a href="https://php.net/manual/zh/class.syncevent.php" class="classname">SyncEvent</a></span> object to be fired.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncevent.wait-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">wait</span></dt>    <dd>     <p class="para">      The number of milliseconds to wait for the event to be fired.      A value of -1 is infinite.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncevent.wait-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncevent.wait-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3634">   <p><strong>示例 #1 <span class="function"><strong>SyncEvent::wait()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// In a web application:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fire</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// In a cron job:<br></span><span style="color: #9876AA">\$event </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncEvent</span><span style="color: #007700">(</span><span style="color: #DD0000">"GetAppReport"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$event</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wait</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncevent.wait-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncEvent::fire()} - Fires/sets the event</span></li>  </ul> </div></div>
 * 
     * Waits for the event to be fired/set
     *
     * Waits for the SyncEvent object to be fired.
     *
     * @param int $wait The number of milliseconds to wait for the event to be fired. A value of -1 is infinite.
     * @return bool TRUE if the event was fired, FALSE otherwise.
     * @see SyncEvent::fire()
     * @link https://php.net/manual/zh/syncevent.wait.php
     */
    public function wait($wait = -1) {}
    }

/**
 * <div id="class.syncreaderwriter" class="reference"> <h1 class="title">The SyncReaderWriter class</h1>  <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.0.0)</p>  <div class="section" id="syncreaderwriter.intro">   <h2 class="title">简介</h2>   <p class="para">    A cross-platform, native implementation of named and unnamed reader-writer objects.   </p>   <p class="para">    A reader-writer object allows many readers or one writer to access a resource.    This is an efficient solution for managing resources where access will primarily be    read-only but exclusive write access is occasionally necessary.   </p>  </div>  <div class="section" id="syncreaderwriter.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SyncReaderWriter</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncreaderwriter.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$autounlock</span><span class="initializer"> = 1</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncreaderwriter.readlock.php" class="methodname" style="color:#CC7832">readlock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncreaderwriter.readunlock.php" class="methodname" style="color:#CC7832">readunlock</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncreaderwriter.writelock.php" class="methodname" style="color:#CC7832">writelock</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncreaderwriter.writeunlock.php" class="methodname" style="color:#CC7832">writeunlock</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SyncReaderWriter::__construct} — Constructs a new SyncReaderWriter object</li><li>{@link SyncReaderWriter::readlock} — Waits for a read lock</li><li>{@link SyncReaderWriter::readunlock} — Releases a read lock</li><li>{@link SyncReaderWriter::writelock} — Waits for an exclusive write lock</li><li>{@link SyncReaderWriter::writeunlock} — Releases a write lock</li></ul></div>
 * 
 * SyncReaderWriter
 *
 * A cross-platform, native implementation of named and unnamed reader-writer objects.
 * A reader-writer object allows many readers or one writer to access a resource. This is an efficient solution for managing resources where access will primarily be read-only but exclusive write access is occasionally necessary.
 *
 * @link https://php.net/manual/zh/class.syncreaderwriter.php
 */
class SyncReaderWriter
{
    /**
     * Constructs a new SyncReaderWriter object
     *
     * Constructs a named or unnamed reader-writer object.
     *
     * @param string $name       [optional] The name of the reader-writer if this is a named reader-writer object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param bool   $autounlock [optional] Specifies whether or not to automatically unlock the reader-writer at the conclusion of the PHP script. Warning: If an object is: A named reader-writer with an autounlock of FALSE, the object is locked for either reading or writing, and the PHP script concludes before the object is unlocked, then the underlying objects will end up in an inconsistent state.
     * @throws Exception if the reader-writer cannot be created or opened.
     * @link https://php.net/manual/en/syncreaderwriter.construct.php
     */
    public function __construct($name, $autounlock = true) {}

    /**
 * <div id="syncreaderwriter.readlock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncReaderWriter::readlock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::readlock</span> — <span class="dc-title">Waits for a read lock</span></p> </div> <div class="refsect1 description" id="refsect1-syncreaderwriter.readlock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncReaderWriter::readlock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Obtains a read lock on a <span class="classname"><a href="https://php.net/manual/zh/class.syncreaderwriter.php" class="classname">SyncReaderWriter</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncreaderwriter.readlock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">wait</span></dt>    <dd>     <p class="para">      The number of milliseconds to wait for a lock.      A value of -1 is infinite.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.readlock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncreaderwriter.readlock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3636">   <p><strong>示例 #1 <span class="function"><strong>SyncReaderWriter::readlock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$readwrite </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readlock</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// ... <br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readunlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncreaderwriter.readlock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncReaderWriter::readunlock()} - Releases a read lock</span></li>  </ul> </div></div>
 * 
     * Waits for a read lock
     *
     * Obtains a read lock on a SyncReaderWriter object.
     *
     * @param int $wait [optional] The number of milliseconds to wait for a lock. A value of -1 is infinite.
     * @return bool TRUE if the lock was obtained, FALSE otherwise.
     * @see SyncReaderWriter::readunlock()
     * @link https://php.net/manual/zh/syncreaderwriter.readlock.php
     */
    public function readlock($wait = -1) {}

    /**
 * <div id="syncreaderwriter.readunlock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncReaderWriter::readunlock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::readunlock</span> — <span class="dc-title">Releases a read lock</span></p> </div> <div class="refsect1 description" id="refsect1-syncreaderwriter.readunlock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncReaderWriter::readunlock</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Releases a read lock on a <span class="classname"><a href="https://php.net/manual/zh/class.syncreaderwriter.php" class="classname">SyncReaderWriter</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncreaderwriter.readunlock-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.readunlock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncreaderwriter.readunlock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3637">   <p><strong>示例 #1 <span class="function"><strong>SyncReaderWriter::readunlock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$readwrite </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readlock</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// ... <br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readunlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncreaderwriter.readunlock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncReaderWriter::readlock()} - Waits for a read lock</span></li>  </ul> </div></div>
 * 
     * Releases a read lock
     *
     * Releases a read lock on a SyncReaderWriter object.
     *
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.
     * @see SyncReaderWriter::readlock()
     * @link https://php.net/manual/zh/syncreaderwriter.readunlock.php
     */
    public function readunlock() {}

    /**
 * <div id="syncreaderwriter.writelock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncReaderWriter::writelock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::writelock</span> — <span class="dc-title">Waits for an exclusive write lock</span></p> </div> <div class="refsect1 description" id="refsect1-syncreaderwriter.writelock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncReaderWriter::writelock</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$wait</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Obtains an exclusive write lock on a <span class="classname"><a href="https://php.net/manual/zh/class.syncreaderwriter.php" class="classname">SyncReaderWriter</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncreaderwriter.writelock-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">wait</span></dt>    <dd>     <p class="para">      The number of milliseconds to wait for a lock.      A value of -1 is infinite.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.writelock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncreaderwriter.writelock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3638">   <p><strong>示例 #1 <span class="function"><strong>SyncReaderWriter::writelock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$readwrite </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writelock</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// ... <br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeunlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncreaderwriter.writelock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncReaderWriter::writeunlock()} - Releases a write lock</span></li>  </ul> </div></div>
 * 
     * Waits for an exclusive write lock
     *
     * Obtains an exclusive write lock on a SyncReaderWriter object.
     *
     * @param int $wait [optional] The number of milliseconds to wait for a lock. A value of -1 is infinite.
     * @return bool TRUE if the lock was obtained, FALSE otherwise.
     * @see SyncReaderWriter::writeunlock()
     * @link https://php.net/manual/zh/syncreaderwriter.writelock.php
     */
    public function writelock($wait = -1) {}

    /**
 * <div id="syncreaderwriter.writeunlock" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncReaderWriter::writeunlock</h1>  <p class="verinfo">(PECL sync &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">SyncReaderWriter::writeunlock</span> — <span class="dc-title">Releases a write lock</span></p> </div> <div class="refsect1 description" id="refsect1-syncreaderwriter.writeunlock-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncReaderWriter::writeunlock</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Releases a write lock on a <span class="classname"><a href="https://php.net/manual/zh/class.syncreaderwriter.php" class="classname">SyncReaderWriter</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncreaderwriter.writeunlock-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncreaderwriter.writeunlock-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncreaderwriter.writeunlock-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3639">   <p><strong>示例 #1 <span class="function"><strong>SyncReaderWriter::writeunlock()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$readwrite </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncReaderWriter</span><span style="color: #007700">(</span><span style="color: #DD0000">"FileCacheLock"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writelock</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// ... <br></span><span style="color: #9876AA">\$readwrite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeunlock</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncreaderwriter.writeunlock-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncReaderWriter::writelock()} - Waits for an exclusive write lock</span></li>  </ul> </div></div>
 * 
     * Releases a write lock
     *
     * Releases a write lock on a SyncReaderWriter object.
     *
     * @return bool TRUE if the unlock operation was successful, FALSE otherwise.
     * @see SyncReaderWriter::writelock()
     * @link https://php.net/manual/zh/syncreaderwriter.writeunlock.php
     */
    public function writeunlock() {}
    }

/**
 * <div id="class.syncsharedmemory" class="reference"> <h1 class="title">The SyncSharedMemory class</h1>  <div class="partintro"><p class="verinfo">(PECL sync &gt;= 1.1.0)</p>  <div class="section" id="syncsharedmemory.intro">   <h2 class="title">简介</h2>   <p class="para">    A cross-platform, native, consistent implementation of named shared memory    objects.   </p>   <p class="para">    Shared memory lets two separate processes communicate without the need for    complex pipes or sockets. There are several integer-based shared memory    implementations for PHP. Named shared memory is an alternative.   </p>   <p class="para">    Synchronization objects (e.g. SyncMutex) are still required to protect most    uses of shared memory.   </p>  </div>  <div class="section" id="syncsharedmemory.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SyncSharedMemory</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsharedmemory.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$size</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsharedmemory.first.php" class="methodname" style="color:#CC7832">first</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsharedmemory.read.php" class="methodname" style="color:#CC7832">read</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = ?</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsharedmemory.size.php" class="methodname" style="color:#CC7832">size</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/syncsharedmemory.write.php" class="methodname" style="color:#CC7832">write</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>)</div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SyncSharedMemory::__construct} — Constructs a new SyncSharedMemory object</li><li>{@link SyncSharedMemory::first} — Check to see if the object is the first instance system-wide of named shared memory</li><li>{@link SyncSharedMemory::read} — Copy data from named shared memory</li><li>{@link SyncSharedMemory::size} — Returns the size of the named shared memory</li><li>{@link SyncSharedMemory::write} — Copy data to named shared memory</li></ul></div>
 * 
 * SyncSharedMemory
 *
 * A cross-platform, native, consistent implementation of named shared memory objects.
 * Shared memory lets two separate processes communicate without the need for complex pipes or sockets. There are several integer-based shared memory implementations for PHP. Named shared memory is an alternative.
 * Synchronization objects (e.g. SyncMutex) are still required to protect most uses of shared memory.
 *
 * @since 1.1.0
 * @link https://php.net/manual/zh/class.syncsharedmemory.php
 */
class SyncSharedMemory
{
    /**
     * Constructs a new SyncSharedMemory object
     *
     * Constructs a named shared memory object.
     *
     * @param string $name The name of the shared memory object. Note: If the name already exists, it must be able to be opened by the current user that the process is running as or an exception will be thrown with a meaningless error message.
     * @param int    $size The size, in bytes, of shared memory to reserve. Note: The amount of memory cannot be resized later. Request sufficient storage up front.
     * @throws Exception if the shared memory object cannot be created or opened.
     * @link https://php.net/manual/en/syncsharedmemory.construct.php
     */
    public function __construct($name, $size) {}

    /**
 * <div id="syncsharedmemory.first" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSharedMemory::first</h1>  <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::first</span> — <span class="dc-title">Check to see if the object is the first instance system-wide of named shared memory</span></p> </div> <div class="refsect1 description" id="refsect1-syncsharedmemory.first-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::first</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Retrieves the system-wide first instance status of a <span class="classname"><a href="https://php.net/manual/zh/class.syncsharedmemory.php" class="classname">SyncSharedMemory</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsharedmemory.first-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.first-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-syncsharedmemory.first-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3641">   <p><strong>示例 #1 <span class="function"><strong>SyncSharedMemory::first()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$mem </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br>{<br>    </span><span style="color: #FF8000">// Do first time initialization work here.<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">());<br><br></span><span style="color: #9876AA">\$mem2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$mem2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)<br>bool(false)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsharedmemory.first-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>  </ul> </div></div>
 * 
     * Check to see if the object is the first instance system-wide of named shared memory
     *
     * Retrieves the system-wide first instance status of a SyncSharedMemory object.
     *
     * @return bool TRUE if the object is the first instance system-wide, FALSE otherwise.
     * @link https://php.net/manual/zh/syncsharedmemory.first.php
     */
    public function first() {}

    /**
 * <div id="syncsharedmemory.read" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSharedMemory::read</h1>  <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::read</span> — <span class="dc-title">Copy data from named shared memory</span></p> </div> <div class="refsect1 description" id="refsect1-syncsharedmemory.read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = ?</span></span>)</div>  <p class="para rdfs-comment">   Copies data from named shared memory.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsharedmemory.read-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">start</span></dt>    <dd>     <p class="para">      The start/offset, in bytes, to begin reading.     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       If the value is negative, the starting position will begin at the specified       number of bytes from the end of the shared memory segment.      </p>     </blockquote>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      The number of bytes to read.     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       If unspecified, reading will stop at the end of the shared memory segment.      </p>      <p class="para">       If the value is negative, reading will stop the specified number of bytes       from the end of the shared memory segment.      </p>     </blockquote>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string containing the data read from shared memory.  </p> </div> <div class="refsect1 examples" id="refsect1-syncsharedmemory.read-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3642">   <p><strong>示例 #1 <span class="function">{@link SyncSharedMemory::__construct()}</span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// You will probably need to protect shared memory with other synchronization objects.<br>// Shared memory goes away when the last reference to it disappears.<br></span><span style="color: #9876AA">\$mem </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br>{<br>    </span><span style="color: #FF8000">// Do first time initialization work here.<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">read</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">, -</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$result</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(3)&nbsp;"ort"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsharedmemory.read-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::first()} - Check to see if the object is the first instance system-wide of named shared memory</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>   <li><span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::read()</strong></span></li>  </ul> </div></div>
 * 
     * Copy data from named shared memory
     *
     * Copies data from named shared memory.
     *
     * @param int $start  [optional] The start/offset, in bytes, to begin reading. Note: If the value is negative, the starting position will begin at the specified number of bytes from the end of the shared memory segment.
     * @param int $length [optional] The number of bytes to read. Note: If unspecified, reading will stop at the end of the shared memory segment. If the value is negative, reading will stop the specified number of bytes from the end of the shared memory segment.
     * @return string containing the data read from shared memory.
     * @see SyncSharedMemory::write()
     * @link https://php.net/manual/zh/syncsharedmemory.read.php
     */
    public function read($start = 0, $length) {}

    /**
 * <div id="syncsharedmemory.size" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSharedMemory::size</h1>  <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::size</span> — <span class="dc-title">Returns the size of the named shared memory</span></p> </div> <div class="refsect1 description" id="refsect1-syncsharedmemory.size-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::size</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Retrieves the shared memory size of a <span class="classname"><a href="https://php.net/manual/zh/class.syncsharedmemory.php" class="classname">SyncSharedMemory</a></span> object.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsharedmemory.size-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.size-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An integer containing the size of the shared memory. This will be the same size that was passed to the constructor.  </p> </div> <div class="refsect1 examples" id="refsect1-syncsharedmemory.size-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3643">   <p><strong>示例 #1 <span class="function"><strong>SyncSharedMemory::size()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$mem </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">size</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(1024)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsharedmemory.size-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::write()} - Copy data to named shared memory</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>  </ul> </div></div>
 * 
     * Returns the size of the named shared memory
     *
     * Retrieves the shared memory size of a SyncSharedMemory object.
     *
     * @return int containing the size of the shared memory. This will be the same size that was passed to the constructor.
     * @link https://php.net/manual/zh/syncsharedmemory.size.php
     */
    public function size() {}

    /**
 * <div id="syncsharedmemory.write" class="refentry"> <div class="refnamediv">  <h1 class="refname">SyncSharedMemory::write</h1>  <p class="verinfo">(PECL sync &gt;= 1.1.0)</p><p class="refpurpose"><span class="refname">SyncSharedMemory::write</span> — <span class="dc-title">Copy data to named shared memory</span></p> </div> <div class="refsect1 description" id="refsect1-syncsharedmemory.write-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::write</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$start</span><span class="initializer"> = 0</span></span>)</div>  <p class="para rdfs-comment">   Copies data to named shared memory.  </p> </div> <div class="refsect1 parameters" id="refsect1-syncsharedmemory.write-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      The data to write to shared memory.     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       If the size of the data exceeds the size of the shared memory, the number of       bytes written returned will be less than the length of the input.      </p>     </blockquote>    </dd>          <dt><span class="parameter" style="color:#3A95FF">start</span></dt>    <dd>     <p class="para">      The start/offset, in bytes, to begin writing.     </p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       </p><p class="para">       If the value is negative, the starting position will begin at the specified       number of bytes from the end of the shared memory segment.      </p>     </blockquote>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-syncsharedmemory.write-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An integer containing the number of bytes written to shared memory.  </p> </div> <div class="refsect1 examples" id="refsect1-syncsharedmemory.write-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3644">   <p><strong>示例 #1 <span class="function"><strong>SyncSharedMemory::write()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// You will probably need to protect shared memory with other synchronization objects.<br>// Shared memory goes away when the last reference to it disappears.<br></span><span style="color: #9876AA">\$mem </span><span style="color: #007700">= new </span><span style="color: #9876AA">SyncSharedMemory</span><span style="color: #007700">(</span><span style="color: #DD0000">"AppReportName"</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">first</span><span style="color: #007700">())<br>{<br>    </span><span style="color: #FF8000">// Do first time initialization work here.<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$result</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$result </span><span style="color: #007700">= </span><span style="color: #9876AA">\$mem</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #DD0000">"report.txt"</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$result</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(10)<br>int(3)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-syncsharedmemory.write-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::__construct()} - Constructs a new SyncSharedMemory object</span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::first()} - Check to see if the object is the first instance system-wide of named shared memory</span></li>   <li><span class="methodname" style="color:#CC7832"><strong>SyncSharedMemory::write()</strong></span></li>   <li><span class="methodname" style="color:#CC7832">{@link SyncSharedMemory::read()} - Copy data from named shared memory</span></li>  </ul> </div></div>
 * 
     * Copy data to named shared memory
     *
     * Copies data to named shared memory.
     *
     * @param string $string The data to write to shared memoy. Note: If the size of the data exceeds the size of the shared memory, the number of bytes written returned will be less than the length of the input.
     * @param int    $start  The start/offset, in bytes, to begin writing. Note: If the value is negative, the starting position will begin at the specified number of bytes from the end of the shared memory segment.
     * @return int containing the number of bytes written to shared memory.
     * @link https://php.net/manual/zh/syncsharedmemory.write.php
     */
    public function write($string, $start = 0) {}
    }
