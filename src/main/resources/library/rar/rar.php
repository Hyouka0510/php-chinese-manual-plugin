<?php
/**
* <div id="class.rararchive" class="reference"> <h1 class="title">The RarArchive class</h1>  <div class="partintro"><p class="verinfo">(PECL rar &gt;= 2.0.0)</p>  <div class="section" id="rararchive.intro">   <h2 class="title">简介</h2>   <p class="para">    This class represents a RAR archive, which may be formed by several volumes (parts) and which contains    a number of RAR entries (i.e., files, directories and other special objects such as symbolic links).   </p>   <p class="para">    Objects of this class can be traversed, yielding the entries stored in the respective RAR archive.    Those entries can also be obtained through <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntry()}</span> and    <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntries()}</span>.   </p>  </div>  <div class="section" id="rararchive.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">final</span>      <span class="modifier">class</span> <strong class="classname">RarArchive</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.traversable.php" class="interfacename">Traversable</a></span> {</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.getcomment.php" class="methodname" style="color:#CC7832">getComment</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.getentries.php" class="methodname" style="color:#CC7832">getEntries</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.getentry.php" class="methodname" style="color:#CC7832">getEntry</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$entryname</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.isbroken.php" class="methodname" style="color:#CC7832">isBroken</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.issolid.php" class="methodname" style="color:#CC7832">isSolid</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.open.php" class="methodname" style="color:#CC7832">open</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = NULL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$volume_callback</span><span class="initializer"> = NULL</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.setallowbroken.php" class="methodname" style="color:#CC7832">setAllowBroken</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$allow_broken</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rararchive.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link RarArchive::close} — Close RAR archive and free all resources</li><li>{@link RarArchive::getComment} — Get comment text from the RAR archive</li><li>{@link RarArchive::getEntries} — Get full list of entries from the RAR archive</li><li>{@link RarArchive::getEntry} — Get entry object from the RAR archive</li><li>{@link RarArchive::isBroken} — Test whether an archive is broken (incomplete)</li><li>{@link RarArchive::isSolid} — Check whether the RAR archive is solid</li><li>{@link RarArchive::open} — Open RAR archive</li><li>{@link RarArchive::setAllowBroken} — Whether opening broken archives is allowed</li><li>{@link RarArchive::__toString} — Get text representation</li></ul></div>
*
 * This class represents a RAR archive, which may be formed by several volumes (parts) and which contains a number of
 * RAR entries (i.e., files, directories and other special objects such as symbolic links).
 *
 * Objects of this class can be traversed, yielding the entries stored in the respective RAR archive.
 * Those entries can also be obtained through {@see \RarArchive::getEntry} and {@see \RarArchive::getEntries}.
 *
 * @link https://php.net/manual/zh/class.rararchive.php
 
*/
final class RarArchive implements Traversable
{
/**
* <div id="rararchive.open" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::open</h1>  <h1 class="refname">rar_open</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::open</span> -- <span class="refname">rar_open</span> — <span class="dc-title">Open RAR archive</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.open-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = NULL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$volume_callback</span><span class="initializer"> = NULL</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = NULL</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$volume_callback</span><span class="initializer"> = NULL</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Open specified RAR archive and return <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> instance representing it.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    If opening a multi-volume archive, the path of the first volume should be passed as the first parameter.    Otherwise, not all files will be shown. This is by design.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-rararchive.open-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       Path to the Rar archive.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">password</span></dt>     <dd>      <p class="para">       A plain password, if needed to decrypt the headers. It will also be used by default       if encrypted files are found. Note that the files may have       different passwords in respect to the headers and among them.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">volume_callback</span></dt>     <dd>      <p class="para">       A function that receives one parameter – the path of the volume       that was not found – and returns a string with the correct path       for such volume or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if such volume does       not exist or is not known. The programmer should ensure the       passed function doesn't cause loops as this function is called       repeatedly if the path returned in a previous call did not       correspond to the needed volume. Specifying this parameter omits       the notice that would otherwise be emitted whenever a volume is       not found; an implementation that only returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>       can therefore be used to merely omit such notices.      </p>     </dd>       </dl>    <div class="warning"><strong class="warning">警告</strong>   <p class="para">    Prior to version 2.0.0, this function would not handle relative    paths correctly. Use <span class="function">{@link realpath()}</span> as a workaround.   </p>  </div> </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the requested <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> instance  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 changelog" id="refsect1-rararchive.open-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 3.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">volume_callback</span> was added.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rararchive.open-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-865">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'encrypted_headers.rar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'samplepassword'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed opening file"</span><span style="color: #007700">);<br>    <br></span><span style="color: #9876AA">$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEntries</span><span style="color: #007700">();<br>if (</span><span style="color: #9876AA">$entries </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed fetching entries"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found " </span><span style="color: #007700">. </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">) . </span><span style="color: #DD0000">" files.\n"</span><span style="color: #007700">;<br><br>if (empty(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">))<br>    die(</span><span style="color: #DD0000">"No valid entries found."</span><span style="color: #007700">);<br>    <br></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">reset</span><span style="color: #007700">(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getStream</span><span style="color: #007700">();<br>if (</span><span style="color: #9876AA">$stream </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed opening first file"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">"Content of first one follows:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Found 2 files.<br>Content of first one follows:<br>Encrypted file 1 contents.</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-866">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'encrypted_headers.rar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'samplepassword'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed opening file"</span><span style="color: #007700">);<br>    <br></span><span style="color: #9876AA">$entries </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_list</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$entries </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed fetching entries"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found " </span><span style="color: #007700">. </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">) . </span><span style="color: #DD0000">" files.\n"</span><span style="color: #007700">;<br><br>if (empty(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">))<br>    die(</span><span style="color: #DD0000">"No valid entries found."</span><span style="color: #007700">);<br>    <br></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">reset</span><span style="color: #007700">(</span><span style="color: #9876AA">$entries</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">getStream</span><span style="color: #007700">();<br>if (</span><span style="color: #9876AA">$stream </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed opening first file"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Content of first one follows:\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>    <p class="para">   </p><div class="example" id="example-867">    <p><strong>示例 #3 Volume Callback</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// In this example, there's a volume named multi_broken.part1.rar<br> * whose next volume is named multi.part2.rar <br></span><span style="color: #007700">function </span><span style="color: #9876AA">resolve</span><span style="color: #007700">(</span><span style="color: #9876AA">$vol</span><span style="color: #007700">) {<br>    if (</span><span style="color: #9876AA">preg_match</span><span style="color: #007700">(</span><span style="color: #DD0000">'/_broken/'</span><span style="color: #007700">, </span><span style="color: #9876AA">$vol</span><span style="color: #007700">))<br>        return </span><span style="color: #9876AA">str_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'_broken'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">$vol</span><span style="color: #007700">);<br>    else<br>        return </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">$rar_file1 </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">).</span><span style="color: #DD0000">'/multi_broken.part1.rar'</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'resolve'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">$rar_file1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEntry</span><span style="color: #007700">(</span><span style="color: #DD0000">'file2.txt'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">extract</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/temp_file2.txt"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rararchive.open-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/wrappers.rar.php" class="link"><span class="literal">rar://</span> wrapper</a></li>   </ul>   </div></div>
    *
     * Open RAR archive
     *
     * @param string $filename Path to the Rar archive
     * @param null|string $password A plain password, if needed to decrypt the headers. It will also be used by default if
     *      encrypted files are found. Note that the files may have different passwords in respect
     *      to the headers and among them
     * @param null|callable $volume_callback A function that receives one parameter – the path of the volume that was
     *      not found – and returns a string with the correct path for such volume or NULL if such volume does not
     *      exist or is not known. The programmer should ensure the passed function doesn't cause loops as this
     *      function is called repeatedly if the path returned in a previous call did not correspond to the needed
     *      volume. Specifying this parameter omits the notice that would otherwise be emitted whenever a volume is
     *      not found; an implementation that only returns NULL can therefore be used to merely omit such notices
     *
     * @link https://php.net/manual/zh/rararchive.open.php
     *
     * @return RarArchive|false the requested RarArchive instance or FALSE on failure.
     
*/
    public static function open($filename, $password = null, ?callable $volume_callback = null) {}

/**
* <div id="rararchive.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::close</h1>  <h1 class="refname">rar_close</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::close</span> -- <span class="refname">rar_close</span> — <span class="dc-title">Close RAR archive and free all resources</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.close-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::close</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_close</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Close RAR archive and free all allocated resources.  </p> </div> <div class="refsect1 parameters" id="refsect1-rararchive.close-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div>   <div class="refsect1 changelog" id="refsect1-rararchive.close-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 2.0.0</td>       <td>        The RAR entries returned by <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntry()}</span>        and <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntries()}</span> are now invalidated when        calling this method. This means that all instance methods called for        such entries and not guaranteed to succeed.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rararchive.close-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-853">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'latest_winrar.rar'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br>echo </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">RAR Archive "D:\php_rar\trunk\tests\latest_winrar.rar"<br>RAR Archive "D:\php_rar\trunk\tests\latest_winrar.rar" (closed)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-854">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'latest_winrar.rar'</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div></div>
    *
     * Close RAR archive and free all resources
     *
     * @link https://php.net/manual/zh/rararchive.close.php
     *
     * @return bool TRUE on success or FALSE on failure
     
*/
    public function close() {}

/**
* <div id="rararchive.getcomment" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::getComment</h1>  <h1 class="refname">rar_comment_get</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::getComment</span> -- <span class="refname">rar_comment_get</span> — <span class="dc-title">Get comment text from the RAR archive</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.getcomment-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::getComment</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_comment_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Get the (global) comment stored in the RAR archive. It may be up to 64 KiB long.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    This extension does not support comments at the entry level.   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-rararchive.getcomment-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.getcomment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the comment or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> if there is none.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">      RAR has currently no support for unicode comments. The encoding of the      result of this function is not specified, but it will probably be      Windows-1252.    </p>  </blockquote> </div> <div class="refsect1 examples" id="refsect1-rararchive.getcomment-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-855">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'commented.rar'</span><span style="color: #007700">); <br>echo </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getComment</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">This is the comment of the file commented.rar.</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-856">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'commented.rar'</span><span style="color: #007700">); <br>echo </span><span style="color: #9876AA">rar_comment_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div></div>
    *
     * Get comment text from the RAR archive
     *
     * @link https://php.net/manual/zh/rararchive.getcomment.php
     *
     * @return string|null the comment or NULL if there is none
     
*/
    public function getComment() {}

/**
* <div id="rararchive.getentries" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::getEntries</h1>  <h1 class="refname">rar_list</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::getEntries</span> -- <span class="refname">rar_list</span> — <span class="dc-title">Get full list of entries from the RAR archive</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.getentries-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::getEntries</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_list</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get entries list (files and directories) from the RAR archive.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    If the archive has    entries with the same name, this method, together with <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span>    <span class="literal">foreach</span> iteration and array-like access with numeric indexes,    are the only ones to access all the entries (i.e.,    <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntry()}</span> and the <a href="https://php.net/manual/zh/wrappers.rar.php" class="link">    <span class="literal">rar://</span> wrapper</a> are insufficient).   </p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-rararchive.getentries-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.getentries-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>rar_list()</strong></span> returns array of <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span> objects    或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rararchive.getentries-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 3.0.0</td>       <td>        Support for RAR archives with repeated entry names is no longer defective.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rararchive.getentries-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-857">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'solid.rar'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not open RAR archive."</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">= </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEntries</span><span style="color: #007700">();<br>if (</span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not retrieve entries."</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found " </span><span style="color: #007700">. </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_entries</span><span style="color: #007700">) . </span><span style="color: #DD0000">" entries.\n"</span><span style="color: #007700">;<br><br>foreach (</span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">as </span><span style="color: #9876AA">$e</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$e</span><span style="color: #007700">;<br>    echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Found 2 entries.<br>RarEntry for file "tese.txt" (23b93a7a)<br>RarEntry for file "unrardll.txt" (2ed64b6e)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-858">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'solid.rar'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not open RAR archive."</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_list</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could retrieve entries."</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Found " </span><span style="color: #007700">. </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_entries</span><span style="color: #007700">) . </span><span style="color: #DD0000">" entries.\n"</span><span style="color: #007700">;<br><br>foreach (</span><span style="color: #9876AA">$rar_entries </span><span style="color: #007700">as </span><span style="color: #9876AA">$e</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">$e</span><span style="color: #007700">;<br>    echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-rararchive.getentries-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarArchive::getEntry()} - Get entry object from the RAR archive</span></li>    <li><a href="https://php.net/manual/zh/wrappers.rar.php" class="link"><span class="literal">rar://</span> wrapper</a></li>   </ul>   </div></div>
    *
     * Get full list of entries from the RAR archive
     *
     * @return RarEntry[]|false array of {@see RarEntry} objects or FALSE on failure
     
*/
    public function getEntries() {}

/**
* <div id="rararchive.getentry" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::getEntry</h1>  <h1 class="refname">rar_entry_get</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::getEntry</span> -- <span class="refname">rar_entry_get</span> — <span class="dc-title">Get entry object from the RAR archive</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.getentry-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::getEntry</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$entryname</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_entry_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$entryname</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Get entry object (file or directory) from the RAR archive.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">You can also get entry objects using <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntries()}</span>.</p>    <p class="para">Note that a RAR archive can have multiple entries with the same name; this method    will retrieve only the first.</p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-rararchive.getentry-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">entryname</span></dt>     <dd>      <p class="para">       Path to the entry within the RAR archive.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">The path must be the same returned by        <span class="methodname" style="color:#CC7832">{@link RarEntry::getName()}</span>.</p>     </blockquote>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.getentry-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the matching <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span> object  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-rararchive.getentry-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-859">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'solid.rar'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not open RAR archive."</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$rar_entry </span><span style="color: #007700">= </span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEntry</span><span style="color: #007700">(</span><span style="color: #DD0000">'tese.txt'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_entry </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not get such entry"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_entry</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">$rar_entry</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">RarEntry<br>RarEntry for file "tese.txt" (23b93a7a)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-860">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$rar_arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'solid.rar'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_arch </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not open RAR archive."</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$rar_entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">, </span><span style="color: #DD0000">'tese.txt'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_entry </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Could not get such entry"</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_entry</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">$rar_entry</span><span style="color: #007700">;<br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_arch</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rararchive.getentry-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarArchive::getEntries()} - Get full list of entries from the RAR archive</span></li>    <li><a href="https://php.net/manual/zh/wrappers.rar.php" class="link"><span class="literal">rar://</span> wrapper</a></li>   </ul>   </div></div>
    *
     * Get entry object from the RAR archive
     *
     * Get entry object (file or directory) from the RAR archive
     *
     * @link https://php.net/manual/zh/rararchive.getentry.php
     *
     * @param string $entryname Path to the entry within the RAR archive
     *
     * @return RarEntry|false the matching RarEntry object or FALSE on failure
     
*/
    public function getEntry($entryname) {}

/**
* <div id="rararchive.isbroken" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::isBroken</h1>  <h1 class="refname">rar_broken_is</h1>  <p class="verinfo">(PECL rar &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::isBroken</span> -- <span class="refname">rar_broken_is</span> — <span class="dc-title">Test whether an archive is broken (incomplete)</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.isbroken-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::isBroken</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_broken_is</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This function determines whether an archive is incomplete, i.e., if a volume is missing or a volume is truncated.  </p> </div> <div class="refsect1 parameters" id="refsect1-rararchive.isbroken-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.isbroken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the archive is broken, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise. This function may also   return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if the passed file has already been closed. The only way   to tell the two cases apart is to enable   exceptions with <span class="methodname" style="color:#CC7832">{@link RarException::setUsingExceptions()}</span>; however,   this should be unnecessary as a program should not operate on closed files.  </p> </div> <div class="refsect1 examples" id="refsect1-rararchive.isbroken-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-861">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">retnull</span><span style="color: #007700">() { return </span><span style="color: #9876AA">null</span><span style="color: #007700">; }<br></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/multi_broken.part1.rar"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">// Third argument is used to omit notice <br></span><span style="color: #9876AA">$arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'retnull'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isBroken</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-862">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">retnull</span><span style="color: #007700">() { return </span><span style="color: #9876AA">null</span><span style="color: #007700">; }<br></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/multi_broken.part1.rar"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">// Third argument is used to omit notice <br></span><span style="color: #9876AA">$arch </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'retnull'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">rar_broken_is</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div>   <div class="refsect1 seealso" id="refsect1-rararchive.isbroken-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarArchive::setAllowBroken()} - Whether opening broken archives is allowed</span></li>   </ul>   </div></div>
    *
     * Test whether an archive is broken (incomplete)
     *
     * This function determines whether an archive is incomplete, i.e., if a volume is missing or a volume is truncated.
     *
     * @link https://php.net/manual/zh/rararchive.isbroken.php
     *
     * @return bool Returns TRUE if the archive is broken, FALSE otherwise. This function may also return FALSE if
     *         the passed file has already been closed. The only way to tell the two cases apart is to enable
     *         exceptions with {@see RarException::setUsingExceptions()}; however, this should be unnecessary as a program
     *         should not operate on closed files.
     
*/
    public function isBroken() {}

/**
* <div id="rararchive.issolid" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::isSolid</h1>  <h1 class="refname">rar_solid_is</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::isSolid</span> -- <span class="refname">rar_solid_is</span> — <span class="dc-title">Check whether the RAR archive is solid</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.issolid-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::isSolid</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_solid_is</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Check whether the RAR archive is solid. Individual file extraction is slower on solid   archives.  </p>  </div> <div class="refsect1 parameters" id="refsect1-rararchive.issolid-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.issolid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the archive is solid, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-rararchive.issolid-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-863">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$arch1 </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">"store_method.rar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$arch2 </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">"solid.rar"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$arch1</span><span style="color: #DD0000">: " </span><span style="color: #007700">. (</span><span style="color: #9876AA">$arch1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSolid</span><span style="color: #007700">()?</span><span style="color: #DD0000">'yes'</span><span style="color: #007700">:</span><span style="color: #DD0000">'no'</span><span style="color: #007700">) .</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$arch2</span><span style="color: #DD0000">: " </span><span style="color: #007700">. (</span><span style="color: #9876AA">$arch2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isSolid</span><span style="color: #007700">()?</span><span style="color: #DD0000">'yes'</span><span style="color: #007700">:</span><span style="color: #DD0000">'no'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">RAR Archive "C:\php_rar\trunk\tests\store_method.rar": no<br>RAR Archive "C:\php_rar\trunk\tests\solid.rar": yes</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-864">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$arch1 </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">"store_method.rar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$arch2 </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">"solid.rar"</span><span style="color: #007700">);<br>echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$arch1</span><span style="color: #DD0000">: " </span><span style="color: #007700">. (</span><span style="color: #9876AA">rar_solid_is</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch1</span><span style="color: #007700">)?</span><span style="color: #DD0000">'yes'</span><span style="color: #007700">:</span><span style="color: #DD0000">'no'</span><span style="color: #007700">) .</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$arch2</span><span style="color: #DD0000">: " </span><span style="color: #007700">. (</span><span style="color: #9876AA">rar_solid_is</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch2</span><span style="color: #007700">)?</span><span style="color: #DD0000">'yes'</span><span style="color: #007700">:</span><span style="color: #DD0000">'no'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div></div>
    *
     * Check whether the RAR archive is solid
     *
     * Check whether the RAR archive is solid. Individual file extraction is slower on solid archives
     *
     * @link https://php.net/manual/zhrararchive.issolid.php
     *
     * @return bool TRUE if the archive is solid, FALSE otherwise
     
*/
    public function isSolid() {}

/**
* <div id="rararchive.setallowbroken" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarArchive::setAllowBroken</h1>  <p class="verinfo">(PECL rar &gt;= 3.0.0)</p><p class="refpurpose"><span class="refname">RarArchive::setAllowBroken</span> — <span class="dc-title">Whether opening broken archives is allowed</span></p> </div> <div class="refsect1 description" id="refsect1-rararchive.setallowbroken-description">  <h3 class="title">说明</h3>  <p class="para">面向对象风格 (method):</p>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarArchive::setAllowBroken</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$allow_broken</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">过程化风格:</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>rar_allow_broken_set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> <span class="parameter" style="color:#3A95FF">$rarfile</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$allow_broken</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This method defines whether broken archives can be read or all the operations that   attempt to extract the archive entries will fail. Broken archives are archives for   which no error is detected when the file is opened but an error occurs when reading   the entries.  </p> </div> <div class="refsect1 parameters" id="refsect1-rararchive.setallowbroken-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">rarfile</span></dt>     <dd>      <p class="para">       A <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object, opened with <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">allow_broken</span></dt>     <dd>      <p class="para">       Whether to allow reading broken files (<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>) or not (<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>).      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rararchive.setallowbroken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>. It will only fail if the file has   already been closed.  </p> </div>   <div class="refsect1 examples" id="refsect1-rararchive.setallowbroken-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-868">    <p><strong>示例 #1 面向对象风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">retnull</span><span style="color: #007700">() { return </span><span style="color: #9876AA">null</span><span style="color: #007700">; }<br></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/multi_broken.part1.rar"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">// Third argument omits "volume not found" message <br></span><span style="color: #9876AA">$a </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'retnull'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAllowBroken</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br>foreach (</span><span style="color: #9876AA">$a</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getEntries</span><span style="color: #007700">() as </span><span style="color: #9876AA">$e</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$e</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">RarEntry for file "file1.txt" (52b28202)<br>int(1)</blockquote></div>    </div>   </div>    <p class="para">   </p><div class="example" id="example-869">    <p><strong>示例 #2 过程化风格</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">retnull</span><span style="color: #007700">() { return </span><span style="color: #9876AA">null</span><span style="color: #007700">; }<br></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/multi_broken.part1.rar"</span><span style="color: #007700">;<br></span><span style="color: #FF8000">// Third argument omits "volume not found" message <br></span><span style="color: #9876AA">$a </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'retnull'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">rar_allow_broken_set</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br>foreach (</span><span style="color: #9876AA">rar_list</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">) as </span><span style="color: #9876AA">$e</span><span style="color: #007700">) {<br>    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$e</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rararchive.setallowbroken-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarArchive::isBroken()} - Test whether an archive is broken (incomplete)</span></li>   </ul>   </div></div>
    *
     * Whether opening broken archives is allowed
     *
     * This method defines whether broken archives can be read or all the operations that attempt to extract the
     * archive entries will fail. Broken archives are archives for which no error is detected when the file is
     * opened but an error occurs when reading the entries.
     *
     * @link https://php.net/manual/zh/rararchive.setallowbroken.php
     *
     * @param bool $allow_broken Whether to allow reading broken files (TRUE) or not (FALSE)
     *
     * @return bool TRUE или FALSE в случае возникновения ошибки. It will only fail if the file has already been closed
     
*/
    public function setAllowBroken($allow_broken) {}

    /**
     * Get text representation
     *
     * Provides a string representation for this RarArchive object. It currently shows the full path name of the
     * archive volume that was opened and whether the resource is valid or was already closed through a
     * call to {@see RarArchive::close()}.
     *
     * This method may be used only for debugging purposes, as there are no guarantees as to which information the
     * result contains or how it is formatted.
     *
     * @return string A textual representation of this RarArchive object. The content of this
     *          representation is unspecified.
     */
    public function __toString() {}
}
/**
* <div id="class.rarentry" class="reference"> <h1 class="title">The <span class="classname"><a href="https://php.net/manual/zh/class.rarentry.php" class="classname">RarEntry</a></span> class</h1>  <div class="partintro"><p class="verinfo">(PECL rar &gt;= 0.1)</p>  <div class="section" id="rarentry.intro">   <h2 class="title">简介</h2>   <p class="para">    A RAR entry, representing a directory or a compressed file inside a RAR archive.   </p>  </div>  <div class="section" id="rarentry.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">final</span>      <span class="modifier">class</span> <strong class="classname">RarEntry</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-msdos"><var class="varname">HOST_MSDOS</var></a></var><span class="initializer"> = 0</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-os2"><var class="varname">HOST_OS2</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-win32"><var class="varname">HOST_WIN32</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-unix"><var class="varname">HOST_UNIX</var></a></var><span class="initializer"> = 3</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-macos"><var class="varname">HOST_MACOS</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.host-beos"><var class="varname">HOST_BEOS</var></a></var><span class="initializer"> = 5</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-readonly"><var class="varname">ATTRIBUTE_WIN_READONLY</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-hidden"><var class="varname">ATTRIBUTE_WIN_HIDDEN</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-system"><var class="varname">ATTRIBUTE_WIN_SYSTEM</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-directory"><var class="varname">ATTRIBUTE_WIN_DIRECTORY</var></a></var><span class="initializer"> = 16</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-archive"><var class="varname">ATTRIBUTE_WIN_ARCHIVE</var></a></var><span class="initializer"> = 32</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-device"><var class="varname">ATTRIBUTE_WIN_DEVICE</var></a></var><span class="initializer"> = 64</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-normal"><var class="varname">ATTRIBUTE_WIN_NORMAL</var></a></var><span class="initializer"> = 128</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-temporary"><var class="varname">ATTRIBUTE_WIN_TEMPORARY</var></a></var><span class="initializer"> = 256</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-sparse-file"><var class="varname">ATTRIBUTE_WIN_SPARSE_FILE</var></a></var><span class="initializer"> = 512</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-reparse-point"><var class="varname">ATTRIBUTE_WIN_REPARSE_POINT</var></a></var><span class="initializer"> = 1024</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-compressed"><var class="varname">ATTRIBUTE_WIN_COMPRESSED</var></a></var><span class="initializer"> = 2048</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-offline"><var class="varname">ATTRIBUTE_WIN_OFFLINE</var></a></var><span class="initializer"> = 4096</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-not-content-indexed"><var class="varname">ATTRIBUTE_WIN_NOT_CONTENT_INDEXED</var></a></var><span class="initializer"> = 8192</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-encrypted"><var class="varname">ATTRIBUTE_WIN_ENCRYPTED</var></a></var><span class="initializer"> = 16384</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-win-virtual"><var class="varname">ATTRIBUTE_WIN_VIRTUAL</var></a></var><span class="initializer"> = 65536</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-world-execute"><var class="varname">ATTRIBUTE_UNIX_WORLD_EXECUTE</var></a></var><span class="initializer"> = 1</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-world-write"><var class="varname">ATTRIBUTE_UNIX_WORLD_WRITE</var></a></var><span class="initializer"> = 2</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-world-read"><var class="varname">ATTRIBUTE_UNIX_WORLD_READ</var></a></var><span class="initializer"> = 4</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-group-execute"><var class="varname">ATTRIBUTE_UNIX_GROUP_EXECUTE</var></a></var><span class="initializer"> = 8</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-group-write"><var class="varname">ATTRIBUTE_UNIX_GROUP_WRITE</var></a></var><span class="initializer"> = 16</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-group-read"><var class="varname">ATTRIBUTE_UNIX_GROUP_READ</var></a></var><span class="initializer"> = 32</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-owner-execute"><var class="varname">ATTRIBUTE_UNIX_OWNER_EXECUTE</var></a></var><span class="initializer"> = 64</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-owner-write"><var class="varname">ATTRIBUTE_UNIX_OWNER_WRITE</var></a></var><span class="initializer"> = 128</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-owner-read"><var class="varname">ATTRIBUTE_UNIX_OWNER_READ</var></a></var><span class="initializer"> = 256</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-sticky"><var class="varname">ATTRIBUTE_UNIX_STICKY</var></a></var><span class="initializer"> = 512</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-setgid"><var class="varname">ATTRIBUTE_UNIX_SETGID</var></a></var><span class="initializer"> = 1024</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-setuid"><var class="varname">ATTRIBUTE_UNIX_SETUID</var></a></var><span class="initializer"> = 2048</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-final-quartet"><var class="varname">ATTRIBUTE_UNIX_FINAL_QUARTET</var></a></var><span class="initializer"> = 61440</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-fifo"><var class="varname">ATTRIBUTE_UNIX_FIFO</var></a></var><span class="initializer"> = 4096</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-char-dev"><var class="varname">ATTRIBUTE_UNIX_CHAR_DEV</var></a></var><span class="initializer"> = 8192</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-directory"><var class="varname">ATTRIBUTE_UNIX_DIRECTORY</var></a></var><span class="initializer"> = 16384</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-block-dev"><var class="varname">ATTRIBUTE_UNIX_BLOCK_DEV</var></a></var><span class="initializer"> = 24576</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-regular-file"><var class="varname">ATTRIBUTE_UNIX_REGULAR_FILE</var></a></var><span class="initializer"> = 32768</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-sym-link"><var class="varname">ATTRIBUTE_UNIX_SYM_LINK</var></a></var><span class="initializer"> = 40960</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.rarentry.php#rarentry.constants.attribute-unix-socket"><var class="varname">ATTRIBUTE_UNIX_SOCKET</var></a></var><span class="initializer"> = 49152</span>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.extract.php" class="methodname" style="color:#CC7832">extract</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$dir</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$filepath</span><span class="initializer"> = ""</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = NULL</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$extended_data</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getattr.php" class="methodname" style="color:#CC7832">getAttr</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getcrc.php" class="methodname" style="color:#CC7832">getCrc</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getfiletime.php" class="methodname" style="color:#CC7832">getFileTime</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.gethostos.php" class="methodname" style="color:#CC7832">getHostOs</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getmethod.php" class="methodname" style="color:#CC7832">getMethod</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getname.php" class="methodname" style="color:#CC7832">getName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getpackedsize.php" class="methodname" style="color:#CC7832">getPackedSize</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getstream.php" class="methodname" style="color:#CC7832">getStream</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getunpackedsize.php" class="methodname" style="color:#CC7832">getUnpackedSize</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.getversion.php" class="methodname" style="color:#CC7832">getVersion</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.isdirectory.php" class="methodname" style="color:#CC7832">isDirectory</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.isencrypted.php" class="methodname" style="color:#CC7832">isEncrypted</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarentry.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>   }</div>  </div>  <div class="section" id="rarentry.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="rarentry.constants.host-msdos"><strong><span>{@link RarEntry::HOST_MSDOS}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, MS-DOS was used to      add this entry. Use instead of <strong><span><a href="https://php.net/manual/zh/rar.constants.php#constant.rar-host-msdos">RAR_HOST_MSDOS</a></span></strong>.</p>     </dd>             <dt id="rarentry.constants.host-os2"><strong><span>{@link RarEntry::HOST_OS2}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, OS/2 was used to      add this entry. Intended to replace <strong><span><a href="https://php.net/manual/zh/rar.constants.php#constant.rar-host-os2">RAR_HOST_OS2</a></span></strong>.</p>     </dd>             <dt id="rarentry.constants.host-win32"><strong><span>{@link RarEntry::HOST_WIN32}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, Microsoft Windows was used to      add this entry. Intended to replace <strong><span><a href="https://php.net/manual/zh/rar.constants.php#constant.rar-host-win32">RAR_HOST_WIN32</a></span></strong>.</p>     </dd>             <dt id="rarentry.constants.host-unix"><strong><span>{@link RarEntry::HOST_UNIX}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, an unspecified UNIX OS was used to      add this entry. Intended to replace <strong><span><a href="https://php.net/manual/zh/rar.constants.php#constant.rar-host-unix">RAR_HOST_UNIX</a></span></strong>.</p>     </dd>             <dt id="rarentry.constants.host-macos"><strong><span>{@link RarEntry::HOST_MACOS}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, Mac OS was used to      add this entry.</p>     </dd>             <dt id="rarentry.constants.host-beos"><strong><span>{@link RarEntry::HOST_BEOS}</span></strong></dt>     <dd>      <p class="para">If the return value of <span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()}</span> equals this constant, BeOS was used to      add this entry. Intended to replace <strong><span><a href="https://php.net/manual/zh/rar.constants.php#constant.rar-host-beos">RAR_HOST_BEOS</a></span></strong>.</p>     </dd>             <dt id="rarentry.constants.attribute-win-readonly"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_READONLY}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a read-only attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-hidden"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_HIDDEN}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a hidden attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-system"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_SYSTEM}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a system attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-directory"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_DIRECTORY}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a directory attribute (entry is a directory). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows. See also      <span class="methodname" style="color:#CC7832">{@link RarEntry::isDirectory()}</span>, which also works with entries that were not added in WinRAR.</p>     </dd>             <dt id="rarentry.constants.attribute-win-archive"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_ARCHIVE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with an archive attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-device"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_DEVICE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a device attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-normal"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_NORMAL}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a normal file attribute (entry is NOT a directory). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows. See also      <span class="methodname" style="color:#CC7832">{@link RarEntry::isDirectory()}</span>, which also works with entries that were not added in WinRAR.</p>     </dd>             <dt id="rarentry.constants.attribute-win-temporary"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_TEMPORARY}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a temporary attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-sparse-file"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_SPARSE_FILE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a sparse file attribute (file is an NTFS sparse file). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-reparse-point"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_REPARSE_POINT}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a reparse point attribute (entry is an NTFS reparse point, e.g. a      directory junction or a mount file system). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-compressed"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_COMPRESSED}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a compressed attribute (NTFS only). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-offline"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_OFFLINE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with an offline attribute (entry is offline and not accessible). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-not-content-indexed"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_NOT_CONTENT_INDEXED}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a not content indexed attribute (entry is to be indexed). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-encrypted"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_ENCRYPTED}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with an encrypted attribute (NTFS only). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-win-virtual"><strong><span>{@link RarEntry::ATTRIBUTE_WIN_VIRTUAL}</span></strong></dt>     <dd>      <p class="para">Bit that represents a Windows entry with a virtual attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is Microsoft Windows.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-world-execute"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_WORLD_EXECUTE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is world executable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-world-write"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_WORLD_WRITE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is world writable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-world-read"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_WORLD_READ}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is world readable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-group-execute"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_GROUP_EXECUTE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is group executable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-group-write"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_GROUP_WRITE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is group writable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-group-read"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_GROUP_READ}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is group readable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-owner-execute"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_OWNER_EXECUTE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is owner executable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-owner-write"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_OWNER_WRITE}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is owner writable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-owner-read"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_OWNER_READ}</span></strong></dt>     <dd>      <p class="para">Bit that represents a UNIX entry that is owner readable. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-sticky"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_STICKY}</span></strong></dt>     <dd>      <p class="para">Bit that represents the UNIX sticky bit. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-setgid"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_SETGID}</span></strong></dt>     <dd>      <p class="para">Bit that represents the UNIX setgid attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-setuid"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_SETUID}</span></strong></dt>     <dd>      <p class="para">Bit that represents the UNIX setuid attribute. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-final-quartet"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}</span></strong></dt>     <dd>      <p class="para">Mask to isolate the last four bits (nibble) of UNIX attributes      (_S_IFMT, the type of file mask). To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constants {@link RarEntry::ATTRIBUTE_UNIX_FIFO},      {@link RarEntry::ATTRIBUTE_UNIX_CHAR_DEV},      {@link RarEntry::ATTRIBUTE_UNIX_DIRECTORY},      {@link RarEntry::ATTRIBUTE_UNIX_BLOCK_DEV},      {@link RarEntry::ATTRIBUTE_UNIX_REGULAR_FILE},      {@link RarEntry::ATTRIBUTE_UNIX_SYM_LINK} and      {@link RarEntry::ATTRIBUTE_UNIX_SOCKET}.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-fifo"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_FIFO}</span></strong></dt>     <dd>      <p class="para">Unix FIFOs will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-char-dev"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_CHAR_DEV}</span></strong></dt>     <dd>      <p class="para">Unix character devices will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-directory"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_DIRECTORY}</span></strong></dt>     <dd>      <p class="para">Unix directories will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}. See also      <span class="methodname" style="color:#CC7832">{@link RarEntry::isDirectory()}</span>, which also works with entries that      were added in other operating systems.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-block-dev"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_BLOCK_DEV}</span></strong></dt>     <dd>      <p class="para">Unix block devices will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-regular-file"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_REGULAR_FILE}</span></strong></dt>     <dd>      <p class="para">Unix regular files (not directories) will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}. See also      <span class="methodname" style="color:#CC7832">{@link RarEntry::isDirectory()}</span>, which also works with entries that      were added in other operating systems.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-sym-link"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_SYM_LINK}</span></strong></dt>     <dd>      <p class="para">Unix symbolic links will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.</p>     </dd>             <dt id="rarentry.constants.attribute-unix-socket"><strong><span>{@link RarEntry::ATTRIBUTE_UNIX_SOCKET}</span></strong></dt>     <dd>      <p class="para">Unix sockets will have attributes whose last four bits have this value. To be used with      <span class="methodname" style="color:#CC7832">{@link RarEntry::getAttr()}</span> on entries whose host OS is UNIX and with the      constant {@link       RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.</p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link RarEntry::extract} — Extract entry from the archive</li><li>{@link RarEntry::getAttr} — Get attributes of the entry</li><li>{@link RarEntry::getCrc} — Get CRC of the entry</li><li>{@link RarEntry::getFileTime} — Get entry last modification time</li><li>{@link RarEntry::getHostOs} — Get entry host OS</li><li>{@link RarEntry::getMethod} — Get pack method of the entry</li><li>{@link RarEntry::getName} — Get name of the entry</li><li>{@link RarEntry::getPackedSize} — Get packed size of the entry</li><li>{@link RarEntry::getStream} — Get file handler for entry</li><li>{@link RarEntry::getUnpackedSize} — Get unpacked size of the entry</li><li>{@link RarEntry::getVersion} — Get minimum version of RAR program required to unpack the entry</li><li>{@link RarEntry::isDirectory} — Test whether an entry represents a directory</li><li>{@link RarEntry::isEncrypted} — Test whether an entry is encrypted</li><li>{@link RarEntry::__toString} — Get text representation of entry</li></ul></div>
*
 * A RAR entry, representing a directory or a compressed file inside a RAR archive
 *
 * @link https://php.net/manual/zh/class.rarentry.php
 
*/
final class RarEntry
{
    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, MS-DOS was used to add this entry.
     * Use instead of {@see RAR_HOST_MSDOS}.
     */
    public const HOST_MSDOS = 0;

    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, OS/2 was used to add this entry.
     * Intended to replace {@see RAR_HOST_OS2}.
     */
    public const HOST_OS2 = 1;

    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, Microsoft Windows was used to add this entry.
     * Intended to replace {@see RAR_HOST_WIN32}
     */
    public const HOST_WIN32 = 2;

    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, an unspecified UNIX OS was used to add
     * this entry. Intended to replace {@see RAR_HOST_UNIX}.
     */
    public const HOST_UNIX = 3;

    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, Mac OS was used to add this entry.
     */
    public const HOST_MACOS = 4;

    /**
     * If the return value of {@see RarEntry::getHostOs()} equals this constant, BeOS was used to add this entry.
     * Intended to replace {@see RAR_HOST_BEOS}.
     */
    public const HOST_BEOS = 5;

    /**
     * Bit that represents a Windows entry with a read-only attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_READONLY = 1;

    /**
     * Bit that represents a Windows entry with a hidden attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_HIDDEN = 2;

    /**
     * Bit that represents a Windows entry with a system attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_SYSTEM = 4;

    /**
     * Bit that represents a Windows entry with a directory attribute (entry is a directory). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows. See also
     * {@see RarEntry::isDirectory()}, which also works with entries that were not added in WinRAR.
     */
    public const ATTRIBUTE_WIN_DIRECTORY = 16;

    /**
     * Bit that represents a Windows entry with an archive attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_ARCHIVE = 32;

    /**
     * Bit that represents a Windows entry with a device attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_DEVICE = 64;

    /**
     * Bit that represents a Windows entry with a normal file attribute (entry is NOT a directory). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows. See also
     * {@see RarEntry::isDirectory()}, which also works with entries that were not added in WinRAR.
     */
    public const ATTRIBUTE_WIN_NORMAL = 128;

    /**
     * Bit that represents a Windows entry with a temporary attribute. To be used with {@see RarEntry::getAttr()} on
     * entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_TEMPORARY = 256;

    /**
     * Bit that represents a Windows entry with a sparse file attribute (file is an NTFS sparse file). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_SPARSE_FILE = 512;

    /**
     * Bit that represents a Windows entry with a reparse point attribute (entry is an NTFS reparse point, e.g. a
     * directory junction or a mount file system). To be used with {@see RarEntry::getAttr()} on entries whose host OS
     * is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_REPARSE_POINT = 1024;

    /**
     * Bit that represents a Windows entry with a compressed attribute (NTFS only). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_COMPRESSED = 2048;

    /**
     * Bit that represents a Windows entry with an offline attribute (entry is offline and not accessible). To be used
     * with {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_OFFLINE = 4096;

    /**
     * Bit that represents a Windows entry with a not content indexed attribute (entry is to be indexed). To be used
     * with {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_NOT_CONTENT_INDEXED = 8192;

    /**
     * Bit that represents a Windows entry with an encrypted attribute (NTFS only). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_ENCRYPTED = 16384;

    /**
     * Bit that represents a Windows entry with a virtual attribute. To be used with {@see RarEntry::getAttr()}
     * on entries whose host OS is Microsoft Windows.
     */
    public const ATTRIBUTE_WIN_VIRTUAL = 65536;

    /**
     * Bit that represents a UNIX entry that is world executable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_WORLD_EXECUTE = 1;

    /**
     * Bit that represents a UNIX entry that is world writable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_WORLD_WRITE = 2;

    /**
     * Bit that represents a UNIX entry that is world readable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_WORLD_READ = 4;

    /**
     * Bit that represents a UNIX entry that is group executable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_GROUP_EXECUTE = 8;

    /**
     * Bit that represents a UNIX entry that is group writable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_GROUP_WRITE = 16;

    /**
     * Bit that represents a UNIX entry that is group readable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_GROUP_READ = 32;

    /**
     * Bit that represents a UNIX entry that is owner executable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_OWNER_EXECUTE = 64;

    /**
     * Bit that represents a UNIX entry that is owner writable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_OWNER_WRITE = 128;

    /**
     * Bit that represents a UNIX entry that is owner readable. To be used with {@see RarEntry::getAttr()} on entries
     * whose host OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_OWNER_READ = 256;

    /**
     * Bit that represents the UNIX sticky bit. To be used with {@see RarEntry::getAttr()} on entries whose host OS is
     * UNIX.
     */
    public const ATTRIBUTE_UNIX_STICKY = 512;

    /**
     * Bit that represents the UNIX setgid attribute. To be used with {@see RarEntry::getAttr()} on entries whose host
     * OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_SETGID = 1024;

    /**
     * Bit that represents the UNIX setuid attribute. To be used with {@see RarEntry::getAttr()} on entries whose host
     * OS is UNIX.
     */
    public const ATTRIBUTE_UNIX_SETUID = 2048;

    /**
     * Mask to isolate the last four bits (nibble) of UNIX attributes (_S_IFMT, the type of file mask). To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constants
     * {@see RarEntry::ATTRIBUTE_UNIX_FIFO}, {@see RarEntry::ATTRIBUTE_UNIX_CHAR_DEV},
     * {@see RarEntry::ATTRIBUTE_UNIX_DIRECTORY}, {@see RarEntry::ATTRIBUTE_UNIX_BLOCK_DEV},
     * {@see RarEntry::ATTRIBUTE_UNIX_REGULAR_FILE},
     * {@see RarEntry::ATTRIBUTE_UNIX_SYM_LINK} and {@see RarEntry::ATTRIBUTE_UNIX_SOCKET}.
     */
    public const ATTRIBUTE_UNIX_FINAL_QUARTET = 61440;

    /**
     * Unix FIFOs will have attributes whose last four bits have this value. To be used with {@see RarEntry::getAttr()}
     * on entries whose host OS is UNIX and with the constant {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     */
    public const ATTRIBUTE_UNIX_FIFO = 4096;

    /**
     * Unix character devices will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     */
    public const ATTRIBUTE_UNIX_CHAR_DEV = 8192;

    /**
     * Unix directories will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     *
     * See also {@see RarEntry::isDirectory()}, which also works with entries that were added in other operating
     * systems.
     */
    public const ATTRIBUTE_UNIX_DIRECTORY = 16384;

    /**
     * Unix block devices will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     */
    public const ATTRIBUTE_UNIX_BLOCK_DEV = 24576;

    /**
     * Unix regular files (not directories) will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}. See also {@see RarEntry::isDirectory()}, which also works with
     * entries that were added in other operating systems.
     */
    public const ATTRIBUTE_UNIX_REGULAR_FILE = 32768;

    /**
     * Unix symbolic links will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     */
    public const ATTRIBUTE_UNIX_SYM_LINK = 40960;

    /**
     * Unix sockets will have attributes whose last four bits have this value. To be used with
     * {@see RarEntry::getAttr()} on entries whose host OS is UNIX and with the constant
     * {@see RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET}.
     */
    public const ATTRIBUTE_UNIX_SOCKET = 49152;

/**
* <div id="rarentry.extract" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::extract</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::extract</span> — <span class="dc-title">Extract entry from the archive</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.extract-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::extract</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$dir</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$filepath</span><span class="initializer"> = ""</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = NULL</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$extended_data</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="methodname" style="color:#CC7832"><strong>RarEntry::extract()</strong></span> extracts the entry's data.   It will create new file in the specified   <span class="parameter" style="color:#3A95FF">dir</span> with the name identical to the entry's name,   unless the second argument is specified. See below for more information.  </p> </div> <div class="refsect1 parameters" id="refsect1-rarentry.extract-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">dir</span></dt>     <dd>      <p class="para">       Path to the directory where files should be extracted. This parameter is       considered if and only if <span class="parameter" style="color:#3A95FF">filepath</span> is not. If both       parameters are empty an extraction to the current directory will be       attempted.      </p>     </dd>                 <dt><span class="parameter" style="color:#3A95FF">filepath</span></dt>     <dd>      <p class="para">       Path (relative or absolute) containing the directory and filename of the       extracted file. This parameter overrides both the parameter       <span class="parameter" style="color:#3A95FF">dir</span> and the original file name.      </p>     </dd>                 <dt><span class="parameter" style="color:#3A95FF">password</span></dt>     <dd>      <p class="para">       The password used to encrypt this entry. If the entry is not encrypted, this value will not be used and can       be omitted. If this parameter is omitted and the entry is encrypted, the password given to       <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>, if any, will be used. If a wrong password is given, either explicitly       or implicitly via <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>, CRC checking will fail and this method will fail and return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.       If no password is given and one is required, this method will fail and return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.       You can check whether an entry is encrypted with <span class="methodname" style="color:#CC7832">{@link RarEntry::isEncrypted()}</span>.      </p>     </dd>           <dt><span class="parameter" style="color:#3A95FF">extended_data</span></dt>    <dd>     <p class="para">       If <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, extended information such as NTFS ACLs and Unix owner information will be set in the extract       files, as long as it's present in the archive.     </p>    </dd>      </dl>    <div class="warning"><strong class="warning">警告</strong>      <p class="para">Prior to version 2.0.0, this function would not handle relative      paths correctly. Use <span class="function">{@link realpath()}</span> as a workaround.</p>  </div> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.extract-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-rarentry.extract-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 3.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">extended_data</span> was added.       </td>      </tr>      <tr>       <td>PECL rar 3.0.0</td>       <td>        Support for RAR archives with repeated entry names is no longer defective.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rarentry.extract-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-871">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::extract()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">extract</span><span style="color: #007700">(</span><span style="color: #DD0000">'/dir/to'</span><span style="color: #007700">); </span><span style="color: #FF8000">// create /dir/to/Dir/file.txt<br></span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">extract</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #DD0000">'/dir/to/new_name.txt'</span><span style="color: #007700">); </span><span style="color: #FF8000">// create /dir/to/new_name.txt<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-872">    <p><strong>示例 #2 How to extract all files in archive: </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// example by Erik Jenssen aka erix <br><br></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">"foobar.rar"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$filepath </span><span style="color: #007700">= </span><span style="color: #DD0000">"/home/foo/bar/"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #9876AA">$filepath</span><span style="color: #007700">.</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$list </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_list</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">);<br>foreach(</span><span style="color: #9876AA">$list </span><span style="color: #007700">as </span><span style="color: #9876AA">$file</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">extract</span><span style="color: #007700">(</span><span style="color: #DD0000">"."</span><span style="color: #007700">); </span><span style="color: #FF8000">// extract to the current dir<br></span><span style="color: #007700">}<br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rarentry.extract-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarEntry::getStream()} - Get file handler for entry</span></li>    <li><a href="https://php.net/manual/zh/wrappers.rar.php" class="link"><span class="literal">rar://</span> wrapper</a></li>   </ul>   </div></div>
    *
     * Extract entry from the archive
     *
     * extracts the entry's data. It will create new file in the specified dir with the name identical to the entry's
     * name, unless the second argument is specified.
     *
     * @link https://php.net/manual/zh/rarentry.extract.php
     *
     * @param string $dir Path to the directory where files should be extracted. This parameter is considered if and
     *      only if filepath is not. If both parameters are empty an extraction to the current directory
     *      will be attempted.
     * @param string $filepath Path (relative or absolute) containing the directory and filename of the extracted file.
     *      This parameter overrides both the parameter dir and the original file name.
     * @param string $password The password used to encrypt this entry. If the entry is not encrypted, this value will
     *      not be used and can be omitted. If this parameter is omitted and the entry is encrypted, the password
     *      given to rar_open(), if any, will be used. If a wrong password is given, either explicitly or implicitly
     *      via rar_open(), CRC checking will fail and this method will fail and return FALSE. If no password is given
     *      and one is required, this method will fail and return FALSE. You can check whether an entry is encrypted
     *      with {@see RarEntry::isEncrypted()}.
     * @param bool $extended_data If TRUE, extended information such as NTFS ACLs and Unix owner information will be
     *      set in the extract files, as long as it's present in the archive.
     *
     * @return bool TRUE on success or FALSE on failure
     
*/
    public function extract($dir, $filepath = "", $password = null, $extended_data = false) {}

/**
* <div id="rarentry.getattr" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getAttr</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getAttr</span> — <span class="dc-title">Get attributes of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getattr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getAttr</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the OS-dependent attributes of the archive entry.   </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getattr-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getattr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the attributes or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-rarentry.getattr-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-873">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getAttr()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Can't open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'dir/in/the/archive'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Can't find such entry"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$host_os </span><span style="color: #007700">= </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHostOs</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttr</span><span style="color: #007700">();<br><br>switch(</span><span style="color: #9876AA">$host_os</span><span style="color: #007700">) {<br>    case </span><span style="color: #9876AA">RAR_HOST_MSDOS</span><span style="color: #007700">:<br>    case </span><span style="color: #9876AA">RAR_HOST_OS2</span><span style="color: #007700">:<br>    case </span><span style="color: #9876AA">RAR_HOST_WIN32</span><span style="color: #007700">:<br>    case </span><span style="color: #9876AA">RAR_HOST_MACOS</span><span style="color: #007700">:<br>        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%c%c%c%c%c%c\n"</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x08</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'V' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x10</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'D' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x01</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'R' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x02</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'H' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x04</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'S' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x20</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'A' </span><span style="color: #007700">: </span><span style="color: #DD0000">'.'</span><span style="color: #007700">);<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_UNIX</span><span style="color: #007700">:<br>    case </span><span style="color: #9876AA">RAR_HOST_BEOS</span><span style="color: #007700">:<br>        switch (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0xF000</span><span style="color: #007700">)<br>        {<br>            case </span><span style="color: #9876AA">0x4000</span><span style="color: #007700">:<br>                </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"d"</span><span style="color: #007700">);<br>                break;<br>            case </span><span style="color: #9876AA">0xA000</span><span style="color: #007700">:<br>                </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"l"</span><span style="color: #007700">);<br>                break;<br>            default:<br>                </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"-"</span><span style="color: #007700">);<br>                break;<br>        }<br>        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%c%c%c%c%c%c%c%c%c\n"</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0100</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0080</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0040</span><span style="color: #007700">) ? ((</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0800</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'s'</span><span style="color: #007700">:</span><span style="color: #DD0000">'x'</span><span style="color: #007700">):((</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0800</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'S'</span><span style="color: #007700">:</span><span style="color: #DD0000">'-'</span><span style="color: #007700">),<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0020</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0010</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0008</span><span style="color: #007700">) ? ((</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0400</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'s'</span><span style="color: #007700">:</span><span style="color: #DD0000">'x'</span><span style="color: #007700">):((</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0400</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'S'</span><span style="color: #007700">:</span><span style="color: #DD0000">'-'</span><span style="color: #007700">),<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0004</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0002</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">,<br>                (</span><span style="color: #9876AA">$attr </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0001</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'x' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br>        break;<br>}<br><br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-rarentry.getattr-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarEntry::getHostOs()} - Get entry host OS</span></li>    <li>The constants in <span class="classname"><a href="https://php.net/manual/zh/class.rarentry.php" class="classname">RarEntry</a></span></li>   </ul>   </div></div>
    *
     * Get attributes of the entry
     *
     * Returns the OS-dependent attributes of the archive entry
     *
     * @link https://php.net/manual/zh/rarentry.getattr.php
     *
     * @return int|false the attributes or FALSE on error
     
*/
    public function getAttr() {}

/**
* <div id="rarentry.getcrc" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getCrc</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getCrc</span> — <span class="dc-title">Get CRC of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getcrc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getCrc</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Returns an hexadecimal string representation of the CRC of the archive entry.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getcrc-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getcrc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the CRC of the archive entry or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rarentry.getcrc-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 2.0.0</td>       <td>        This method now returns correct values for multiple volume archives.       </td>      </tr>     </tbody>       </table>   </div></div>
    *
     * Get CRC of the entry
     *
     * Returns an hexadecimal string representation of the CRC of the archive entry.
     *
     * @link https://php.net/manual/zh/rarentry.getcrc.php
     *
     * @return string|false the CRC of the archive entry or FALSE on error
     
*/
    public function getCrc() {}

/**
* <div id="rarentry.getfiletime" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getFileTime</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getFileTime</span> — <span class="dc-title">Get entry last modification time</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getfiletime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getFileTime</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Gets entry last modification time.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getfiletime-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getfiletime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns entry last modification time as string in format    <span class="literal">YYYY-MM-DD HH:II:SS</span>, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div></div>
    *
     * Get entry last modification time
     *
     * @link https://php.net/manual/zh/rarentry.getfiletime.php
     *
     * @return string|false entry last modification time as string in format YYYY-MM-DD HH:II:SS, or FALSE on errors
     
*/
    public function getFileTime() {}

/**
* <div id="rarentry.gethostos" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getHostOs</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getHostOs</span> — <span class="dc-title">Get entry host OS</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.gethostos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getHostOs</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns the code of the host OS of the archive entry.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.gethostos-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.gethostos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the code of the host OS, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-rarentry.gethostos-examples">  <h3 class="title">示例</h3>   <p class="para">   </p><div class="example" id="example-874">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getHostOs()</strong></span> example (version &gt;= 2.0.0)</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>switch (</span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHostOs</span><span style="color: #007700">()) {<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_MSDOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"MS-DOS\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_OS2</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"OS2\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_WIN32</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"Win32\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_MACOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"MacOS\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_UNIX</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"Unix/Linux\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RarEntry</span><span style="color: #007700">::</span><span style="color: #9876AA">HOST_BEOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"BeOS\n"</span><span style="color: #007700">;<br>        break;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>      <div class="example" id="example-875">    <p><strong>示例 #2 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getHostOs()</strong></span> example (version &lt;= 1.0.0)</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>switch (</span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHostOs</span><span style="color: #007700">()) {<br>    case </span><span style="color: #9876AA">RAR_HOST_MSDOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"MS-DOS\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_OS2</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"OS2\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_WIN32</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"Win32\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_MACOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"MacOS\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_UNIX</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"Unix/Linux\n"</span><span style="color: #007700">;<br>        break;<br>    case </span><span style="color: #9876AA">RAR_HOST_BEOS</span><span style="color: #007700">:<br>        echo </span><span style="color: #DD0000">"BeOS\n"</span><span style="color: #007700">;<br>        break;<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rarentry.gethostos-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarEntry::extract()} - Extract entry from the archive</span></li>   </ul>   </div></div>
    *
     * Get entry host OS
     *
     * Returns the code of the host OS of the archive entry
     *
     * @link https://php.net/manual/zh/rarentry.gethostos.php
     *
     * @return int|false the code of the host OS, or FALSE on error
     
*/
    public function getHostOs() {}

/**
* <div id="rarentry.getmethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getMethod</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getMethod</span> — <span class="dc-title">Get pack method of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getmethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getMethod</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   <span class="methodname" style="color:#CC7832"><strong>RarEntry::getMethod()</strong></span> returns number of the method used when adding   current archive entry.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getmethod-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getmethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the method number or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-rarentry.getmethod-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-876">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getMethod()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Method number: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMethod</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
    *
     * Get pack method of the entry
     *
     * returns number of the method used when adding current archive entry
     *
     * @link https://php.net/manual/zh/rarentry.getmethod.php
     *
     * @return int|false the method number or FALSE on error
     
*/
    public function getMethod() {}

/**
* <div id="rarentry.getname" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getName</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getName</span> — <span class="dc-title">Get name of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Returns the name (with path) of the archive entry.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getname-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the entry name as a string, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rarentry.getname-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 2.0.0</td>       <td>        As of version 2.0.0, the returned string is encoded in Unicode/UTF-8.       </td>      </tr>     </tbody>       </table>   </div>  <div class="refsect1 examples" id="refsect1-rarentry.getname-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-877">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getName()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">//this example is safe even in pages not encoded in UTF-8<br>//for those encoded in UTF-8, the call to mb_convert_encoding is unnecessary<br><br></span><span style="color: #9876AA">$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Entry name: " </span><span style="color: #007700">. </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(<br>        </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">(),<br>        </span><span style="color: #9876AA">ENT_COMPAT</span><span style="color: #007700">,<br>        </span><span style="color: #DD0000">"UTF-8"<br>    </span><span style="color: #007700">),<br>    </span><span style="color: #DD0000">"HTML-ENTITIES"</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">"UTF-8"<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
    *
     * Get name of the entry
     *
     * Returns the name (with path) of the archive entry.
     *
     * @link https://php.net/manual/zh/rarentry.getname.php
     *
     * @return string|false the entry name as a string, or FALSE on error.
     
*/
    public function getName() {}

/**
* <div id="rarentry.getpackedsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getPackedSize</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getPackedSize</span> — <span class="dc-title">Get packed size of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getpackedsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getPackedSize</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get packed size of the archive entry.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">Note that on platforms with 32-bit longs (that includes Windows    x64), the maximum size returned is capped at 2 GiB. Check the constant    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-max">PHP_INT_MAX</a></span></strong>.</p>  </blockquote> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getpackedsize-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getpackedsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the packed size, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rarentry.getpackedsize-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 2.0.0</td>       <td>        This method now returns correct values of packed sizes bigger than 2 GiB        on platforms with 64-bit <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>s and never        returns negative values on other platforms.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rarentry.getpackedsize-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-878">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getPackedSize()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Packed size of " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">() . </span><span style="color: #DD0000">" = " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPackedSize</span><span style="color: #007700">() . </span><span style="color: #DD0000">" bytes"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
    *
     * Get packed size of the entry
     *
     * @link https://php.net/manual/zh/rarentry.getpackedsize.php
     *
     * @return int|false the packed size, or FALSE on error
     
*/
    public function getPackedSize() {}

/**
* <div id="rarentry.getstream" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getStream</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarEntry::getStream</span> — <span class="dc-title">Get file handler for entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getstream-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getStream</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$password</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.resource.php" class="type resource" style="color:#EAB766">resource</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Returns a file handler that   supports read operations. This handler provides on-the-fly decompression   for this entry.  </p>  <p class="para">    The handler is not invalidated by calling    <span class="function"><a href="https://php.net/manual/zh/rararchive.close.php" class="function">rar_close()</a></span>.  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">The resulting stream has no integrity verification. In particular, file corruption and   decryption with a wrong a key will not be detected. It is the programmer's responsability to use the entry's CRC   to check for integrity, if he so wishes.</p>  </div> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getstream-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">password</span></dt>     <dd>      <p class="para">       The password used to encrypt this entry. If the entry is not encrypted, this value will not be used and can       be omitted. If this parameter is omitted and the entry is encrypted, the password given to       <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>, if any, will be used. If a wrong password is given, either explicitly       or implicitly via <span class="function"><a href="https://php.net/manual/zh/rararchive.open.php" class="function">rar_open()</a></span>, this method's resulting stream will produce wrong       output. If no password is given and one is required, this method will fail and return <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.       You can check whether an entry is encrypted with <span class="methodname" style="color:#CC7832">{@link RarEntry::isEncrypted()}</span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getstream-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The file handler  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rarentry.getstream-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 3.0.0</td>       <td>        Support for RAR archives with repeated entry names is no longer defective.       </td>      </tr>     </tbody>       </table>   </div>  <div class="refsect1 examples" id="refsect1-rarentry.getstream-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-879">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getStream()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$rar_file </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getStream</span><span style="color: #007700">();<br>if (</span><span style="color: #9876AA">$stream </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">)<br>    die(</span><span style="color: #DD0000">"Failed to obtain stream."</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">rar_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">); </span><span style="color: #FF8000">//stream is independent from file<br><br></span><span style="color: #007700">while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">$buff </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #9876AA">8192</span><span style="color: #007700">);<br>    if (</span><span style="color: #9876AA">$buff </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">)<br>        echo </span><span style="color: #9876AA">$buff</span><span style="color: #007700">;<br>    else<br>        break; </span><span style="color: #FF8000">//fread error<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div>  <div class="refsect1 seealso" id="refsect1-rarentry.getstream-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarEntry::extract()} - Extract entry from the archive</span></li>    <li><a href="https://php.net/manual/zh/wrappers.rar.php" class="link"><span class="literal">rar://</span> wrapper</a></li>   </ul>   </div></div>
    *
     * Get file handler for entry
     *
     * Returns a file handler that supports read operations. This handler provides on-the-fly decompression for
     * this entry. The handler is not invalidated by calling {@see rar_close()}.
     *
     * @link https://php.net/manual/zh/rarentry.getstream.php
     *
     * @param string $password The password used to encrypt this entry. If the entry is not encrypted, this value will
     *      not be used and can be omitted. If this parameter is omitted and the entry is encrypted,
     *      the password given to {@see rar_open()}, if any, will be used. If a wrong password is given, either
     *      explicitly or implicitly via {@see rar_open()}, this method's resulting stream will produce wrong output.
     *      If no password is given and one is required, this method will fail and return FALSE. You can check
     *      whether an entry is encrypted with {@see RarEntry::isEncrypted()}.
     *
     * @return resource|false file handler or FALSE on failure
     
*/
    public function getStream($password = '') {}

/**
* <div id="rarentry.getunpackedsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getUnpackedSize</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getUnpackedSize</span> — <span class="dc-title">Get unpacked size of the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getunpackedsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getUnpackedSize</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Get unpacked size of the archive entry.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">Note that on platforms with 32-bit longs (that includes Windows    x64), the maximum size returned is capped at 2 GiB. Check the constant    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.php-int-max">PHP_INT_MAX</a></span></strong>.</p>  </blockquote> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getunpackedsize-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getunpackedsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the unpacked size, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div>  <div class="refsect1 changelog" id="refsect1-rarentry.getunpackedsize-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL rar 2.0.0</td>       <td>        This method now returns correct values of unpacked sizes bigger than        2 GiB on platforms with 64-bit <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>s and never        returns negative values on other platforms.       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-rarentry.getunpackedsize-examples">  <h3 class="title">返回值</h3>  <p class="para">   </p><div class="example" id="example-880">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getUnpackedSize()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Unpacked size of " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getName</span><span style="color: #007700">() . </span><span style="color: #DD0000">" = " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPackedSize</span><span style="color: #007700">() . </span><span style="color: #DD0000">" bytes"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
    *
     * Get unpacked size of the entry
     * @link https://php.net/manual/zh/rarentry.getunpackedsize.php
     * @return int|false the unpacked size, or FALSE on error
     
*/
    public function getUnpackedSize() {}

/**
* <div id="rarentry.getversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::getVersion</h1>  <p class="verinfo">(PECL rar &gt;= 0.1)</p><p class="refpurpose"><span class="refname">RarEntry::getVersion</span> — <span class="dc-title">Get minimum version of RAR program required to unpack the entry</span></p> </div>  <div class="refsect1 description" id="refsect1-rarentry.getversion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::getVersion</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Returns minimum version of RAR program (e.g. WinRAR) required to unpack the entry.   It is encoded as 10 * major version + minor version.  </p> </div>  <div class="refsect1 parameters" id="refsect1-rarentry.getversion-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.getversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the version or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 examples" id="refsect1-rarentry.getversion-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-881">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>RarEntry::getVersion()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$rar_file </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_open</span><span style="color: #007700">(</span><span style="color: #DD0000">'example.rar'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to open Rar archive"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">rar_entry_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$rar_file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Dir/file.txt'</span><span style="color: #007700">) or die(</span><span style="color: #DD0000">"Failed to find such entry"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"Rar version required for unpacking: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$entry</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getVersion</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div></div>
    *
     * Get minimum version of RAR program required to unpack the entry
     *
     * Returns minimum version of RAR program (e.g. WinRAR) required to unpack the entry. It is encoded as
     * 10 * major version + minor version.
     *
     * @link https://php.net/manual/zh/rarentry.getversion.php
     *
     * @return int|false the version or FALSE on error
     
*/
    public function getVersion() {}

/**
* <div id="rarentry.isdirectory" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::isDirectory</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarEntry::isDirectory</span> — <span class="dc-title">Test whether an entry represents a directory</span></p> </div> <div class="refsect1 description" id="refsect1-rarentry.isdirectory-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::isDirectory</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Tests whether the current entry is a directory.  </p> </div> <div class="refsect1 parameters" id="refsect1-rarentry.isdirectory-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.isdirectory-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if this entry is a directory and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 notes" id="refsect1-rarentry.isdirectory-notes">  <h3 class="title">注释</h3>  <p class="para">  This function is only available starting with version 2.0.0, but one can  also test whether an entry is a directory by checking the entry attributes,  like this (only works for files compressed in RAR for Windows or Unix):  </p><div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//...<br>//Open file, get entry and store in variable $e...<br>//...<br><br></span><span style="color: #9876AA">$isDirectory </span><span style="color: #007700">= (bool) (((</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHostOs</span><span style="color: #007700">() == </span><span style="color: #9876AA">RAR_HOST_WIN32</span><span style="color: #007700">) &amp;&amp; (</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttr</span><span style="color: #007700">() &amp; </span><span style="color: #9876AA">0x10</span><span style="color: #007700">)) ||<br>    ((</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHostOs</span><span style="color: #007700">() == </span><span style="color: #9876AA">RAR_HOST_UNIX</span><span style="color: #007700">) &amp;&amp; ((</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAttr</span><span style="color: #007700">() &amp; </span><span style="color: #9876AA">0xf000</span><span style="color: #007700">) == </span><span style="color: #9876AA">0x4000</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>  </div>   </div></div>
    *
     * Test whether an entry represents a directory
     *
     * @link https://php.net/manual/zh/rarentry.isdirectory.php
     *
     * @return bool TRUE if this entry is a directory and FALSE otherwise.
     
*/
    public function isDirectory() {}

/**
* <div id="rarentry.isencrypted" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarEntry::isEncrypted</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarEntry::isEncrypted</span> — <span class="dc-title">Test whether an entry is encrypted</span></p> </div> <div class="refsect1 description" id="refsect1-rarentry.isencrypted-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>RarEntry::isEncrypted</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Tests whether the current entry contents are encrypted.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">The password used may differ between files inside the same RAR archive.</p>  </blockquote> </div> <div class="refsect1 parameters" id="refsect1-rarentry.isencrypted-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarentry.isencrypted-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the current entry is encrypted and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div></div>
    *
     * Test whether an entry is encrypted
     *
     * @link https://php.net/manual/zh/rarentry.isencrypted.php
     *
     * @return bool TRUE if the current entry is encrypted and FALSE otherwise
     
*/
    public function isEncrypted() {}

    /**
     * Get text representation of entry
     *
     * Returns a textual representation for this entry. It includes whether the entry is a file or a directory
     * (symbolic links and other special objects will be treated as files), the UTF-8 name of the entry and its CRC.
     * The form and content of this representation may be changed in the future, so they cannot be relied upon.
     *
     * @link https://php.net/manual/en/rarentry.tostring.php
     *
     * @return string A textual representation for the entry
     */
    public function __toString() {}
}
/**
* <div id="class.rarexception" class="reference"> <h1 class="title">The RarException class</h1>  <div class="partintro"><p class="verinfo">(PECL rar &gt;= 2.0.0)</p>  <div class="section" id="rarexception.intro">   <h2 class="title">简介</h2>   <p class="para">    This class serves two purposes: it is the type of the exceptions thrown by the RAR extension    functions and methods and it allows, through static methods to query and define the error    behaviour of the extension, i.e., whether exceptions are thrown or only warnings are emitted.   </p>   <p class="para">    The following error codes are used:   </p>   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      -1 - error outside UnRAR library     </span>    </li>    <li class="listitem">     <span class="simpara">      11 - insufficient memory     </span>    </li>        <li class="listitem">     <span class="simpara">      12 - bad data     </span>    </li>        <li class="listitem">     <span class="simpara">      13 - bad archive     </span>    </li>        <li class="listitem">     <span class="simpara">      14 - unknown format     </span>    </li>        <li class="listitem">     <span class="simpara">      15 - file open error     </span>    </li>        <li class="listitem">     <span class="simpara">      16 - file create error     </span>    </li>        <li class="listitem">     <span class="simpara">      17 - file close error     </span>    </li>        <li class="listitem">     <span class="simpara">      18 - read error     </span>    </li>     <li class="listitem">     <span class="simpara">      19 - write error     </span>    </li>     <li class="listitem">     <span class="simpara">      20 - buffer too small     </span>    </li>     <li class="listitem">     <span class="simpara">      21 - unknown RAR error     </span>    </li>     <li class="listitem">     <span class="simpara">      22 - password required but not given     </span>    </li>   </ul>  </div>  <div class="section" id="rarexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">final</span>      <span class="modifier">class</span> <strong class="classname">RarException</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarexception.isusingexceptions.php" class="methodname" style="color:#CC7832">isUsingExceptions</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/rarexception.setusingexceptions.php" class="methodname" style="color:#CC7832">setUsingExceptions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$using_exceptions</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link RarException::isUsingExceptions} — Check whether error handling with exceptions is in use</li><li>{@link RarException::setUsingExceptions} — Activate and deactivate error handling with exceptions</li></ul></div>
*
 * This class serves two purposes:
 * it is the type of the exceptions thrown by the RAR extension functions and methods and it allows, through static
 * methods to query and define the error behaviour of the extension, i.e., whether exceptions are thrown or only
 * warnings are emitted.<br>
 * The following error codes are used:<br><ul>
 * <li>-1 - error outside UnRAR library</li>
 * <li>11 - insufficient memory</li>
 * <li>12 - bad data</li>
 * <li>13 - bad archive</li>
 * <li>14 - unknown format</li>
 * <li>15 - file open error</li>
 * <li>16 - file create error</li>
 * <li>17 - file close error</li>
 * <li>18 - read error</li>
 * <li>19 - write error</li>
 * <li>20 - buffer too small</li>
 * <li>21 - unkown RAR error</li>
 * <li>22 - password required but not given</li>
 * </ul>
 *
 * @link https://php.net/manual/zh/class.rarexception.php
 
*/
final class RarException extends Exception
{
/**
* <div id="rarexception.isusingexceptions" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarException::isUsingExceptions</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarException::isUsingExceptions</span> — <span class="dc-title">Check whether error handling with exceptions is in use</span></p> </div> <div class="refsect1 description" id="refsect1-rarexception.isusingexceptions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>RarException::isUsingExceptions</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks whether the RAR functions will emit warnings and return error values or whether they   will throw exceptions in most of the circumstances (does not include some programmatic   errors such as passing the wrong type of arguments).  </p> </div> <div class="refsect1 parameters" id="refsect1-rarexception.isusingexceptions-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-rarexception.isusingexceptions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if exceptions are being used, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-rarexception.isusingexceptions-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-882">    <p><strong>示例 #1 <span class="function"><strong>RarException::isUsingExceptions()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//The default is not to use exceptions<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">RarException</span><span style="color: #007700">::</span><span style="color: #9876AA">isUsingExceptions</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-rarexception.isusingexceptions-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarException::setUsingExceptions()} - Activate and deactivate error handling with exceptions</span></li>   </ul>   </div></div>
    *
     * Check whether error handling with exceptions is in use
     *
     * @link https://php.net/manual/zh/rarexception.isusingexceptions.php
     *
     * @return bool TRUE if exceptions are being used, FALSE otherwise
     
*/
    public static function isUsingExceptions() {}

/**
* <div id="rarexception.setusingexceptions" class="refentry"> <div class="refnamediv">  <h1 class="refname">RarException::setUsingExceptions</h1>  <p class="verinfo">(PECL rar &gt;= 2.0.0)</p><p class="refpurpose"><span class="refname">RarException::setUsingExceptions</span> — <span class="dc-title">Activate and deactivate error handling with exceptions</span></p> </div> <div class="refsect1 description" id="refsect1-rarexception.setusingexceptions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>RarException::setUsingExceptions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$using_exceptions</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   If and only if the argument is <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>, then, instead of emitting warnings and returning a special value indicating error when the UnRAR library encounters an error, an exception of type <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarexception.php" class="type RarException" style="color:#EAB766">RarException</a></span> will be thrown.  </p>  <p class="para">   Exceptions will also be thrown for the following errors, which occur outside the library (their error code will be -1):  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     attempting some operations on a closed <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rararchive.php" class="type RarArchive" style="color:#EAB766">RarArchive</a></span> object or a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.rarentry.php" class="type RarEntry" style="color:#EAB766">RarEntry</a></span> object relative to the first;    </span>   </li>      <li class="listitem">    <span class="simpara">     attempting to get an entry that does not exist with <span class="methodname" style="color:#CC7832">{@link RarArchive::getEntry()}</span>.    </span>   </li>  </ul> </div> <div class="refsect1 parameters" id="refsect1-rarexception.setusingexceptions-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">using_exceptions</span></dt>     <dd>      <p class="para">       Should be <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> to activate exception throwing, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> to deactivate (the default).      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-rarexception.setusingexceptions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 examples" id="refsect1-rarexception.setusingexceptions-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-883">    <p><strong>示例 #1 <span class="function"><strong>RarException::setUsingExceptions()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">RarException</span><span style="color: #007700">::</span><span style="color: #9876AA">isUsingExceptions</span><span style="color: #007700">());<br></span><span style="color: #9876AA">$arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">"does_not_exist.rar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">RarException</span><span style="color: #007700">::</span><span style="color: #9876AA">setUsingExceptions</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">RarException</span><span style="color: #007700">::</span><span style="color: #9876AA">isUsingExceptions</span><span style="color: #007700">());<br></span><span style="color: #9876AA">$arch </span><span style="color: #007700">= </span><span style="color: #9876AA">RarArchive</span><span style="color: #007700">::</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">"does_not_exist.rar"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$arch</span><span style="color: #007700">); </span><span style="color: #FF8000">//not reached<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(false)<br><br>Warning: RarArchive::open(): Failed to open does_not_exist.rar: ERAR_EOPEN (file open error) in C:\php_rar\trunk\tests\test.php on line 3<br>bool(false)<br>bool(true)<br><br>Fatal error: Uncaught exception 'RarException' with message 'unRAR internal error: Failed to open does_not_exist.rar: ERAR_EOPEN (file open error)' in C:\php_rar\trunk\tests\test.php:8<br>Stack trace:<br>#0 C:\php_rar\trunk\tests\test.php(8): RarArchive::open('does_not_exist....')<br>#1 {main}<br>  thrown in C:\php_rar\trunk\tests\test.php on line 8</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-rarexception.setusingexceptions-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="methodname" style="color:#CC7832">{@link RarException::isUsingExceptions()} - Check whether error handling with exceptions is in use</span></li>   </ul>   </div></div>
    *
     * Activate and deactivate error handling with exceptions
     *
     * @link https://php.net/manual/zh/rarexception.setusingexceptions.php
     *
     * @param bool $using_exceptions Should be TRUE to activate exception throwing, FALSE to deactivate (the default)
     
*/
    public static function setUsingExceptions($using_exceptions) {}
}
