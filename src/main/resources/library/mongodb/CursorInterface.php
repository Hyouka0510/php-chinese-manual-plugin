<?php

namespace MongoDB\Driver;

use Iterator;
use MongoDB\BSON\Int64;
use MongoDB\Driver\Exception\InvalidArgumentException;

/**
 * This interface is implemented by MongoDB\Driver\Cursor but may also be used for type-hinting and userland classes.
 * @link https://www.php.net/manual/en/class.mongodb-driver-cursorinterface.php
 * @since 1.6.0
 */
interface CursorInterface extends Iterator
{
/**
 * <div id="function.current" class="refentry">   <div class="refnamediv">    <h1 class="refname">current</h1>    <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">current</span> — <span class="dc-title">返回数组中的当前值</span></p>   </div> <div class="refsect1 description" id="refsect1-function.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>current</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span></span> <span class="parameter" style="color:#3A95FF">\$array</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>    <p class="para rdfs-comment">     每个数组中都有一个内部的指针指向它“当前的”单元，初始化时会指向该数组中的第一个值。    </p>   </div> <div class="refsect1 parameters" id="refsect1-function.current-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">array</span></dt>     <dd>      <p class="para">       要操作的数组。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>current()</strong></span>   函数返回当前被内部指针指向的数组单元的值，并不移动指针。如果内部指针指向超出了单元列表的末端，<span class="function"><strong>current()</strong></span>   将返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，但也可能返回等同于 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的非布尔值。请阅读 <a href="https://php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <div class="refsect1 changelog" id="refsect1-function.current-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.1.0</td> <td>  弃用在 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 上调用此函数。  要么首先使用 <span class="function">{@link get_mangled_object_vars()}</span> 将 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 转换为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，要么使用实现  <span class="interfacename"><a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span> 的类提供的方法，例如 <span class="classname"><a href="https://php.net/manual/zh/class.arrayiterator.php" class="classname">ArrayIterator</a></span>。 </td></tr><tr> <td>7.4.0</td> <td>  <a href="https://php.net/manual/zh/book.spl.php" class="link">SPL</a> 类的实例现在被视为没有属性的空对象，而不是调用与此函数同名的 <span class="interfacename"><a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span> 方法。 </td></tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.current-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5274">    <p><strong>示例 #1  <span class="function"><strong>current()</strong></span> 函数使用示例</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$transport </span><span style="color: #007700">= array(</span><span style="color: #DD0000">'foot'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bike'</span><span style="color: #007700">, </span><span style="color: #DD0000">'car'</span><span style="color: #007700">, </span><span style="color: #DD0000">'plane'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">); </span><span style="color: #FF8000">// \$mode = 'foot';<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">);    </span><span style="color: #FF8000">// \$mode = 'bike';<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">); </span><span style="color: #FF8000">// \$mode = 'bike';<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">prev</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">);    </span><span style="color: #FF8000">// \$mode = 'foot';<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">end</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">);     </span><span style="color: #FF8000">// \$mode = 'plane';<br></span><span style="color: #9876AA">\$mode </span><span style="color: #007700">= </span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$transport</span><span style="color: #007700">); </span><span style="color: #FF8000">// \$mode = 'plane';<br><br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= array();<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">)); </span><span style="color: #FF8000">// bool(false)<br><br></span><span style="color: #9876AA">\$arr </span><span style="color: #007700">= array(array());<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$arr</span><span style="color: #007700">)); </span><span style="color: #FF8000">// array(0) { }<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.current-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    在一个空数组上使用 <span class="function"><strong>current()</strong></span>    函数，和在一个内部指针指向单元末端以外的数组上使用此函数，结果是相同的，同样都会返回    <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。如果希望正确遍历一个包含 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 的数组，请参阅    <a href="https://php.net/manual/zh/control-structures.foreach.php" class="link"><span class="literal">foreach</span></a> 控制结构。   </span>   <span class="simpara">    如果仍然希望使用 <span class="function"><strong>current()</strong></span> 来判断数组单元真实的值，应该同时使用    <span class="function">{@link key()}</span> 和 <span class="function"><strong>current()</strong></span>    来检查当前元素是否为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。   </span>  </p></blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.current-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link end()} - 将数组的内部指针指向最后一个单元</span></li>    <li><span class="function">{@link key()} - 从关联数组中取得键名</span></li>    <li><span class="function">{@link each()} - 返回数组中当前的键／值对并将数组指针向前移动一步</span></li>    <li><span class="function">{@link prev()} - 将数组的内部指针倒回一位</span></li>    <li><span class="function">{@link reset()} - 将数组的内部指针指向第一个单元</span></li>    <li><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>    <li><a href="https://php.net/manual/zh/control-structures.foreach.php" class="link"><span class="literal">foreach</span></a></li>   </ul>   </div></div>
 */
    public function current(): array|object|null;

    /**
     * Returns the cursor ID associated with this cursor. A cursor ID uniquely identifies the cursor on the server.
     * @return Int64 Returns the cursor ID for this cursor.
     * @throws InvalidArgumentException
     * @link https://www.php.net/manual/en/mongodb-driver-cursorinterface.getid.php
     */
    public function getId(): Int64;

    /**
     * Returns the MongoDB\Driver\Server associated with this cursor.
     * This is the server that executed the MongoDB\Driver\Query or MongoDB\Driver\Command.
     * @link https://www.php.net/manual/en/mongodb-driver-cursorinterface.getserver.php
     * @return Server Returns the MongoDB\Driver\Server associated with this cursor.
     * @throws InvalidArgumentException
     */
    public function getServer(): Server;

    /**
     * Checks whether the cursor may have additional results available to read.
     * @link https://www.php.net/manual/en/mongodb-driver-cursorinterface.isdead.php
     * @return bool Returns TRUE if additional results are not available, and FALSE otherwise.
     * @throws InvalidArgumentException
     */
    public function isDead(): bool;

/**
 * <div id="function.key" class="refentry">   <div class="refnamediv">    <h1 class="refname">key</h1>    <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">key</span> — <span class="dc-title">从关联数组中取得键名</span></p>   </div> <div class="refsect1 description" id="refsect1-function.key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>key</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span></span> <span class="parameter" style="color:#3A95FF">\$array</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span></div>    <p class="para rdfs-comment">     <span class="function"><strong>key()</strong></span> 返回数组中当前单元的键名。    </p>   </div>  <div class="refsect1 parameters" id="refsect1-function.key-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">array</span></dt>     <dd>      <p class="para">       该数组。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>key()</strong></span> 函数返回数组中内部指针指向的当前单元的键名。   但它不会移动指针。如果内部指针超过了元素列表尾部，或者数组是空的，<span class="function"><strong>key()</strong></span> 会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.key-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.1.0</td> <td>  弃用在 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 上调用此函数。  要么首先使用 <span class="function">{@link get_mangled_object_vars()}</span> 将 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> 转换为 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>，要么使用实现  <span class="interfacename"><a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span> 的类提供的方法，例如 <span class="classname"><a href="https://php.net/manual/zh/class.arrayiterator.php" class="classname">ArrayIterator</a></span>。 </td></tr><tr> <td>7.4.0</td> <td>  <a href="https://php.net/manual/zh/book.spl.php" class="link">SPL</a> 类的实例现在被视为没有属性的空对象，而不是调用与此函数同名的 <span class="interfacename"><a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span> 方法。 </td></tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.key-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5282">    <p><strong>示例 #1 <span class="function"><strong>key()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="annotation-interactive phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$array </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'fruit1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'fruit2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'orange'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'fruit3' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'grape'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'fruit4' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'fruit5' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// 此循环将会输出数组中所有值等于 “apple” 的键（key）<br></span><span style="color: #007700">while (</span><span style="color: #9876AA">\$fruit_name </span><span style="color: #007700">= </span><span style="color: #9876AA">current</span><span style="color: #007700">(</span><span style="color: #9876AA">\$array</span><span style="color: #007700">)) {<br>    if (</span><span style="color: #9876AA">\$fruit_name </span><span style="color: #007700">== </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">) {<br>        echo </span><span style="color: #9876AA">key</span><span style="color: #007700">(</span><span style="color: #9876AA">\$array</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br>    }<br>    </span><span style="color: #9876AA">next</span><span style="color: #007700">(</span><span style="color: #9876AA">\$array</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="annotation-interactive examplescode"><blockquote style="border:1px gray solid;">fruit1<br>fruit4<br>fruit5</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.key-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link current()} - 返回数组中的当前值</span></li>    <li><span class="function">{@link next()} - 将数组中的内部指针向前移动一位</span></li>    <li><span class="function">{@link array_key_first()} - 获取指定数组的第一个键</span></li>    <li><a href="https://php.net/manual/zh/control-structures.foreach.php" class="link">foreach</a></li>   </ul>   </div>  </div>
 */
    public function key(): ?int;

    /**
     * Sets a type map to use for BSON unserialization
     * @link https://www.php.net/manual/en/mongodb-driver-cursorinterface.settypemap.php
     * @param array $typemap Type map configuration.
     * @throws InvalidArgumentException
     */
    public function setTypeMap(array $typemap): void;

    /**
     * Iterates the cursor and returns its results in an array.
     * MongoDB\Driver\CursorInterface::setTypeMap() may be used to control how documents are unserialized into PHP values.
     * @return array Returns an array containing all results for this cursor.
     * @throws InvalidArgumentException
     */
    public function toArray(): array;
}
