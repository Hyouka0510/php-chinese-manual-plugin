<?php

// Start of xsl v.0.1
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\TentativeType;

/**
 * <div id="class.xsltprocessor" class="reference"> <h1 class="title">The XSLTProcessor class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="xsltprocessor.intro">   <h2 class="title">简介</h2>   <p class="para">       </p>  </div>   <div class="section" id="xsltprocessor.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">XSLTProcessor</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.xsltprocessor.php#xsltprocessor.props.doxinclude">\$<var class="varname">doXInclude</var></a></var><span class="initializer"> = false</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.xsltprocessor.php#xsltprocessor.props.clonedocument">\$<var class="varname">cloneDocument</var></a></var><span class="initializer"> = false</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.xsltprocessor.php#xsltprocessor.props.maxtemplatedepth">\$<var class="varname">maxTemplateDepth</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.xsltprocessor.php#xsltprocessor.props.maxtemplatevars">\$<var class="varname">maxTemplateVars</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.getparameter.php" class="methodname" style="color:#CC7832">getParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.getsecurityprefs.php" class="methodname" style="color:#CC7832">getSecurityPrefs</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.hasexsltsupport.php" class="methodname" style="color:#CC7832">hasExsltSupport</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.importstylesheet.php" class="methodname" style="color:#CC7832">importStylesheet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$stylesheet</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.registerphpfunctionns.php" class="methodname" style="color:#CC7832">registerPHPFunctionNS</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespaceURI</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">\$callable</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.registerphpfunctions.php" class="methodname" style="color:#CC7832">registerPHPFunctions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$functions</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.removeparameter.php" class="methodname" style="color:#CC7832">removeParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.setparameter.php" class="methodname" style="color:#CC7832">setParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.setparameter.php" class="methodname" style="color:#CC7832">setParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.setprofiling.php" class="methodname" style="color:#CC7832">setProfiling</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.setsecurityprefs.php" class="methodname" style="color:#CC7832">setSecurityPrefs</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$preferences</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.transformtodoc.php" class="methodname" style="color:#CC7832">transformToDoc</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$returnClass</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.transformtouri.php" class="methodname" style="color:#CC7832">transformToUri</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/xsltprocessor.transformtoxml.php" class="methodname" style="color:#CC7832">transformToXml</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>   }</div>   </div>  <div class="section" id="xsltprocessor.props">   <h2 class="title">属性</h2>   <dl>         <dt id="xsltprocessor.props.doxinclude"><var class="varname">doXInclude</var></dt>     <dd>      <span class="simpara">       Whether to perform xIncludes.      </span>     </dd>             <dt id="xsltprocessor.props.clonedocument"><var class="varname">cloneDocument</var></dt>     <dd>      <span class="simpara">       Whether to perform the transformation on a clone of the document.      </span>     </dd>             <dt id="xsltprocessor.props.maxtemplatedepth"><var class="varname">maxTemplateDepth</var></dt>     <dd>      <span class="simpara">       The maximum template recursion depth.      </span>     </dd>             <dt id="xsltprocessor.props.maxtemplatevars"><var class="varname">maxTemplateVars</var></dt>     <dd>      <span class="simpara">       The maximum number of variables in the template.      </span>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        The properties <var class="varname">doXInclude</var>        and <var class="varname">cloneDocument</var>        are now explicitly defined on the class.       </td>      </tr>      <tr>       <td>8.4.0</td>       <td>        Added properties <var class="varname">maxTemplateDepth</var>        and <var class="varname">maxTemplateVars</var>.       </td>      </tr>     </tbody>       </table>  </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link XSLTProcessor::__construct} — Creates a new XSLTProcessor object</li><li>{@link XSLTProcessor::getParameter} — Get value of a parameter</li><li>{@link XSLTProcessor::getSecurityPrefs} — Get security preferences</li><li>{@link XSLTProcessor::hasExsltSupport} — Determine if PHP has EXSLT support</li><li>{@link XSLTProcessor::importStylesheet} — Import stylesheet</li><li>{@link XSLTProcessor::registerPHPFunctionNS} — Register a PHP function as namespaced XSLT function</li><li>{@link XSLTProcessor::registerPHPFunctions} — Enables the ability to use PHP functions as XSLT functions</li><li>{@link XSLTProcessor::removeParameter} — Remove parameter</li><li>{@link XSLTProcessor::setParameter} — Set value for a parameter</li><li>{@link XSLTProcessor::setProfiling} — Sets profiling output file</li><li>{@link XSLTProcessor::setSecurityPrefs} — Set security preferences</li><li>{@link XSLTProcessor::transformToDoc} — Transform to a document</li><li>{@link XSLTProcessor::transformToUri} — Transform to URI</li><li>{@link XSLTProcessor::transformToXml} — Transform to XML</li></ul></div>
 * 
 * @link https://php.net/manual/zh/class.xsltprocessor.php
 */
class XSLTProcessor
{
    /**
 * <div id="xsltprocessor.importstylesheet" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::importStylesheet</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::importStylesheet</span> — <span class="dc-title">Import stylesheet</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.importstylesheet-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::importStylesheet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$stylesheet</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This method imports the stylesheet into the    <span class="classname"><a href="https://php.net/manual/zh/class.xsltprocessor.php" class="classname">XSLTProcessor</a></span> for transformations.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.importstylesheet-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">stylesheet</span></dt>     <dd>      <p class="para">       The imported style sheet as a <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>,       <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> or       <span class="classname"><a href="https://php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> object.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.importstylesheet-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.importstylesheet-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if   <span class="parameter" style="color:#3A95FF">stylesheet</span> is not an XML object.  </p> </div> <div class="refsect1 changelog" id="refsect1-xsltprocessor.importstylesheet-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Added support for <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       Now throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> instead of a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if       <span class="parameter" style="color:#3A95FF">stylesheet</span> is not an XML object.      </td>     </tr>    </tbody>     </table> </div></div>
 * 
     * Import stylesheet
     * @link https://php.net/manual/zh/xsltprocessor.importstylesheet.php
     * @param object $stylesheet <p>
     * The imported style sheet as a <b>DOMDocument</b> or
     * <b>SimpleXMLElement</b> object.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function importStylesheet(#[LanguageLevelTypeAware(['8.0' => 'object'], default: '')] $stylesheet): bool {}

    /**
 * <div id="xsltprocessor.transformtodoc" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToDoc</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToDoc</span> — <span class="dc-title">Transform to a document</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.transformtodoc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToDoc</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$returnClass</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Transforms the source node to a document (e.g. <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>) applying   the stylesheet given by the   <span class="function">{@link XSLTProcessor::importStylesheet()}</span> method.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtodoc-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> or libxml-compatible       object to be transformed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">returnClass</span></dt>     <dd>      <p class="para">       This optional parameter may be used so that       <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToDoc()</strong></span>       will return an object of the specified class.       That class should either extend or be the same class as <span class="parameter" style="color:#3A95FF">document</span>'s class.      </p>     </dd>       </dl>   </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.transformtodoc-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   The following errors are possible when using an expression that invokes   PHP callbacks.  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a PHP callback is invoked but there were no callbacks registered,     or if the named callback was not registered.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     the <span class="literal">php:function</span> syntax is used and the handler     name is not a string.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a non-DOM object was returned from a callback.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtodoc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The resulting document or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 changelog" id="xsltprocessor.transformtouri..changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Now throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if the callback       cannot be invoked, instead of emitting a warning.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       Added support for <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.transformtodoc-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5908">    <p><strong>示例 #1 Transforming to a <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// Load the XML source<br></span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToDoc</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wholeText</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hey!&nbsp;Welcome&nbsp;to&nbsp;Nicolas&nbsp;Eliaszewicz's&nbsp;sweet&nbsp;CD&nbsp;collection!</blockquote></div>    </div>   </div>   <div class="example" id="example-5909">    <p><strong>示例 #2 Transforming to a <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToDoc</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wholeText</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hey!&nbsp;Welcome&nbsp;to&nbsp;Nicolas&nbsp;Eliaszewicz's&nbsp;sweet&nbsp;CD&nbsp;collection!</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtodoc-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::transformToUri()} - Transform to URI</span></li>    <li><span class="function">{@link XSLTProcessor::transformToXml()} - Transform to XML</span></li>   </ul>   </div></div>
 * 
     * Transform to a DOMDocument
     * @link https://php.net/manual/zh/xsltprocessor.transformtodoc.php
     * @param object $document The DOMDocument or SimpleXMLElement or libxml-compatible object to be transformed.
     * @param string|null $returnClass
     * @return DOMDocument|false The resulting <b>DOMDocument</b> or <b>FALSE</b> on error.
     */
    #[TentativeType]
    public function transformToDoc(
        #[LanguageLevelTypeAware(['8.0' => 'object'], default: '')] $document,
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $returnClass = null
    ): object|false {}

    /**
 * <div id="xsltprocessor.transformtouri" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToUri</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToUri</span> — <span class="dc-title">Transform to URI</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.transformtouri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToUri</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$uri</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Transforms the source node to an URI applying the stylesheet given by the   <span class="function">{@link XSLTProcessor::importStylesheet()}</span> method.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtouri-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> or libxml-compatible       object to be transformed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>     <dd>      <p class="para">        The target URI for the transformation.      </p>     </dd>       </dl>   </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.transformtouri-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   The following errors are possible when using an expression that invokes   PHP callbacks.  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a PHP callback is invoked but there were no callbacks registered,     or if the named callback was not registered.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     the <span class="literal">php:function</span> syntax is used and the handler     name is not a string.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a non-DOM object was returned from a callback.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtouri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of bytes written or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if an error occurred.  </p> </div> <div class="refsect1 changelog" id="refsect1-xsltprocessor.transformtouri-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Now throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if the callback       cannot be invoked, instead of emitting a warning.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       Added support for <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.transformtouri-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5910">    <p><strong>示例 #1 Transforming to a HTML file</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// Load the XML source<br></span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/out.html'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-5911">    <p><strong>示例 #2 Transforming to a HTML file using <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/out.html'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtouri-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::transformToDoc()} - Transform to a document</span></li>    <li><span class="function">{@link XSLTProcessor::transformToXml()} - Transform to XML</span></li>   </ul>   </div></div>
 * 
     * Transform to URI
     * @link https://php.net/manual/zh/xsltprocessor.transformtouri.php
     * @param DOMDocument|SimpleXMLElement $document <p>
     * The document to transform.
     * </p>
     * @param string $uri <p>
     * The target URI for the transformation.
     * </p>
     * @return int the number of bytes written or <b>FALSE</b> if an error occurred.
     */
    #[TentativeType]
    public function transformToUri(
        #[LanguageLevelTypeAware(['8.0' => 'object'], default: '')] $document,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $uri
    ): int {}

    /**
 * <div id="xsltprocessor.transformtoxml" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToXml</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToXml</span> — <span class="dc-title">Transform to XML</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.transformtoxml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToXml</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">\$document</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Transforms the source node to a string applying the stylesheet given by   the <span class="function">{@link xsltprocessor::importStylesheet()}</span> method.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtoxml-parameters">  <h3 class="title">参数</h3><p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>, <span class="classname"><a href="https://php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> or libxml-compatible       object to be transformed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">returnClass</span></dt>     <dd>      <p class="para">       This optional parameter may be used so that       <span class="methodname" style="color:#CC7832">{@link XSLTProcessor::transformToDoc()}</span>       will return an object of the specified class.       That class should either extend or be the same class as <span class="parameter" style="color:#3A95FF">document</span>'s class.      </p>     </dd>       </dl>   </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.transformtoxml-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   The following errors are possible when using an expression that invokes   PHP callbacks.  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a PHP callback is invoked but there were no callbacks registered,     or if the named callback was not registered.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     the <span class="literal">php:function</span> syntax is used and the handler     name is not a string.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if     a non-DOM object was returned from a callback.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtoxml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The result of the transformation as a string or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> on error.  </p> </div> <div class="refsect1 changelog" id="refsect1-xsltprocessor.transformtoxml-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Now throws an <span class="exceptionname"><a href="https://php.net/manual/zh/class.error.php" class="exceptionname">Error</a></span> if the callback       cannot be invoked, instead of emitting a warning.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       Added support for <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.transformtoxml-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5912">    <p><strong>示例 #1 Transforming to a string</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// Load the XML source<br></span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hey!&nbsp;Welcome&nbsp;to&nbsp;Nicolas&nbsp;Eliaszewicz's&nbsp;sweet&nbsp;CD&nbsp;collection!<br><br><h1>Fight&nbsp;for&nbsp;your&nbsp;mind</h1><h2>by&nbsp;Ben&nbsp;Harper&nbsp;-&nbsp;1995</h2><hr><br><h1>Electric&nbsp;Ladyland</h1><h2>by&nbsp;Jimi&nbsp;Hendrix&nbsp;-&nbsp;1997</h2><hr></blockquote></div>    </div>   </div>   <div class="example" id="example-5913">    <p><strong>示例 #2 Transforming to a string using <span class="classname"><a href="https://php.net/manual/zh/class.dom-document.php" class="classname">Dom\Document</a></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$xml </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= </span><span style="color: #9876AA">Dom\XMLDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">createFromFile</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hey!&nbsp;Welcome&nbsp;to&nbsp;Nicolas&nbsp;Eliaszewicz's&nbsp;sweet&nbsp;CD&nbsp;collection!<br><br><h1>Fight&nbsp;for&nbsp;your&nbsp;mind</h1><h2>by&nbsp;Ben&nbsp;Harper&nbsp;-&nbsp;1995</h2><hr><br><h1>Electric&nbsp;Ladyland</h1><h2>by&nbsp;Jimi&nbsp;Hendrix&nbsp;-&nbsp;1997</h2><hr></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtoxml-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::transformToDoc()} - Transform to a document</span></li>    <li><span class="function">{@link XSLTProcessor::transformToUri()} - Transform to URI</span></li>   </ul>   </div></div>
 * 
     * Transform to XML
     * @link https://php.net/manual/zh/xsltprocessor.transformtoxml.php
     * @param DOMDocument|SimpleXMLElement $document <p>
     * The transformed document.
     * </p>
     * @return string|false|null The result of the transformation as a string or <b>FALSE</b> on error.
     */
    #[TentativeType]
    public function transformToXml(#[LanguageLevelTypeAware(['8.0' => 'object'], default: '')] $document): string|false|null {}

    /**
 * <div id="xsltprocessor.setparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setParameter</span> — <span class="dc-title">Set value for a parameter</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.setparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">\$options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Sets the value of one or more parameters to be used in subsequent    transformations with <span class="classname"><a href="https://php.net/manual/zh/class.xsltprocessor.php" class="classname">XSLTProcessor</a></span>. If the    parameter doesn't exist in the stylesheet it will be ignored.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.setparameter-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The new value of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       An array of  <span class="literal">name =&gt; value</span> pairs.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.setparameter-errors">  <h3 class="title">错误／异常</h3>  <p class="simpara">   Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if any of the arguments   contain null bytes.  </p> </div> <div class="refsect1 changelog" id="refsect1-xsltprocessor.setparameter-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Now throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if any of the       arguments contain null bytes instead of silently truncating.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       It is now possible to set a parameter value containing both single and       double quotes. Prior to PHP 8.4.0, this resulted in a warning.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.setparameter-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5906">    <p><strong>示例 #1 Changing the owner before the transformation</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$collections </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'Marc Rutkowski' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'marc'</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'Olivier Parmentier' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'olivier'<br></span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">\$collections </span><span style="color: #007700">as </span><span style="color: #9876AA">\$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">\$file</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// Load the XML source<br>    </span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br>    </span><span style="color: #9876AA">\$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection_' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.xml'</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setParameter</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #DD0000">'owner'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$name</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/' </span><span style="color: #007700">. </span><span style="color: #9876AA">\$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.html'</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.setparameter-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::getParameter()} - Get value of a parameter</span></li>    <li><span class="function">{@link XSLTProcessor::removeParameter()} - Remove parameter</span></li>   </ul>   </div></div>
 * 
     * Set value for a parameter
     * @link https://php.net/manual/zh/xsltprocessor.setparameter.php
     * @param string $namespace <p>
     * The namespace URI of the XSLT parameter.
     * </p>
     * @param string $name <p>
     * The local name of the XSLT parameter.
     * </p>
     * @param string $value <p>
     * The new value of the XSLT parameter.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function setParameter(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'array|string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $value = null
    ): bool {}

    /**
 * <div id="xsltprocessor.getparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::getParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::getParameter</span> — <span class="dc-title">Get value of a parameter</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.getparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::getParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Gets a parameter if previously set by   <span class="function">{@link XSLTProcessor::setParameter()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.getparameter-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.getparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the parameter (as a string), or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if it's not set.  </p> </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.getparameter-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::setParameter()} - Set value for a parameter</span></li>    <li><span class="function">{@link XSLTProcessor::removeParameter()} - Remove parameter</span></li>   </ul>   </div></div>
 * 
     * Get value of a parameter
     * @link https://php.net/manual/zh/xsltprocessor.getparameter.php
     * @param string $namespace <p>
     * The namespace URI of the XSLT parameter.
     * </p>
     * @param string $name <p>
     * The local name of the XSLT parameter.
     * </p>
     * @return string|false The value of the parameter (as a string), or <b>FALSE</b> if it's not set.
     */
    #[TentativeType]
    public function getParameter(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name
    ): string|false {}

    /**
 * <div id="xsltprocessor.removeparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::removeParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::removeParameter</span> — <span class="dc-title">Remove parameter</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.removeparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::removeParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Removes a parameter, if set. This will make the processor use the   default value for the parameter as specified in the stylesheet.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.removeparameter-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.removeparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.removeparameter-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link XSLTProcessor::setParameter()} - Set value for a parameter</span></li>    <li><span class="function">{@link XSLTProcessor::getParameter()} - Get value of a parameter</span></li>   </ul>   </div></div>
 * 
     * Remove parameter
     * @link https://php.net/manual/zh/xsltprocessor.removeparameter.php
     * @param string $namespace <p>
     * The namespace URI of the XSLT parameter.
     * </p>
     * @param string $name <p>
     * The local name of the XSLT parameter.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    #[TentativeType]
    public function removeParameter(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $namespace,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name
    ): bool {}

    /**
 * <div id="xsltprocessor.hasexsltsupport" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::hasExsltSupport</h1>  <p class="verinfo">(PHP 5 &gt;= 5.0.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::hasExsltSupport</span> — <span class="dc-title">Determine if PHP has EXSLT support</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.hasexsltsupport-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::hasExsltSupport</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   This method determines if PHP was built with the <a href="https://gitlab.gnome.org/GNOME/libxslt/-/wikis/home" class="link external">»&nbsp;EXSLT library</a>.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.hasexsltsupport-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.hasexsltsupport-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.hasexsltsupport-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5903">    <p><strong>示例 #1 Testing EXSLT support</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br>if (!</span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">hasExsltSupport</span><span style="color: #007700">()) {<br>    die(</span><span style="color: #DD0000">'EXSLT support not available'</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// do EXSLT stuff here ..<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>           </div>   </div>   </div></div>
 * 
     * Determine if PHP has EXSLT support
     * @link https://php.net/manual/zh/xsltprocessor.hasexsltsupport.php
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     * @since 5.0.4
     */
    #[TentativeType]
    public function hasExsltSupport(): bool {}

    /**
 * <div id="xsltprocessor.registerphpfunctions" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::registerPHPFunctions</h1>  <p class="verinfo">(PHP 5 &gt;= 5.0.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::registerPHPFunctions</span> — <span class="dc-title">Enables the ability to use PHP functions as XSLT functions</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.registerphpfunctions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::registerPHPFunctions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">null</a></span></span> <span class="parameter" style="color:#3A95FF">\$functions</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   This method enables the ability to use PHP functions as XSLT functions   within XSL stylesheets.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.registerphpfunctions-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">functions</span></dt>     <dd>      <p class="para">       Use this parameter to only allow certain functions to be called from        XSLT.      </p>      <p class="para">       This parameter can be one of the following:       a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> (a function name),       an indexed <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> of function names,       or an associative <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> with keys being the function name       and the associated value being the <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>.      </p>     </dd>       </dl>   </div> <div class="refsect1 errors" id="refsect1-xsltprocessor.registerphpfunctions-errors">  <h3 class="title">错误／异常</h3>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if     a callback name is not valid.    </span>   </li>   <li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">options</span> contains an invalid option. </span></li><li class="listitem"> <span class="simpara">  Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span> if  <span class="parameter" style="color:#3A95FF">overrideEncoding</span> is an unknown encoding. </span></li>   <li class="listitem">    <span class="simpara">     Throws a <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span> if     a given callback is not callable.    </span>   </li>  </ul> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.registerphpfunctions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 changelog" id="refsect1-xsltprocessor.registerphpfunctions-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.4.0</td>      <td>       Invalid callback names now throws a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.valueerror.php" class="exceptionname">ValueError</a></span>.       Passing a non-callable entry now throws a       <span class="exceptionname"><a href="https://php.net/manual/zh/class.typeerror.php" class="exceptionname">TypeError</a></span>.      </td>     </tr>     <tr>      <td>8.4.0</td>      <td>       It is now possible to use <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>s for callbacks       when using <span class="parameter" style="color:#3A95FF">functions</span> with <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>       entries.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.registerphpfunctions-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5905">    <p><strong>示例 #1 Simple PHP Function call from a stylesheet</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$xml </span><span style="color: #007700">= &lt;&lt;&lt;EOB<br></span><span style="color: #DD0000">&lt;allusers&gt;<br> &lt;user&gt;<br>  &lt;uid&gt;bob&lt;/uid&gt;<br> &lt;/user&gt;<br> &lt;user&gt;<br>  &lt;uid&gt;joe&lt;/uid&gt;<br> &lt;/user&gt;<br>&lt;/allusers&gt;<br></span><span style="color: #007700">EOB;<br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= &lt;&lt;&lt;EOB<br></span><span style="color: #DD0000">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;xsl:stylesheet version="1.0" <br>     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"<br>     xmlns:php="http://php.net/xsl"&gt;<br>&lt;xsl:output method="html" encoding="utf-8" indent="yes"/&gt;<br> &lt;xsl:template match="allusers"&gt;<br>  &lt;html&gt;&lt;body&gt;<br>    &lt;h2&gt;Users&lt;/h2&gt;<br>    &lt;table&gt;<br>    &lt;xsl:for-each select="user"&gt;<br>      &lt;tr&gt;&lt;td&gt;<br>        &lt;xsl:value-of<br>             select="php:function('ucfirst',string(uid))"/&gt;<br>      &lt;/td&gt;&lt;/tr&gt;<br>    &lt;/xsl:for-each&gt;<br>    &lt;/table&gt;<br>  &lt;/body&gt;&lt;/html&gt;<br> &lt;/xsl:template&gt;<br>&lt;/xsl:stylesheet&gt;<br></span><span style="color: #007700">EOB;<br></span><span style="color: #9876AA">\$xmldoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$xmldoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$xsldoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$xsldoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPHPFunctions</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsldoc</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToXML</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xmldoc</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div></div>    </div>   </div> <div class="refsect1 seealso" id="refsect1-xsltprocessor.registerphpfunctions-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link DOMXPath::registerPhpFunctions()} - Register PHP functions as XPath functions</span></li>  </ul> </div></div>
 * 
     * Enables the ability to use PHP functions as XSLT functions
     * @link https://php.net/manual/zh/xsltprocessor.registerphpfunctions.php
     * @param array|string|null $functions [optional] <p>
     * Use this parameter to only allow certain functions to be called from
     * XSLT.
     * </p>
     * <p>
     * This parameter can be either a string (a function name) or an array of
     * functions.
     * </p>
     * @return void No value is returned.
     * @since 5.0.4
     */
    #[TentativeType]
    public function registerPHPFunctions(#[LanguageLevelTypeAware(['8.0' => 'array|string|null'], default: '')] $functions = null): void {}

    /**
 * <div id="xsltprocessor.setprofiling" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setProfiling</h1>  <p class="verinfo">(PHP &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setProfiling</span> — <span class="dc-title">Sets profiling output file</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.setprofiling-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setProfiling</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">\$filename</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Sets the file to output profiling information when processing    a stylesheet.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.setprofiling-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       Path to the file to dump profiling information.      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setprofiling-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-xsltprocessor.setprofiling-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-5907">    <p><strong>示例 #1 Example profiling output</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Load the XML source<br></span><span style="color: #9876AA">\$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Configure the transformer<br></span><span style="color: #9876AA">\$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setProfiling</span><span style="color: #007700">(</span><span style="color: #DD0000">'profiling.txt'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br><br></span><span style="color: #007700">echo </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">\$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToDoc</span><span style="color: #007700">(</span><span style="color: #9876AA">\$xml</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wholeText</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>     The above code will produce the following information      in the profiling file:    </p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mode&nbsp;&nbsp;Calls&nbsp;Tot&nbsp;100us&nbsp;Avg<br><br>&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</blockquote></div>    </div>   </div>   </div></div>
 * 
     * Sets profiling output file
     * @link https://php.net/manual/zh/xsltprocessor.setprofiling.php
     * @param string $filename <p>
     * Path to the file to dump profiling information.
     * </p>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.
     */
    public function setProfiling(#[LanguageLevelTypeAware(['8.0' => 'string|null'], default: '')] $filename) {}

    /**
 * <div id="xsltprocessor.setsecurityprefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setSecurityPrefs</h1>  <p class="verinfo">(PHP &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setSecurityPrefs</span> — <span class="dc-title">Set security preferences</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.setsecurityprefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setSecurityPrefs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$preferences</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Sets the security preferences.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.setsecurityprefs-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">preferences</span></dt>     <dd>      <p class="para">       The new security preferences. The following constants can be ORed:       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-read-file">XSL_SECPREF_READ_FILE</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-file">XSL_SECPREF_WRITE_FILE</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-create-directory">XSL_SECPREF_CREATE_DIRECTORY</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-read-network">XSL_SECPREF_READ_NETWORK</a></span></strong>,       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-network">XSL_SECPREF_WRITE_NETWORK</a></span></strong>. Alternatively,       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-none">XSL_SECPREF_NONE</a></span></strong> or       <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-default">XSL_SECPREF_DEFAULT</a></span></strong> can be passed.      </p>     </dd>       </dl>    </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setsecurityprefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the old security preferences.  </p> </div></div>
 * 
     * Set security preferences
     * @link https://php.net/manual/zh/xsltprocessor.setsecurityprefs.php
     * @param int $preferences
     * @return int
     * @since 5.4
     */
    #[TentativeType]
    public function setSecurityPrefs(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $preferences): int {}

    /**
 * <div id="xsltprocessor.getsecurityprefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::getSecurityPrefs</h1>  <p class="verinfo">(PHP &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::getSecurityPrefs</span> — <span class="dc-title">Get security preferences</span></p> </div> <div class="refsect1 description" id="refsect1-xsltprocessor.getsecurityprefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::getSecurityPrefs</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Gets the security preferences.  </p> </div> <div class="refsect1 parameters" id="refsect1-xsltprocessor.getsecurityprefs-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-xsltprocessor.getsecurityprefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A bitmask consisting of <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-read-file">XSL_SECPREF_READ_FILE</a></span></strong>,   <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-file">XSL_SECPREF_WRITE_FILE</a></span></strong>,   <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-create-directory">XSL_SECPREF_CREATE_DIRECTORY</a></span></strong>,   <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-read-network">XSL_SECPREF_READ_NETWORK</a></span></strong>,   <strong><span><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-network">XSL_SECPREF_WRITE_NETWORK</a></span></strong>.  </p> </div></div>
 * 
     * Get security preferences
     * @link https://php.net/manual/zh/xsltprocessor.getsecurityprefs.php
     * @return int
     * @since 5.4
     */
    #[TentativeType]
    public function getSecurityPrefs(): int {}
}
/**
 * <span class="simpara">    </span>
 */
define('XSL_CLONE_AUTO', 0);
/**
 * <span class="simpara">    </span>
 */
define('XSL_CLONE_NEVER', -1);
/**
 * <span class="simpara">    </span>
 */
define('XSL_CLONE_ALWAYS', 1);

/**
 * <span class="simpara">Deactivate all security restrictions.    </span>
 */
define('XSL_SECPREF_NONE', 0);
/**
 * <span class="simpara">     Disallows reading files.    </span>
 */
define('XSL_SECPREF_READ_FILE', 2);
/**
 * <span class="simpara">     Disallows writing files.    </span>
 */
define('XSL_SECPREF_WRITE_FILE', 4);
/**
 * <span class="simpara">     Disallows creating directories.    </span>
 */
define('XSL_SECPREF_CREATE_DIRECTORY', 8);
/**
 * <span class="simpara">     Disallows reading network files.    </span>
 */
define('XSL_SECPREF_READ_NETWORK', 16);
/**
 * <span class="simpara">     Disallows writing network files.    </span>
 */
define('XSL_SECPREF_WRITE_NETWORK', 32);
/**
 * <span class="simpara">     Disallows all write access, i.e. a bitmask of     <strong><code><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-network">XSL_SECPREF_WRITE_NETWORK</a></code></strong> |     <strong><code><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-create-directory">XSL_SECPREF_CREATE_DIRECTORY</a></code></strong> |     <strong><code><a href="https://php.net/manual/zh/xsl.constants.php#constant.xsl-secpref-write-file">XSL_SECPREF_WRITE_FILE</a></code></strong>.    </span>
 */
define('XSL_SECPREF_DEFAULT', 44);

/**
 * <span class="simpara">     libxslt version like 10117.    </span>
 * 
 * libxslt version like 10117. Available as of PHP 5.1.2.
 * @link https://php.net/manual/zh/xsl.constants.php
 */
define('LIBXSLT_VERSION', 10128);

/**
 * <span class="simpara">     libxslt version like 1.1.17.    </span>
 * 
 * libxslt version like 1.1.17. Available as of PHP 5.1.2.
 * @link https://php.net/manual/zh/xsl.constants.php
 */
define('LIBXSLT_DOTTED_VERSION', "1.1.28");

/**
 * <span class="simpara">     libexslt version like 813.    </span>
 * 
 * libexslt version like 813. Available as of PHP 5.1.2.
 * @link https://php.net/manual/zh/xsl.constants.php
 */
define('LIBEXSLT_VERSION', 817);

/**
 * <span class="simpara">     libexslt version like 1.1.17.    </span>
 * 
 * libexslt version like 1.1.17. Available as of PHP 5.1.2.
 * @link https://php.net/manual/zh/xsl.constants.php
 */
define('LIBEXSLT_DOTTED_VERSION', "1.1.28");

// End of xsl v.0.1
