<?php

// Start of session v.
use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;

/**
* <div id="function.session-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_name</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_name</span> — <span class="dc-title">读取/设置会话名称</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_name()</strong></span> 函数返回当前会话名称。   如果指定 <span class="parameter" style="color:#3A95FF">name</span> 参数，   <span class="function"><strong>session_name()</strong></span> 函数会更新会话名称，   并返回 <em>原来的</em> 会话名称。  </p>  <p class="para">   如果使用 <span class="parameter" style="color:#3A95FF">name</span> 指定了新字符串作为会话 cookie 的名字，   <span class="function"><strong>session_name()</strong></span> 函数会修改 HTTP 响应中的 cookie   （如果启用了 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-trans-sid" class="link">session.use_trans_sid</a>，还会输出会话 cookie 的内容）。   一旦在 HTTP 响应中发送了 cookie 的内容之后，   调用 <span class="function"><strong>session_name()</strong></span> 函数会产生 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong>。   所以，一定要在调用 <span class="function">{@link session_start()}</span> 函数之前   调用此函数。  </p>  <p class="para">   请求开始的时候，会话名称会被重置并且存储到   <span class="literal">session.name</span> 配置项。   因此，要想设置会话名称，那么对于每个请求，都需要在   调用 <span class="function">{@link session_start()}</span> 函数   之前调用 <span class="function"><strong>session_name()</strong></span> 函数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-name-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       用在 cookie 或者 URL 中的会话名称，       例如：<span class="literal">PHPSESSID</span>。       只能使用字母和数字作为会话名称，建议尽可能的短一些，       并且是望文知意的名字（对于启用了 cookie 警告的用户来说，方便其判断是否要允许此 cookie）。       如果指定了 <span class="parameter" style="color:#3A95FF">name</span> 且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，       那么当前会话也会使用指定值作为名称。      </p>      <p class="para">       </p><div class="warning"><strong class="warning">警告</strong>        <p class="para">         会话名称至少需要一个字母，不能全部都使用数字，         否则，每次都会生成一个新的会话 ID。        </p>       </div>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回当前会话名称。如果指定 <span class="parameter" style="color:#3A95FF">name</span> 参数，那么此函数会更新会话名称，并且   返回 <em>原来的</em> 会话名称， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-name-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">name</span> 现在可以为 null。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <span class="function"><strong>session_name()</strong></span> 函数会检查会话状态，        之前的版本仅仅检查 cookie 状态。        所以，旧版本的 PHP 允许你在调用 <span class="function">{@link session_start()}</span>        函数之后再调用 <span class="function"><strong>session_name()</strong></span> 函数，        新版本的 PHP 不再允许这样做了。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.session-name-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4981">    <p><strong>示例 #1 <span class="function"><strong>session_name()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// set the session name to WebsiteID <br><br></span><span style="color: #9876AA">$previous_name </span><span style="color: #007700">= </span><span style="color: #9876AA">session_name</span><span style="color: #007700">(</span><span style="color: #DD0000">"WebsiteID"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #DD0000">"The previous session name was </span><span style="color: #9876AA">$previous_name</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-name-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.name" class="link">session.name</a>      配置指示    </li>   </ul>   </div></div>
*
 * Get and/or set the current session name.<br/>
 * Before 7.2.0 checked cookie status and since 7.2.0 checks both cookie and session status to avoid PHP crash.
 * @link https://php.net/manual/zh/function.session-name.php
 * @param string|null $name [optional] <p>
 * The session name references the name of the session, which is
 * used in cookies and URLs (e.g. PHPSESSID). It
 * should contain only alphanumeric characters; it should be short and
 * descriptive (i.e. for users with enabled cookie warnings).
 * If <i>name</i> is specified, the name of the current
 * session is changed to its value.
 * </p>
 * <p>
 * <p>
 * The session name can't consist of digits only, at least one letter
 * must be present. Otherwise a new session id is generated every time.
 * </p>
 * </p>
 * @return string|false the name of the current session.
 
#[LanguageLevelTypeAware(['8.0' => 'string|false'], default: 'string')]
*/
function session_name(#[LanguageLevelTypeAware(['8.0' => 'null|string'], default: 'string')] $name) {}

/**
* <div id="function.session-module-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_module_name</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_module_name</span> — <span class="dc-title">获取/设置会话模块名称</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-module-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_module_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$module</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_module_name()</strong></span>    获取或设置会话模块名称，也被称做：<a href="https://php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-module-name-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">module</span></dt>     <dd>      <p class="para">       如果指定 <span class="parameter" style="color:#3A95FF">module</span> 参数并且不是 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，       则使用指定值作为会话模块。       禁止传入 <span class="literal">"user"</span> 作为此参数的值，       请使用 <span class="function">{@link session_set_save_handler()}</span> 来设置用户自定义的会话处理器。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-module-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回当前所用的会话模块名称,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-module-name-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">module</span> 现在可以为空。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       不允许设置模块名称为 <span class="literal">"user"</span>。        在之前的版本中，如果设置为 "user"，那么会被静默的忽略到。      </td>     </tr>    </tbody>     </table> </div></div>
*
 * Get and/or set the current session module.<br/>
 * Since 7.2.0 it is forbidden to set the module name to "user".
 * @link https://php.net/manual/zh/function.session-module-name.php
 * @param string|null $module [optional] <p>
 * If <i>module</i> is specified, that module will be
 * used instead.
 * </p>
 * @return string|false the name of the current session module.
 
#[LanguageLevelTypeAware(['8.0' => 'string|false'], default: 'string')]
*/
function session_module_name(#[LanguageLevelTypeAware(['8.0' => 'null|string'], default: 'string')] $module) {}

/**
* <div id="function.session-save-path" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_save_path</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_save_path</span> — <span class="dc-title">读取/设置当前会话的保存路径</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-save-path-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_save_path</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$path</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_save_path()</strong></span>    返回当前会话的保存路径。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-save-path-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       指定会话数据保存的路径。如果已经指定且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，保存数据的路径将会改变。       必须在调用 <span class="function">{@link session_start()}</span> 函数之前调用       <span class="function"><strong>session_save_path()</strong></span> 函数。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         在某些操作系统上，建议使用可以高效处理         大量小尺寸文件的文件系统上的路径来保存会话数据。        </p>       </blockquote>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-save-path-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回保存会话数据的路径， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-save-path-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">path</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.session-save-path-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.save-path" class="link">session.save_path</a>     配置指令。    </li>   </ul>   </div></div>
*
 * Get and/or set the current session save path
 * @link https://php.net/manual/zh/function.session-save-path.php
 * @param string|null $path [optional] <p>
 * Session data path. If specified, the path to which data is saved will
 * be changed. <b>session_save_path</b> needs to be called
 * before <b>session_start</b> for that purpose.
 * </p>
 * <p>
 * <p>
 * On some operating systems, you may want to specify a path on a
 * filesystem that handles lots of small files efficiently. For example,
 * on Linux, reiserfs may provide better performance than ext2fs.
 * </p>
 * </p>
 * @return string|false the path of the current directory used for data storage.
 
#[LanguageLevelTypeAware(['8.0' => 'string|false'], default: 'string')]
*/
function session_save_path(#[LanguageLevelTypeAware(['8.0' => 'null|string'], default: 'string')] $path) {}

/**
* <div id="function.session-id" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_id</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_id</span> — <span class="dc-title">获取/设置当前会话 ID</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-id-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$id</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_id()</strong></span> 可以用来获取/设置   当前会话 ID。  </p>  <p class="para">   为了能够将会话 ID 很方便的附加到 URL 之后，   你可以使用常量 <strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.sid">SID</a></span></strong>   获取以字符串格式表达的会话名称和 ID。   请参考 <a href="https://php.net/manual/zh/ref.session.php" class="link">会话处理</a>。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-id-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">id</span></dt>      <dd>       <p class="para">        如果指定了 <span class="parameter" style="color:#3A95FF">id</span> 且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，        则使用指定值作为会话 ID。        必须在调用 <span class="function">{@link session_start()}</span> 函数之前调用         <span class="function"><strong>session_id()</strong></span> 函数。        不同的会话处理程序对于会话 ID 中可以使用的字符有不同的限制。        例如文件会话处理程序仅允许会话 ID 中使用以下字符：<span class="literal">[a-zA-Z0-9,-]</span>       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <span class="simpara">         如果使用 cookie 方式传送会话 ID，并且指定了 <span class="parameter" style="color:#3A95FF">id</span> 参数，         在调用 <span class="function">{@link session_start()}</span>          之后都会向客户端发送新的 cookie，         无论当前的会话 ID 和新指定的会话 ID 是否相同。        </span>       </p></blockquote>      </dd>        </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-id-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>session_id()</strong></span> 返回当前会话ID。   如果当前没有会话，则返回空字符串（<span class="literal">""</span>）。失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-id-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">id</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.session-id-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_regenerate_id()} - 使用新生成的会话 ID 更新现有会话 ID</span></li>    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><span class="function">{@link session_set_save_handler()} - 设置用户自定义会话存储函数</span></li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a>    </li>   </ul>   </div></div>
*
 * Get and/or set the current session id
 * @link https://php.net/manual/zh/function.session-id.php
 * @param string|null $id [optional] <p>
 * If <i>id</i> is specified, it will replace the current
 * session id. <b>session_id</b> needs to be called before
 * <b>session_start</b> for that purpose. Depending on the
 * session handler, not all characters are allowed within the session id.
 * For example, the file session handler only allows characters in the
 * range a-z A-Z 0-9 , (comma) and - (minus)!
 * </p>
 * When using session cookies, specifying an <i>id</i>
 * for <b>session_id</b> will always send a new cookie
 * when <b>session_start</b> is called, regardless if the
 * current session id is identical to the one being set.
 * @return string|false <b>session_id</b> returns the session id for the current
 * session or the empty string ("") if there is no current
 * session (no current session id exists).
 
#[LanguageLevelTypeAware(['8.0' => 'string|false'], default: 'string')]
*/
function session_id(#[LanguageLevelTypeAware(['8.0' => 'null|string'], default: 'string')] $id) {}

/**
* <div id="function.session-regenerate-id" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_regenerate_id</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.2, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_regenerate_id</span> — <span class="dc-title">   使用新生成的会话 ID 更新现有会话 ID  </span></p> </div> <div class="refsect1 description" id="refsect1-function.session-regenerate-id-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_regenerate_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$delete_old_session</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_regenerate_id()</strong></span>    在不修改当前会话中数据的前提下使用新的 ID 替换原有会话 ID。  </p>  <p class="para">   如果启用了 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-trans-sid" class="link">session.use_trans_sid</a> 选项，   那么必须在调用 <span class="function"><strong>session_regenerate_id()</strong></span> 函数之后开始进行输出工作，   否则会导致使用原有的会话 ID。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    当前的 session_regenerate_id 并没有很好的处理在诸如移动数据网络和 WiFi 网络不稳定的场景。    因此，调用 session_regenerate_id 函数    可能会导致会话丢失。   </p>   <p class="para">    你不应该直接销毁旧的会话所关联的数据，    而是应该使用时间戳机制来控制对于已经失效的会话 ID 的访问。    否则，可能会在并发访问的场景下导致会话数据不一致、    会话丢失等情况，甚至可能引发客户端（浏览器）创建很多无用的会话 ID。    但是，另外一方面来讲，立即删除会话中的数据    可以防止会话劫持攻击。   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.session-regenerate-id-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">delete_old_session</span></dt>      <dd>       <p class="para">        是否删除原 ID 所关联的会话存储文件。        如果你需要避免会话并发访问冲突，那么不应该立即删除会话中的数据。        如果你需要防止会话劫持攻击，那么可以立即删除会话数据。       </p>      </dd>        </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-regenerate-id-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-regenerate-id-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4982">    <p><strong>示例 #1 A <span class="function"><strong>session_regenerate_id()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 注意：下列不是完整的代码，只是一个示例<br><br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 检查会话被销毁的时间戳<br></span><span style="color: #007700">if (isset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">])<br>    &amp;&amp; </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">] &lt; </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">300</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">// 通常不会发生这种情况。如果发生，那么可能是由于不稳定的网络状况或者被攻击导致的<br>    // 移除用户会话中的认证信息<br>    </span><span style="color: #9876AA">remove_all_authentication_flag_from_active_sessions</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'userid'</span><span style="color: #007700">]);<br>    throw(new </span><span style="color: #9876AA">DestroyedSessionAccessException</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">$old_sessionid </span><span style="color: #007700">= </span><span style="color: #9876AA">session_id</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 设置会话销毁时间戳<br></span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">] = </span><span style="color: #9876AA">time</span><span style="color: #007700">(); </span><span style="color: #FF8000">// session_regenerate_id() 保存旧会话数据<br><br>// 如果直接调用 session_regenerate_id() 函数可能会导致会话丢失的情况，<br>// 参见下面的示例<br></span><span style="color: #9876AA">session_regenerate_id</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 新创建的会话不需要时间戳<br></span><span style="color: #007700">unset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">]);<br><br></span><span style="color: #9876AA">$new_sessionid </span><span style="color: #007700">= </span><span style="color: #9876AA">session_id</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">"Old Session: </span><span style="color: #9876AA">$old_sessionid</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"New Session: </span><span style="color: #9876AA">$new_sessionid</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>      <p class="para">   当前的会话模块未能很好的处理在网络不稳定的时候导致会话丢失的场景。   你需要自行管理会话 ID 避免调用 session_regenerate_id 导致会话丢失。  </p>    <p class="para">   </p><div class="example" id="example-4983">    <p><strong>示例 #2 Avoiding lost session by <span class="function"><strong>session_regenerate_id()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 注意：下列不是完整的代码，只是一个示例<br>// my_session_start() 和 my_session_regenerate_id()<br>// 函数可以避免在网络不稳定的情况下导致会话丢失的问题。<br>// 并且还可以避免用户会话被攻击者利用<br><br></span><span style="color: #007700">function </span><span style="color: #9876AA">my_session_start</span><span style="color: #007700">() {<br>    </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>    if (isset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">])) {<br>       if (</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">] &lt; </span><span style="color: #9876AA">time</span><span style="color: #007700">()-</span><span style="color: #9876AA">300</span><span style="color: #007700">) {<br>           </span><span style="color: #FF8000">// 通常不会发生这种情况。如果发生，那么可能是由于不稳定的网络状况或者被攻击导致的<br>           // 移除用户会话中的认证信息<br>           </span><span style="color: #9876AA">remove_all_authentication_flag_from_active_sessions</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'userid'</span><span style="color: #007700">]);<br>           throw(new </span><span style="color: #9876AA">DestroyedSessionAccessException</span><span style="color: #007700">);<br>       }<br>       if (isset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'new_session_id'</span><span style="color: #007700">])) {<br>           </span><span style="color: #FF8000">// 尚未完全过期，可能是由于网络不稳定引起的。<br>           // 尝试再次设置正确的会话 ID cookie。<br>           // 注意：如果你需要移除认证标记，那么不要尝试再次设置会话 ID。<br>           </span><span style="color: #9876AA">session_commit</span><span style="color: #007700">();<br>           </span><span style="color: #9876AA">session_id</span><span style="color: #007700">(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'new_session_id'</span><span style="color: #007700">]);<br>           </span><span style="color: #FF8000">// 现在有了新的会话 ID 了。<br>           </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>           return;<br>       }<br>   }<br>}<br><br>function </span><span style="color: #9876AA">my_session_regenerate_id</span><span style="color: #007700">() {<br>    </span><span style="color: #FF8000">// 如果由于不稳定的网络导致没有创建会话 ID，<br>    // 那么就创建一个<br>    </span><span style="color: #9876AA">$new_session_id </span><span style="color: #007700">= </span><span style="color: #9876AA">session_create_id</span><span style="color: #007700">();<br>    </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'new_session_id'</span><span style="color: #007700">] = </span><span style="color: #9876AA">$new_session_id</span><span style="color: #007700">;<br>    <br>    </span><span style="color: #FF8000">// 设置销毁时间戳<br>    </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">] = </span><span style="color: #9876AA">time</span><span style="color: #007700">();<br>    <br>    </span><span style="color: #FF8000">// 保存并关闭会话<br>    </span><span style="color: #9876AA">session_commit</span><span style="color: #007700">();<br><br>    </span><span style="color: #FF8000">// 使用新的会话 ID 开始会话<br>    </span><span style="color: #9876AA">session_id</span><span style="color: #007700">(</span><span style="color: #9876AA">$new_session_id</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.use_strict_mode'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>    </span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.use_strict_mode'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br>    <br>    </span><span style="color: #FF8000">// 新的会话不需要这 2 个数据了<br>    </span><span style="color: #007700">unset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'destroyed'</span><span style="color: #007700">]);<br>    unset(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'new_session_id'</span><span style="color: #007700">]);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>     </div> <div class="refsect1 seealso" id="refsect1-function.session-regenerate-id-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_id()} - 获取/设置当前会话 ID</span></li>    <li><span class="function">{@link session_create_id()} - Create new session id</span></li>    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><span class="function">{@link session_destroy()} - 销毁一个会话中的全部数据</span></li>    <li><span class="function">{@link session_reset()} - Re-initialize session array with original values</span></li>    <li><span class="function">{@link session_name()} - 读取/设置会话名称</span></li>   </ul>   </div></div>
*
 * Update the current session id with a newly generated one
 * @link https://php.net/manual/zh/function.session-regenerate-id.php
 * @param bool $delete_old_session [optional] <p>
 * Whether to delete the old associated session file or not.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function session_regenerate_id(bool $delete_old_session = false): bool {}

/**
* <div id="function.session-register-shutdown" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_register_shutdown</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_register_shutdown</span> — <span class="dc-title">关闭会话</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-register-shutdown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_register_shutdown</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   将 <span class="function">{@link session_write_close()}</span> 函数注册为关闭会话的函数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-register-shutdown-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-register-shutdown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <div class="refsect1 errors" id="refsect1-function.session-register-shutdown-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果函数调用失败，触发 <strong><span><a href="https://php.net/manual/zh/errorfunc.constants.php#constant.e-warning">E_WARNING</a></span></strong> 级别的错误。  </p> </div></div>
*
 * PHP > 5.4.0 <br/>
 * Session shutdown function
 * @link https://secure.php.net/manual/en/function.session-register-shutdown.php
 * @return void
 
*/
function session_register_shutdown(): void {}

/**
* <div id="function.session-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_decode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_decode</span> — <span class="dc-title">解码会话数据</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_decode()</strong></span> 对 <span class="parameter" style="color:#3A95FF">$data</span>   参数中的已经序列化的会话数据进行解码，   并且使用解码后的数据填充 $_SESSION 超级全局变量。  </p>  <p class="para">   请注意，这里的反序列化方法不同于 <span class="function">{@link unserialize()}</span> 函数。   序列化方法是 PHP 内置的，并且可以通过   <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a> 配置项进行修改。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-decode-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       编码后的数据      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-function.session-decode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_encode()} - 将当前会话数据编码为字符串</span></li>    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a></li>   </ul>   </div></div>
*
 * Decodes session data from a string
 * @link https://php.net/manual/zh/function.session-decode.php
 * @param string $data <p>
 * The encoded data to be stored.
 * </p>
 * @return bool true on success or false on failure.
 
*/
function session_decode(string $data): bool {}

/**
 * Register one or more global variables with the current session
 * @link https://php.net/manual/en/function.session-register.php
 * @param mixed $name <p>
 * A string holding the name of a variable or an array consisting of
 * variable names or other arrays.
 * </p>
 * @param mixed ...$_ [optional]
 * @return bool true on success or false on failure.
 * @removed 5.4
 */
#[Deprecated(since: '5.3')]
function session_register(mixed $name, ...$_): bool {}

/**
 * Unregister a global variable from the current session
 * @link https://php.net/manual/en/function.session-unregister.php
 * @param string $name <p>
 * The variable name.
 * </p>
 * @return bool true on success or false on failure.
 * @removed 5.4
 */
#[Deprecated(since: '5.3')]
function session_unregister(string $name): bool {}

/**
 * Find out whether a global variable is registered in a session
 * @link https://php.net/manual/en/function.session-is-registered.php
 * @param string $name <p>
 * The variable name.
 * </p>
 * @return bool <b>session_is_registered</b> returns true if there is a
 * global variable with the name <i>name</i> registered in
 * the current session, false otherwise.
 * @removed 5.4
 */
#[Deprecated(since: '5.3')]
function session_is_registered(string $name): bool {}

/**
* <div id="function.session-encode" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_encode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_encode</span> — <span class="dc-title">将当前会话数据编码为字符串</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-encode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_encode</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_encode()</strong></span>   返回一个序列化后的字符串，包含被编码的、储存于 $_SESSION 超全局变量中的当前会话数据。  </p>  <p class="para">   默认情况下，PHP 内部使用的序列方法和 <span class="function">{@link serialize()}</span> 是不一样的。   该序列方法通过 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a> 来设置。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-encode-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-encode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回当前会话编码后的内容， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 notes" id="refsect1-function.session-encode-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    在调用 <span class="function"><strong>session_encode()</strong></span> 之前必须先调用 <span class="function">{@link session_start()}</span>。   </p>  </div> </div>   <div class="refsect1 seealso" id="refsect1-function.session-encode-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_decode()} - 解码会话数据</span></li>    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a></li>   </ul>   </div></div>
*
 * Encodes the current session data as a string
 * @link https://php.net/manual/zh/function.session-encode.php
 * @return string|false the contents of the current session encoded.
 
#[LanguageLevelTypeAware(["8.0" => "string|false"], default: "string")]
*/
function session_encode() {}

/**
* <div id="function.session-start" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_start</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_start</span> — <span class="dc-title">启动新会话或者重用现有会话</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-start-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_start</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = []</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_start()</strong></span> 会创建新会话或者重用现有会话。   如果通过 GET 或者 POST 方式，或者使用 cookie 提交了会话 ID，   则会重用现有会话。  </p>  <p class="para">   当会话自动开始或者通过 <span class="function"><strong>session_start()</strong></span> 手动开始的时候，   PHP 内部会调用会话处理程序的 open 和 read 回调函数。   会话处理程序可能是 PHP 默认的，   也可能是扩展提供的（SQLite 或者 Memcached 扩展），   也可能是通过 <span class="function">{@link session_set_save_handler()}</span> 设定的用户自定义会话处理程序。   通过 read 回调函数返回的现有会话数据（使用特殊的序列化格式存储），   PHP 会自动反序列化数据并且填充 $_SESSION 超级全局变量。  </p>  <p class="para">   要想使用命名会话，请在调用 <span class="function"><strong>session_start()</strong></span> 函数   之前调用 <span class="function">{@link session_name()}</span> 函数。  </p>  <p class="para">   如果启用了 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-trans-sid" class="link">session.use_trans_sid</a> 选项，   <span class="function"><strong>session_start()</strong></span> 函数会注册一个内部输出处理程序，   该输出处理程序完成 URL 重写的工作。  </p>  <p class="para">   如果用户联合使用 <span class="function">{@link ob_start()}</span>    和 <span class="literal">ob_gzhandler</span> 函数，   那么函数的调用顺序会影响输出结果。   例如，必须在开始会话之前调用 <span class="literal">ob_gzhandler</span> 函数完成注册。  </p> </div>  <div class="refsect1 parameters" id="refsect1-function.session-start-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">      此参数是一个关联数组，如果提供，那么会用其中的项目覆盖 <a href="https://php.net/manual/zh/session.configuration.php" class="link">会话配置指示</a> 中的配置项。此数组中的键无需包含 <span class="literal">session.</span> 前缀。     </p>     <p class="para">      除了常规的会话配置指示项，      还可以在此数组中包含 <span class="literal">read_and_close</span>      选项。如果将此选项的值设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，      那么会话文件会在读取完毕之后马上关闭，      因此，可以在会话数据没有变动的时候，避免不必要的文件锁。     </p>    </dd>     </dl> </div>  <div class="refsect1 returnvalues" id="refsect1-function.session-start-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功开始会话返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> ，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-start-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        当 <span class="function"><strong>session_start()</strong></span> 执行失败，        无法开始一个会话的时候，会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，        并且不会初始化超级变量 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var>。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 examples" id="refsect1-function.session-start-examples">  <h3 class="title">示例</h3>  <div class="refsect2 unknown-35" id="refsect2-function.session-start-unknown-35">  <h4 class="title">基本的会话示例</h4>  <p class="para">   </p><div class="example" id="example-4985">    <p><strong>示例 #1 <var class="filename">page1.php</var></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// page1.php<br><br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">'Welcome to page #1'</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'favcolor'</span><span style="color: #007700">] = </span><span style="color: #DD0000">'green'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'animal'</span><span style="color: #007700">]   = </span><span style="color: #DD0000">'cat'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'time'</span><span style="color: #007700">]     = </span><span style="color: #9876AA">time</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 如果使用 cookie 方式传送会话 ID<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'&lt;br /&gt;&lt;a href="page2.php"&gt;page 2&lt;/a&gt;'</span><span style="color: #007700">;<br><br></span><span style="color: #FF8000">// 如果不是使用 cookie 方式传送会话 ID，则使用 URL 改写的方式传送会话 ID<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'&lt;br /&gt;&lt;a href="page2.php?' </span><span style="color: #007700">. </span><span style="color: #9876AA">SID </span><span style="color: #007700">. </span><span style="color: #DD0000">'"&gt;page 2&lt;/a&gt;'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>    <p class="para">   请求 <var class="filename">page1.php</var> 页面之后，   第二个页面 <var class="filename">page2.php</var>    会包含会话数据。   请查阅 <a href="https://php.net/manual/zh/ref.session.php" class="link">会话参考</a>   获取更多关于 <a href="https://php.net/manual/zh/session.idpassing.php" class="link">会话 ID 传送</a>的信息，   在该参考页面中有关于常量 <strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.sid">SID</a></span></strong> 的详细说明。  </p>  <p class="para">   </p><div class="example" id="example-4986">    <p><strong>示例 #2 <var class="filename">page2.php</var></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// page2.php<br><br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">'Welcome to page #2&lt;br /&gt;'</span><span style="color: #007700">;<br><br>echo </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'favcolor'</span><span style="color: #007700">]; </span><span style="color: #FF8000">// green<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'animal'</span><span style="color: #007700">];   </span><span style="color: #FF8000">// cat<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'Y m d H:i:s'</span><span style="color: #007700">, </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'time'</span><span style="color: #007700">]);<br><br></span><span style="color: #FF8000">// 类似 page1.php 中的代码，你可能需要在这里处理使用 SID 的场景<br></span><span style="color: #007700">echo </span><span style="color: #DD0000">'&lt;br /&gt;&lt;a href="page1.php"&gt;page 1&lt;/a&gt;'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect2 unknown-38" id="refsect2-function.session-start-unknown-38">   <h4 class="title">调用 <span class="function"><strong>session_start()</strong></span> 的时候指定选项</h4>   <div class="example" id="example-4987">    <p><strong>示例 #3 覆盖 Cookie 超时时间设定</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 设置 cookie 的有效时间为 1 天<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">([<br>    </span><span style="color: #DD0000">'cookie_lifetime' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">86400</span><span style="color: #007700">,<br>]);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-4988">    <p><strong>示例 #4 读取会话之后立即关闭会话存储文件</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 如果确定不修改会话中的数据，<br>// 我们可以在会话文件读取完毕之后立即关闭它<br>// 来避免由于给会话文件加锁导致其他页面阻塞<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">([<br>    </span><span style="color: #DD0000">'cookie_lifetime' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">86400</span><span style="color: #007700">,<br>    </span><span style="color: #DD0000">'read_and_close'  </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">true</span><span style="color: #007700">,<br>]);</span></span></blockquote></div>    </div>   </div>  </div>   </div> <div class="refsect1 notes" id="refsect1-function.session-start-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    要使用基于 cookie 的会话，    必须在输出开始之前调用 <span class="function"><strong>session_start()</strong></span> 函数。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    建议使用 <a href="https://php.net/manual/zh/zlib.configuration.php#ini.zlib.output-compression" class="link">zlib.output_compression</a>    来替代 <span class="function">{@link ob_gzhandler()}</span>。   </p>  </blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    根据配置不同，本函数会发送几个 HTTP 响应头。    参考 <span class="function">{@link session_cache_limiter()}</span>    来自定义 HTTP 响应头。   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.session-start-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var></li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.auto-start" class="link">session.auto_start</a>     配置指示    </li>    <li><span class="function">{@link session_id()} - 获取/设置当前会话 ID</span></li>   </ul>   </div></div>
*
 * Initialize session data
 * @link https://php.net/manual/zh/function.session-start.php
 * @param array $options [optional] <p>If provided, this is an associative array of options that will override the currently set session configuration directives. The keys should not include the session. prefix.
 * In addition to the normal set of configuration directives, a read_and_close option may also be provided. If set to TRUE, this will result in the session being closed immediately after being read, thereby avoiding unnecessary locking if the session data won't be changed.</p>
 * @return bool This function returns true if a session was successfully started,
 * otherwise false.
 
*/
function session_start(#[PhpStormStubsElementAvailable(from: '7.0')] array $options = []): bool {}

/**
* <div id="function.session-create-id" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_create_id</h1>  <p class="verinfo">(PHP 7 &gt;= 7.1.0, PHP 8)</p><p class="refpurpose"><span class="refname">session_create_id</span> — <span class="dc-title">Create new session id</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-create-id-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_create_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$prefix</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_create_id()</strong></span> is used to create new   session id for the current session. It returns collision free   session id.  </p>  <p class="para">   If session is not active, collision check is omitted.  </p>  <p class="para">   Session ID is created according to php.ini settings.  </p>  <p class="para">   It is important to use the same user ID of your web server for GC   task script. Otherwise, you may have permission problems especially   with files save handler.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-create-id-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>      <dd>       <p class="para">        If <span class="parameter" style="color:#3A95FF">prefix</span> is specified, new session id        is prefixed by <span class="parameter" style="color:#3A95FF">prefix</span>. Not all        characters are allowed within the session id.  Characters in        the range <span class="literal">[a-zA-Z0-9,-]</span> are allowed. Maximum length is 256 characters.       </p>       </dd>        </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-create-id-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>session_create_id()</strong></span> returns new collision free   session id for the current session. If it is used without active   session, it omits collision check.   On failure, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> is returned.  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-create-id-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4977">    <p><strong>示例 #1 <span class="function"><strong>session_create_id()</strong></span> example with <span class="function">{@link session_regenerate_id()}</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// My session start function support timestamp management<br></span><span style="color: #007700">function </span><span style="color: #9876AA">my_session_start</span><span style="color: #007700">() {<br>    </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>    </span><span style="color: #FF8000">// Do not allow to use too old session ID<br>    </span><span style="color: #007700">if (!empty(</span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'deleted_time'</span><span style="color: #007700">]) &amp;&amp; </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'deleted_time'</span><span style="color: #007700">] &lt; </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">180</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">session_destroy</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>    }<br>}<br><br></span><span style="color: #FF8000">// My session regenerate id function<br></span><span style="color: #007700">function </span><span style="color: #9876AA">my_session_regenerate_id</span><span style="color: #007700">() {<br>    </span><span style="color: #FF8000">// Call session_create_id() while session is active to <br>    // make sure collision free.<br>    </span><span style="color: #007700">if (</span><span style="color: #9876AA">session_status</span><span style="color: #007700">() != </span><span style="color: #9876AA">PHP_SESSION_ACTIVE</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>    }<br>    </span><span style="color: #FF8000">// WARNING: Never use confidential strings for prefix!<br>    </span><span style="color: #9876AA">$newid </span><span style="color: #007700">= </span><span style="color: #9876AA">session_create_id</span><span style="color: #007700">(</span><span style="color: #DD0000">'myprefix-'</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">// Set deleted timestamp. Session data must not be deleted immediately for reasons.<br>    </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">'deleted_time'</span><span style="color: #007700">] = </span><span style="color: #9876AA">time</span><span style="color: #007700">();<br>    </span><span style="color: #FF8000">// Finish session<br>    </span><span style="color: #9876AA">session_commit</span><span style="color: #007700">();<br>    </span><span style="color: #FF8000">// Make sure to accept user defined session ID<br>    // NOTE: You must enable use_strict_mode for normal operations.<br>    </span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.use_strict_mode'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">// Set new custom session ID<br>    </span><span style="color: #9876AA">session_id</span><span style="color: #007700">(</span><span style="color: #9876AA">$newid</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">// Start with custom session ID<br>    </span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br>}<br><br></span><span style="color: #FF8000">// Make sure use_strict_mode is enabled.<br>// use_strict_mode is mandatory for security reasons.<br></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.use_strict_mode'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br></span><span style="color: #9876AA">my_session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Session ID must be regenerated when<br>//  - User logged in<br>//  - User logged out<br>//  - Certain period has passed<br></span><span style="color: #9876AA">my_session_regenerate_id</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Write useful codes<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-create-id-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_regenerate_id()} - 使用新生成的会话 ID 更新现有会话 ID</span></li>    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a></li>    <li><span class="methodname" style="color:#CC7832">{@link SessionHandler::create_sid()} - Return a new session ID</span></li>   </ul>   </div></div>
*
 * Create new session id
 * @link https://www.php.net/manual/en/function.session-create-id.php
 * @param string $prefix [optional] If prefix is specified, new session id is prefixed by prefix.
 * Not all characters are allowed within the session id.
 * Characters in the range a-z A-Z 0-9 , (comma) and - (minus) are allowed.
 * @return string|false new collision free session id for the current session.
 * If it is used without active session, it omits collision check.
 * @since 7.1
 
#[LanguageLevelTypeAware(["8.0" => "string|false"], default: "string")]
*/
function session_create_id(string $prefix = '') {}

/**
* <div id="function.session-gc" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_gc</h1>  <p class="verinfo">(PHP 7 &gt;= 7.1.0, PHP 8)</p><p class="refpurpose"><span class="refname">session_gc</span> — <span class="dc-title">Perform session data garbage collection</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-gc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_gc</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_gc()</strong></span> is used to perform session data   GC (garbage collection). PHP does probability based session GC by   default.  </p>  <p class="para">   Probability based GC works somewhat but it has few problems. 1) Low   traffic sites' session data may not be deleted within the preferred   duration. 2) High traffic sites' GC may be too frequent GC. 3) GC is   performed on the user's request and the user will experience a GC   delay.  </p>  <p class="para">   Therefore, it is recommended to execute GC periodically for   production systems using, e.g., "cron" for UNIX-like systems.   Make sure to disable probability based GC by setting    <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-probability" class="link">session.gc_probability</a>    to 0.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-gc-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-gc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong>session_gc()</strong></span> returns number of deleted session   data for success, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> for failure.  </p>  <p class="para">   Old save handlers do not return number of deleted session data, but    only success/failure flag. If this is the case, number of deleted   session data became 1 regardless of actually deleted data.  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-gc-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4979">    <p><strong>示例 #1 <span class="function"><strong>session_gc()</strong></span> example for task managers like cron</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Note: This script should be executed by the same user of web server process.<br><br>// Need active session to initialize session data storage access.<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Executes GC immediately<br></span><span style="color: #9876AA">session_gc</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// Clean up session ID created by session_gc()<br></span><span style="color: #9876AA">session_destroy</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   <div class="example" id="example-4980">    <p><strong>示例 #2 <span class="function"><strong>session_gc()</strong></span> example for user accessible script</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Note: session_gc() is recommended to be used by task manager script, but<br>// it may be used as follows.<br><br>// Used for last GC time check<br></span><span style="color: #9876AA">$gc_time </span><span style="color: #007700">= </span><span style="color: #DD0000">'/tmp/php_session_last_gc'</span><span style="color: #007700">;<br></span><span style="color: #9876AA">$gc_period </span><span style="color: #007700">= </span><span style="color: #9876AA">1800</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// Execute GC only when GC period elapsed. <br>// i.e. Calling session_gc() every request is waste of resources. <br></span><span style="color: #007700">if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$gc_time</span><span style="color: #007700">)) {<br>    if (</span><span style="color: #9876AA">filemtime</span><span style="color: #007700">(</span><span style="color: #9876AA">$gc_time</span><span style="color: #007700">) &lt; </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">$gc_period</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">session_gc</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">touch</span><span style="color: #007700">(</span><span style="color: #9876AA">$gc_time</span><span style="color: #007700">);<br>    }<br>} else {<br>    </span><span style="color: #9876AA">touch</span><span style="color: #007700">(</span><span style="color: #9876AA">$gc_time</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-gc-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><span class="function">{@link session_destroy()} - 销毁一个会话中的全部数据</span></li>    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-probability" class="link">session.gc_probability</a></li>   </ul>   </div></div>
*
 * Perform session data garbage collection
 * @return int|false number of deleted session data for success, false for failure.
 * @since 7.1
 
#[LanguageLevelTypeAware(["8.0" => "int|false"], default: "int")]
*/
function session_gc() {}

/**
* <div id="function.session-destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_destroy</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_destroy</span> — <span class="dc-title">销毁一个会话中的全部数据</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_destroy</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="simpara">   <span class="function"><strong>session_destroy()</strong></span> 销毁当前会话中的全部数据，   但是不会重置当前会话所关联的全局变量，   也不会重置会话 cookie。   如果需要再次使用会话变量，   必须重新调用 <span class="function">{@link session_start()}</span> 函数。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    通常情况下，在你的代码中不必调用 <span class="function"><strong>session_destroy()</strong></span> 函数，    可以直接清除 $_SESSION 数组中的数据来实现会话数据清理。   </span>  </p></blockquote>  <p class="para">   为了彻底销毁会话，必须同时重置会话 ID。   如果是通过 cookie 方式传送会话 ID 的，那么同时也需要   调用 <span class="function">{@link setcookie()}</span> 函数来   删除客户端的会话 cookie。  </p>  <p class="para">   当启用了 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a> 配置项的时候，你不需要删除过期会话 ID 对应的 cookie，   因为会话模块已经不再接受携带过期会话 ID 的 cookie 了，   然后它会生成一个新的会话 ID cookie。   建议所有的站点都启用 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a> 配置项。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    过早的删除会话中的数据可能会导致不可预期的结果。    例如，当存在从 JavaScript 或者 URL 链接过来的并发请求的时候，    某一个请求删除了会话中的数据，会导致其他的并发请求无法使用会话数据。   </p>   <p class="para">    虽然当前的会话处理模块不会接受为空的会话 ID，    但是由于客户端（浏览器）的处理方式，    立即删除会话中的数据可能会导致生成为空的会话 cookie，    进而导致客户端生成很多不必要的会话 ID cookie。   </p>   <p class="para">    为了避免这种情况的发生，你需要在 $_SESSION 中设置一个时间戳，    在这个时间戳之后的对于会话的访问都将被拒绝。    或者，确保你的应用中不存在并发请求。    这个规则同样适用于 <span class="function">{@link session_regenerate_id()}</span>。   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.session-destroy-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-destroy-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4978">    <p><strong>示例 #1 销毁会话数据以及 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// 初始化会话。<br>// 如果要使用会话，别忘了现在就调用：<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 重置会话中的所有变量<br></span><span style="color: #9876AA">$_SESSION </span><span style="color: #007700">= array();<br><br></span><span style="color: #FF8000">// 如果要清理的更彻底，那么同时删除会话 cookie<br>// 注意：这样不但销毁了会话中的数据，还同时销毁了会话本身<br></span><span style="color: #007700">if (</span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">"session.use_cookies"</span><span style="color: #007700">)) {<br>    </span><span style="color: #9876AA">$params </span><span style="color: #007700">= </span><span style="color: #9876AA">session_get_cookie_params</span><span style="color: #007700">();<br>    </span><span style="color: #9876AA">setcookie</span><span style="color: #007700">(</span><span style="color: #9876AA">session_name</span><span style="color: #007700">(), </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">42000</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">$params</span><span style="color: #007700">[</span><span style="color: #DD0000">"path"</span><span style="color: #007700">], </span><span style="color: #9876AA">$params</span><span style="color: #007700">[</span><span style="color: #DD0000">"domain"</span><span style="color: #007700">],<br>        </span><span style="color: #9876AA">$params</span><span style="color: #007700">[</span><span style="color: #DD0000">"secure"</span><span style="color: #007700">], </span><span style="color: #9876AA">$params</span><span style="color: #007700">[</span><span style="color: #DD0000">"httponly"</span><span style="color: #007700">]<br>    );<br>}<br><br></span><span style="color: #FF8000">// 最后，销毁会话<br></span><span style="color: #9876AA">session_destroy</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-destroy-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a></li>    <li><span class="function">{@link session_reset()} - Re-initialize session array with original values</span></li>    <li><span class="function">{@link session_regenerate_id()} - 使用新生成的会话 ID 更新现有会话 ID</span></li>    <li><span class="function">{@link unset()} - unset 指定变量</span></li>    <li><span class="function">{@link setcookie()} - 发送 Cookie</span></li>   </ul>   </div></div>
*
 * Destroys all data registered to a session
 * @link https://php.net/manual/zh/function.session-destroy.php
 * @return bool true on success or false on failure.
 
*/
function session_destroy(): bool {}

/**
* <div id="function.session-unset" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_unset</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_unset</span> — <span class="dc-title">释放所有的会话变量</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-unset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_unset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_unset()</strong></span> 会释放当前会话注册的所有会话变量。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-unset-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-unset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-unset-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.2.0</td>      <td>       此函数的返回类型现在是 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>。以前是 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 notes" id="refsect1-function.session-unset-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    如果使用的是 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var>，请使用 <span class="function">{@link unset()}</span> 去    注销会话变量，即 <span class="code">unset($_SESSION['varname']);</span>。   </p>  </blockquote>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    请不要使用 <span class="code">unset($_SESSION)</span> 来释放整个 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var>，    因为它将会禁用通过全局 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 去注册会话变量。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    <span class="function"><strong>session_unset()</strong></span> 的使用与 <span class="code">$_SESSION = []</span> 相同。   </p>  </blockquote>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    仅当 session 处于活动状态时，此函数才能起作用。如果 session 尚未启动或已经销毁，它将无法清除    <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 数组。即使 session 不活跃，请使用 <span class="code">$_SESSION = []</span>    来删除所有 session 变量。   </p>  </div> </div></div>
*
 * Free all session variables
 * @link https://php.net/manual/zh/function.session-unset.php
 * @return void|bool since 7.2.0 returns true on success or false on failure.
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_unset() {}

/**
* <div id="function.session-set-save-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_set_save_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_set_save_handler</span> — <span class="dc-title">设置用户自定义会话存储函数</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-set-save-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_set_save_handler</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$open</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$close</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$read</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$write</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$destroy</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$gc</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$create_sid</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$validate_sid</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$update_timestamp</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   可以使用下面的方式来注册自定义会话存储函数：  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>session_set_save_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">$sessionhandler</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$register_shutdown</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_set_save_handler()</strong></span> 设置用户自定义   会话存储函数。   如果想使用 PHP 内置的会话存储机制之外的方式，   可以使用本函数。   例如，可以自定义会话存储函数来将会话数据存储到数据库。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-set-save-handler-parameters">  <h3 class="title">参数</h3>  <p class="para">   本函数有 2 种原型：   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">sessionhandler</span></dt>     <dd>      <p class="para">       实现了       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="interfacename">SessionHandlerInterface</a></span>，       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionidinterface.php" class="interfacename">SessionIdInterface</a></span>（可选） 和/或       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionupdatetimestamphandlerinterface.php" class="interfacename">SessionUpdateTimestampHandlerInterface</a></span>       接口的对象，       例如 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandler.php" class="classname">SessionHandler</a></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">register_shutdown</span></dt>     <dd>      <p class="para">       将函数 <span class="function">{@link session_write_close()}</span> 注册为       <span class="function">{@link register_shutdown_function()}</span> 函数。      </p>     </dd>       </dl>   或者   <dl>         <dt><span class="parameter" style="color:#3A95FF">open(string $savePath, string $sessionName)</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">open</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$savePath</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       open 回调函数类似于类的构造函数，       在会话打开的时候会被调用。       这是自动开始会话或者通过调用 <span class="function">{@link session_start()}</span> 手动开始会话       之后第一个被调用的回调函数。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">close</span></dt>     <dd>      <p class="para">       close 回调函数类似于类的析构函数。       在 write 回调函数调用之后调用。       当调用 <span class="function">{@link session_write_close()}</span> 函数之后，也会调用 close 回调函数。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">read</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">read</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>            <p class="para">       如果会话中有数据，read 回调函数必须返回将会话数据编码（序列化）后的字符串。       如果会话中没有数据，read 回调函数返回空字符串。      </p>      <p class="para">       在自动开始会话或者通过调用       <span class="function">{@link session_start()}</span> 函数手动开始会话之后，PHP 内部调用 read 回调函数来获取会话数据。       在调用 read 之前，PHP 会调用 open 回调函数。      </p>      <p class="para">       read 回调返回的序列化之后的字符串格式必须与 <span class="parameter" style="color:#3A95FF">write</span> 回调函数保存数据时的格式完全一致。       PHP 会自动反序列化返回的字符串并填充 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 超级全局变量。       虽然数据看起来和 <span class="function">{@link serialize()}</span> 函数很相似，       但是需要提醒的是，它们是不同的。       请参考： <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">write</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">write</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       在会话保存数据时会调用 <span class="parameter" style="color:#3A95FF">write</span> 回调函数。       此回调函数接收当前会话 ID 以及 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 中数据序列化之后的字符串作为参数。       序列化会话数据的过程由 PHP 根据 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a> 设定值来完成。      </p>      <p class="para">       序列化后的数据将和会话 ID 关联在一起进行保存。       当调用 <span class="parameter" style="color:#3A95FF">read</span> 回调函数获取数据时，所返回的数据必须要和       传入 <span class="parameter" style="color:#3A95FF">write</span> 回调函数的数据完全保持一致。      </p>      <p class="para">       PHP 会在脚本执行完毕或调用 <span class="function">{@link session_write_close()}</span> 函数之后调用此回调函数。       注意，在调用完此回调函数之后，PHP 内部会调用 <span class="parameter" style="color:#3A95FF">close</span> 回调函数。       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         PHP 会在输出流写入完毕并且关闭之后         才调用 write 回调函数，         所以在 write 回调函数中的调试信息不会输出到浏览器中。         如果需要在 write 回调函数中使用调试输出，         建议将调试输出写入到文件。        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">destroy</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">destroy</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       当调用 <span class="function">{@link session_destroy()}</span> 函数，       或者调用  <span class="function">{@link session_regenerate_id()}</span> 函数并且设置 destroy 参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，       会调用此回调函数。此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">gc</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">gc</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$lifetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       为了清理会话中的旧数据，PHP 会不时的调用垃圾收集回调函数。       调用周期由 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-probability" class="link">session.gc_probability</a>        和 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-divisor" class="link">session.gc_divisor</a> 参数控制。       传入到此回调函数的 lifetime 参数由 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-maxlifetime" class="link">session.gc_maxlifetime</a> 设置。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>                <dt><span class="parameter" style="color:#3A95FF">create_sid</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">create_sid</span></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>            <p class="para">       需要新的会话 ID 时，执行此回调函数。       它被调用时不会传入参数，其返回值应该是一个字符串格式的、有效的 session ID。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">validate_sid</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">validate_sid</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       开启 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a> 后，       当启动一个 session 时，提供了 session ID 后会执行此回调。       参数 <span class="parameter" style="color:#3A95FF">key</span> 是待验证的 session ID。       如果该 ID 的 session 已经存在，则为有效 session ID。       成功时返回值应当为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">update_timestamp</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">update_timestamp</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$val</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       更新 session 时执行此回调。       参数 <span class="parameter" style="color:#3A95FF">key</span> 是 session ID；参数 <span class="parameter" style="color:#3A95FF">val</span> 是 session 的数据。       成功时返回值应当为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-set-save-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-set-save-handler-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4984">    <p><strong>示例 #1      自定义会话处理程序：完整代码请参见 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="classname">SessionHandlerInterface</a></span>。    </strong></p>    <div class="example-contents"><p>     这里仅列出了调用方式，完整代码请参见 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="classname">SessionHandlerInterface</a></span>。    </p></div>    <div class="example-contents"><p>     这里使用了 <span class="function"><strong>session_set_save_handler()</strong></span> 函数的 OOP 原型     并且使用第二个参数来注册 shutdown 函数。     当将对象注册为会话保存处理程序时，建议使用这种方式。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">MySessionHandler </span><span style="color: #007700">implements </span><span style="color: #9876AA">SessionHandlerInterface<br></span><span style="color: #007700">{<br>    </span><span style="color: #FF8000">// 在这里实现接口<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">$handler </span><span style="color: #007700">= new </span><span style="color: #9876AA">MySessionHandler</span><span style="color: #007700">();<br></span><span style="color: #9876AA">session_set_save_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$handler</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 现在可以使用 $_SESSION 保存以及获取数据了</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.session-set-save-handler-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    在对象销毁之后才会调用    <span class="parameter" style="color:#3A95FF">write</span> 和 <span class="parameter" style="color:#3A95FF">close</span> 回调函数，    所以，在这两个回调函数中不可以使用对象，也不可以抛出异常。    如果在函数中抛出异常，PHP 既不会捕获它，也不会跟踪它，    这样会导致程序异常终止。    但是对象析构函数可以使用会话。   </p>   <p class="para">    可以在析构函数中调用  <span class="function">{@link session_write_close()}</span>      函数来解决这个问题。    但是注册 shutdown 回调函数才是更加可靠的做法。   </p>  </div>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果会话在脚本结束后关闭，对于某些 SAPI 而言，当前工作目录可能已经被改变。    可以调用 <span class="function">{@link session_write_close()}</span>     函数在脚本执行结束之前关闭会话。   </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.session-set-save-handler-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a>     配置指示    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>     配置指示    </li>    <li><span class="function">{@link register_shutdown_function()} - 注册在关闭时执行的函数</span></li>    <li><span class="function">{@link session_register_shutdown()} - 关闭会话</span></li>    <li>     完整的实现请参考      <a href="https://github.com/php/php-src/blob/master/ext/session/tests/save_handler.inc" class="link external">» save_handler.inc</a>。    </li>   </ul>   </div></div>
*
 * Sets user-level session storage functions
 * @link https://php.net/manual/zh/function.session-set-save-handler.php
 * @param callable $open <p>
 * Open function, this works like a constructor in classes and is
 * executed when the session is being opened. The open function
 * expects two parameters, where the first is the save path and
 * the second is the session name.
 * </p>
 * @param callable $close <p>
 * Close function, this works like a destructor in classes and is
 * executed when the session operation is done.
 * </p>
 * @param callable $read <p>
 * Read function must return string value always to make save handler
 * work as expected. Return empty string if there is no data to read.
 * Return values from other handlers are converted to boolean expression.
 * true for success, false for failure.
 * </p>
 * @param callable $write <p>
 * Write function that is called when session data is to be saved. This
 * function expects two parameters: an identifier and the data associated
 * with it.
 * </p>
 * <p>
 * The "write" handler is not executed until after the output stream is
 * closed. Thus, output from debugging statements in the "write"
 * handler will never be seen in the browser. If debugging output is
 * necessary, it is suggested that the debug output be written to a
 * file instead.
 * </p>
 * @param callable $destroy <p>
 * The destroy handler, this is executed when a session is destroyed with
 * <b>session_destroy</b> and takes the session id as its
 * only parameter.
 * </p>
 * @param callable $gc <p>
 * The garbage collector, this is executed when the session garbage collector
 * is executed and takes the max session lifetime as its only parameter.
 * </p>
 * @param callable|null $create_sid [optional]
 * <p>This callback is executed when a new session ID is required.
 * No parameters are provided, and the return value should be a string that is a valid
 * session ID for your handler.</p>
 * @param callable|null $validate_sid [optional]
 * @param callable|null $update_timestamp [optional]
 * @return bool true on success or false on failure.
 
*/
function session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc, ?callable $create_sid = null, ?callable $validate_sid = null, ?callable $update_timestamp = null): bool {}

/**
* <div id="function.session-set-save-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_set_save_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_set_save_handler</span> — <span class="dc-title">设置用户自定义会话存储函数</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-set-save-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_set_save_handler</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$open</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$close</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$read</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$write</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$destroy</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$gc</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$create_sid</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$validate_sid</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$update_timestamp</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   可以使用下面的方式来注册自定义会话存储函数：  </p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>session_set_save_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.object.php" class="type object" style="color:#EAB766">object</a></span> <span class="parameter" style="color:#3A95FF">$sessionhandler</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$register_shutdown</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_set_save_handler()</strong></span> 设置用户自定义   会话存储函数。   如果想使用 PHP 内置的会话存储机制之外的方式，   可以使用本函数。   例如，可以自定义会话存储函数来将会话数据存储到数据库。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-set-save-handler-parameters">  <h3 class="title">参数</h3>  <p class="para">   本函数有 2 种原型：   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">sessionhandler</span></dt>     <dd>      <p class="para">       实现了       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="interfacename">SessionHandlerInterface</a></span>，       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionidinterface.php" class="interfacename">SessionIdInterface</a></span>（可选） 和/或       <span class="interfacename"><a href="https://php.net/manual/zh/class.sessionupdatetimestamphandlerinterface.php" class="interfacename">SessionUpdateTimestampHandlerInterface</a></span>       接口的对象，       例如 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandler.php" class="classname">SessionHandler</a></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">register_shutdown</span></dt>     <dd>      <p class="para">       将函数 <span class="function">{@link session_write_close()}</span> 注册为       <span class="function">{@link register_shutdown_function()}</span> 函数。      </p>     </dd>       </dl>   或者   <dl>         <dt><span class="parameter" style="color:#3A95FF">open(string $savePath, string $sessionName)</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">open</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$savePath</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionName</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       open 回调函数类似于类的构造函数，       在会话打开的时候会被调用。       这是自动开始会话或者通过调用 <span class="function">{@link session_start()}</span> 手动开始会话       之后第一个被调用的回调函数。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">close</span></dt>     <dd>      <p class="para">       close 回调函数类似于类的析构函数。       在 write 回调函数调用之后调用。       当调用 <span class="function">{@link session_write_close()}</span> 函数之后，也会调用 close 回调函数。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">read</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">read</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>            <p class="para">       如果会话中有数据，read 回调函数必须返回将会话数据编码（序列化）后的字符串。       如果会话中没有数据，read 回调函数返回空字符串。      </p>      <p class="para">       在自动开始会话或者通过调用       <span class="function">{@link session_start()}</span> 函数手动开始会话之后，PHP 内部调用 read 回调函数来获取会话数据。       在调用 read 之前，PHP 会调用 open 回调函数。      </p>      <p class="para">       read 回调返回的序列化之后的字符串格式必须与 <span class="parameter" style="color:#3A95FF">write</span> 回调函数保存数据时的格式完全一致。       PHP 会自动反序列化返回的字符串并填充 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 超级全局变量。       虽然数据看起来和 <span class="function">{@link serialize()}</span> 函数很相似，       但是需要提醒的是，它们是不同的。       请参考： <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">write</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">write</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       在会话保存数据时会调用 <span class="parameter" style="color:#3A95FF">write</span> 回调函数。       此回调函数接收当前会话 ID 以及 <var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> 中数据序列化之后的字符串作为参数。       序列化会话数据的过程由 PHP 根据 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a> 设定值来完成。      </p>      <p class="para">       序列化后的数据将和会话 ID 关联在一起进行保存。       当调用 <span class="parameter" style="color:#3A95FF">read</span> 回调函数获取数据时，所返回的数据必须要和       传入 <span class="parameter" style="color:#3A95FF">write</span> 回调函数的数据完全保持一致。      </p>      <p class="para">       PHP 会在脚本执行完毕或调用 <span class="function">{@link session_write_close()}</span> 函数之后调用此回调函数。       注意，在调用完此回调函数之后，PHP 内部会调用 <span class="parameter" style="color:#3A95FF">close</span> 回调函数。       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         </p><p class="para">         PHP 会在输出流写入完毕并且关闭之后         才调用 write 回调函数，         所以在 write 回调函数中的调试信息不会输出到浏览器中。         如果需要在 write 回调函数中使用调试输出，         建议将调试输出写入到文件。        </p>       </blockquote>           </dd>             <dt><span class="parameter" style="color:#3A95FF">destroy</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">destroy</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$sessionId</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       当调用 <span class="function">{@link session_destroy()}</span> 函数，       或者调用  <span class="function">{@link session_regenerate_id()}</span> 函数并且设置 destroy 参数为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，       会调用此回调函数。此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">gc</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">gc</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$lifetime</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       为了清理会话中的旧数据，PHP 会不时的调用垃圾收集回调函数。       调用周期由 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-probability" class="link">session.gc_probability</a>        和 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-divisor" class="link">session.gc_divisor</a> 参数控制。       传入到此回调函数的 lifetime 参数由 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.gc-maxlifetime" class="link">session.gc_maxlifetime</a> 设置。       此回调函数操作成功返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，反之返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>                <dt><span class="parameter" style="color:#3A95FF">create_sid</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">create_sid</span></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>            <p class="para">       需要新的会话 ID 时，执行此回调函数。       它被调用时不会传入参数，其返回值应该是一个字符串格式的、有效的 session ID。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">validate_sid</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">validate_sid</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       开启 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.use-strict-mode" class="link">session.use_strict_mode</a> 后，       当启动一个 session 时，提供了 session ID 后会执行此回调。       参数 <span class="parameter" style="color:#3A95FF">key</span> 是待验证的 session ID。       如果该 ID 的 session 已经存在，则为有效 session ID。       成功时返回值应当为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">update_timestamp</span></dt>     <dd>      <p class="para">       实现了以下签名的 callable 回调：       </p><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><span class="replaceable">update_timestamp</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$val</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>            <p class="para">       更新 session 时执行此回调。       参数 <span class="parameter" style="color:#3A95FF">key</span> 是 session ID；参数 <span class="parameter" style="color:#3A95FF">val</span> 是 session 的数据。       成功时返回值应当为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-set-save-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.session-set-save-handler-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4984">    <p><strong>示例 #1      自定义会话处理程序：完整代码请参见 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="classname">SessionHandlerInterface</a></span>。    </strong></p>    <div class="example-contents"><p>     这里仅列出了调用方式，完整代码请参见 <span class="classname"><a href="https://php.net/manual/zh/class.sessionhandlerinterface.php" class="classname">SessionHandlerInterface</a></span>。    </p></div>    <div class="example-contents"><p>     这里使用了 <span class="function"><strong>session_set_save_handler()</strong></span> 函数的 OOP 原型     并且使用第二个参数来注册 shutdown 函数。     当将对象注册为会话保存处理程序时，建议使用这种方式。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">MySessionHandler </span><span style="color: #007700">implements </span><span style="color: #9876AA">SessionHandlerInterface<br></span><span style="color: #007700">{<br>    </span><span style="color: #FF8000">// 在这里实现接口<br></span><span style="color: #007700">}<br><br></span><span style="color: #9876AA">$handler </span><span style="color: #007700">= new </span><span style="color: #9876AA">MySessionHandler</span><span style="color: #007700">();<br></span><span style="color: #9876AA">session_set_save_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$handler</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 现在可以使用 $_SESSION 保存以及获取数据了</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 notes" id="refsect1-function.session-set-save-handler-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    在对象销毁之后才会调用    <span class="parameter" style="color:#3A95FF">write</span> 和 <span class="parameter" style="color:#3A95FF">close</span> 回调函数，    所以，在这两个回调函数中不可以使用对象，也不可以抛出异常。    如果在函数中抛出异常，PHP 既不会捕获它，也不会跟踪它，    这样会导致程序异常终止。    但是对象析构函数可以使用会话。   </p>   <p class="para">    可以在析构函数中调用  <span class="function">{@link session_write_close()}</span>      函数来解决这个问题。    但是注册 shutdown 回调函数才是更加可靠的做法。   </p>  </div>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果会话在脚本结束后关闭，对于某些 SAPI 而言，当前工作目录可能已经被改变。    可以调用 <span class="function">{@link session_write_close()}</span>     函数在脚本执行结束之前关闭会话。   </p>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.session-set-save-handler-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a>     配置指示    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>     配置指示    </li>    <li><span class="function">{@link register_shutdown_function()} - 注册在关闭时执行的函数</span></li>    <li><span class="function">{@link session_register_shutdown()} - 关闭会话</span></li>    <li>     完整的实现请参考      <a href="https://github.com/php/php-src/blob/master/ext/session/tests/save_handler.inc" class="link external">» save_handler.inc</a>。    </li>   </ul>   </div></div>
*
 * (PHP 5.4)<br/>
 * Sets user-level session storage functions
 * @link https://php.net/manual/zh/function.session-set-save-handler.php
 * @param SessionHandlerInterface $session_handler An instance of a class implementing SessionHandlerInterface,
 * and optionally SessionIdInterface and/or SessionUpdateTimestampHandlerInterface, such as SessionHandler,
 * to register as the session handler. Since PHP 5.4 only.
 * @param bool $register_shutdown [optional] Register session_write_close() as a register_shutdown_function() function.
 * @return bool true on success or false on failure.
 
*/
function session_set_save_handler(SessionHandlerInterface $sessionhandler, bool $register_shutdown = true): bool {}

/**
* <div id="function.session-cache-limiter" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_cache_limiter</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_cache_limiter</span> — <span class="dc-title">读取/设置缓存限制器</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-cache-limiter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_value</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_cache_limiter()</strong></span> 返回当前缓存限制器的名称。  </p>  <p class="para">    缓存限制器定义了向客户端发送的 HTTP 响应头中的缓存控制策略。    客户端或者代理服务器通过检测这个响应头信息来    确定对于页面内容的缓存规则。    设置缓存限制器为 <span class="literal">nocache</span> 会禁止客户端或者代理服务器缓存内容，    <span class="literal">public</span> 表示允许客户端或代理服务器缓存内容，    <span class="literal">private</span> 表示允许客户端缓存，    但是不允许代理服务器缓存内容。  </p>  <p class="para">   在 <span class="literal">private</span> 模式下， 包括 <span class="productname">Mozilla</span>    在内的一些浏览器可能无法正确处理 Expire 响应头，   通过使用 <span class="literal">private_no_expire</span> 模式可以解决这个问题：在这种模式下，   不会向客户端发送 <span class="literal">Expire</span> 响应头。  </p>  <p class="para">    设置为  <span class="literal">''</span> 可以关闭    自动发送缓存策略响应头的功能。  </p>  <p class="para">    请求开始的时候，缓存限制器会被重置为默认值，并且存储在    <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cache-limiter" class="link">session.cache_limiter</a>     配置项中。    因此，如果要设置缓存限制器，对于每个请求，    都需要在调用 <span class="function">{@link session_start()}</span> 函数之前，    调用 <span class="function"><strong>session_cache_limiter()</strong></span> 函数来进行设置。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-cache-limiter-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       如果指定 <span class="parameter" style="color:#3A95FF">value</span> 且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，       将使用指定值作为缓存限制器的值。      </p>      <table class="doctable table">       <caption><strong>可选的值</strong></caption>               <thead>         <tr>          <th>值</th>          <th>发送的响应头</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td><span class="literal">public</span></td>          <td>           <div class="example-contents"><div class="headercode"><blockquote style="border:1px gray solid;">Expiresï¼ï¼æ ¹æ® session.cache_expire çè®¾å®è®¡ç®å¾åºï¼<br>Cache-Controlï¼ public, max-age=ï¼æ ¹æ® session.cache_expire çè®¾å®è®¡ç®å¾åºï¼<br>Last-Modifiedï¼ï¼ä¼è¯æåä¿å­æ¶é´ï¼</blockquote></div>           </div>          </td>         </tr>         <tr>          <td><span class="literal">private_no_expire</span></td>          <td>           <div class="example-contents"><div class="headercode"><blockquote style="border:1px gray solid;">Cache-Control: private, max-age=ï¼æ ¹æ® session.cache_expire çè®¾å®è®¡ç®å¾åºï¼<br>Last-Modified: ï¼ä¼è¯æåä¿å­æ¶é´ï¼</blockquote></div>           </div>          </td>         </tr>         <tr>          <td><span class="literal">private</span></td>          <td>           <div class="example-contents"><div class="headercode"><blockquote style="border:1px gray solid;">Expires: Thu, 19 Nov 1981 08:52:00 GMT<br>Cache-Control: private, max-age=ï¼æ ¹æ® session.cache_expire çè®¾å®è®¡ç®å¾åºï¼<br>Last-Modified: ï¼ä¼è¯æåä¿å­æ¶é´ï¼</blockquote></div>           </div>          </td>         </tr>         <tr>          <td><span class="literal">nocache</span></td>          <td>           <div class="example-contents"><div class="headercode"><blockquote style="border:1px gray solid;">Expires: Thu, 19 Nov 1981 08:52:00 GMT<br>Cache-Control: no-store, no-cache, must-revalidate<br>Pragma: no-cache</blockquote></div>           </div>          </td>         </tr>        </tbody>             </table>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-cache-limiter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回当前所用的缓存限制器名称。如果更改值失败，则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-cache-limiter-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">value</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.session-cache-limiter-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4976">    <p><strong>示例 #1 <span class="function"><strong>session_cache_limiter()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// 设置缓存限制器为 'private' <br><br></span><span style="color: #9876AA">session_cache_limiter</span><span style="color: #007700">(</span><span style="color: #DD0000">'private'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$cache_limiter </span><span style="color: #007700">= </span><span style="color: #9876AA">session_cache_limiter</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">"The cache limiter is now set to </span><span style="color: #9876AA">$cache_limiter</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-cache-limiter-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.cache-limiter" class="link">session.cache_limiter</a></li>   </ul>   </div></div>
*
 * Get and/or set the current cache limiter
 * @link https://php.net/manual/zh/function.session-cache-limiter.php
 * @param string|null $value [optional] <p>
 * If <i>cache_limiter</i> is specified, the name of the
 * current cache limiter is changed to the new value.
 * </p>
 * <table>
 * Possible values
 * <tr valign="top">
 * <td>Value</td>
 * <td>Headers sent</td>
 * </tr>
 * <tr valign="top">
 * <td>public</td>
 * <td>
 * <pre>
 * Expires: (sometime in the future, according session.cache_expire)
 * Cache-Control: public, max-age=(sometime in the future, according to session.cache_expire)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>private_no_expire</td>
 * <td>
 * <pre>
 * Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>private</td>
 * <td>
 * <pre>
 * Expires: Thu, 19 Nov 1981 08:52:00 GMT
 * Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>nocache</td>
 * <td>
 * <pre>
 * Expires: Thu, 19 Nov 1981 08:52:00 GMT
 * Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
 * Pragma: no-cache
 * </pre>
 * </td>
 * </tr>
 * </table>
 * @return string|false the name of the current cache limiter.
 
#[LanguageLevelTypeAware(["8.0" => "string|false"], default: "string")]
*/
function session_cache_limiter(#[LanguageLevelTypeAware(['8.0' => 'null|string'], default: 'string')] $value) {}

/**
* <div id="function.session-cache-expire" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_cache_expire</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_cache_expire</span> — <span class="dc-title">返回/设置当前缓存的到期时间</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-cache-expire-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_cache_expire</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_cache_expire()</strong></span> 返回   <span class="literal">session.cache_expire</span> 的设定值。   </p>  <p class="para">   请求开始的时候，缓存到期时间会被重置为 180，并且保存在   <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cache-expire" class="link">session.cache_expire</a> 配置项中。   因此，针对每个请求，需要在 <span class="function">{@link session_start()}</span> 函数调用之前   调用 <span class="function"><strong>session_cache_expire()</strong></span> 来设置缓存到期时间。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-cache-expire-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       如果指定 <span class="parameter" style="color:#3A95FF">value</span> 且不为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，就使用       <span class="parameter" style="color:#3A95FF">value</span> 的值替换当前缓存到期时间。      </p>      <p class="para">       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <span class="simpara">         仅在 <span class="literal">session.cache_limiter</span> 的设置值         <em>不是</em> <span class="literal">nocache</span> 的时候，         才可以设置 <span class="parameter" style="color:#3A95FF">value</span> 参数。        </span>       </p></blockquote>           </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-cache-expire-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="literal">session.cache_expire</span> 的当前设置值，   以分钟为单位，默认值是 180 （分钟）。如果更改值失败，则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-cache-expire-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">value</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 examples" id="refsect1-function.session-cache-expire-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-4975">    <p><strong>示例 #1 <span class="function"><strong>session_cache_expire()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br></span><span style="color: #FF8000">// 设置缓存限制为 “private” <br><br></span><span style="color: #9876AA">session_cache_limiter</span><span style="color: #007700">(</span><span style="color: #DD0000">'private'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$cache_limiter </span><span style="color: #007700">= </span><span style="color: #9876AA">session_cache_limiter</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 设置缓存过期时间为 30 分钟 <br></span><span style="color: #9876AA">session_cache_expire</span><span style="color: #007700">(</span><span style="color: #9876AA">30</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$cache_expire </span><span style="color: #007700">= </span><span style="color: #9876AA">session_cache_expire</span><span style="color: #007700">();<br><br></span><span style="color: #FF8000">// 开始会话 <br><br></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br><br>echo </span><span style="color: #DD0000">"The cache limiter is now set to </span><span style="color: #9876AA">$cache_limiter</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br>echo </span><span style="color: #DD0000">"The cached session pages expire after </span><span style="color: #9876AA">$cache_expire</span><span style="color: #DD0000"> minutes"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.session-cache-expire-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.cache-expire" class="link">session.cache_expire</a></li>    <li><a href="https://php.net/manual/zh/session.configuration.php#ini.session.cache-limiter" class="link">session.cache_limiter</a></li>    <li><span class="function">{@link session_cache_limiter()} - 读取/设置缓存限制器</span></li>   </ul>   </div></div>
*
 * Return current cache expire
 * @link https://php.net/manual/zh/function.session-cache-expire.php
 * @param int|null $value [optional] <p>
 * If <i>new_cache_expire</i> is given, the current cache
 * expire is replaced with <i>new_cache_expire</i>.
 * </p>
 * <p>
 * Setting <i>new_cache_expire</i> is of value only, if
 * session.cache_limiter is set to a value
 * different from nocache.
 * </p>
 * @return int|false the current setting of session.cache_expire.
 * The value returned should be read in minutes, defaults to 180.
 
#[LanguageLevelTypeAware(["8.0" => "int|false"], default: "int")]
*/
function session_cache_expire(#[LanguageLevelTypeAware(['8.0' => 'null|int'], default: 'int')] $value) {}

/**
* <div id="function.session-set-cookie-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_set_cookie_params</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_set_cookie_params</span> — <span class="dc-title">设置会话 cookie 参数</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-set-cookie-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_set_cookie_params</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$lifetime_or_options</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$path</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$domain</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>session_set_cookie_params</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$lifetime_or_options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Cookie 参数可以在 <var class="filename">php.ini</var> 文件中定义，本函数仅在当前脚本执行过程中有效。   因此，如果要通过函数修改 cookie 参数，需要对每个请求都要   在调用 <span class="function">{@link session_start()}</span> 函数之前调用   <span class="function"><strong>session_set_cookie_params()</strong></span> 函数。  </p>  <p class="para">   本函数会修改运行期 ini 设置值，   可以通过 <span class="function">{@link ini_get()}</span> 函数获取这些值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-set-cookie-params-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">lifetime_or_options</span></dt>     <dd>      <p class="para">       使用第一个签名时，session cookie 的 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">lifetime</a>，以秒为单位。      </p>      <p class="para">       当使用第二个签名时，关联 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 可能具有 <span class="literal">lifetime</span>、<span class="literal">path</span>、<span class="literal">domain</span>、<span class="literal">secure</span>、<span class="literal">httponly</span>       和 <span class="literal">samesite</span> 中的任一 key。这些值与同名参数的含义相同。<span class="literal">samesite</span> 元素的值应该是 <span class="literal">Lax</span> 或       <span class="literal">Strict</span>。       如果可以接受的键在传入的数组中不存在，那么会采用这些键对应的默认值作为运行时的值。如果省略 <span class="literal">samesite</span> 元素，则不会设置 SameSite cookie 属性。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       此 cookie 的有效 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">路径</a>。 on the domain where       设置为“/”表示对于本域上所有的路径此 cookie 都可用。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       Cookie 的作用 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">域</a>。       例如：“www.php.net”。       如果要让 cookie 在所有的子域中都可用，此参数必须以点（.）开头，例如：“.php.net”。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">secure</span></dt>     <dd>      <p class="para">       设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 表示 cookie 仅在使用       <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">安全</a> 链接时可用。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">httponly</span></dt>     <dd>      <p class="para">       设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 表示 PHP 发送 cookie 的时候会使用       <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">httponly</a>       标记。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-set-cookie-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-set-cookie-params-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">path</span>、<span class="parameter" style="color:#3A95FF">domain</span>、<span class="parameter" style="color:#3A95FF">secure</span>        和 <span class="parameter" style="color:#3A95FF">httponly</span> 现在可为 null。       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        新增支持 <span class="parameter" style="color:#3A95FF">lifetime_or_options</span> 数组的替代签名。此签名还支持 SameSite cookie 属性的设置。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。以前该函数返回 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-function.session-set-cookie-params-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">session.cookie_lifetime</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">session.cookie_path</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">session.cookie_domain</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">session.cookie_secure</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">session.cookie_httponly</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-samesite" class="link">session.cookie_samesite</a>    </li>    <li><span class="function">{@link session_get_cookie_params()} - 获取会话 cookie 参数</span></li>   </ul>   </div></div>
*
 * Set the session cookie parameters
 * @link https://php.net/manual/zh/function.session-set-cookie-params.php
 * @param array $lifetime_or_options <p>
 * An associative array which may have any of the keys lifetime, path, domain,
 * secure, httponly and samesite. The values have the same meaning as described
 * for the parameters with the same name. The value of the samesite element
 * should be either Lax or Strict. If any of the allowed options are not given,
 * their default values are the same as the default values of the explicit
 * parameters. If the samesite element is omitted, no SameSite cookie attribute
 * is set.
 * </p>
 * @return bool returns true on success or false on failure.
 * @since 7.3
 
*/
function session_set_cookie_params(array $lifetime_or_options): bool {}

/**
* <div id="function.session-set-cookie-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_set_cookie_params</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_set_cookie_params</span> — <span class="dc-title">设置会话 cookie 参数</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-set-cookie-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_set_cookie_params</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$lifetime_or_options</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$path</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span> <span class="parameter" style="color:#3A95FF">$domain</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">$secure</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></span> <span class="parameter" style="color:#3A95FF">$httponly</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">自 PHP 7.3.0 起可用的替代签名：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>session_set_cookie_params</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$lifetime_or_options</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Cookie 参数可以在 <var class="filename">php.ini</var> 文件中定义，本函数仅在当前脚本执行过程中有效。   因此，如果要通过函数修改 cookie 参数，需要对每个请求都要   在调用 <span class="function">{@link session_start()}</span> 函数之前调用   <span class="function"><strong>session_set_cookie_params()</strong></span> 函数。  </p>  <p class="para">   本函数会修改运行期 ini 设置值，   可以通过 <span class="function">{@link ini_get()}</span> 函数获取这些值。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-set-cookie-params-parameters">  <h3 class="title">参数</h3>  <p class="para">   </p><dl>         <dt><span class="parameter" style="color:#3A95FF">lifetime_or_options</span></dt>     <dd>      <p class="para">       使用第一个签名时，session cookie 的 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">lifetime</a>，以秒为单位。      </p>      <p class="para">       当使用第二个签名时，关联 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> 可能具有 <span class="literal">lifetime</span>、<span class="literal">path</span>、<span class="literal">domain</span>、<span class="literal">secure</span>、<span class="literal">httponly</span>       和 <span class="literal">samesite</span> 中的任一 key。这些值与同名参数的含义相同。<span class="literal">samesite</span> 元素的值应该是 <span class="literal">Lax</span> 或       <span class="literal">Strict</span>。       如果可以接受的键在传入的数组中不存在，那么会采用这些键对应的默认值作为运行时的值。如果省略 <span class="literal">samesite</span> 元素，则不会设置 SameSite cookie 属性。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">path</span></dt>     <dd>      <p class="para">       此 cookie 的有效 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">路径</a>。 on the domain where       设置为“/”表示对于本域上所有的路径此 cookie 都可用。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">domain</span></dt>     <dd>      <p class="para">       Cookie 的作用 <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">域</a>。       例如：“www.php.net”。       如果要让 cookie 在所有的子域中都可用，此参数必须以点（.）开头，例如：“.php.net”。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">secure</span></dt>     <dd>      <p class="para">       设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 表示 cookie 仅在使用       <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">安全</a> 链接时可用。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">httponly</span></dt>     <dd>      <p class="para">       设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 表示 PHP 发送 cookie 的时候会使用       <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">httponly</a>       标记。      </p>     </dd>       </dl>   </div> <div class="refsect1 returnvalues" id="refsect1-function.session-set-cookie-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-set-cookie-params-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">path</span>、<span class="parameter" style="color:#3A95FF">domain</span>、<span class="parameter" style="color:#3A95FF">secure</span>        和 <span class="parameter" style="color:#3A95FF">httponly</span> 现在可为 null。       </td>      </tr>      <tr>       <td>7.3.0</td>       <td>        新增支持 <span class="parameter" style="color:#3A95FF">lifetime_or_options</span> 数组的替代签名。此签名还支持 SameSite cookie 属性的设置。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。以前该函数返回 <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-function.session-set-cookie-params-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">session.cookie_lifetime</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">session.cookie_path</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">session.cookie_domain</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">session.cookie_secure</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">session.cookie_httponly</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-samesite" class="link">session.cookie_samesite</a>    </li>    <li><span class="function">{@link session_get_cookie_params()} - 获取会话 cookie 参数</span></li>   </ul>   </div></div>
*
 * Set the session cookie parameters
 * @link https://php.net/manual/zh/function.session-set-cookie-params.php
 * @param int $lifetime_or_options <p>
 * Lifetime of the
 * session cookie, defined in seconds.
 * </p>
 * @param string|null $path [optional] <p>
 * Path on the domain where
 * the cookie will work. Use a single slash ('/') for all paths on the
 * domain.
 * </p>
 * @param string|null $domain [optional] <p>
 * Cookie domain, for
 * example 'www.php.net'. To make cookies visible on all subdomains then
 * the domain must be prefixed with a dot like '.php.net'.
 * </p>
 * @param bool|null $secure [optional] <p>
 * If true cookie will only be sent over
 * secure connections.
 * </p>
 * @param bool|null $httponly [optional] <p>
 * If set to true then PHP will attempt to send the
 * httponly
 * flag when setting the session cookie.
 * </p>
 * @return void|bool since 7.2.0 returns true on success or false on failure.
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_set_cookie_params(int $lifetime_or_options, ?string $path = null, ?string $domain = null, ?bool $secure = null, ?bool $httponly = null) {}

/**
* <div id="function.session-get-cookie-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_get_cookie_params</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_get_cookie_params</span> — <span class="dc-title">获取会话 cookie 参数</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-get-cookie-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_get_cookie_params</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   获取会话 cookie 的参数。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-get-cookie-params-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-get-cookie-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个包含当前会话 cookie 信息的数组：   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">"lifetime"</a> - cookie 的生命周期，以秒为单位。     </span>    </li>    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">"path"</a> -  cookie 的访问路径。     </span>    </li>    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">"domain"</a> -  cookie 的域。     </span>    </li>    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">"secure"</a> -  仅在使用安全连接时发送 cookie。     </span>    </li>    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">"httponly"</a> - 只能通过 http 协议访问 cookie     </span>    </li>    <li class="listitem">     <span class="simpara">      <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-samesite" class="link">"samesite"</a>——控制 cookie 的跨域发送。     </span>    </li>   </ul>   </div> <div class="refsect1 changelog" id="refsect1-function.session-get-cookie-params-changelog">  <h3 class="title">更新日志</h3>  <p class="para">   </p><table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.3.0</td>       <td>        返回的数组中已添加“samesite”条目。       </td>      </tr>     </tbody>       </table>   </div> <div class="refsect1 seealso" id="refsect1-function.session-get-cookie-params-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-lifetime" class="link">session.cookie_lifetime</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-path" class="link">session.cookie_path</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-domain" class="link">session.cookie_domain</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-secure" class="link">session.cookie_secure</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-httponly" class="link">session.cookie_httponly</a>    </li>    <li>     <a href="https://php.net/manual/zh/session.configuration.php#ini.session.cookie-samesite" class="link">session.cookie_samesite</a>    </li>    <li>     <span class="function">{@link session_set_cookie_params()} - 设置会话 cookie 参数</span>    </li>   </ul>   </div></div>
*
 * Get the session cookie parameters
 * @link https://php.net/manual/zh/function.session-get-cookie-params.php
 * @return array an array with the current session cookie information, the array
 * contains the following items:
 * "lifetime" - The
 * lifetime of the cookie in seconds.
 * "path" - The path where
 * information is stored.
 * "domain" - The domain
 * of the cookie.
 * "secure" - The cookie
 * should only be sent over secure connections.
 * "httponly" - The
 * cookie can only be accessed through the HTTP protocol.
 
#[ArrayShape(["lifetime" => "int", "path" => "string", "domain" => "string", "secure" => "bool", "httponly" => "bool", "samesite" => "string"])]
*/
function session_get_cookie_params(): array {}

/**
* <div id="function.session-write-close" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_write_close</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_write_close</span> — <span class="dc-title">Write session data and end session</span></p> </div>  <div class="refsect1 description" id="refsect1-function.session-write-close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_write_close</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   End the current session and store session data.  </p>  <p class="para">   Session data is usually stored after your script terminated without the   need to call <span class="function"><strong>session_write_close()</strong></span>, but as session data   is locked to prevent concurrent writes only one script may operate on a   session at any time. When using framesets together with sessions you will   experience the frames loading one by one due to this locking. You can   reduce the time needed to load all the frames by ending the session as   soon as all changes to session variables are done.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-write-close-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-write-close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-write-close-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.2.0</td>      <td>       The return type of this function is <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> now.       Formerly, it has been <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.session-write-close-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li>     The <span class="function">{@link session_register_shutdown()} - 关闭会话</span>    </li>   </ul>   </div></div>
*
 * Write session data and end session
 * @link https://php.net/manual/zh/function.session-write-close.php
 * @return void|bool since 7.2.0 returns true on success or false on failure.
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_write_close() {}

/**
* <div id="function.session-commit" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_commit</h1>  <p class="verinfo">(PHP 4 &gt;= 4.4.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_commit</span> — <span class="dc-title"><span class="function">{@link session_write_close()}</span> 的别名</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-commit-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：<span class="function">{@link session_write_close()}</span>。  </p> </div></div>
*
 * Alias of <b>session_write_close</b>
 * @link https://php.net/manual/zh/function.session-commit.php
 * @return void|bool since 7.2.0 returns true on success or false on failure.
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_commit() {}

/**
* <div id="function.session-status" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_status</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_status</span> — <span class="dc-title">返回当前会话状态</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-status-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_status</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_status()</strong></span> 被用于返回当前会话状态。  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-status-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-status-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   </p><ul class="itemizedlist">    <li class="listitem">     <span class="simpara"><strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.php-session-disabled">PHP_SESSION_DISABLED</a></span></strong> 会话是被禁用的。</span>    </li>    <li class="listitem">     <span class="simpara"><strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.php-session-none">PHP_SESSION_NONE</a></span></strong> 会话是启用的，但不存在当前会话。</span>    </li>    <li class="listitem">     <span class="simpara"><strong><span><a href="https://php.net/manual/zh/session.constants.php#constant.php-session-active">PHP_SESSION_ACTIVE</a></span></strong> 会话是启用的，而且存在当前会话。</span>    </li>   </ul>   </div>  <div class="refsect1 seealso" id="refsect1-function.session-status-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>  </ul> </div></div>
*
 * (PHP 5 >= 5.4.0)<br>
 * Returns the current session status
 * @link https://php.net/manual/zh/function.session-status.php
 * @return int <b>PHP_SESSION_DISABLED</b> if sessions are disabled.
 * <b>PHP_SESSION_NONE</b> if sessions are enabled, but none exists.
 * <b>PHP_SESSION_ACTIVE</b> if sessions are enabled, and one exists.
 * @since 5.4
 
*/
function session_status(): int {}

/**
* <div id="function.session-abort" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_abort</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_abort</span> — <span class="dc-title">Discard session array changes and finish session</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-abort-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_abort</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_abort()</strong></span> finishes session without saving   data. Thus the original values in session data are kept.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-abort-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-abort-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-abort-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.2.0</td>      <td>       The return type of this function is <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> now.       Formerly, it has been <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.session-abort-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var></li>    <li>     The <a href="https://php.net/manual/zh/session.configuration.php#ini.session.auto-start" class="link">session.auto_start</a>     configuration directive    </li>    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><span class="function">{@link session_reset()} - Re-initialize session array with original values</span></li>    <li><span class="function">{@link session_commit()} - session_write_close 的别名</span></li>   </ul>   </div></div>
*
 * (PHP 5 >= 5.6.0)<br>
 * Discard session array changes and finish session
 * @link https://php.net/manual/zh/function.session-abort.php
 * @return void|bool since 7.2.0 returns true if a session was successfully reinitialized or false on failure.
 * @since 5.6
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_abort() {}

/**
* <div id="function.session-reset" class="refentry"> <div class="refnamediv">  <h1 class="refname">session_reset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.6.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">session_reset</span> — <span class="dc-title">Re-initialize session array with original values</span></p> </div> <div class="refsect1 description" id="refsect1-function.session-reset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>session_reset</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>session_reset()</strong></span> reinitializes a session with   original values stored in session storage. This function requires an active session and   discards changes in $_SESSION.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.session-reset-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.session-reset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 changelog" id="refsect1-function.session-reset-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.2.0</td>      <td>       The return type of this function is <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> now.       Formerly, it has been <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></span>.      </td>     </tr>    </tbody>     </table> </div> <div class="refsect1 seealso" id="refsect1-function.session-reset-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><var class="varname"><a href="https://php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var></li>    <li>     The <a href="https://php.net/manual/zh/session.configuration.php#ini.session.auto-start" class="link">session.auto_start</a>     configuration directive    </li>    <li><span class="function">{@link session_start()} - 启动新会话或者重用现有会话</span></li>    <li><span class="function">{@link session_abort()} - Discard session array changes and finish session</span></li>    <li><span class="function">{@link session_commit()} - session_write_close 的别名</span></li>   </ul>   </div></div>
*
 * (PHP 5 >= 5.6.0)<br>
 * Re-initialize session array with original values
 * @link https://php.net/manual/zh/function.session-reset.php
 * @return void|bool since 7.2.0 returns true if a session was successfully reinitialized or false on failure.
 * @since 5.6
 
#[LanguageLevelTypeAware(["7.2" => "bool"], default: "void")]
*/
function session_reset() {}

// End of session v.
