<?php

/**
* <span class="simpara">     </span>
*
 * The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
 * @link https://php.net/manual/zh/yaf.constants.php
 
*/
define('YAF_VERSION', '3.3.5', true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ENVIRON', 'product', true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_STARTUP_FAILED', 512, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_ROUTE_FAILED', 513, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_DISPATCH_FAILED', 514, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_NOTFOUND_MODULE', 515, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_NOTFOUND_CONTROLLER', 516, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_NOTFOUND_ACTION', 517, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_NOTFOUND_VIEW', 518, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_CALL_FAILED', 519, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_AUTOLOAD_FAILED', 520, true);
/**
* <span class="simpara">     </span>
*/
define('YAF_ERR_TYPE_ERROR', 521, true);
define('YAF_ERR_ACCESS_ERROR', 522);

//================================================

/**
* <div id="class.yaf-application" class="reference"> <h1 class="title">Yaf_Application 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-application.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Application</strong></span> 为应用提供了一个辅助设施。    它提供了可重用的资源，常见的和模块化的引导类，还有依赖的检查。   </p>   <p class="para">    </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">       <span class="classname"><strong class="classname">Yaf_Application</strong></span> 实现了单例模式。       <span class="classname"><strong class="classname">Yaf_Application</strong></span> 不能够被序列化和反序列化，       因为当你尝试使用 PHPUnit 来为 Yaf 写一些测试用例的时候会造成一些不必要的麻烦。      </p>      <p class="para">        你可以使用 PHPUnit 的 @backupGlobals 注释来控制全局变量的备份和恢复操作，        从而可以解决这个问题。     </p>    </blockquote>     </div>  <div class="section" id="yaf-application.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">final</span>      <span class="modifier">class</span> <strong class="classname">Yaf_Application</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.config">$<var class="varname">config</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.dispatcher">$<var class="varname">dispatcher</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="modifier">static</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.app">$<var class="varname">_app</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.modules">$<var class="varname">_modules</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.running">$<var class="varname">_running</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-application.php#yaf-application.props.environ">$<var class="varname">_environ</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$config</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$envrion</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.app.php" class="methodname" style="color:#CC7832">app</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.bootstrap.php" class="methodname" style="color:#CC7832">bootstrap</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="type Yaf_Bootstrap_Abstract" style="color:#EAB766">Yaf_Bootstrap_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$bootstrap</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.clearlasterror.php" class="methodname" style="color:#CC7832">clearLastError</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.environ.php" class="methodname" style="color:#CC7832">environ</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.execute.php" class="methodname" style="color:#CC7832">execute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$entry</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">...$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getappdirectory.php" class="methodname" style="color:#CC7832">getAppDirectory</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getconfig.php" class="methodname" style="color:#CC7832">getConfig</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getdispatcher.php" class="methodname" style="color:#CC7832">getDispatcher</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getlasterrormsg.php" class="methodname" style="color:#CC7832">getLastErrorMsg</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getlasterrorno.php" class="methodname" style="color:#CC7832">getLastErrorNo</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.getmodules.php" class="methodname" style="color:#CC7832">getModules</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.run.php" class="methodname" style="color:#CC7832">run</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.setappdirectory.php" class="methodname" style="color:#CC7832">setAppDirectory</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div>    <div class="destructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-application.destruct.php" class="methodname" style="color:#CC7832">__destruct</a></span>()</div>   }</div>  </div>    <div class="section" id="yaf-application.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-application.props.config"><var class="varname">config</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-application.props.dispatcher"><var class="varname">dispatcher</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-application.props.app"><var class="varname">_app</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-application.props.modules"><var class="varname">_modules</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-application.props.running"><var class="varname">_running</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-application.props.environ"><var class="varname">_environ</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Application::app} — 检索 Application 实例</li><li>{@link Yaf_Application::bootstrap} — 调用 bootstrap</li><li>{@link Yaf_Application::clearLastError} — 清除最后的错误信息</li><li>{@link Yaf_Application::__construct} — Yaf_Application 的构造函数</li><li>{@link Yaf_Application::__destruct} — __destruct 函数</li><li>{@link Yaf_Application::environ} — 检索环境名</li><li>{@link Yaf_Application::execute} — 运行回调</li><li>{@link Yaf_Application::getAppDirectory} — 获取应用的目录</li><li>{@link Yaf_Application::getConfig} — 获取 Yaf_Config_Abstract 的实例</li><li>{@link Yaf_Application::getDispatcher} — 获取 Yaf_Dispatcher 的实例</li><li>{@link Yaf_Application::getLastErrorMsg} — 获取最近产生的错误的错误信息</li><li>{@link Yaf_Application::getLastErrorNo} — 获取最后产生的错误的错误代码</li><li>{@link Yaf_Application::getModules} — 获取定义的模块名</li><li>{@link Yaf_Application::run} — 运行 Yaf_Application</li><li>{@link Yaf_Application::setAppDirectory} — 改变应用目录</li></ul></div>
*
 * Yaf_Application provides a bootstrapping facility for applications which provides reusable resources, common- and module-based bootstrap classes and dependency checking.
 * <br/>
 * <b>Note:</b>
 * <p>
 * Yaf_Application implements the singleton pattern, and Yaf_Application can not be serialized or un-serialized which will cause problem when you try to use PHPUnit to write some test case for Yaf.<br/>
 * You may use &#64;backupGlobals annotation of PHPUnit to control the backup and restore operations for global variables. thus can solve this problem.
 * </p>
 * @link https://secure.php.net/manual/en/class.yaf-application.php
 
*/
final class Yaf_Application
{
    /**
     * @var Yaf_Application
     */
    protected static $_app;

    /**
     * @var Yaf_Config_Abstract
     */
    protected $config;

    /**
     * @var Yaf_Dispatcher
     */
    protected $dispatcher;

    /**
     * @var array
     */
    protected $_modules;

    /**
     * @var string
     */
    protected $_running = "";

    /**
     * @var string
     */
    protected $_environ = YAF_ENVIRON;

    /**
     * @since 2.1.2
     * @var int
     */
    protected $_err_no = 0;

    /**
     * @since 2.1.2
     * @var string
     */
    protected $_err_msg = "";

    /**
     * @link https://secure.php.net/manual/en/yaf-application.construct.php
     *
     * <p>
     * If is a ini config file, there should be a section named as the one defined by yaf.environ, which is "product" by default.
     * </p>
     * <br/>
     * <b>Note:</b>
     * <p>If you use a ini configuration file as your application's config container. you would open the yaf.cache_config to improve performance.</p>
     * <p>And the config entry(and there default value) list blow:</p>
     *
     * <p>
     * <b>Example #1 A ini config file example</b><br/>
     * [product]<br/>
     * ;this one should always be defined, and have no default value<br/>
     * application.directory=APPLICATION_PATH<br/><br/>
     * </p>
     * <p>
     * ;following configs have default value, you may no need to define them
     * <br/>
     * application.library = APPLICATION_PATH . "/library" <br/>
     * application.dispatcher.throwException=1 <br/>
     * application.dispatcher.catchException=1 <br/><br/>
     * </p>
     * <p>application.baseUri=""<br/><br/></p>
     * <p>
     * ;the php script ext name<br/>
     * ap.ext=php<br/><br/>
     * </p>
     * <p>
     * ;the view template ext name<br/>
     * ap.view.ext=phtml<br/><br/>
     * </p>
     * <p>
     * ap.dispatcher.defaultModule=Index<br/>
     * ap.dispatcher.defaultController=Index<br/>
     * ap.dispatcher.defaultAction=index<br/><br/>
     * </p>
     * <p>
     * ;defined modules<br/>
     * ap.modules=Index
     * </p>
     *
     * @param string|array $config A ini config file path, or a config array
     * @param string $environ Which section will be loaded as the final config
     *
     * @throws Yaf_Exception_TypeError|Yaf_Exception_StartupError
     */
    public function __construct($config, $environ = null) {}

    /** @return Yaf_Application */
    public function getInstance() {}

/**
* <div id="yaf-application.run" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::run</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::run</span> — <span class="dc-title">运行 Yaf_Application</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.run-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::run</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   运行一个 Yaf_Application，开始接受并处理请求，分发路由，做出相应的响应。最终将响应返回给客户端。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.run-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.run-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Run a Yaf_Application, let the Yaf_Application accept a request, and route the request, dispatch to controller/action, and render response.
     * return response to client finally.
     *
     * @link https://secure.php.net/manual/en/yaf-application.run.php
     * @return void
     * @throws Yaf_Exception_StartupError
     
*/
    public function run() {}

/**
* <div id="yaf-application.execute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::execute</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::execute</span> — <span class="dc-title">运行回调</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.execute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$entry</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">...$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   这个方法通常用于在 cron 任务中运行 Yaf_Application。   在 cron 任务中也可以使用 autoloader 和 Bootstrap 机制。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.execute-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">entry</span></dt>    <dd>     <p class="para">         一个有效的回调函数     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">...</span></dt>    <dd>     <p class="para">      要传递给函数的参数     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.execute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.execute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4141">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::execute()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">main</span><span style="color: #007700">(</span><span style="color: #9876AA">$argc</span><span style="color: #007700">, </span><span style="color: #9876AA">$argv</span><span style="color: #007700">) {<br>}<br><br></span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br>    ),<br>);<br><br></span><span style="color: #FF8000">//* Yaf_Application <br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">(</span><span style="color: #DD0000">"main"</span><span style="color: #007700">, </span><span style="color: #9876AA">$argc</span><span style="color: #007700">,  </span><span style="color: #9876AA">$argv</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"></blockquote></div>   </div>  </div> </div></div>
    *
     * This method is typically used to run Yaf_Application in a crontab work.
     * Make the crontab work can also use the autoloader and Bootstrap mechanism.
     *
     * @link https://secure.php.net/manual/en/yaf-application.execute.php
     *
     * @param callable $entry a valid callback
     * @param string ...$_ parameters will pass to the callback
     * @return void
     
*/
    public function execute(callable $entry, ...$_) {}

/**
* <div id="yaf-application.app" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::app</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::app</span> — <span class="dc-title">检索 Application 实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.app-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::app</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">    检索 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a></span> 实例。也可以使用 <span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::getApplication()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.app-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.app-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a></span> 实例，Yaf_Application 没有初始化之前，返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-application.app-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::getApplication()} - 检索应用程序</span></li>  </ul> </div></div>
    *
     * Retrieve the Yaf_Application instance, alternatively, we also could use Yaf_Dispatcher::getApplication().
     *
     * @link https://secure.php.net/manual/en/yaf-application.app.php
     *
     * @return Yaf_Application
     
*/
    public static function app() {}

/**
* <div id="yaf-application.environ" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::environ</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::environ</span> — <span class="dc-title">检索环境名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.environ-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::environ</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   返回在 yaf.environ 定义的环境值，默认值为“product”。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.environ-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.environ-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.environ-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4140">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::environ()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br>    ),<br>);<br><br></span><span style="color: #FF8000">//* Yaf_Application <br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">environ</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">product</blockquote></div>   </div>  </div> </div></div>
    *
     * Retrieve environ which was defined in yaf.environ which has a default value "product".
     *
     * @link https://secure.php.net/manual/en/yaf-application.environ.php
     *
     * @return string
     
*/
    public function environ() {}

/**
* <div id="yaf-application.bootstrap" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::bootstrap</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::bootstrap</span> — <span class="dc-title">调用 bootstrap</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.bootstrap-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::bootstrap</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="type Yaf_Bootstrap_Abstract" style="color:#EAB766">Yaf_Bootstrap_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$bootstrap</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    运行 Bootstrap，所有在 Bootstrap 中定义并以“_init”前缀命名的方法都将按照声明的顺序调用，如果没有提供参数    bootstrap，Yaf 将在 application.directory 下寻找 Bootstrap。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.bootstrap-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">bootstrap</span></dt>    <dd>     <p class="para">      <span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span> 实例           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.bootstrap-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a></span> 实例  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.bootstrap-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4134">   <p><strong>示例 #1 Bootstrap 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//*<br> * This file should be under the APPLICATION_PATH . "/application/"(which was defined in the config passed to Yaf_Application).<br> * and named Bootstrap.php,  so the Yaf_Application can find it <br> <br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract </span><span style="color: #007700">{<br>    function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"1st called\n"</span><span style="color: #007700">;<br>    }<br><br>    function </span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">) {<br>        echo </span><span style="color: #DD0000">"2nd called\n"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4135">   <p><strong>示例 #2 <span class="function"><strong>Yaf_Application::bootstrap()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>defined</span><span style="color: #007700">(</span><span style="color: #DD0000">'APPLICATION_PATH'</span><span style="color: #007700">) </span><span style="color: #FF8000">// APPLICATION_PATH will be used in the ini config file<br>    </span><span style="color: #007700">|| </span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'APPLICATION_PATH'</span><span style="color: #007700">, </span><span style="color: #9876AA">__DIR__</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">APPLICATION_PATH</span><span style="color: #007700">.</span><span style="color: #DD0000">'/conf/application.ini'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">1st called<br>2nd called</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-application.bootstrap-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span></li>  </ul> </div></div>
    *
     * Run a Bootstrap, all the methods defined in the Bootstrap and named with prefix "_init" will be called according to their declaration order, if the parameter bootstrap is not supplied, Yaf will look for a Bootstrap under application.directory.
     *
     * @link https://secure.php.net/manual/en/yaf-application.bootstrap.php
     *
     * @param Yaf_Bootstrap_Abstract $bootstrap A Yaf_Bootstrap_Abstract instance
     * @return Yaf_Application
     
*/
    public function bootstrap($bootstrap = null) {}

/**
* <div id="yaf-application.getconfig" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getConfig</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getConfig</span> — <span class="dc-title">获取 Yaf_Config_Abstract 的实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getconfig-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getConfig</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getconfig-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getconfig-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    <span class="classname"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a></span> 的实例  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.getconfig-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4142">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::getConfig()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br>    ),<br>);<br><br></span><span style="color: #FF8000">//* Yaf_Application <br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Yaf_Config_Simple Object<br>(<br>    [_config:protected] =&gt; Array<br>        (<br>            [application] =&gt; Array<br>                (<br>                    [directory] =&gt; /home/laruence/local/www/htdocs/application<br>                )<br><br>        )<br><br>    [_readonly:protected] =&gt; 1<br>)</blockquote></div>   </div>  </div> </div></div>
    *
     * @return Yaf_Config_Abstract
     
*/
    public function getConfig() {}

/**
* <div id="yaf-application.getmodules" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getModules</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getModules</span> — <span class="dc-title">获取定义的模块名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getmodules-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getModules</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">    获取在配置文件中声明的模块名，如果没有声明，它的默认值将是“Index”。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getmodules-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getmodules-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.getmodules-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4146">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::getModules()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br>    ),<br>);<br><br></span><span style="color: #FF8000">//* Yaf_Application <br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getModules</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Array<br>(<br>    [0] =&gt; Index<br>)</blockquote></div>   </div>  </div> </div></div>
    *
     * Get the modules list defined in config, if no one defined, there will always be a module named "Index".
     *
     * @link https://secure.php.net/manual/en/yaf-application.getmodules.php
     *
     * @return array
     
*/
    public function getModules() {}

/**
* <div id="yaf-application.getdispatcher" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getDispatcher</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Application::getDispatcher</span> — <span class="dc-title">获取 Yaf_Dispatcher 的实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getdispatcher-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getDispatcher</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getdispatcher-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getdispatcher-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.getdispatcher-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4143">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::getDispatcher()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/application"</span><span style="color: #007700">,<br>    ),<br>);<br><br></span><span style="color: #FF8000">//* Yaf_Application <br></span><span style="color: #9876AA">$application </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$application</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">());<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Yaf_Dispatcher Object<br>(<br>    [_router:protected] =&gt; Yaf_Router Object<br>        (<br>            [_routes:protected] =&gt; Array<br>                (<br>                    [_default] =&gt; Yaf_Route_Static Object<br>                        (<br>                        )<br><br>                )<br><br>            [_current:protected] =&gt; <br>        )<br><br>    [_view:protected] =&gt; <br>    [_request:protected] =&gt; Yaf_Request_Http Object<br>        (<br>            [module] =&gt; <br>            [controller] =&gt; <br>            [action] =&gt; <br>            [method] =&gt; Cli<br>            [params:protected] =&gt; Array<br>                (<br>                )<br><br>            [language:protected] =&gt; <br>            [_exception:protected] =&gt; <br>            [_base_uri:protected] =&gt; <br>            [uri:protected] =&gt; <br>            [dispatched:protected] =&gt; <br>            [routed:protected] =&gt; <br>        )<br><br>    [_plugins:protected] =&gt; Array<br>        (<br>        )<br><br>    [_auto_render:protected] =&gt; 1<br>    [_return_response:protected] =&gt; <br>    [_instantly_flush:protected] =&gt; <br>    [_default_module:protected] =&gt; Index<br>    [_default_controller:protected] =&gt; Index<br>    [_default_action:protected] =&gt; index<br>    [_response] =&gt; Yaf_Response_Cli Object<br>        (<br>            [_header:protected] =&gt; Array<br>                (<br>                )<br><br>            [_body:protected] =&gt; <br>            [_sendheader:protected] =&gt; <br>        )<br><br>)</blockquote></div>   </div>  </div> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-application.getdispatcher.php
     *
     * @return Yaf_Dispatcher
     
*/
    public function getDispatcher() {}

/**
* <div id="yaf-application.setappdirectory" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::setAppDirectory</h1>  <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Application::setAppDirectory</span> — <span class="dc-title">改变应用目录</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.setappdirectory-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::setAppDirectory</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.setappdirectory-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.setappdirectory-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Change the application directory
     *
     * @param string $directory
     * @return Yaf_Application
     * @since 2.1.4
     * @link https://secure.php.net/manual/en/yaf-application.setappdirectory.php
     
*/
    public function setAppDirectory($directory) {}

/**
* <div id="yaf-application.getappdirectory" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getAppDirectory</h1>  <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Application::getAppDirectory</span> — <span class="dc-title">获取应用的目录</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getappdirectory-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getAppDirectory</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getappdirectory-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getappdirectory-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @return string
     * @link https://secure.php.net/manual/en/yaf-application.getappdirectory.php
     *
     * @since 2.1.4
     
*/
    public function getAppDirectory() {}

/**
* <div id="yaf-application.getlasterrorno" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getLastErrorNo</h1>  <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::getLastErrorNo</span> — <span class="dc-title">获取最后产生的错误的错误代码</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getlasterrorno-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getLastErrorNo</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getlasterrorno-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getlasterrorno-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.getlasterrorno-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4145">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::getLastErrorNo()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">$errfile</span><span style="color: #007700">, </span><span style="color: #9876AA">$errline</span><span style="color: #007700">) {<br>   </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">());<br>   </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">() == </span><span style="color: #9876AA">YAF_ERR_NOTFOUND_CONTROLLER</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(<br>  </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>   </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">"dispatcher" </span><span style="color: #007700">=&gt; array(<br>       </span><span style="color: #DD0000">"throwException" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #FF8000">//trigger error instead of throw exception when error occure<br>      </span><span style="color: #007700">),<br>  ),<br>);<br><br></span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">, </span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(516)<br>bool(true)</blockquote></div>   </div>  </div> </div></div>
    *
     * @return int
     * @link https://secure.php.net/manual/en/yaf-application.getlasterrorno.php
     *
     * @since 2.1.2
     
*/
    public function getLastErrorNo() {}

/**
* <div id="yaf-application.getlasterrormsg" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::getLastErrorMsg</h1>  <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::getLastErrorMsg</span> — <span class="dc-title">获取最近产生的错误的错误信息</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.getlasterrormsg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::getLastErrorMsg</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.getlasterrormsg-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.getlasterrormsg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.getlasterrormsg-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4144">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::getLastErrorMsg()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">$errfile</span><span style="color: #007700">, </span><span style="color: #9876AA">$errline</span><span style="color: #007700">) {<br>   </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorMsg</span><span style="color: #007700">());<br>}<br><br></span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(                   <br> </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>   </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">"dispatcher" </span><span style="color: #007700">=&gt; array(<br>       </span><span style="color: #DD0000">"throwException" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #FF8000">//trigger error instead of throw exception when error occure<br>      </span><span style="color: #007700">),<br>  ),<br>);<br><br></span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">, </span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(69) "Could not find controller script /tmp/notexists/controllers/Index.php"</blockquote></div>   </div>  </div> </div></div>
    *
     * @return string
     * @link https://secure.php.net/manual/en/yaf-application.getlasterrormsg.php
     *
     * @since 2.1.2
     
*/
    public function getLastErrorMsg() {}

/**
* <div id="yaf-application.clearlasterror" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Application::clearLastError</h1>  <p class="verinfo">(Yaf &gt;=2.1.2)</p><p class="refpurpose"><span class="refname">Yaf_Application::clearLastError</span> — <span class="dc-title">清除最后的错误信息</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-application.clearlasterror-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Application::clearLastError</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-application.clearlasterror-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-application.clearlasterror-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-application.clearlasterror-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4136">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Application::clearLastError()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">error_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">$errfile</span><span style="color: #007700">, </span><span style="color: #9876AA">$errline</span><span style="color: #007700">) {<br>   </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">clearLastError</span><span style="color: #007700">();<br>   </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getLastErrorNo</span><span style="color: #007700">());<br>}<br> <br></span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(                   <br> </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>   </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"/tmp/notexists"</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">"dispatcher" </span><span style="color: #007700">=&gt; array(<br>       </span><span style="color: #DD0000">"throwException" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #FF8000">//trigger error instead of throw exception when error occure<br>      </span><span style="color: #007700">),<br>  ),<br>);<br>  <br></span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">setErrorHandler</span><span style="color: #007700">(</span><span style="color: #DD0000">"error_handler"</span><span style="color: #007700">, </span><span style="color: #9876AA">E_RECOVERABLE_ERROR</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(0)</blockquote></div>   </div>  </div> </div></div>
    *
     * @return void
     * @link https://secure.php.net/manual/en/yaf-application.clearlasterror.php
     * @since 2.1.2
     
*/
    public function clearLastError() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-application.destruct.php
     */
    public function __destruct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-application.clone.php
     */
    private function __clone() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-application.sleep.php
     */
    private function __sleep() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-application.wakeup.php
     */
    private function __wakeup() {}
}

/**
* <div id="class.yaf-dispatcher" class="reference"> <h1 class="title">Yaf_Dispatcher 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-dispatcher.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Dispatcher</strong></span>用于初始化处理请求的运行环境,     它协调路由来的请求, 并分发和执行发现的动作,     然后收集动作产生的响应, 输出响应给请求者, 并在整个过程完成以后返回响应.   </p>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Dispatcher</strong></span>是单例模式运行的,     也就是说自始至终只生成一个<span class="classname"><strong class="classname">Yaf_Dispatcher</strong></span>实例,     因此, 可以把它看成是在分发过程中生成的对象的注册表, 可以从中获取到分发过程中产生的对象.   </p>  </div>  <div class="section" id="yaf-dispatcher.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">final</span>      <span class="modifier">class</span> <strong class="classname">Yaf_Dispatcher</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.router">$<var class="varname">_router</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.view">$<var class="varname">_view</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.request">$<var class="varname">_request</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.plugins">$<var class="varname">_plugins</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="modifier">static</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.instance">$<var class="varname">_instance</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.auto-render">$<var class="varname">_auto_render</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.return-response">$<var class="varname">_return_response</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.instantly-flush">$<var class="varname">_instantly_flush</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-module">$<var class="varname">_default_module</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-controller">$<var class="varname">_default_controller</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php#yaf-dispatcher.props.default-action">$<var class="varname">_default_action</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.autorender.php" class="methodname" style="color:#CC7832">autoRender</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.catchexception.php" class="methodname" style="color:#CC7832">catchException</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.disableview.php" class="methodname" style="color:#CC7832">disableView</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.dispatch.php" class="methodname" style="color:#CC7832">dispatch</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.enableview.php" class="methodname" style="color:#CC7832">enableView</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.flushinstantly.php" class="methodname" style="color:#CC7832">flushInstantly</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getapplication.php" class="methodname" style="color:#CC7832">getApplication</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getdefaultaction.php" class="methodname" style="color:#CC7832">getDefaultAction</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getdefaultcontroller.php" class="methodname" style="color:#CC7832">getDefaultController</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getdefaultmodule.php" class="methodname" style="color:#CC7832">getDefaultModule</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getinstance.php" class="methodname" style="color:#CC7832">getInstance</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getrequest.php" class="methodname" style="color:#CC7832">getRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.getrouter.php" class="methodname" style="color:#CC7832">getRouter</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-router.php" class="type Yaf_Router" style="color:#EAB766">Yaf_Router</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.initview.php" class="methodname" style="color:#CC7832">initView</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$templates_dir</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.registerplugin.php" class="methodname" style="color:#CC7832">registerPlugin</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="type Yaf_Plugin_Abstract" style="color:#EAB766">Yaf_Plugin_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$plugin</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.returnresponse.php" class="methodname" style="color:#CC7832">returnResponse</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.setdefaultaction.php" class="methodname" style="color:#CC7832">setDefaultAction</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.setdefaultcontroller.php" class="methodname" style="color:#CC7832">setDefaultController</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.setdefaultmodule.php" class="methodname" style="color:#CC7832">setDefaultModule</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.seterrorhandler.php" class="methodname" style="color:#CC7832">setErrorHandler</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">call</span> <span class="parameter" style="color:#3A95FF">$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$error_types</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.setrequest.php" class="methodname" style="color:#CC7832">setRequest</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.setview.php" class="methodname" style="color:#CC7832">setView</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span> <span class="parameter" style="color:#3A95FF">$view</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-dispatcher.throwexception.php" class="methodname" style="color:#CC7832">throwException</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>   }</div>  </div>    <div class="section" id="yaf-dispatcher.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-dispatcher.props.router"><var class="varname">_router</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.view"><var class="varname">_view</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.request"><var class="varname">_request</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.plugins"><var class="varname">_plugins</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.instance"><var class="varname">_instance</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.auto-render"><var class="varname">_auto_render</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.return-response"><var class="varname">_return_response</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.instantly-flush"><var class="varname">_instantly_flush</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.default-module"><var class="varname">_default_module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.default-controller"><var class="varname">_default_controller</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-dispatcher.props.default-action"><var class="varname">_default_action</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Dispatcher::autoRender} — 开启/关闭自动渲染</li><li>{@link Yaf_Dispatcher::catchException} — 开启/关闭自动异常捕获</li><li>{@link Yaf_Dispatcher::__construct} — Yaf_Dispatcher 构造方法</li><li>{@link Yaf_Dispatcher::disableView} — 关闭视图渲染</li><li>{@link Yaf_Dispatcher::dispatch} — 分发请求</li><li>{@link Yaf_Dispatcher::enableView} — 开启视图渲染</li><li>{@link Yaf_Dispatcher::flushInstantly} — 打开/关闭即时刷新</li><li>{@link Yaf_Dispatcher::getApplication} — 检索应用程序</li><li>{@link Yaf_Dispatcher::getDefaultAction} — Retrive the default action name</li><li>{@link Yaf_Dispatcher::getDefaultController} — Retrive the default controller name</li><li>{@link Yaf_Dispatcher::getDefaultModule} — Retrive the default module name</li><li>{@link Yaf_Dispatcher::getInstance} — 获取当前的Yaf_Dispatcher实例</li><li>{@link Yaf_Dispatcher::getRequest} — 检索请求实例</li><li>{@link Yaf_Dispatcher::getRouter} — 检索路由实例</li><li>{@link Yaf_Dispatcher::initView} — 初始化视图并返回</li><li>{@link Yaf_Dispatcher::registerPlugin} — 注册插件</li><li>{@link Yaf_Dispatcher::returnResponse} — The returnResponse purpose</li><li>{@link Yaf_Dispatcher::setDefaultAction} — 设置默认动作名</li><li>{@link Yaf_Dispatcher::setDefaultController} — 设置默认控制器名</li><li>{@link Yaf_Dispatcher::setDefaultModule} — 设置默认模块名</li><li>{@link Yaf_Dispatcher::setErrorHandler} — 设置错误处理</li><li>{@link Yaf_Dispatcher::setRequest} — The setRequest purpose</li><li>{@link Yaf_Dispatcher::setView} — 设置自定义视图引擎</li><li>{@link Yaf_Dispatcher::throwException} — 开启/关闭异常抛出</li></ul></div>
*
 * <p><b>Yaf_Dispatcher</b> purpose is to initialize the request environment, route the incoming request, and then dispatch any discovered actions; it aggregates any responses and returns them when the process is complete.</p><br/>
 * <p><b>Yaf_Dispatcher</b> also implements the Singleton pattern, meaning only a single instance of it may be available at any given time. This allows it to also act as a registry on which the other objects in the dispatch process may draw.</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-dispatcher.php
 
*/
final class Yaf_Dispatcher
{
    /**
     * @var Yaf_Dispatcher
     */
    protected static $_instance;

    /**
     * @var Yaf_Router
     */
    protected $_router;

    /**
     * @var Yaf_View_Interface
     */
    protected $_view;

    /**
     * @var Yaf_Request_Abstract
     */
    protected $_request;

    /**
     * @var Yaf_Plugin_Abstract
     */
    protected $_plugins;

    /**
     * @var bool
     */
    protected $_auto_render = true;

    /**
     * @var string
     */
    protected $_return_response = "";

    /**
     * @var string
     */
    protected $_instantly_flush = "";

    /**
     * @var string
     */
    protected $_default_module;

    /**
     * @var string
     */
    protected $_default_controller;

    /**
     * @var string
     */
    protected $_default_action;

    /**
     * @link https://secure.php.net/manual/en/yaf-dispatcher.construct.php
     */
    private function __construct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-dispatcher.clone.php
     */
    private function __clone() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-dispatcher.sleep.php
     */
    private function __sleep() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-dispatcher.wakeup.php
     */
    private function __wakeup() {}

/**
* <div id="yaf-dispatcher.enableview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::enableView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::enableView</span> — <span class="dc-title">开启视图渲染</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.enableview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::enableView</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.enableview-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.enableview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * enable view rendering
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.enableview.php
     *
     * @return Yaf_Dispatcher
     
*/
    public function enableView() {}

    /**
     * @return Yaf_Response_Abstract|null
     */
    public function getResponse() {}

/**
* <div id="yaf-dispatcher.getdefaultmodule" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getDefaultModule</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getDefaultModule</span> — <span class="dc-title">Retrive the default module name</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getdefaultmodule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getDefaultModule</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   get the default module name  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getdefaultmodule-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getdefaultmodule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, module name, default is "Index"  </p> </div></div>
    *
     * @return string|null
     
*/
    public function getDefaultModule() {}

/**
* <div id="yaf-dispatcher.getdefaultcontroller" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getDefaultController</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getDefaultController</span> — <span class="dc-title">Retrive the default controller name</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getdefaultcontroller-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getDefaultController</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   get the default controller name  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getdefaultcontroller-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getdefaultcontroller-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, default controller name, default is "Index"  </p> </div></div>
    *
     * @return string|null
     
*/
    public function getDefaultController() {}

/**
* <div id="yaf-dispatcher.getdefaultaction" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getDefaultAction</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getDefaultAction</span> — <span class="dc-title">Retrive the default action name</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getdefaultaction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getDefaultAction</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   get the default action name  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getdefaultaction-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getdefaultaction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, default action name, default is "index"  </p> </div></div>
    *
     * @return string|null
     
*/
    public function getDefaultAction() {}

/**
* <div id="yaf-dispatcher.disableview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::disableView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::disableView</span> — <span class="dc-title">关闭视图渲染</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.disableview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::disableView</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   禁用视图引擎，用于一些需要用户自己输出的应用程序   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     也可以在操作中简单的返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 来阻止动作的自动渲染    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.disableview-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.disableview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * <p>disable view engine, used in some app that user will output by himself</p><br/>
     * <b>Note:</b>
     * <p>you can simply return FALSE in a action to prevent the auto-rendering of that action</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.disableview.php
     *
     * @return bool
     
*/
    public function disableView() {}

/**
* <div id="yaf-dispatcher.initview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::initView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::initView</span> — <span class="dc-title">初始化视图并返回</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.initview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::initView</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$templates_dir</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.initview-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">templates_dir</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.initview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Initialize view and return it
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.initview.php
     *
     * @param string $templates_dir
     * @param array|null $options
     * @return Yaf_View_Interface
     
*/
    public function initView($templates_dir, ?array $options = null) {}

/**
* <div id="yaf-dispatcher.setview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setView</span> — <span class="dc-title">设置自定义视图引擎</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.setview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setView</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span> <span class="parameter" style="color:#3A95FF">$view</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">   如果想使用自定义视图引擎而不是 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-view-simple.php" class="classname">Yaf_View_Simple</a></span>，此方法会帮你解决这个问题。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setview-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">view</span></dt>    <dd>     <p class="para">       <span class="classname"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="classname">Yaf_View_Interface</a></span> 实例     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-dispatcher.setview-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4151">   <p><strong>示例 #1 自定义视图引擎示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">require </span><span style="color: #DD0000">"/path/to/smarty/Smarty.class.php"</span><span style="color: #007700">;<br><br>class </span><span style="color: #9876AA">Smarty_Adapter </span><span style="color: #007700">implements </span><span style="color: #9876AA">Yaf_View_Interface<br></span><span style="color: #007700">{<br>    </span><span style="color: #FF8000">//*<br>     * Smarty object<br>     * @var Smarty<br>     <br>    </span><span style="color: #007700">public </span><span style="color: #9876AA">$_smarty</span><span style="color: #007700">;<br> <br>    </span><span style="color: #FF8000">//*<br>     * Constructor<br>     *<br>     * @param string $tmplPath<br>     * @param array $extraParams<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmplPath </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">$extraParams </span><span style="color: #007700">= array()) {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty </span><span style="color: #007700">= new </span><span style="color: #9876AA">Smarty</span><span style="color: #007700">;<br> <br>        if (</span><span style="color: #9876AA">null </span><span style="color: #007700">!== </span><span style="color: #9876AA">$tmplPath</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setScriptPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmplPath</span><span style="color: #007700">);<br>        }<br> <br>        foreach (</span><span style="color: #9876AA">$extraParams </span><span style="color: #007700">as </span><span style="color: #9876AA">$key </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">$key </span><span style="color: #007700">= </span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br>        }<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Set the path to the templates<br>     *<br>     * @param string $path The directory to set as the path.<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">setScriptPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">)<br>    {<br>        if (</span><span style="color: #9876AA">is_readable</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">)) {<br>            </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">template_dir </span><span style="color: #007700">= </span><span style="color: #9876AA">$path</span><span style="color: #007700">;<br>            return;<br>        }<br> <br>        throw new </span><span style="color: #9876AA">Exception</span><span style="color: #007700">(</span><span style="color: #DD0000">'Invalid path provided'</span><span style="color: #007700">);<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Assign a variable to the template<br>     *<br>     * @param string $key The variable name.<br>     * @param mixed $val The variable value.<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">__set</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$val</span><span style="color: #007700">)<br>    {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">$val</span><span style="color: #007700">);<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Allows testing with empty() and isset() to work<br>     *<br>     * @param string $key<br>     * @return boolean<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">__isset</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">)<br>    {<br>        return (</span><span style="color: #9876AA">null </span><span style="color: #007700">!== </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get_template_vars</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">));<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Allows unset() on object properties to work<br>     *<br>     * @param string $key<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">__unset</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">)<br>    {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear_assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">);<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Assign variables to the template<br>     *<br>     * Allows setting a specific key to the specified value, OR passing<br>     * an array of key =&gt; value pairs to set en masse.<br>     *<br>     * @see __set()<br>     * @param string|array $spec The assignment strategy to use (key or<br>     * array of key =&gt; value pairs)<br>     * @param mixed $value (Optional) If assigning a named variable,<br>     * use this as the value.<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">, </span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">) {<br>        if (</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">)) {<br>            </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">);<br>            return;<br>        }<br> <br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #9876AA">$spec</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Clear all assigned variables<br>     *<br>     * Clears all variables assigned to Yaf_View either via<br>     * {@link assign()} or property overloading<br>     * ({@link __get()}/{@link __set()}).<br>     *<br>     * @return void<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">clearVars</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear_all_assign</span><span style="color: #007700">();<br>    }<br> <br>    </span><span style="color: #FF8000">//*<br>     * Processes a template and returns the output.<br>     *<br>     * @param string $name The template to process.<br>     * @return string The output.<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">render</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">) {<br>        return </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">display</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">) {<br>        echo </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_smarty</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br>    }<br><br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4152">   <p><strong>示例 #2 <span class="function"><strong>Yaf_Dispatcher::setView()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract </span><span style="color: #007700">{<br><br>    </span><span style="color: #FF8000">//*<br>     * there are some config for smarty in the config:<br>     *<br>     * smarty.left_delimiter   = "{{"<br>     * smarty.right_delimiter  = "}}"<br>     * smarty.template_dir     = APPLICATION_PATH "/views/scripts/"<br>     * smarty.compile_dir      = APPLICATION_PATH "/views/templates_c/"<br>     * smarty.cache_dir        = APPLICATION_PATH "/views/templates_d/"<br>     *<br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$config </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">, </span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">_initLocalName</span><span style="color: #007700">() {<br>        </span><span style="color: #FF8000">//* we put class Smarty_Adapter under the local library directory <br>        </span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">'Smarty'</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">_initSmarty</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$smarty </span><span style="color: #007700">= new </span><span style="color: #9876AA">Smarty_Adapter</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"smarty"</span><span style="color: #007700">));<br>        </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setView</span><span style="color: #007700">(</span><span style="color: #9876AA">$smarty</span><span style="color: #007700">);<br>        </span><span style="color: #FF8000">// now the Smarty view engine become the default view engine of Yaf <br>    </span><span style="color: #007700">}<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.setview-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="classname">Yaf_View_Interface</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-view-simple.php" class="classname">Yaf_View_Simple</a></span></li>  </ul> </div></div>
    *
     * This method provides a solution for that if you want use a custom view engine instead of Yaf_View_Simple
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.setview.php
     *
     * @param Yaf_View_Interface $view A Yaf_View_Interface instance
     * @return Yaf_Dispatcher
     
*/
    public function setView($view) {}

/**
* <div id="yaf-dispatcher.setrequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setRequest</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setRequest</span> — <span class="dc-title">The setRequest purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.setrequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setRequest</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setrequest-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">plugin</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setrequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.setrequest.php
     *
     * @param Yaf_Request_Abstract $request
     * @return Yaf_Dispatcher
     
*/
    public function setRequest($request) {}

/**
* <div id="yaf-dispatcher.getapplication" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getApplication</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getApplication</span> — <span class="dc-title">检索应用程序</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getapplication-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getApplication</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-application.php" class="type Yaf_Application" style="color:#EAB766">Yaf_Application</a></span></div>  <p class="para rdfs-comment">   检索 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a></span> 实例，等同于 <span class="methodname" style="color:#CC7832">{@link Yaf_Application::app()}</span>。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getapplication-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getapplication-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.getapplication-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Application::app()} - 检索 Application 实例</span></li>  </ul> </div></div>
    *
     * Retrieve the Yaf_Application instance. same as Yaf_Application::app().
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.getapplication.php
     * @return Yaf_Application
     
*/
    public function getApplication() {}

/**
* <div id="yaf-dispatcher.getrouter" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getRouter</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getRouter</span> — <span class="dc-title">检索路由实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getrouter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getRouter</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-router.php" class="type Yaf_Router" style="color:#EAB766">Yaf_Router</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getrouter-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getrouter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.getrouter.php
     *
     * @return Yaf_Router
     
*/
    public function getRouter() {}

/**
* <div id="yaf-dispatcher.getrequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getRequest</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getRequest</span> — <span class="dc-title">检索请求实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getrequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getRequest</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getrequest-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getrequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.getrequest.php
     *
     * @return Yaf_Request_Abstract
     
*/
    public function getRequest() {}

/**
* <div id="yaf-dispatcher.seterrorhandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setErrorHandler</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setErrorHandler</span> — <span class="dc-title">设置错误处理</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.seterrorhandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setErrorHandler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">call</span> <span class="parameter" style="color:#3A95FF">$callback</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">$error_types</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">   为 Yaf 设置错误处理程序，当 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.throwexception" class="link">application.dispatcher.throwException</a>   关闭时，Yaf 将在发生意外错误时触发可捕获错误。  </p>  <p class="para">   因此，将在错误出现时调用该错误处理程序。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.seterrorhandler-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <p class="para">      可调用的回调     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">error_types</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.seterrorhandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.seterrorhandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::throwException()} - 开启/关闭异常抛出</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Application::getLastErrorNo()} - 获取最后产生的错误的错误代码</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Application::getLastErrorMsg()} - 获取最近产生的错误的错误信息</span></li>  </ul> </div></div>
    *
     * <p>Set error handler for Yaf. when application.dispatcher.throwException is off, Yaf will trigger catch-able error while unexpected errors occurred.</p><br/>
     * <p>Thus, this error handler will be called while the error raise.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.seterrorhandler.php
     *
     * @param callable $callback a callable callback
     * @param int $error_types YAF_ERR_* constants mask
     *
     * @return Yaf_Dispatcher
     
*/
    public function setErrorHandler($callback, $error_types = YAF_ERR_TYPE_ERROR) {}

/**
* <div id="yaf-dispatcher.setdefaultmodule" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setDefaultModule</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultModule</span> — <span class="dc-title">设置默认模块名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultmodule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setDefaultModule</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultmodule-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">module</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultmodule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Change default module name
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.setdefaultmodule.php
     *
     * @param string $module
     * @return Yaf_Dispatcher
     
*/
    public function setDefaultModule($module) {}

/**
* <div id="yaf-dispatcher.setdefaultcontroller" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setDefaultController</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultController</span> — <span class="dc-title">设置默认控制器名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultcontroller-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setDefaultController</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultcontroller-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">controller</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultcontroller-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Change default controller name
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.setdefaultcontroller.php
     *
     * @param string $controller
     * @return Yaf_Dispatcher
     
*/
    public function setDefaultController($controller) {}

/**
* <div id="yaf-dispatcher.setdefaultaction" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::setDefaultAction</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::setDefaultAction</span> — <span class="dc-title">设置默认动作名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.setdefaultaction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::setDefaultAction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.setdefaultaction-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">action</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.setdefaultaction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Change default action name
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.setdefaultaction.php
     *
     * @param string $action
     * @return Yaf_Dispatcher
     
*/
    public function setDefaultAction($action) {}

/**
* <div id="yaf-dispatcher.returnresponse" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::returnResponse</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::returnResponse</span> — <span class="dc-title">The returnResponse purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.returnresponse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::returnResponse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.returnresponse-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.returnresponse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.returnresponse.php
     *
     * @param bool $flag
     * @return Yaf_Dispatcher
     
*/
    public function returnResponse($flag) {}

/**
* <div id="yaf-dispatcher.autorender" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::autoRender</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::autoRender</span> — <span class="dc-title">开启/关闭自动渲染</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.autorender-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::autoRender</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a></span> 将会在分发到来的请求后自动渲染，可以带 <span class="parameter" style="color:#3A95FF">flag</span> <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>   调用此方法来阻止渲染。   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">      也可以在操作中简单的返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 来阻止动作的自动渲染     </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.autorender-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">       bool      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        自 2.2.0 起。如果没有指定此参数，则会返回当前状态       </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.autorender-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-dispatcher.autorender-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4148">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Dispatcher::autoRender()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>     </span><span style="color: #FF8000">// init method will be called as soon as a controller is initialized  <br>     </span><span style="color: #007700">public function </span><span style="color: #9876AA">init</span><span style="color: #007700">() {<br>         if (</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">isXmlHttpRequest</span><span style="color: #007700">()) {<br>             </span><span style="color: #FF8000">//do not call render for ajax request<br>             //we will outpu a json string<br>             </span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">autoRender</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br>         }<br>     } <br><br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;"></blockquote></div>   </div>  </div> </div></div>
    *
     * <p>Yaf_Dispatcher will render automatically after dispatches an incoming request, you can prevent the rendering by calling this method with $flag TRUE</p><br/>
     * <b>Note:</b>
     * <p>you can simply return FALSE in a action to prevent the auto-rendering of that action</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.autorender.php
     *
     * @param bool $flag since 2.2.0, if this parameter is not given, then the current state will be set
     * @return Yaf_Dispatcher
     
*/
    public function autoRender($flag = null) {}

/**
* <div id="yaf-dispatcher.flushinstantly" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::flushInstantly</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::flushInstantly</span> — <span class="dc-title">打开/关闭即时刷新</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.flushinstantly-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::flushInstantly</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.flushinstantly-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">      bool       </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        自 2.2.0 起，如果未指定参数，然后返回当前状态       </p>      </blockquote>              </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.flushinstantly-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Switch on/off the instant flushing
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.flushinstantly.php
     *
     * @param bool $flag since 2.2.0, if this parameter is not given, then the current state will be set
     * @return Yaf_Dispatcher
     
*/
    public function flushInstantly($flag = null) {}

/**
* <div id="yaf-dispatcher.getinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::getInstance</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::getInstance</span> — <span class="dc-title">获取当前的Yaf_Dispatcher实例</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.getinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::getInstance</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.getinstance-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.getinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.getinstance.php
     *
     * @return Yaf_Dispatcher
     
*/
    public static function getInstance() {}

/**
* <div id="yaf-dispatcher.dispatch" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::dispatch</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::dispatch</span> — <span class="dc-title">分发请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.dispatch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::dispatch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span></div>  <p class="para rdfs-comment">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a></span> 的这个方法做的工作很繁重.它需要 request 对象。  </p>  <p class="para">    分发过程有三个不同的事件：    </p><ul class="simplelist">      <li>路由</li>      <li>分发</li>      <li>响应</li>    </ul>    当调用 <span class="function"><strong>Yaf_Dispatcher::dispatch()</strong></span> 时，路由只发生一次，使用请求对象中的值。分发发生在循环中；一个请求可能会分发出多个动作，或者    controller 或 plugin 可能重置请求对象来强制分发其它动作（参见    <span class="classname"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></span>）。当所有都执行完毕，<span class="classname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a></span> 返回响应。   </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.dispatch-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.dispatch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * <p>This method does the heavy work of the Yaf_Dispatcher. It take a request object.</p><br/>
     * <p>The dispatch process has three distinct events:</p>
     * <ul>
     * <li>Routing</li>
     * <li>Dispatching</li>
     * <li>Response</li>
     * </ul>
     * <p>Routing takes place exactly once, using the values in the request object when dispatch() is called. Dispatching takes place in a loop; a request may either indicate multiple actions to dispatch, or the controller or a plugin may reset the request object to force additional actions to dispatch(see Yaf_Plugin_Abstract. When all is done, the Yaf_Dispatcher returns a response.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.dispatch.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @throws Yaf_Exception_TypeError
     * @throws Yaf_Exception_RouterFailed
     * @throws Yaf_Exception_DispatchFailed
     * @throws Yaf_Exception_LoadFailed
     * @throws Yaf_Exception_LoadFailed_Action
     * @throws Yaf_Exception_LoadFailed_Controller
     *
     * @return Yaf_Response_Abstract
     
*/
    public function dispatch($request) {}

/**
* <div id="yaf-dispatcher.throwexception" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::throwException</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::throwException</span> — <span class="dc-title">开启/关闭异常抛出</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.throwexception-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::throwException</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">   当意外的错误发生的时候，开启/关闭异常抛出。当开启的时候，Yaf 将会抛出异常而不是触发可捕捉的错误。  </p>  <p class="para">   你也可以使用 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.throwexception" class="link">    application.dispatcher.throwException</a> 来达到相同的目的。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.throwexception-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">       bool        </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.throwexception-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-dispatcher.throwexception-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4153">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Dispatcher::throwexception()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'application' </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">'directory' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),<br>    ),<br>);<br></span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">throwException</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br><br>try {<br>    </span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br>} catch (</span><span style="color: #9876AA">Yaf_Exception $e</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">());<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(59) "Could not find controller script /tmp/controllers/Index.php"</blockquote></div>   </div>  </div>  <div class="example" id="example-4154">   <p><strong>示例 #2 <span class="function"><strong>Yaf_Dispatcher::throwexception()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$config </span><span style="color: #007700">= array(<br>    </span><span style="color: #DD0000">'application' </span><span style="color: #007700">=&gt; array(<br>        </span><span style="color: #DD0000">'directory' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">),<br>    ),<br>);<br></span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getDispatcher</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">throwException</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">PHP Catchable fatal error:  Yaf_Application::run(): Could not find controller script /tmp/controllers/Index.php in /tmp/1.php on line 12</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.throwexception-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::catchException()} - 开启/关闭自动异常捕获</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a></span></li>  </ul> </div></div>
    *
     * <p>Switch on/off exception throwing while unexpected error occurring. When this is on, Yaf will throwing exceptions instead of triggering catchable errors.</p><br/>
     * <p>You can also use application.dispatcher.throwException to achieve the same purpose.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.throwexception.php
     *
     * @param bool $flag
     * @return Yaf_Dispatcher
     
*/
    public function throwException($flag = null) {}

/**
* <div id="yaf-dispatcher.catchexception" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::catchException</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::catchException</span> — <span class="dc-title">开启/关闭自动异常捕获</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.catchexception-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::catchException</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">     当 application.dispatcher.throwException 开启的时候（也可以通过调用 <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::throwException(TRUE)()</strong></span>     来开启），Yaf 会在错误发生时抛出 Exception 而不是触发错误。  </p>  <p class="para">        如果开启了 <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::catchException()</strong></span> （可以通过设置 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.dispatcher.catchexception" class="link">application.dispatcher.catchException</a> 来开启），如果已经定义，所有未捕获的     Exception 都将被 ErrorController::error 捕获。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.catchexception-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">       bool     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.catchexception-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-dispatcher.catchexception-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4149">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Dispatcher::catchException()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">// if you defined a ErrorController like following <br><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">ErrorController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>     </span><span style="color: #FF8000">//* <br>      * you can also call to Yaf_Request_Abstract::getException to get the <br>      * un-caught exception.<br>      <br>     </span><span style="color: #007700">public function </span><span style="color: #9876AA">errorAction</span><span style="color: #007700">(</span><span style="color: #9876AA">$exception</span><span style="color: #007700">) {<br>        </span><span style="color: #FF8000">// error occurs <br>        </span><span style="color: #007700">switch (</span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCode</span><span style="color: #007700">()) {<br>            case </span><span style="color: #9876AA">YAF_ERR_NOTFOUND_MODULE</span><span style="color: #007700">:<br>            case </span><span style="color: #9876AA">YAF_ERR_NOTFOUND_CONTROLLER</span><span style="color: #007700">:<br>            case </span><span style="color: #9876AA">YAF_ERR_NOTFOUND_ACTION</span><span style="color: #007700">:<br>            case </span><span style="color: #9876AA">YAF_ERR_NOTFOUND_VIEW</span><span style="color: #007700">:<br>                echo </span><span style="color: #9876AA">404</span><span style="color: #007700">, </span><span style="color: #DD0000">":"</span><span style="color: #007700">, </span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br>                break;<br>            default :<br>                </span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br>                echo </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">":"</span><span style="color: #007700">, </span><span style="color: #9876AA">$exception</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br>                break;<br>        }<br>     } <br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">// now if some error occur, assuming access a non-exists controller(or you can throw a exception yourself): <br>404:Could not find controller script *application/controllers/No-exists-controller.php</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.catchexception-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::throwException()} - 开启/关闭异常抛出</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::setErrorHandler()} - 设置错误处理</span></li>  </ul> </div></div>
    *
     * <p>While the application.dispatcher.throwException is On(you can also calling to <b>Yaf_Dispatcher::throwException(TRUE)</b> to enable it), Yaf will throw Exception whe error occurs instead of trigger error.</p><br/>
     * <p>then if you enable <b>Yaf_Dispatcher::catchException()</b>(also can enabled by set application.dispatcher.catchException), all uncaught Exceptions will be caught by ErrorController::error if you have defined one.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.catchexception.php
     *
     * @param bool $flag
     * @return Yaf_Dispatcher
     
*/
    public function catchException($flag = null) {}

/**
* <div id="yaf-dispatcher.registerplugin" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Dispatcher::registerPlugin</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Dispatcher::registerPlugin</span> — <span class="dc-title">注册插件</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-dispatcher.registerplugin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Dispatcher::registerPlugin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="type Yaf_Plugin_Abstract" style="color:#EAB766">Yaf_Plugin_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$plugin</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="type Yaf_Dispatcher" style="color:#EAB766">Yaf_Dispatcher</a></span></div>  <p class="para rdfs-comment">   注册插件（参见 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></span>）。通常在   Bootstrap 中注册插件（参见 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span>）。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-dispatcher.registerplugin-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">plugin</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-dispatcher.registerplugin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-dispatcher.registerplugin-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4150">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Dispatcher::registerPlugin()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract </span><span style="color: #007700">{<br>  public function </span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>    </span><span style="color: #FF8000">//*<br>    * Yaf assumes plugin scripts under [application.directory] .  "/plugins" <br>    * for this case, it will be:<br>    * [application.directory] . "/plugins/" . "User" . [application.ext]<br>     <br>    </span><span style="color: #9876AA">$user </span><span style="color: #007700">= new </span><span style="color: #9876AA">UserPlugin</span><span style="color: #007700">();<br>    </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">$user</span><span style="color: #007700">);<br>  }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-dispatcher.registerplugin-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></span></li>  </ul>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span></li>  </ul> </div></div>
    *
     * Register a plugin(see Yaf_Plugin_Abstract). Generally, we register plugins in Bootstrap(see Yaf_Bootstrap_Abstract).
     *
     * @link https://secure.php.net/manual/en/yaf-dispatcher.registerplugin.php
     *
     * @param Yaf_Plugin_Abstract $plugin
     * @return Yaf_Dispatcher
     
*/
    public function registerPlugin($plugin) {}

    /**
     * @param Yaf_Response_Abstract $response
     * @return Yaf_Dispatcher|null
     */
    public function setResponse($response) {}
}

/**
* <div id="class.yaf-loader" class="reference"> <h1 class="title">Yaf_Loader 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-loader.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Loader</strong></span> 为 Yaf 提供了自动加载功能的全面解决方案。   </p>   <p class="para">    在第一次检索 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-application.php" class="classname">Yaf_Application</a></span> 实例时，<span class="classname"><strong class="classname">Yaf_Loader</strong></span>    将实例化一个单例，并使用 spl_autoload 注册自己。通过 <span class="methodname" style="color:#CC7832">{@link Yaf_Loader::getInstance()}</span> 检索实例   </p>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Loader</strong></span> 加载类时仅仅尝试一次，如果失败了，取决于 <a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.use-spl-autoload" class="link">yaf.use_spl_auload</a>，如果配置是    On，<span class="methodname" style="color:#CC7832">{@link Yaf_Loader::autoload()}</span> 将会返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，从而给其它自动加载提供机会。如果为    Off（默认），<span class="methodname" style="color:#CC7832">{@link Yaf_Loader::autoload()}</span> 将会返回    <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，更重要的是将会抛出非常有用的警告（对于找出类无法加载的原因非常有用）。    </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">      请保持 yaf.use_spl_autoload 为 Off，除非有一些 library 有自己的自动加载机制，并且是无法重写的。     </p>    </blockquote>      <p class="para">    默认情况下，<span class="classname"><strong class="classname">Yaf_Loader</strong></span> 假设所有 library（类定义的脚本）储存进在    php.ini（yaf.library）定义的<a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.library" class="link">全局库目录</a>中。   </p>   <p class="para">    如果使用 <span class="classname"><strong class="classname">Yaf_Loader</strong></span> 在<a href="https://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.library" class="link">本地库目录</a>（在    application.ini 中定义，默认是 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a> .    "/library"）搜索一些类（库），需要使用 <span class="methodname" style="color:#CC7832">{@link Yaf_Loader::registerLocalNameSpace()}</span> 注册本地类前缀   </p>   <p class="para">    看看一些示例（假设 APPLICATION_PATH 是 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a>）：    </p><div class="example" id="example-4168">     <p><strong>示例 #1 Config example</strong></p>      <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">// Assuming the following configure in php.ini:<br>yaf.library = "/global_dir"<br><br>//Assuming the following configure in application.ini<br>application.library = APPLICATION_PATH "/library"</blockquote></div>     </div>    </div>    假设以下本地名称空间已注册：    <div class="example" id="example-4169">     <p><strong>示例 #2 注册本地命名空间</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br>     public function </span><span style="color: #9876AA">_initLoader</span><span style="color: #007700">(</span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">) {<br>          </span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">registerLocalNameSpace</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"Foo"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Bar"</span><span style="color: #007700">));<br>     }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>     </div>    </div>    自动加载示例：    <div class="example" id="example-4170">     <p><strong>示例 #3 加载类示例</strong></p>      <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">class Foo_Bar_Test =&gt;<br>  // APPLICATION_PATH/library/Foo/Bar/Test.php<br>  <br>class GLO_Name  =&gt;<br>  // /global_dir/Glo/Name.php<br> <br>class BarNon_Test<br>  // /global_dir/Barnon/Test.php</blockquote></div>      </div>    </div>   <div class="example" id="example-4171">    <p><strong>示例 #4 加载命名空间类示例</strong></p>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">class \Foo\Bar\Dummy =&gt;<br>   // APPLICATION_PATH/library/Foo/Bar/Dummy.php<br><br>class \FooBar\Bar\Dummy =&gt;<br>   // /global_dir/FooBar/Bar/Dummy.php</blockquote></div>    </div>    </div>    <p class="para">    可能会注意到所有文件夹名字的首字母是大写的，可以通过在 php.ini 中设置 <a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.lowcase-path" class="link">yaf.lowcase_path</a> = On 来将它们设为小写。  </p>  <p class="para">   <span class="classname"><strong class="classname">Yaf_Loader</strong></span> 也是设计来加载 MVC 类，响应的规则如下：   </p><div class="example" id="example-4172">    <p><strong>示例 #5 MVC 类加载示例</strong></p>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">Controller Classes =&gt;<br>// APPLICATION_PATH/controllers/<br><br>Model Classes =&gt;<br>// APPLICATION_PATH/models/<br><br>Plugin Classes =&gt;<br>// APPLICATION_PATH/plugins/</blockquote></div>    </div>   </div>   Yaf 通过识别类的后缀（这个是默认的，也可以通过改变配置项 <a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.name-suffix" class="link">yaf.name_suffix</a> 来更改为前缀）来决定它是否是 MVC 类：   <div class="example" id="example-4173">    <p><strong>示例 #6 MVC 类区别</strong></p>   <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">Controller Classes =&gt;<br>    // ***Controller<br><br>Model Classes =&gt;<br>    // ***Model<br><br>Plugin Classes =&gt;<br>    // ***Plugin</blockquote></div>   </div>  </div>   一些示例：   <div class="example" id="example-4174">    <p><strong>示例 #7 MVC 加载示例</strong></p>    <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">class IndexController<br>    // APPLICATION_PATH/controllers/Index.php<br><br>class DataModel =&gt;<br>   // APPLICATION_PATH/models/Data.php<br><br>class DummyPlugin =&gt;<br>  // APPLICATION_PATH/plugins/Dummy.php<br><br>class A_B_TestModel =&gt;<br>  // APPLICATION_PATH/models/A/B/Test.php</blockquote></div>    </div>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    自 2.1.18 起，Yaf 支持用户脚本端的 Controller 自动加载（这意味着由用户 php 脚本触发自动加载，例如：访问 Bootstrap    或 Plugins 中的控制器静态属性），但自动加载器仅尝试在控制器类脚本下定位默认模块文件夹，即“APPLICATION_PATH/controllers/”。   </p>  </blockquote>   此外，该目录将受 <a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.lowcase-path" class="link">yaf.lowcase_path</a> 的影响。    </div>   <div class="section" id="yaf-loader.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Loader</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.local-ns">$<var class="varname">_local_ns</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.library">$<var class="varname">_library</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.global-library">$<var class="varname">_global_library</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">static</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-loader.php#yaf-loader.props.instance">$<var class="varname">_instance</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.autoload.php" class="methodname" style="color:#CC7832">autoload</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.clearlocalnamespace.php" class="methodname" style="color:#CC7832">clearLocalNamespace</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.getinstance.php" class="methodname" style="color:#CC7832">getInstance</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.getlibrarypath.php" class="methodname" style="color:#CC7832">getLibraryPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$is_global</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader" style="color:#EAB766">Yaf_Loader</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.getnamespaces.php" class="methodname" style="color:#CC7832">getLocalNamespace</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.getnamespacepath.php" class="methodname" style="color:#CC7832">getNamespacePath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$namespaces</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>getNamespaces</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.import.php" class="methodname" style="color:#CC7832">import</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.islocalname.php" class="methodname" style="color:#CC7832">isLocalName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.registerlocalnamespace.php" class="methodname" style="color:#CC7832">registerLocalNamespace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.registernamespace.php" class="methodname" style="color:#CC7832">registerNamespace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$namespaces</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-loader.setlibrarypath.php" class="methodname" style="color:#CC7832">setLibraryPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$is_global</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader" style="color:#EAB766">Yaf_Loader</a></span></div>   }</div>  </div>    <div class="section" id="yaf-loader.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-loader.props.local-ns"><var class="varname">_local_ns</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-loader.props.library"><var class="varname">_library</var></dt>     <dd>      <p class="para">      默认情况下，此值为 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a> .      "/library"，可以通过修改 application.ini（application.library）或者调用 <span class="methodname" style="color:#CC7832">{@link Yaf_Loader::setLibraryPath()}</span> 更改。      </p>     </dd>             <dt id="yaf-loader.props.global-library"><var class="varname">_global_library</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-loader.props.instance"><var class="varname">_instance</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div>  <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Loader::autoload} — The autoload purpose</li><li>{@link Yaf_Loader::clearLocalNamespace} — The clearLocalNamespace purpose</li><li>{@link Yaf_Loader::__construct} — The __construct purpose</li><li>{@link Yaf_Loader::getInstance} — The getInstance purpose</li><li>{@link Yaf_Loader::getLibraryPath} — 获取库路径</li><li>{@link Yaf_Loader::getLocalNamespace} — The getLocalNamespace purpose</li><li>{@link Yaf_Loader::getNamespacePath} — Retieve path of a registered namespace</li><li>{@link Yaf_Loader::getLocalNamespace} — Retrive all register namespaces info</li><li>{@link Yaf_Loader::import} — The import purpose</li><li>{@link Yaf_Loader::isLocalName} — The isLocalName purpose</li><li>{@link Yaf_Loader::registerLocalNamespace} — 注册本地类前缀</li><li>{@link Yaf_Loader::registerNamespace} — Register namespace with searching path</li><li>{@link Yaf_Loader::setLibraryPath} — 改变 library 路径</li></ul></div>
*
 * <p><b>Yaf_Loader</b> introduces a comprehensive autoloading solution for Yaf.</p>
 * <br/>
 * <p>The first time an instance of Yaf_Application is retrieved, <b>Yaf_Loader</b> will instance a singleton, and registers itself with spl_autoload. You retrieve an instance using the Yaf_Loader::getInstance()</p>
 * <br/>
 * <p><b>Yaf_Loader</b> attempt to load a class only one shot, if failed, depend on yaf.use_spl_autoload, if this config is On Yaf_Loader::autoload() will return FALSE, thus give the chance to other autoload function. if it is Off (by default), Yaf_Loader::autoload() will return TRUE, and more important is that a very useful warning will be triggered (very useful to find out why a class could not be loaded).</p>
 * <br/>
 * <b>Note:</b>
 * <p>Please keep yaf.use_spl_autoload Off unless there is some library have their own autoload mechanism and impossible to rewrite it.</p>
 * <br/>
 * <p>If you want <b>Yaf_Loader</b> search some classes(libraries) in the local class directory(which is defined in application.ini, and by default, it is application.directory . "/library"), you should register the class prefix using the Yaf_Loader::registerLocalNameSpace()</p>
 * @link https://secure.php.net/manual/en/class.yaf-loader.php
 
*/
class Yaf_Loader
{
    /**
     * @var string
     */
    protected $_local_ns;

    /**
     * By default, this value is application.directory . "/library", you can change this either in the application.ini(application.library) or call to Yaf_Loader::setLibraryPath()
     * @var string
     */
    protected $_library;

    /**
     * @var string
     */
    protected $_global_library;

    /**
     * @var Yaf_Loader
     */
    protected static $_instance;

    /**
     * @link https://secure.php.net/manual/en/yaf-loader.construct.php
     */
    private function __construct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-loader.clone.php
     */
    private function __clone() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-loader.sleep.php
     */
    private function __sleep() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-loader.wakeup.php
     */
    private function __wakeup() {}

/**
* <div id="yaf-loader.autoload" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::autoload</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::autoload</span> — <span class="dc-title">The autoload purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.autoload-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::autoload</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.autoload-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.autoload-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.autoload.php
     *
     * @param string $class_name
     *
     * @return bool
     
*/
    public function autoload($class_name) {}

/**
* <div id="yaf-loader.getinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::getInstance</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getInstance</span> — <span class="dc-title">The getInstance purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.getinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::getInstance</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.getinstance-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.getinstance.php
     *
     * @param string $local_library_path
     * @param string $global_library_path
     *
     * @return Yaf_Loader
     
*/
    public static function getInstance($local_library_path = null, $global_library_path = null) {}

/**
* <div id="yaf-loader.registerlocalnamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::registerLocalNamespace</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::registerLocalNamespace</span> — <span class="dc-title">注册本地类前缀</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.registerlocalnamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::registerLocalNamespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   注册本地类前缀，<span class="classname"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="classname">Yaf_Loader</a></span> 在两个库目录下搜索类，一个是通过 <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.library" class="link">application.library.directory</a>（在   application.ini 中）配置，称为本地库目录；另一个是通过 <a href="https://php.net/manual/zh/yaf.configuration.php#ini.yaf.library" class="link">yaf.library</a>（在 php.ini   中），成为全局库目录，因为它可以在同一个服务器中的许多应用程序共享。  </p>  <p class="para">   当触发自动加载时，<span class="classname"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="classname">Yaf_Loader</a></span> 将通过检查丢失类名的前缀来确定应该在哪个库目录中去搜索。   如果前缀名注册为 localnamespack，则在本地库目录中查找，否则在全局库目录中查找。   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     如果未配置 yaf.library，则假定全局库目录为本地库目录。在这种情况下，所有自动加载都将查找本地库目录。     但如果希望 Yaf 应用程序更加健壮，那么请始终将类注册为本地类。    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.registerlocalnamespace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>    <dd>     <p class="para">      字符串或者是数组格式的类名前缀，所有拥有和这些前缀相同前缀的类将被加载到本地 library 路径。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.registerlocalnamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-loader.registerlocalnamespace-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4176">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Loader::registerLocalNamespace()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$loader </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">'/local/library/'</span><span style="color: #007700">, </span><span style="color: #DD0000">'/global/library'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"Baidu"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerLocalNamespace</span><span style="color: #007700">(array(</span><span style="color: #DD0000">"Sina"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Weibo"</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Baidu_Name"</span><span style="color: #007700">); </span><span style="color: #FF8000">// search in '/local/library/'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Sina"</span><span style="color: #007700">);       </span><span style="color: #FF8000">// search '/local/library/'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Global_Name"</span><span style="color: #007700">);</span><span style="color: #FF8000">// search in '/global/library/'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"Foo_Bar"</span><span style="color: #007700">);    </span><span style="color: #FF8000">// search in '/global/library/'<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div></div>
    *
     * <p>Register local class prefix name, Yaf_Loader search classes in two library directories, the one is configured via application.library.directory(in application.ini) which is called local library directory; the other is configured via yaf.library (in php.ini) which is called global library directory, since it can be shared by many applications in the same server.</p>
     * <br/>
     * <p>When an autoloading is triggered, Yaf_Loader will determine which library directory should be searched in by examining the prefix name of the missed classname. If the prefix name is registered as a local namespace then look for it in local library directory, otherwise look for it in global library directory.</p>
     * <br/>
     * <b>Note:</b>
     * <p>If yaf.library is not configured, then the global library directory is assumed to be the local library directory. in that case, all autoloading will look for local library directory. But if you want your Yaf application be strong, then always register your own classes as local classes.</p>
     * @link https://secure.php.net/manual/en/yaf-loader.registerlocalnamespace.php
     *
     * @param string|string[] $namespace a string or a array of class name prefix. all class prefix with these prefix will be loaded in local library path.
     * @param string $path
     *
     * @return bool
     
*/
    public function registerLocalNamespace($namespace, $path = '') {}

/**
* <div id="yaf-loader.getlocalnamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::getLocalNamespace</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getLocalNamespace</span> — <span class="dc-title">The getLocalNamespace purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.getlocalnamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Loader::getLocalNamespace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.getlocalnamespace-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getlocalnamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.getlocalnamespace.php
     *
     * @return string
     
*/
    public function getLocalNamespace() {}

/**
* <div id="yaf-loader.getnamespaces" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::getLocalNamespace</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getLocalNamespace</span> — <span class="dc-title">Retrive all register namespaces info</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.getnamespaces-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::getNamespaces</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   get registered namespaces info  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.getnamespaces-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getnamespaces-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>  </p> </div></div>
    *
     * @return string
     
*/
    public function getNamespaces() {}

/**
* <div id="yaf-loader.clearlocalnamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::clearLocalNamespace</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::clearLocalNamespace</span> — <span class="dc-title">The clearLocalNamespace purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.clearlocalnamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::clearLocalNamespace</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.clearlocalnamespace-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.clearlocalnamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.clearlocalnamespace.php
     * @return bool
     
*/
    public function clearLocalNamespace() {}

/**
* <div id="yaf-loader.islocalname" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::isLocalName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::isLocalName</span> — <span class="dc-title">The isLocalName purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.islocalname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::isLocalName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.islocalname-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.islocalname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.islocalname.php
     *
     * @param string $class_name
     *
     * @return bool
     
*/
    public function isLocalName($class_name) {}

/**
* <div id="yaf-loader.import" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::import</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::import</span> — <span class="dc-title">The import purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.import-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::import</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.import-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.import-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-loader.import.php
     *
     * @param string $file
     *
     * @return bool
     
*/
    public static function import($file) {}

/**
* <div id="yaf-loader.setlibrarypath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::setLibraryPath</h1>  <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Loader::setLibraryPath</span> — <span class="dc-title">改变 library 路径</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.setlibrarypath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::setLibraryPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$is_global</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader" style="color:#EAB766">Yaf_Loader</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.setlibrarypath-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.setlibrarypath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param string $library_path
     * @param bool $is_global
     *
     * @return Yaf_Loader
     * @link https://secure.php.net/manual/en/yaf-loader.setlibrarypath.php
     *
     * @since 2.1.4
     
*/
    public function setLibraryPath($library_path, $is_global = false) {}

/**
* <div id="yaf-loader.getlibrarypath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::getLibraryPath</h1>  <p class="verinfo">(Yaf &gt;=2.1.4)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getLibraryPath</span> — <span class="dc-title">获取库路径</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.getlibrarypath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::getLibraryPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$is_global</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="type Yaf_Loader" style="color:#EAB766">Yaf_Loader</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.getlibrarypath-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getlibrarypath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param bool $is_global
     *
     * @return string
     * @since 2.1.4
     * @link https://secure.php.net/manual/en/yaf-loader.getlibrarypath.php
     
*/
    public function getLibraryPath($is_global = false) {}

/**
* <div id="yaf-loader.registernamespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::registerNamespace</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::registerNamespace</span> — <span class="dc-title">Register namespace with searching path</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.registernamespace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::registerNamespace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></span> <span class="parameter" style="color:#3A95FF">$namespaces</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$path</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Register a namespace with searching path, <span class="classname"><a href="https://php.net/manual/zh/class.yaf-loader.php" class="classname">Yaf_Loader</a></span>   searchs classes under this namespace in path, the one is also could be    configureded via <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.library.namespace" class="link">   application.library.directory.namespace</a>(in application.ini);  </p>  <p class="para">   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">      Yaf still think underline as folder separator.    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.registernamespace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>    <dd>     <p class="para">      a string of namespace, or a array of namespaces with paths.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <p class="para">      a string of path, it is better to use abosolute path here for performance     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.registernamespace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-loader.registernamespace-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4177">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Loader::registerNamespace()</strong></span>example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$loader </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">();<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\PHP"</span><span style="color: #007700">, </span><span style="color: #DD0000">"/var/lib/php"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(array(<br>     </span><span style="color: #DD0000">"\Vendor\ASP" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"/var/lib/asp"</span><span style="color: #007700">,<br>     </span><span style="color: #DD0000">"\Vendor\JSP" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"/usr/lib/vendor/"</span><span style="color: #007700">,<br>));<br><br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\PHP\Dummy"</span><span style="color: #007700">);   </span><span style="color: #FF8000">//load '/var/lib/php/Dummy.php'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\PHP\Foo_Bar"</span><span style="color: #007700">); </span><span style="color: #FF8000">//load '/var/lib/php/Foo/Bar.php'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoload</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\JSP\Dummy"</span><span style="color: #007700">);   </span><span style="color: #FF8000">//load '/usr/lib/vendor/Dummy.php'<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div></div>
    *
     * @param string|array $namespace
     * @param string $path
     * @return Yaf_Loader|null|false
     
*/
    public function registerNamespace($namespace, $path = '') {}

/**
* <div id="yaf-loader.getnamespacepath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Loader::getNamespacePath</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Loader::getNamespacePath</span> — <span class="dc-title">Retieve path of a registered namespace</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-loader.getnamespacepath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Loader::getNamespacePath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$namespaces</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   retrieve path of a registered namespace  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-loader.getnamespacepath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>    <dd>     <p class="para">      a string of namespace.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-loader.getnamespacepath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> path, if the namespace is not registered, then <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong> default library will be returned  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-loader.getnamespacepath-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4175">   <p><strong>示例 #1 <span class="function">{@link Yaf_Loader::registerNamespace()}</span>example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$loader </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Loader</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">(</span><span style="color: #DD0000">"/var/application/lib"</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerNamespace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\PHP"</span><span style="color: #007700">, </span><span style="color: #DD0000">"/var/lib/php"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNamespacePath</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\PHP"</span><span style="color: #007700">); </span><span style="color: #FF8000">// '/var/lib/php'<br></span><span style="color: #9876AA">$loader</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNamespacePath</span><span style="color: #007700">(</span><span style="color: #DD0000">"\Vendor\JSP"</span><span style="color: #007700">); </span><span style="color: #FF8000">// '/var/application/lib'<br><br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div></div>
    *
     * @param string $class_name
     * @return string
     
*/
    public function getNamespacePath($class_name) {}
}

/**
* <div id="class.yaf-registry" class="reference"> <h1 class="title">Yaf_Registry 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-registry.intro">   <h2 class="title">简介</h2>   <p class="para">     <span class="classname"><strong class="classname">Yaf_Registry</strong></span> 的所有方法都声明为静态，使其可以随地访问。这提供了根据需要从代码中获取/设置任何自定义数据的能力。     对象注册表（或称对象仓库）是一个用于在整个应用空间（application space）内存储对象和值的容器. 通过把对象存储在其中,我们可以在整个项目的任何地方使用同一个对象。这种机制相当于一种全局存储。另外，由于该类是一个数组对象，你可以使用数组形式来访问其中的类方法。   </p>  </div>  <div class="section" id="yaf-registry.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Registry</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">static</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-registry.php#yaf-registry.props.instance">$<var class="varname">_instance</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-registry.php#yaf-registry.props.entries">$<var class="varname">_entries</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-registry.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-registry.del.php" class="methodname" style="color:#CC7832">del</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-registry.get.php" class="methodname" style="color:#CC7832">get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-registry.has.php" class="methodname" style="color:#CC7832">has</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-registry.set.php" class="methodname" style="color:#CC7832">set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-registry.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-registry.props.instance"><var class="varname">_instance</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-registry.props.entries"><var class="varname">_entries</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Registry::__construct} — Yaf_Registry 实现单例</li><li>{@link Yaf_Registry::del} — 从注册表中移除条目</li><li>{@link Yaf_Registry::get} — 从注册表中检索条目</li><li>{@link Yaf_Registry::has} — 检测条目是否存在</li><li>{@link Yaf_Registry::set} — 向注册表添加条目</li></ul></div>
*
 * <p>All methods of <b>Yaf_Registry</b> declared as static, making it universally accessible. This provides the ability to get or set any custom data from anyway in your code as necessary.</p>
 * @link https://secure.php.net/manual/en/class.yaf-registry.php
 
*/
final class Yaf_Registry
{
    /**
     * @var Yaf_Registry
     */
    protected static $_instance;

    /**
     * @var array
     */
    protected $_entries;

    /**
     * @link https://secure.php.net/manual/en/yaf-registry.construct.php
     */
    private function __construct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-registry.clone.php
     */
    private function __clone() {}

/**
* <div id="yaf-registry.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Registry::get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::get</span> — <span class="dc-title">从注册表中检索条目</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-registry.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Registry::get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   从注册表中检索条目  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-registry.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-registry.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Retrieve an item from registry
     *
     * @link https://secure.php.net/manual/en/yaf-registry.get.php
     *
     * @param string $name
     *
     * @return mixed
     
*/
    public static function get($name) {}

/**
* <div id="yaf-registry.has" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Registry::has</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::has</span> — <span class="dc-title">检测条目是否存在</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-registry.has-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Registry::has</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   检测条目是否存在  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-registry.has-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-registry.has-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Check whether an item exists
     *
     * @link https://secure.php.net/manual/en/yaf-registry.has.php
     *
     * @param string $name
     *
     * @return bool
     
*/
    public static function has($name) {}

/**
* <div id="yaf-registry.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Registry::set</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::set</span> — <span class="dc-title">向注册表添加条目</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-registry.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Registry::set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   向注册表添加条目  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-registry.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-registry.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-registry.set.php
     *
     * @param string $name
     * @param string $value
     *
     * @return bool
     
*/
    public static function set($name, $value) {}

/**
* <div id="yaf-registry.del" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Registry::del</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Registry::del</span> — <span class="dc-title">从注册表中移除条目</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-registry.del-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Registry::del</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   从注册表中移除条目  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-registry.del-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-registry.del-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-registry.del.php
     *
     * @param string $name
     *
     * @return void|bool
     
*/
    public static function del($name) {}
}

/**
* <div id="class.yaf-session" class="reference"> <h1 class="title">Yaf_Session 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-session.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-session.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Session</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.arrayaccess.php" class="interfacename">ArrayAccess</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="modifier">static</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-session.php#yaf-session.props.instance">$<var class="varname">_instance</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-session.php#yaf-session.props.session">$<var class="varname">_session</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-session.php#yaf-session.props.started">$<var class="varname">_started</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.del.php" class="methodname" style="color:#CC7832">del</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.get.php" class="methodname" style="color:#CC7832">__get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.getinstance.php" class="methodname" style="color:#CC7832">getInstance</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.has.php" class="methodname" style="color:#CC7832">has</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.isset.php" class="methodname" style="color:#CC7832">__isset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.key.php" class="methodname" style="color:#CC7832">key</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.next.php" class="methodname" style="color:#CC7832">next</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.set.php" class="methodname" style="color:#CC7832">__set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.start.php" class="methodname" style="color:#CC7832">start</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.unset.php" class="methodname" style="color:#CC7832">__unset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-session.valid.php" class="methodname" style="color:#CC7832">valid</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-session.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-session.props.instance"><var class="varname">_instance</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-session.props.session"><var class="varname">_session</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-session.props.started"><var class="varname">_started</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Session::__construct} — Yaf_Session 构造方法</li><li>{@link Yaf_Session::count} — The count purpose</li><li>{@link Yaf_Session::current} — The current purpose</li><li>{@link Yaf_Session::del} — The del purpose</li><li>{@link Yaf_Session::__get} — The __get purpose</li><li>{@link Yaf_Session::getInstance} — The getInstance purpose</li><li>{@link Yaf_Session::has} — The has purpose</li><li>{@link Yaf_Session::__isset} — The __isset purpose</li><li>{@link Yaf_Session::key} — The key purpose</li><li>{@link Yaf_Session::next} — The next purpose</li><li>{@link Yaf_Session::offsetExists} — The offsetExists purpose</li><li>{@link Yaf_Session::offsetGet} — The offsetGet purpose</li><li>{@link Yaf_Session::offsetSet} — The offsetSet purpose</li><li>{@link Yaf_Session::offsetUnset} — The offsetUnset purpose</li><li>{@link Yaf_Session::rewind} — The rewind purpose</li><li>{@link Yaf_Session::__set} — The __set purpose</li><li>{@link Yaf_Session::start} — The start purpose</li><li>{@link Yaf_Session::__unset} — The __unset purpose</li><li>{@link Yaf_Session::valid} — The valid purpose</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-session.php
 * @version 2.2.9
 
*/
final class Yaf_Session implements Iterator, ArrayAccess, Countable
{
    /**
     * @var Yaf_Session
     */
    protected static $_instance;

    /**
     * @var array
     */
    protected $_session;

    /**
     * @var bool
     */
    protected $_started = true;

    /**
     * @link https://secure.php.net/manual/en/yaf-session.construct.php
     */
    private function __construct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-session.clone.php
     */
    private function __clone() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-session.sleep.php
     */
    private function __sleep() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-session.wakeup.php
     */
    private function __wakeup() {}

/**
* <div id="yaf-session.getinstance" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::getInstance</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::getInstance</span> — <span class="dc-title">The getInstance purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.getinstance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::getInstance</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.getinstance-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.getinstance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.getinstance.php
     *
     * @return Yaf_Session
     
*/
    public static function getInstance() {}

/**
* <div id="yaf-session.start" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::start</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::start</span> — <span class="dc-title">The start purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.start-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::start</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.start-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.start-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.start.php
     *
     * @return Yaf_Session
     
*/
    public function start() {}

/**
* <div id="yaf-session.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::__get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::__get</span> — <span class="dc-title">The __get purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::__get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.get.php
     *
     * @param string $name
     *
     * @return mixed
     
*/
    public function get($name) {}

/**
* <div id="yaf-session.has" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::has</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::has</span> — <span class="dc-title">The has purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.has-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::has</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.has-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.has-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.has.php
     *
     * @param string $name
     *
     * @return bool
     
*/
    public function has($name) {}

/**
* <div id="yaf-session.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::__set</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::__set</span> — <span class="dc-title">The __set purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::__set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.set.php
     *
     * @param string $name
     * @param mixed $value
     *
     * @return Yaf_Session|false return FALSE on failure
     
*/
    public function set($name, $value) {}

/**
* <div id="yaf-session.del" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::del</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::del</span> — <span class="dc-title">The del purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.del-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::del</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.del-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.del-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-session.del.php
     *
     * @param string $name
     *
     * @return Yaf_Session|false return FALSE on failure
     
*/
    public function del($name) {}

/**
* <div id="yaf-session.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::count</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::count</span> — <span class="dc-title">The count purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.count-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Countable::count
     * @return int
     
*/
    public function count(): int {}

/**
* <div id="yaf-session.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::rewind</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::rewind</span> — <span class="dc-title">The rewind purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::rewind</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.rewind-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.rewind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Iterator::rewind
     * @return void
     
*/
    public function rewind() {}

/**
* <div id="yaf-session.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::current</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::current</span> — <span class="dc-title">The current purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.current-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Iterator::current
     
*/
    public function current() {}

/**
* <div id="yaf-session.next" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::next</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::next</span> — <span class="dc-title">The next purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.next-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::next</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.next-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.next-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Iterator::next
     * @return void
     
*/
    public function next() {}

/**
* <div id="yaf-session.valid" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::valid</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::valid</span> — <span class="dc-title">The valid purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.valid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::valid</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.valid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.valid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Iterator::valid
     * @return bool
     
*/
    public function valid() {}

/**
* <div id="yaf-session.key" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::key</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::key</span> — <span class="dc-title">The key purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::key</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.key-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Iterator::key
     
*/
    public function key() {}

/**
* <div id="yaf-session.offsetunset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::offsetUnset</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetUnset</span> — <span class="dc-title">The offsetUnset purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.offsetunset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::offsetUnset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.offsetunset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetunset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see ArrayAccess::offsetUnset
     * @param mixed $offset
     * @return void
     
*/
    public function offsetUnset($offset) {}

/**
* <div id="yaf-session.offsetget" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::offsetGet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetGet</span> — <span class="dc-title">The offsetGet purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.offsetget-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::offsetGet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.offsetget-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetget-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see ArrayAccess::offsetGet
     * @param mixed $offset
     * @return mixed
     
*/
    public function offsetGet($offset) {}

/**
* <div id="yaf-session.offsetexists" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::offsetExists</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetExists</span> — <span class="dc-title">The offsetExists purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.offsetexists-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::offsetExists</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.offsetexists-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetexists-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see ArrayAccess::offsetExists
     * @param mixed $offset
     * @return bool
     
*/
    public function offsetExists($offset) {}

/**
* <div id="yaf-session.offsetset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Session::offsetSet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Session::offsetSet</span> — <span class="dc-title">The offsetSet purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-session.offsetset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Session::offsetSet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-session.offsetset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-session.offsetset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see ArrayAccess::offsetSet
     * @param mixed $offset
     * @param mixed $value
     * @return void
     
*/
    public function offsetSet($offset, $value) {}

    /**
     * @see Yaf_Session::get()
     * @param string $name
     * @return mixed
     */
    public function __get($name) {}

    /**
     * @see Yaf_Session::has()
     * @param string $name
     * @return bool
     */
    public function __isset($name) {}

    /**
     * @see Yaf_Session::set()
     * @param string $name
     * @param mixed $value
     * @return void
     */
    public function __set($name, $value) {}

    /**
     * @see Yaf_Session::del()
     * @param string $name
     * @return void
     */
    public function __unset($name) {}

    /**
     * @return Yaf_Session|null|false
     */
    public function clear() {}
}

/**
* <div id="class.yaf-router" class="reference"> <h1 class="title">Yaf_Router 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-router.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Router</strong></span> 是标准的框架路由。路由是获取 URI 端点（位于基本 URI 之后的 URI 部分：参考    <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setBaseUri()}</span>）并将其分解为参数得到哪个 module、controller 和    action 需要接收请求。module、controller、action 和其它参数打包到 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a></span>    对象中，然后由 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-dispatcher.php" class="classname">Yaf_Dispatcher</a></span> 处理。路由只发生一次：最初接到请求和在第一个 controller    分发之前。    <span class="classname"><strong class="classname">Yaf_Router</strong></span> 是设计来允许使用纯 PHP 结构的类似 mod_rewrite 的功能。它非常松散的基于 Ruby on    Rails 的路由，并且不需要提前知悉 webserver URL 重写的相关知识。它设计为跟单个 Apache mod_rewrite（或其中之一个）    规则一起使用：   </p><div class="example" id="example-4198">    <p><strong>示例 #1 Apache 重写规则</strong></p>   <div class="example-contents"><div class="confcode"><blockquote style="border:1px gray solid;">RewriteEngine on<br>RewriteRule !\.(js|ico|gif|jpg|png|css|html)$ index.php</blockquote></div>   </div>   </div>   或者（首选）：   <div class="example" id="example-4199">   <p><strong>示例 #2 Apache 重写规则</strong></p>   <div class="example-contents"><div class="confcode"><blockquote style="border:1px gray solid;">RewriteEngine On<br>RewriteCond %{REQUEST_FILENAME} -s [OR]<br>RewriteCond %{REQUEST_FILENAME} -l [OR]<br>RewriteCond %{REQUEST_FILENAME} -d<br>RewriteRule ^.*$ - [NC,L]<br>RewriteRule ^.*$ index.php [NC,L]</blockquote></div>   </div>  </div>   如果使用 Lighttpd，以下重写规则有效：   <div class="example" id="example-4200">    <p><strong>示例 #3 Lighttpd 重写规则</strong></p>   <div class="example-contents"><div class="confcode"><blockquote style="border:1px gray solid;">url.rewrite-once = (<br>  ".*\?(.*)$" =&gt; "/index.php?$1",<br>  ".*\.(js|ico|gif|jpg|png|css|html)$" =&gt; "$0",<br>  "" =&gt; "/index.php"<br>)</blockquote></div>   </div>  </div>   如果使用 Nginx，以下重写规则有效：   <div class="example" id="example-4201">    <p><strong>示例 #4 Nginx 重写规则</strong></p>   <div class="example-contents"><div class="confcode"><blockquote style="border:1px gray solid;">server {<br>  listen ****;<br>  server_name  yourdomain.com;<br>  root   document_root;<br>  index  index.php index.html;<br><br>  if (!-e $request_filename) {<br>    rewrite ^/(.*)  /index.php/$1 last;<br>  }<br>}</blockquote></div>   </div>  </div>     </div>  <div class="section" id="yaf-router.default">   <h2 class="title">默认路由</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Router</strong></span> 预设了默认路由 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></span>，将以 controller/action    的形式匹配 URI。此外，module 名可以被指定为第一个路径元素，允许 URI 设置为 module/controller/action 形式的    URI。最后，它也会匹配默认追加到 URI 中所有附加参数——controller/action/var1/value1/var2/value2。    </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">      Module 名必须在配置中定义，就 application.module="Index,Foo,Bar" 而言，在这种情况下，仅 index、foo 和 bar 可以认做      module 名。如果没有配置，那么 Yaf 使用默认 module 名“Index”。     </p>    </blockquote>      <p class="para">    如何匹配这些路由的一些例子：   </p><div class="example" id="example-4202">    <p><strong>示例 #5 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></span>（默认路由）示例</strong></p>   <div class="example-contents"><div class="confcode"><blockquote style="border:1px gray solid;">// Assuming the following configure:<br>$conf = array(<br>   "application" =&gt; array(<br>      "modules" =&gt; "Index,Blog",<br>   ),<br>);<br><br>Controller only:<br>http://example/news<br>    controller == news<br>Action only(when defined yaf.action_prefer=1 in php.ini)<br>    action  == news<br> <br>Invalid module maps to controller name:<br>http://example/foo<br>    controller == foo<br> <br>Module + controller:<br>http://example/blog/archive<br>    module     == blog<br>    controller == archive<br> <br>Module + controller + action:<br>http://example/blog/archive/list<br>    module     == blog<br>    controller == archive<br>    action     == list<br> <br>Module + controller + action + params:<br>http://example/blog/archive/list/sort/alpha/date/desc<br>    module     == blog<br>    controller == archive<br>    action     == list<br>    sort       == alpha<br>    date       == desc</blockquote></div>   </div>  </div>    </div>  <div class="section" id="yaf-router.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Router</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-router.php#yaf-router.props.routes">$<var class="varname">_routes</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-router.php#yaf-router.props.current">$<var class="varname">_current</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.addconfig.php" class="methodname" style="color:#CC7832">addConfig</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$config</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.addroute.php" class="methodname" style="color:#CC7832">addRoute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">Yaf_Route_Abstract</span> <span class="parameter" style="color:#3A95FF">$route</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.getcurrentroute.php" class="methodname" style="color:#CC7832">getCurrentRoute</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.getroute.php" class="methodname" style="color:#CC7832">getRoute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="type Yaf_Route_Interface" style="color:#EAB766">Yaf_Route_Interface</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.getroutes.php" class="methodname" style="color:#CC7832">getRoutes</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-router.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-router.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-router.props.routes"><var class="varname">_routes</var></dt>     <dd>      <p class="para">       已注册路由栈      </p>     </dd>             <dt id="yaf-router.props.current"><var class="varname">_current</var></dt>     <dd>      <p class="para">       在路由阶段后，这用于指示当前请求的路由名称。       可以通过 <span class="methodname" style="color:#CC7832">{@link Yaf_Router::getCurrentRoute()}</span> 获取此名称。      </p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Router::addConfig} — 向 Router 中添加配置文件中定义的路由</li><li>{@link Yaf_Router::addRoute} — 往 Router 中添加新的路由</li><li>{@link Yaf_Router::__construct} — Yaf_Router 构造方法</li><li>{@link Yaf_Router::getCurrentRoute} — 取得当前有效的路由名</li><li>{@link Yaf_Router::getRoute} — 通过名称检索路由</li><li>{@link Yaf_Router::getRoutes} — 检索已注册的路由</li><li>{@link Yaf_Router::route} — The route purpose</li></ul></div>
*
 * <p><b>Yaf_Router</b> is the standard framework router. Routing is the process of taking a URI endpoint (that part of the URI which comes after the base URI: see Yaf_Request_Abstract::setBaseUri()) and decomposing it into parameters to determine which module, controller, and action of that controller should receive the request. This values of the module, controller, action and other parameters are packaged into a Yaf_Request_Abstract object which is then processed by Yaf_Dispatcher. Routing occurs only once: when the request is initially received and before the first controller is dispatched. Yaf_Router is designed to allow for mod_rewrite-like functionality using pure PHP structures. It is very loosely based on Ruby on Rails routing and does not require any prior knowledge of webserver URL rewriting</p>
 * <br/>
 * <b>Default Route</b>
 * <br/>
 * <p><b>Yaf_Router</b> comes pre-configured with a default route Yaf_Route_Static, which will match URIs in the shape of controller/action. Additionally, a module name may be specified as the first path element, allowing URIs of the form module/controller/action. Finally, it will also match any additional parameters appended to the URI by default - controller/action/var1/value1/var2/value2.</p>
 * <br/>
 * <b>Note:</b>
 * <p>Module name must be defined in config, considering application.module="Index,Foo,Bar", in this case, only index, foo and bar can be considered as a module name. if doesn't config, there is only one module named "Index".</p>
 * <br/>
 * <p>** See examples by opening the external documentation</p>
 * @link https://secure.php.net/manual/en/class.yaf-router.php
 
*/
class Yaf_Router
{
    /**
     * @var Yaf_Route_Interface[] registered routes stack
     */
    protected $_routes;

    /**
     * @var string after routing phase, this indicated the name of which route is used to route current request. you can get this name by Yaf_Router::getCurrentRoute()
     */
    protected $_current;

    /**
     * @link https://secure.php.net/manual/en/yaf-router.construct.php
     */
    public function __construct() {}

/**
* <div id="yaf-router.addroute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::addRoute</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::addRoute</span> — <span class="dc-title">往 Router 中添加新的路由</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.addroute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::addRoute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">Yaf_Route_Abstract</span> <span class="parameter" style="color:#3A95FF">$route</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    默认地，Yaf_Router 使用 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></span> 作为它的默认的路由。可以通过调用此方法往 Router 的堆栈中添加新的路由  </p>  <p class="para">    在路由栈中，新的路由规则会比老的规则先调用，如果新路由规则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，那么路由进程将会结束。否则，老的规则将会被调用。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-router.addroute-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.addroute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-router.addroute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4205">   <p><strong>示例 #1 <span class="function">{@link Yaf_Dispatcher::autoRender()}</span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$config </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">, </span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$router </span><span style="color: #007700">= </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br>        </span><span style="color: #FF8000">//*<br>         * we can add some pre-defined routes in application.ini<br>         <br>        </span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">routes</span><span style="color: #007700">);<br>        </span><span style="color: #FF8000">//*<br>         * add a Rewrite route, then for a request uri: <br>         * http://example.com/product/list/22/foo<br>         * will be matched by this route, and result:<br>         *<br>         *  [module] =&gt; <br>         *  [controller] =&gt; product<br>         *  [action] =&gt; info<br>         *  [method] =&gt; GET<br>         *  [params:protected] =&gt; Array<br>         *      (<br>         *          [id] =&gt; 22<br>         *          [name] =&gt; foo<br>         *      )<br>         * <br>         <br>        </span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br>            </span><span style="color: #DD0000">"/product/list/:id/:name"</span><span style="color: #007700">,<br>            array(<br>                </span><span style="color: #DD0000">"controller" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">"action"     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"info"</span><span style="color: #007700">,<br>            )<br>        ); <br>        <br>        </span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'dummy'</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-router.addroute-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Router::addConfig()} - 向 Router 中添加配置文件中定义的路由</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-supervar.php" class="classname">Yaf_Route_Supervar</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-simple.php" class="classname">Yaf_Route_Simple</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php" class="classname">Yaf_Route_Regex</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-rewrite.php" class="classname">Yaf_Route_Rewrite</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-map.php" class="classname">Yaf_Route_Map</a></span></li>  </ul>                        </div>  </div>
    *
     * <p>by default, Yaf_Router using a Yaf_Route_Static as its default route. you can add new routes into router's route stack by calling this method.</p>
     * <br/>
     * <p>the newer route will be called before the older(route stack), and if the newer router return TRUE, the router process will be end. otherwise, the older one will be called.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-router.addroute.php
     *
     * @param string $name
     * @param Yaf_Route_Interface $route
     *
     * @return Yaf_Router|false return FALSE on failure
     
*/
    public function addRoute($name, $route) {}

/**
* <div id="yaf-router.addconfig" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::addConfig</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::addConfig</span> — <span class="dc-title">向 Router 中添加配置文件中定义的路由</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.addconfig-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::addConfig</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$config</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    将 application.ini 配置中定义的路由规则添加到 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a></span> 的路由栈中  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-router.addconfig-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.addconfig-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a></span> 实例，包含一个或多个有效的路由配置  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-router.addconfig-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4203">   <p><strong>示例 #1 <span class="function"><strong>application.ini()</strong></span> 示例</strong></p>   <div class="example-contents">    <div class="inicode"><blockquote style="border:1px gray solid;">;the order is very important, the prior one will be called first<br><br>;a rewrite route match request /product////<br>routes.route_name.type="rewrite"<br>routes.route_name.match="/product/:name/:value"<br>routes.route_name.route.controller=product<br>routes.route_name.route.action=info<br><br>;a regex route match request /list////<br>routes.route_name1.type="regex"<br>routes.route_name1.match="#^list/([^/]*)/([^/]*)#"<br>routes.route_name1.route.controller=Index<br>routes.route_name1.route.action=action<br>routes.route_name1.map.1=name<br>routes.route_name1.map.2=value<br><br>;a simple route match //*?c=controller&amp;a=action&amp;m=module<br>routes.route_name2.type="simple"<br>routes.route_name2.controller=c<br>routes.route_name2.module=m<br>routes.route_name2.action=a<br><br>;a simple router match //*?r=PATH_INFO<br>routes.route_name3.type="supervar"<br>routes.route_name3.varname=r<br><br>;a map route match any request to controller<br>routes.route_name4.type="map"<br>routes.route_name4.controllerPrefer=TRUE<br>routes.route_namer.delimiter="#!"</blockquote></div>   </div>  </div>  <div class="example" id="example-4204">   <p><strong>示例 #2 <span class="function"><strong>Yaf_Dispatcher::autoConfig()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$config </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">, </span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$router </span><span style="color: #007700">= </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br>        </span><span style="color: #FF8000">//*<br>         * we can add some pre-defined routes in application.ini<br>         <br>        </span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">routes</span><span style="color: #007700">);<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-router.addconfig-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Router::addRoute()} - 往 Router 中添加新的路由</span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-static.php" class="classname">Yaf_Route_Static</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-supervar.php" class="classname">Yaf_Route_Supervar</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-simple.php" class="classname">Yaf_Route_Simple</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php" class="classname">Yaf_Route_Regex</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-rewrite.php" class="classname">Yaf_Route_Rewrite</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-route-map.php" class="classname">Yaf_Route_Map</a></span></li>  </ul>                        </div>  </div>
    *
     * <p>Add routes defined by configs into Yaf_Router's route stack</p>
     *
     * @link https://secure.php.net/manual/en/yaf-router.addconfig.php
     *
     * @param Yaf_Config_Abstract $config
     *
     * @return Yaf_Router|false return FALSE on failure
     
*/
    public function addConfig($config) {}

/**
* <div id="yaf-router.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::route</span> — <span class="dc-title">The route purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-router.route-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-router.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool
     
*/
    public function route($request) {}

/**
* <div id="yaf-router.getroute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::getRoute</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getRoute</span> — <span class="dc-title">通过名称检索路由</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.getroute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::getRoute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="type Yaf_Route_Interface" style="color:#EAB766">Yaf_Route_Interface</a></span></div>  <p class="para rdfs-comment">   通过名字检索路由，参阅 <span class="methodname" style="color:#CC7832">{@link Yaf_Router::getCurrentRoute()}</span>  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-router.getroute-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.getroute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-router.getroute-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Router::addRoute()} - 往 Router 中添加新的路由</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Router::getCurrentRoute()} - 取得当前有效的路由名</span></li>  </ul>                        </div>  </div>
    *
     * <p>Retrieve a route by name, see also Yaf_Router::getCurrentRoute()</p>
     *
     * @link https://secure.php.net/manual/en/yaf-router.getroute.php
     *
     * @param string $name
     *
     * @return Yaf_Route_Interface
     
*/
    public function getRoute($name) {}

/**
* <div id="yaf-router.getroutes" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::getRoutes</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getRoutes</span> — <span class="dc-title">检索已注册的路由</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.getroutes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::getRoutes</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   检索已注册的路由  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-router.getroutes-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.getroutes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-router.getroutes.php
     *
     * @return Yaf_Route_Interface[]
     
*/
    public function getRoutes() {}

/**
* <div id="yaf-router.getcurrentroute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Router::getCurrentRoute</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Router::getCurrentRoute</span> — <span class="dc-title">取得当前有效的路由名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-router.getcurrentroute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Router::getCurrentRoute</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   获取当前路由进程中正在起作用的路由名   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     需要在路由进程结束之后调用此方法，在这之前，这个方法会一直返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-router.getcurrentroute-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-router.getcurrentroute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   字符串，当前起效的路由的名字。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-router.getcurrentroute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4206">   <p><strong>示例 #1 注册一些路由到 Bootstrap</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract</span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$config </span><span style="color: #007700">= </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">::</span><span style="color: #9876AA">app</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getConfig</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">Yaf_Registry</span><span style="color: #007700">::</span><span style="color: #9876AA">set</span><span style="color: #007700">(</span><span style="color: #DD0000">"config"</span><span style="color: #007700">, </span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>    }<br><br>    public function </span><span style="color: #9876AA">_initRoute</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$router </span><span style="color: #007700">= </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">();<br>        </span><span style="color: #9876AA">$rewrite_route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br>            </span><span style="color: #DD0000">"/product/list/:page"</span><span style="color: #007700">,<br>            array(<br>                </span><span style="color: #DD0000">"controller" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">"action"     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"list"</span><span style="color: #007700">,<br>            )<br>        ); <br><br>        </span><span style="color: #9876AA">$regex_route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Rewrite</span><span style="color: #007700">(<br>            </span><span style="color: #DD0000">"#^/product/info/(\d+)"</span><span style="color: #007700">,<br>            array(<br>                </span><span style="color: #DD0000">"controller" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"product"</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">"action"     </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"info"</span><span style="color: #007700">,<br>            )<br>        ); <br>        <br>        </span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'rewrite'</span><span style="color: #007700">, </span><span style="color: #9876AA">$rewrite_route</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'regex'</span><span style="color: #007700">, </span><span style="color: #9876AA">$regex_route</span><span style="color: #007700">);<br>    } <br><br>    </span><span style="color: #FF8000">//*<br>     * register plugin <br>     <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">__initPlugins</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(new </span><span style="color: #9876AA">DummyPlugin</span><span style="color: #007700">());<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4207">   <p><strong>示例 #2 plugin Dummy.php (under <a href="https://php.net/manual/zh/yaf.appconfig.php#configuration.yaf.directory" class="link">application.directory</a>/plugins)</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">DummyPlugin </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Plugin_Abstract </span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>         </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getRouter</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getCurrentRoute</span><span style="color: #007700">());<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">// for http://yourdomain.com/product/list/1<br> * DummyPlugin will output:<br> <br>string(7) "rewrite"<br><br>// for http://yourdomain.com/product/info/34<br> * DummyPlugin will output:<br> <br>string(5) "regex"<br><br>// for other request URI<br> * DummyPlugin will output:<br> <br>string(8) "_default"</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-router.getcurrentroute-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-bootstrap-abstract.php" class="classname">Yaf_Bootstrap_Abstract</a></span></li>   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-plugin-abstract.php" class="classname">Yaf_Plugin_Abstract</a></span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Router::addRoute()} - 往 Router 中添加新的路由</span></li>  </ul>                        </div>  </div>
    *
     * <p>Get the name of the route which is effective in the route process.</p>
     * <br/>
     * <b>Note:</b>
     * <p>You should call this method after the route process finished, since before that, this method will always return NULL.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-router.getcurrentroute.php
     *
     * @return string the name of the effective route.
     
*/
    public function getCurrentRoute() {}
}

/**
* <div id="class.yaf-bootstrap-abstract" class="reference"> <h1 class="title">Yaf_Bootstrap_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(No version information available, might only be in Git)</p>  <div class="section" id="yaf-bootstrap-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">     Bootstrap 是用来在 Application 运行（run）之前做一些初始化工作的机制。   </p>   <p class="para">    可以通过继承 <span class="classname"><strong class="classname">Yaf_Bootstrap_Abstract</strong></span>    来定义自己的 Bootstrap 类.   </p>   <p class="para">    在 Bootstrap 类中所有以“_init”开头的公有的方法,    都会被按照定义顺序依次在 <span class="methodname" style="color:#CC7832">{@link Yaf_Application::bootstrap()}</span>    被调用的时刻调用.   </p>  </div> <div class="section">  <h2 class="title">示例</h2>  <div class="example" id="example-4147">   <p><strong>示例 #1 Bootstrap 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>   </span><span style="color: #FF8000">// bootstrap class should be defined under ./application/Bootstrap.php <br>   </span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract </span><span style="color: #007700">{<br>        public function </span><span style="color: #9876AA">_initConfig</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">__METHOD__</span><span style="color: #007700">);<br>        }<br>   }<br><br>   </span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(<br>       </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>           </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/application/"</span><span style="color: #007700">,<br>       ),<br>   );<br> <br>   </span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>   </span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="cdata"><blockquote style="border:1px gray solid;"><br>string(22) "Bootstrap::_initConfig"<br>string(22) "Bootstrap::_initPlugin"<br></blockquote></div>   </div>  </div> </div>  <div class="section" id="yaf-bootstrap-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">abstract</span>      <span class="modifier">class</span> <strong class="classname">Yaf_Bootstrap_Abstract</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>   }</div>  </div> </div></div>
*
 * <p>Bootstrap is a mechanism used to do some initial config before a Application run.<br/><br/></p>
 * <p>User may define their own Bootstrap class by inheriting <b>Yaf_Bootstrap_Abstract</b><br/><br/></p>
 * <p>Any method declared in Bootstrap class with leading "_init", will be called by Yaf_Application::bootstrap() one by one according to their defined order<br/><br/></p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-bootstrap-abstract.php
 
*/
abstract class Yaf_Bootstrap_Abstract {}

/**
* <div id="class.yaf-controller-abstract" class="reference"> <h1 class="title">Yaf_Controller_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-controller-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Controller_Abstract</strong></span> 是 Yaf 系统的 MVC 体系的核心部分。MVC    是指 Model-View-Controller，是一个用于分离应用逻辑和表现逻辑的设计模式。   </p>   <p class="para">    每个自定义 controller 都应当继承 <span class="classname"><strong class="classname">Yaf_Controller_Abstract</strong></span>。   </p>   <p class="para">    自定义 controller 中无法定义 __construct 方法。因此，<span class="classname"><strong class="classname">Yaf_Controller_Abstract</strong></span>    提供了一个魔术方法 <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::init()}</span>。   </p>   <p class="para">    如果自定义 controller 里已经定义了 init() 方法，当实例化 controller 的时候，它将被调用。   </p>   <p class="para">    Action 可能需要参数，当请求来到的时候，在路由中如果请求的参数有相同名称的变量（例如：<span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam()}</span>），Yaf    将把他们传递给 action 方法（参阅 <span class="methodname" style="color:#CC7832">{@link Yaf_Action_Abstract::execute()}</span>）。    </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">      这些参数是直接获取的，没有过滤，使用他们之前应该仔细处理。     </p>    </blockquote>     </div>  <div class="section" id="yaf-controller-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">abstract</span>      <span class="modifier">class</span> <strong class="classname">Yaf_Controller_Abstract</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.actions">$<var class="varname">actions</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.module">$<var class="varname">_module</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.name">$<var class="varname">_name</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.request">$<var class="varname">_request</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.response">$<var class="varname">_response</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.invoke-args">$<var class="varname">_invoke_args</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php#yaf-controller-abstract.props.view">$<var class="varname">_view</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">protected</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.display.php" class="methodname" style="color:#CC7832">display</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.forward.php" class="methodname" style="color:#CC7832">forward</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$paramters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getinvokearg.php" class="methodname" style="color:#CC7832">getInvokeArg</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getinvokeargs.php" class="methodname" style="color:#CC7832">getInvokeArgs</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getmodulename.php" class="methodname" style="color:#CC7832">getModuleName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getname.php" class="methodname" style="color:#CC7832">getName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getrequest.php" class="methodname" style="color:#CC7832">getRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getresponse.php" class="methodname" style="color:#CC7832">getResponse</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getview.php" class="methodname" style="color:#CC7832">getView</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getviewpath.php" class="methodname" style="color:#CC7832">getViewpath</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.init.php" class="methodname" style="color:#CC7832">init</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.initview.php" class="methodname" style="color:#CC7832">initView</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.redirect.php" class="methodname" style="color:#CC7832">redirect</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$url</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">protected</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.render.php" class="methodname" style="color:#CC7832">render</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.setviewpath.php" class="methodname" style="color:#CC7832">setViewpath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$view_directory</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-controller-abstract.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-controller-abstract.props.actions"><var class="varname">actions</var></dt>     <dd>      <p class="para">       也可以通过使用此属性和 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-action-abstract.php" class="classname">Yaf_Action_Abstract</a></span> 在一个单独的 PHP 脚本中定义 action 方法。      </p><div class="example" id="example-4156">       <p><strong>示例 #1 在单独的文件中定义 action</strong></p>        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>    protected </span><span style="color: #9876AA">$actions </span><span style="color: #007700">= array(<br>        </span><span style="color: #FF8000">//* now dummyAction is defined in a separate file <br>        </span><span style="color: #DD0000">"dummy" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"actions/Dummy_action.php"</span><span style="color: #007700">,<br>    );<br><br>    </span><span style="color: #FF8000">// action method may have arguments <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #9876AA">$id</span><span style="color: #007700">) {<br>       </span><span style="color: #FF8000">// $name and $id are unsafe raw data <br>       </span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$name </span><span style="color: #007700">== </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"name"</span><span style="color: #007700">));<br>       </span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$id   </span><span style="color: #007700">== </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"id"</span><span style="color: #007700">));<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>        </div>      </div>      <div class="example" id="example-4157">       <p><strong>示例 #2 Dummy_action.php</strong></p>        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">DummyAction </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Action_Abstract </span><span style="color: #007700">{<br>    </span><span style="color: #FF8000">// an action class shall define this method as the entry point <br>    </span><span style="color: #007700">public function </span><span style="color: #9876AA">execute</span><span style="color: #007700">() {<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>        </div>      </div>           </dd>             <dt id="yaf-controller-abstract.props.module"><var class="varname">_module</var></dt>     <dd>      <p class="para">        模块名      </p>     </dd>             <dt id="yaf-controller-abstract.props.name"><var class="varname">_name</var></dt>     <dd>      <p class="para">        控制器名      </p>     </dd>             <dt id="yaf-controller-abstract.props.request"><var class="varname">_request</var></dt>     <dd>      <p class="para">       当前请求实例      </p>     </dd>             <dt id="yaf-controller-abstract.props.response"><var class="varname">_response</var></dt>     <dd>      <p class="para">       当前响应对象      </p>     </dd>             <dt id="yaf-controller-abstract.props.invoke-args"><var class="varname">_invoke_args</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-controller-abstract.props.view"><var class="varname">_view</var></dt>     <dd>      <p class="para">      视图引擎      </p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Controller_Abstract::__construct} — Yaf_Controller_Abstract 构造方法</li><li>{@link Yaf_Controller_Abstract::display} — The display purpose</li><li>{@link Yaf_Controller_Abstract::forward} — 转发到另一个动作</li><li>{@link Yaf_Controller_Abstract::getInvokeArg} — The getInvokeArg purpose</li><li>{@link Yaf_Controller_Abstract::getInvokeArgs} — The getInvokeArgs purpose</li><li>{@link Yaf_Controller_Abstract::getModuleName} — 获取当前控制器所属的模块名</li><li>{@link Yaf_Controller_Abstract::getName} — Get self name</li><li>{@link Yaf_Controller_Abstract::getRequest} — 检索当前请求对象</li><li>{@link Yaf_Controller_Abstract::getResponse} — 检索当前响应对象</li><li>{@link Yaf_Controller_Abstract::getView} — 获取当前的视图引擎</li><li>{@link Yaf_Controller_Abstract::getViewpath} — The getViewpath purpose</li><li>{@link Yaf_Controller_Abstract::init} — 控制器初始化</li><li>{@link Yaf_Controller_Abstract::initView} — The initView purpose</li><li>{@link Yaf_Controller_Abstract::redirect} — 重定向到 URL</li><li>{@link Yaf_Controller_Abstract::render} — 渲染视图模板</li><li>{@link Yaf_Controller_Abstract::setViewpath} — The setViewpath purpose</li></ul></div>
*
 * <p><b>Yaf_Controller_Abstract</b> is the heart of Yaf's system. MVC stands for Model-View-Controller and is a design pattern targeted at separating application logic from display logic.</p>
 * <br/>
 * <p>Every custom controller shall inherit <b>Yaf_Controller_Abstract</b>.</p>
 * <br/>
 * <p>You will find that you can not define __construct function for your custom controller, thus, <b>Yaf_Controller_Abstract</b> provides a magic method: Yaf_Controller_Abstract::init().</p>
 * <br/>
 * <p>If you have defined a init() method in your custom controller, it will be called as long as the controller was instantiated.</p>
 * <br/>
 * <p>Action may have arguments, when a request coming, if there are the same name variable in the request parameters(see Yaf_Request_Abstract::getParam()) after routed, Yaf will pass them to the action method (see Yaf_Action_Abstract::execute()).</p>
 * <br/>
 * <b>Note:</b>
 * <p>These arguments are directly fetched without filtering, it should be carefully processed before use them.</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-controller-abstract.php
 
*/
abstract class Yaf_Controller_Abstract
{
    /**
     * @see Yaf_Action_Abstract
     * @var array You can also define a action method in a separate PHP script by using this property and Yaf_Action_Abstract.
     */
    public $actions;

    /**
     * @var string module name
     */
    protected $_module;

    /**
     * @var string controller name
     */
    protected $_name;

    /**
     * @var Yaf_Request_Abstract current request object
     */
    protected $_request;

    /**
     * @var Yaf_Response_Abstract current response object
     */
    protected $_response;

    /**
     * @var array
     */
    protected $_invoke_args;

    /**
     * @var Yaf_View_Interface view engine object
     */
    protected $_view;

/**
* <div id="yaf-controller-abstract.render" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::render</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::render</span> — <span class="dc-title">渲染视图模板</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.render-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">protected</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::render</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.render-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">tpl</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">parameters</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.render-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.render.php
     *
     * @param string $tpl
     * @param array|null $parameters
     *
     * @return string|null|bool
     
*/
    protected function render($tpl, ?array $parameters = null) {}

/**
* <div id="yaf-controller-abstract.display" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::display</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::display</span> — <span class="dc-title">The display purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.display-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">protected</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::display</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.display-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">tpl</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">parameters</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.display-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.display.php
     *
     * @param string $tpl
     * @param array|null $parameters
     *
     * @return bool
     
*/
    protected function display($tpl, ?array $parameters = null) {}

/**
* <div id="yaf-controller-abstract.getrequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getRequest</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getRequest</span> — <span class="dc-title">检索当前请求对象</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getrequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getRequest</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span></div>  <p class="para rdfs-comment">   检索当前请求对象  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getrequest-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getrequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a></span> 实例  </p> </div></div>
    *
     * retrieve current request object
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getrequest.php
     *
     * @return Yaf_Request_Abstract
     
*/
    public function getRequest() {}

/**
* <div id="yaf-controller-abstract.getresponse" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getResponse</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getResponse</span> — <span class="dc-title">检索当前响应对象</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getresponse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getResponse</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span></div>  <p class="para rdfs-comment">   检索当前响应对象  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getresponse-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getresponse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="classname">Yaf_Response_Abstract</a></span> 实例  </p> </div></div>
    *
     * retrieve current response object
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getresponse.php
     *
     * @return Yaf_Response_Abstract
     
*/
    public function getResponse() {}

/**
* <div id="yaf-controller-abstract.getmodulename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getModuleName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getModuleName</span> — <span class="dc-title">获取当前控制器所属的模块名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getmodulename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getModuleName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   获取当前控制器所属的模块名  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getmodulename-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getmodulename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * get the controller's module name
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getmodulename.php
     *
     * @return string
     
*/
    public function getModuleName() {}

/**
* <div id="yaf-controller-abstract.getview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getView</span> — <span class="dc-title">获取当前的视图引擎</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getView</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span></div>  <p class="para rdfs-comment">   获取当前的视图引擎  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getview-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * retrieve view engine
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getview.php
     *
     * @return Yaf_View_Interface
     
*/
    public function getView() {}

/**
* <div id="yaf-controller-abstract.getname" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getName</h1>  <p class="verinfo">(Yaf &gt;=3.2.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getName</span> — <span class="dc-title">Get self name</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   get the controller's name  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getname-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>, controller name  </p> </div></div>
    *
     * @return string|null
     
*/
    public function getName() {}

/**
* <div id="yaf-controller-abstract.initview" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::initView</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::initView</span> — <span class="dc-title">The initView purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.initview-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::initView</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.initview-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">options</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.initview-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param array|null $options
     *
     * @return Yaf_Response_Abstract
     * @deprecated not_implemented
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.initview.php
     
*/
    public function initView(?array $options = null) {}

/**
* <div id="yaf-controller-abstract.setviewpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::setViewpath</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::setViewpath</span> — <span class="dc-title">The setViewpath purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.setviewpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::setViewpath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$view_directory</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.setviewpath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">view_directory</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.setviewpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.setviewpath.php
     *
     * @param string $view_directory
     *
     * @return bool
     
*/
    public function setViewpath($view_directory) {}

/**
* <div id="yaf-controller-abstract.getviewpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getViewpath</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getViewpath</span> — <span class="dc-title">The getViewpath purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getviewpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getViewpath</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getviewpath-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getviewpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getviewpath.php
     *
     * @return string
     
*/
    public function getViewpath() {}

/**
* <div id="yaf-controller-abstract.forward" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::forward</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::forward</span> — <span class="dc-title">转发到另一个动作</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.forward-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::forward</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$paramters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::forward</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$paramters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::forward</strong></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$paramters</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   转发当前处理过程到其他动作。   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">      此方法不会立即切换到目标操作，而是会在当前流程结束后发生。    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.forward-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">module</span></dt>    <dd>     <p class="para">      目标模块名称，如果是 NULL，则采用默认模块名     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">controller</span></dt>    <dd>     <p class="para">      目标控制器名称     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">action</span></dt>    <dd>     <p class="para">      目标动作名称     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">paramters</span></dt>    <dd>     <p class="para">      调用参数     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.forward-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-controller-abstract.forward-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4158">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Controller_Abstract::forward()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract<br></span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">(){   <br>         </span><span style="color: #9876AA">$logined </span><span style="color: #007700">= </span><span style="color: #9876AA">$_SESSION</span><span style="color: #007700">[</span><span style="color: #DD0000">"login"</span><span style="color: #007700">];<br>         if (!</span><span style="color: #9876AA">$logined</span><span style="color: #007700">) {<br>             </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">forward</span><span style="color: #007700">(</span><span style="color: #DD0000">"login"</span><span style="color: #007700">, array(</span><span style="color: #DD0000">"from" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Index"</span><span style="color: #007700">)); </span><span style="color: #FF8000">// 转发到 login 动作<br>             </span><span style="color: #007700">return </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">;  </span><span style="color: #FF8000">// 这非常重要，这会结束当前工作流<br>                            // 然后告诉 Yaf 不要自动渲染<br>         </span><span style="color: #007700">}<br><br>         </span><span style="color: #FF8000">// other processes<br>    </span><span style="color: #007700">}<br><br>    public function </span><span style="color: #9876AA">loginAction</span><span style="color: #007700">() {<br>         echo </span><span style="color: #DD0000">"login, redirected from "</span><span style="color: #007700">, </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"from"</span><span style="color: #007700">) , </span><span style="color: #DD0000">" action"</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">login, redirected from Index action</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-controller-abstract.forward-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstrace::getParam()</strong></span></li>  </ul> </div></div>
    *
     * <p>forward current execution process to other action.</p>
     * <br/>
     * <b>Note:</b>
     * <p>this method doesn't switch to the destination action immediately, it will take place after current flow finish.</p>
     * <br/>
     * <b>Notice, there are 3 available method signatures:</b>
     * <p>Yaf_Controller_Abstract::forward ( string $module , string $controller , string $action [, array $parameters ] )</p>
     * <p>Yaf_Controller_Abstract::forward ( string $controller , string $action [, array $parameters ] )</p>
     * <p>Yaf_Controller_Abstract::forward ( string $action [, array $parameters ] )</p>
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.forward.php
     *
     * @param string $module destination module name, if NULL was given, then default module name is assumed
     * @param string $controller destination controller name
     * @param string $action destination action name
     * @param array|null $parameters calling arguments
     *
     * @return bool return FALSE on failure
     
*/
    public function forward($module, $controller = null, $action = null, ?array $parameters = null) {}

/**
* <div id="yaf-controller-abstract.redirect" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::redirect</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::redirect</span> — <span class="dc-title">重定向到 URL</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.redirect-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::redirect</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$url</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   通过发送 302 标头重定向到 URL  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.redirect-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">url</span></dt>    <dd>     <p class="para">      位置 URL     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.redirect-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div></div>
    *
     * redirect to a URL by sending a 302 header
     *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.redirect.php
     *
     * @param string $url a location URL
     *
     * @return bool
     
*/
    public function redirect($url) {}

/**
* <div id="yaf-controller-abstract.getinvokeargs" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getInvokeArgs</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getInvokeArgs</span> — <span class="dc-title">The getInvokeArgs purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getinvokeargs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getInvokeArgs</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getinvokeargs-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getinvokeargs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getinvokeargs.php
     *
     * @return array
     
*/
    public function getInvokeArgs() {}

/**
* <div id="yaf-controller-abstract.getinvokearg" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::getInvokeArg</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::getInvokeArg</span> — <span class="dc-title">The getInvokeArg purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.getinvokearg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::getInvokeArg</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.getinvokearg-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.getinvokearg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.getinvokearg.php
     * @param string $name
     *
     * @return mixed
     
*/
    public function getInvokeArg($name) {}

/**
* <div id="yaf-controller-abstract.init" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Controller_Abstract::init</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Controller_Abstract::init</span> — <span class="dc-title">控制器初始化</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-controller-abstract.init-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::init</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::__construct()}</span> 是 final 类型，所以用户不能重载它。但是用户可以定义   <span class="methodname" style="color:#CC7832"><strong>Yaf_Controller_Abstract::init()</strong></span>，该函数会在控制器对象实例化之后被调用。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-controller-abstract.init-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-controller-abstract.init-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-controller-abstract.init-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::__construct()} - Yaf_Controller_Abstract 构造方法</span></li>  </ul> </div></div>
    *
     * <p>Yaf_Controller_Abstract::__construct() is final, which means users can not override it. but users can define <b>Yaf_Controller_Abstract::init()</b>, which will be called after controller object is instantiated.</p>
     * @return void
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.init.php
     
*/
    public function init() {}

    /**
     * <b>Yaf_Controller_Abstract</b>::__construct() is final, which means it can not be overridden. You may want to see Yaf_Controller_Abstract::init() instead.
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     * @param Yaf_View_Interface $view
     * @param array|null $args
     * @see Yaf_Controller_Abstract::init()
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.construct.php
     */
    public function __construct($request, $response, $view, ?array $args = null) {}

    /**
     * @link https://secure.php.net/manual/en/yaf-controller-abstract.clone.php
     */
    private function __clone() {}
}

/**
* <div id="class.yaf-action-abstract" class="reference"> <h1 class="title">Yaf_Action_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-action-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">    在 Yaf 中一个 action 可以采用单独定义 <span class="classname"><strong class="classname">Yaf_Action_Abstract</strong></span> 来实现。    亦即，一个 action 方法也可以是一个 <span class="classname"><strong class="classname">Yaf_Action_Abstract</strong></span> 的派生类。   </p>   <p class="para">    Yaf 需要一个可以被它所调用的入口点，所以在你自己的动作类里面必须要实现抽象方法     <span class="methodname" style="color:#CC7832">{@link Yaf_Action_Abstract::execute()}</span>。   </p>  </div>  <div class="section" id="yaf-action-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Action_Abstract</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-controller-abstract.php" class="classname">Yaf_Controller_Abstract</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-action-abstract.php#yaf-action-abstract.props.controller">$<var class="varname">_controller</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span><span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-action-abstract.execute.php" class="methodname" style="color:#CC7832">execute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span><span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-action-abstract.getcontroller.php" class="methodname" style="color:#CC7832">getController</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php" class="type Yaf_Controller_Abstract" style="color:#EAB766">Yaf_Controller_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-controller-abstract.getcontrollername.php" class="methodname" style="color:#CC7832">getControllerName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">protected</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::display}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::forward}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$paramters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getInvokeArg}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getInvokeArgs}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getModuleName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getRequest}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getResponse}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getView}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="type Yaf_View_Interface" style="color:#EAB766">Yaf_View_Interface</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::getViewpath}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::init}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::initView}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::redirect}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$url</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">protected</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::render}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Controller_Abstract::setViewpath}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$view_directory</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-action-abstract.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-action-abstract.props.module"><var class="varname">_module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.name"><var class="varname">_name</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.request"><var class="varname">_request</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.response"><var class="varname">_response</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.invoke-args"><var class="varname">_invoke_args</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.view"><var class="varname">_view</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-action-abstract.props.controller"><var class="varname">_controller</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Action_Abstract::execute} — 动作入口点</li><li>{@link Yaf_Action_Abstract::getController} — 检索控制器对象</li><li>{@link Yaf_Action_Abstract::getControllerName} — Get controller name</li></ul></div>
*
 * <p>A action can be defined in a separate file in Yaf(see Yaf_Controller_Abstract). that is a action method can also be a <b>Yaf_Action_Abstract</b> class.</P>
 * <br/>
 * <p>Since there should be a entry point which can be called by Yaf (as of PHP 5.3, there is a new magic method __invoke, but Yaf is not only works with PHP 5.3+, Yaf choose another magic method execute), you must implement the abstract method Yaf_Action_Abstract::execute() in your custom action class.</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-action-abstract.php
 
*/
abstract class Yaf_Action_Abstract extends Yaf_Controller_Abstract
{
    /**
     * @var Yaf_Controller_Abstract
     */
    protected $_controller;

/**
* <div id="yaf-action-abstract.execute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Action_Abstract::execute</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Action_Abstract::execute</span> — <span class="dc-title">动作入口点</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-action-abstract.execute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span><span class="methodname" style="color:#CC7832"><strong>Yaf_Action_Abstract::execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...$args</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   用户应该始终为动作定义此方法，这是动作的入口点。<span class="methodname" style="color:#CC7832"><strong>Yaf_Action_Abstract::execute()</strong></span> 可能会有参数。   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     从请求中获取值不安全，在使用之前需要对其过滤。    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-action-abstract.execute-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">args</span></dt>    <dd>     <p class="para">     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-action-abstract.execute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-action-abstract.execute-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4159">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Action_Abstract::execute()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//* <br> * A controller example<br> <br></span><span style="color: #007700">class </span><span style="color: #9876AA">ProductController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>      protected </span><span style="color: #9876AA">$actions </span><span style="color: #007700">= array(<br>          </span><span style="color: #DD0000">"index" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"actions/Index.php"</span><span style="color: #007700">,<br>      );<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4160">   <p><strong>示例 #2 <span class="function"><strong>Yaf_Action_Abstract::execute()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//* <br> * ListAction<br> <br></span><span style="color: #007700">class </span><span style="color: #9876AA">ListAction </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Action_Abstract </span><span style="color: #007700">{<br>     public function </span><span style="color: #9876AA">execute </span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #9876AA">$id</span><span style="color: #007700">) {<br>         </span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$name </span><span style="color: #007700">== </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"name"</span><span style="color: #007700">));<br>         </span><span style="color: #9876AA">assert</span><span style="color: #007700">(</span><span style="color: #9876AA">$id   </span><span style="color: #007700">== </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequest</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">getParam</span><span style="color: #007700">(</span><span style="color: #DD0000">"id"</span><span style="color: #007700">));<br>     }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">//*<br> * Now assuming we are using the Yaf_Route_Static route <br> * for request: http://yourdomain/product/list/name/yaf/id/22<br> * will result:<br> <br> bool(true)<br> bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-action-abstract.execute-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li>  </li></ul> </div></div>
    *
     * <p>user should always define this method for a action, this is the entry point of an action. <b>Yaf_Action_Abstract::execute()</b> may have arguments.</p>
     * <br/>
     * <b>Note:</b>
     * <p>The value retrieved from the request is not safe. you should do some filtering work before you use it.</p>
     * @link https://secure.php.net/manual/en/yaf-action-abstract.execute.php
     *
     * @param mixed ...$args
     * @return mixed
     
*/
    abstract public function execute(...$args);

/**
* <div id="yaf-action-abstract.getcontroller" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Action_Abstract::getController</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Action_Abstract::getController</span> — <span class="dc-title">检索控制器对象</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-action-abstract.getcontroller-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span><span class="methodname" style="color:#CC7832"><strong>Yaf_Action_Abstract::getController</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php" class="type Yaf_Controller_Abstract" style="color:#EAB766">Yaf_Controller_Abstract</a></span></div>  <p class="para rdfs-comment">   检索当前控制器对象。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-action-abstract.getcontroller-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-action-abstract.getcontroller-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-controller-abstract.php" class="classname">Yaf_Controller_Abstract</a></span> 实例  </p> </div></div>
    *
     * retrieve current controller object.
     *
     * @link https://secure.php.net/manual/en/yaf-action-abstract.getcontroller.php
     *
     * @return Yaf_Controller_Abstract
     
*/
    public function getController() {}

    /**
     * @return string
     */
    public function getControllerName() {}
}

/**
* <div id="class.yaf-config-abstract" class="reference"> <h1 class="title">Yaf_Config_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-config-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-config-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">abstract</span>      <span class="modifier">class</span> <strong class="classname">Yaf_Config_Abstract</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php#yaf-config-abstract.props.config">$<var class="varname">_config</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php#yaf-config-abstract.props.readonly">$<var class="varname">_readonly</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-abstract.get.php" class="methodname" style="color:#CC7832">get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-abstract.readonly.php" class="methodname" style="color:#CC7832">readonly</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-abstract.set.php" class="methodname" style="color:#CC7832">set</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-abstract.toarray.php" class="methodname" style="color:#CC7832">toArray</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>   }</div>  </div>    <div class="section" id="yaf-config-abstract.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-config-abstract.props.config"><var class="varname">_config</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-config-abstract.props.readonly"><var class="varname">_readonly</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Abstract::get} — Getter</li><li>{@link Yaf_Config_Abstract::readonly} — 寻找只读配置</li><li>{@link Yaf_Config_Abstract::set} — Setter</li><li>{@link Yaf_Config_Abstract::toArray} — 转换为数组</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-config-abstract.php
 
*/
abstract class Yaf_Config_Abstract implements Iterator, ArrayAccess, Countable
{
    /**
     * @var array
     */
    protected $_config = null;

    /**
     * @var bool
     */
    protected $_readonly = true;

/**
* <div id="yaf-config-abstract.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Abstract::get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::get</span> — <span class="dc-title">Getter</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-abstract.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Abstract::get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.get-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-config-abstract.get.php
     *
     * @param ?string $name
     * @return mixed
     
*/
    abstract public function get(?string $name = null);

/**
* <div id="yaf-config-abstract.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Abstract::set</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::set</span> — <span class="dc-title">Setter</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-abstract.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Abstract::set</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.set-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-config-abstract.set.php
     *
     * @param string $name
     * @param mixed $value
     
*/
    abstract public function set(string $name, $value): bool;

    /**
     * @see Countable::count
     * @return int
     */
    public function count(): int {}

    /**
     * @see Iterator::rewind
     * @return void
     */
    public function rewind(): void {}

    /**
     * @see Iterator::current
     * @return mixed
     */
    public function current() {}

    /**
     * @see Iterator::key
     * @return mixed
     */
    public function key() {}

    /**
     * @see Iterator::next
     * @return void
     */
    public function next(): void {}

    /**
     * @see Iterator::valid
     * @return bool
     */
    public function valid(): bool {}

/**
* <div id="yaf-config-abstract.readonly" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Abstract::readonly</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::readonly</span> — <span class="dc-title">寻找只读配置</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-abstract.readonly-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Abstract::readonly</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.readonly-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.readonly-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    * @return bool 
*/
    abstract public function readonly(): bool;

/**
* <div id="yaf-config-abstract.toarray" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Abstract::toArray</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Abstract::toArray</span> — <span class="dc-title">转换为数组</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-abstract.toarray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Abstract::toArray</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-abstract.toarray-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-abstract.toarray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    * @return array 
*/
    abstract public function toArray(): array;

    /**
     * @see ArrayAccess::offsetSet
     * @param mixed $offset
     * @param mixed $value
     * @return void
     */
    public function offsetSet($offset, $value): void {}

    /**
     * @see ArrayAccess::offsetUnset
     * @param mixed $name
     * @return void
     */
    public function offsetUnset($name): void {}

    /**
     * @link https://secure.php.net/manual/en/yaf-config-abstract.readonly.php
     *
     * @see ArrayAccess::offsetExists
     * @param mixed $name
     * @return bool
     */
    public function offsetExists($name): bool {}

    /**
     * @link https://secure.php.net/manual/en/yaf-config-abstract.toarray.php
     *
     * @see ArrayAccess::offsetGet
     * @param mixed $name
     * @return mixed
     */
    public function offsetGet($name) {}

    /**
     * @param string $name
     * @return mixed
     */
    public function __get(string $name) {}

    /**
     * @param string $name
     * @return bool
     */
    public function __isset(string $name): bool {}
}

/**
* <div id="class.yaf-request-abstract" class="reference"> <h1 class="title">Yaf_Request_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-request-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-request-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Request_Abstract</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.constants.scheme-http"><var class="varname">SCHEME_HTTP</var></a></var><span class="initializer"> = http</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.constants.scheme-https"><var class="varname">SCHEME_HTTPS</var></a></var><span class="initializer"> = https</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.module">$<var class="varname">module</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.controller">$<var class="varname">controller</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.action">$<var class="varname">action</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.method">$<var class="varname">method</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.params">$<var class="varname">params</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.language">$<var class="varname">language</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.exception">$<var class="varname">_exception</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.base-uri">$<var class="varname">_base_uri</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.uri">$<var class="varname">uri</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.dispatched">$<var class="varname">dispatched</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php#yaf-request-abstract.props.routed">$<var class="varname">routed</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.clearparams.php" class="methodname" style="color:#CC7832">clearParams</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getactionname.php" class="methodname" style="color:#CC7832">getActionName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getbaseuri.php" class="methodname" style="color:#CC7832">getBaseUri</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getcontrollername.php" class="methodname" style="color:#CC7832">getControllerName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getenv.php" class="methodname" style="color:#CC7832">getEnv</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getexception.php" class="methodname" style="color:#CC7832">getException</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getlanguage.php" class="methodname" style="color:#CC7832">getLanguage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getmethod.php" class="methodname" style="color:#CC7832">getMethod</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getmodulename.php" class="methodname" style="color:#CC7832">getModuleName</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getparam.php" class="methodname" style="color:#CC7832">getParam</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getparams.php" class="methodname" style="color:#CC7832">getParams</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getrequesturi.php" class="methodname" style="color:#CC7832">getRequestUri</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.getserver.php" class="methodname" style="color:#CC7832">getServer</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.iscli.php" class="methodname" style="color:#CC7832">isCli</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isdispatched.php" class="methodname" style="color:#CC7832">isDispatched</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isget.php" class="methodname" style="color:#CC7832">isGet</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.ishead.php" class="methodname" style="color:#CC7832">isHead</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isoptions.php" class="methodname" style="color:#CC7832">isOptions</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.ispost.php" class="methodname" style="color:#CC7832">isPost</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isput.php" class="methodname" style="color:#CC7832">isPut</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isrouted.php" class="methodname" style="color:#CC7832">isRouted</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.isxmlhttprequest.php" class="methodname" style="color:#CC7832">isXmlHttpRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setactionname.php" class="methodname" style="color:#CC7832">setActionName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setbaseuri.php" class="methodname" style="color:#CC7832">setBaseUri</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setcontrollername.php" class="methodname" style="color:#CC7832">setControllerName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setdispatched.php" class="methodname" style="color:#CC7832">setDispatched</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setmodulename.php" class="methodname" style="color:#CC7832">setModuleName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setparam.php" class="methodname" style="color:#CC7832">setParam</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setrequesturi.php" class="methodname" style="color:#CC7832">setRequestUri</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-abstract.setrouted.php" class="methodname" style="color:#CC7832">setRouted</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-request-abstract.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-request-abstract.props.module"><var class="varname">module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.controller"><var class="varname">controller</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.action"><var class="varname">action</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.method"><var class="varname">method</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.params"><var class="varname">params</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.language"><var class="varname">language</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.exception"><var class="varname">_exception</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.base-uri"><var class="varname">_base_uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.uri"><var class="varname">uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.dispatched"><var class="varname">dispatched</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.props.routed"><var class="varname">routed</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>    <div class="section" id="yaf-request-abstract.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="yaf-request-abstract.constants.scheme-http"><strong><span>{@link Yaf_Request_Abstract::SCHEME_HTTP}</span></strong></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-abstract.constants.scheme-https"><strong><span>{@link Yaf_Request_Abstract::SCHEME_HTTPS}</span></strong></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Abstract::clearParams} — Remove all params</li><li>{@link Yaf_Request_Abstract::getActionName} — The getActionName purpose</li><li>{@link Yaf_Request_Abstract::getBaseUri} — The getBaseUri purpose</li><li>{@link Yaf_Request_Abstract::getControllerName} — The getControllerName purpose</li><li>{@link Yaf_Request_Abstract::getEnv} — 检索 ENV 变量</li><li>{@link Yaf_Request_Abstract::getException} — The getException purpose</li><li>{@link Yaf_Request_Abstract::getLanguage} — 检索客户端的首选语言</li><li>{@link Yaf_Request_Abstract::getMethod} — 检索请求方法</li><li>{@link Yaf_Request_Abstract::getModuleName} — The getModuleName purpose</li><li>{@link Yaf_Request_Abstract::getParam} — 检索调用的参数</li><li>{@link Yaf_Request_Abstract::getParams} — 获取所有调用的参数</li><li>{@link Yaf_Request_Abstract::getRequestUri} — The getRequestUri purpose</li><li>{@link Yaf_Request_Abstract::getServer} — 检索 SERVER 变量</li><li>{@link Yaf_Request_Abstract::isCli} — 判断请求是否是 CLI 请求</li><li>{@link Yaf_Request_Abstract::isDispatched} — 判断请求是否已发送</li><li>{@link Yaf_Request_Abstract::isGet} — 判断请求是否是 GET 请求</li><li>{@link Yaf_Request_Abstract::isHead} — 判断请求是否是 HEAD 请求</li><li>{@link Yaf_Request_Abstract::isOptions} — 判断请求是否是 OPTIONS 请求</li><li>{@link Yaf_Request_Abstract::isPost} — 判断请求是否是 POST 请求</li><li>{@link Yaf_Request_Abstract::isPut} — 判断请求是否是 PUT 请求</li><li>{@link Yaf_Request_Abstract::isRouted} — 判断请求是否已路由</li><li>{@link Yaf_Request_Abstract::isXmlHttpRequest} — 判断请求是否是 AJAX 请求</li><li>{@link Yaf_Request_Abstract::setActionName} — 设置 action 名</li><li>{@link Yaf_Request_Abstract::setBaseUri} — 设置基础 URI</li><li>{@link Yaf_Request_Abstract::setControllerName} — 设置控制器名</li><li>{@link Yaf_Request_Abstract::setDispatched} — The setDispatched purpose</li><li>{@link Yaf_Request_Abstract::setModuleName} — 设置模块名</li><li>{@link Yaf_Request_Abstract::setParam} — 设置调用参数到请求</li><li>{@link Yaf_Request_Abstract::setRequestUri} — The setRequestUri purpose</li><li>{@link Yaf_Request_Abstract::setRouted} — The setRouted purpose</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-request-abstract.php
 
*/
abstract class Yaf_Request_Abstract
{
    public const SCHEME_HTTP = 'http';
    public const SCHEME_HTTPS = 'https';

    /**
     * @var string
     */
    public $module;

    /**
     * @var string
     */
    public $controller;

    /**
     * @var string
     */
    public $action;

    /**
     * @var string
     */
    public $method;

    /**
     * @var array
     */
    protected $params;

    /**
     * @var string
     */
    protected $language;

    /**
     * @var Yaf_Exception
     */
    protected $_exception;

    /**
     * @var string
     */
    protected $_base_uri = "";

    /**
     * @var string
     */
    protected $uri = "";

    /**
     * @var string
     */
    protected $dispatched = "";

    /**
     * @var string
     */
    protected $routed = "";

/**
* <div id="yaf-request-abstract.isget" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isGet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isGet</span> — <span class="dc-title">判断请求是否是 GET 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isget-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isGet</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isget-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isget-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.isget-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isget.php
     *
     * @return bool
     
*/
    public function isGet() {}

    /** @return bool */
    public function isDelete() {}

    /** @return bool */
    public function isPatch() {}

    /** @return string|null */
    public function getRaw() {}

/**
* <div id="yaf-request-abstract.clearparams" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::clearParams</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::clearParams</span> — <span class="dc-title">Remove all params</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.clearparams-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::clearParams</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Remove all params set by router, or <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setParam()}</span>  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.clearparams-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.clearparams-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span>  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.clearparams-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @return Yaf_Request_Abstract|null
     
*/
    public function clearParams() {}

/**
* <div id="yaf-request-abstract.ispost" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isPost</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isPost</span> — <span class="dc-title">判断请求是否是 POST 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.ispost-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isPost</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.ispost-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.ispost-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.ispost-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.ispost.php
     *
     * @return bool
     
*/
    public function isPost() {}

/**
* <div id="yaf-request-abstract.isput" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isPut</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isPut</span> — <span class="dc-title">判断请求是否是 PUT 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isput-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isPut</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isput-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isput-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.isput-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isput.php
     *
     * @return bool
     
*/
    public function isPut() {}

/**
* <div id="yaf-request-abstract.ishead" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isHead</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isHead</span> — <span class="dc-title">判断请求是否是 HEAD 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.ishead-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isHead</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.ishead-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.ishead-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.ishead-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.ishead.php
     *
     * @return bool
     
*/
    public function isHead() {}

/**
* <div id="yaf-request-abstract.isoptions" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isOptions</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isOptions</span> — <span class="dc-title">判断请求是否是 OPTIONS 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isoptions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isOptions</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isoptions-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isoptions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isoptions.php
     *
     * @return bool
     
*/
    public function isOptions() {}

/**
* <div id="yaf-request-abstract.iscli" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isCli</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isCli</span> — <span class="dc-title">判断请求是否是 CLI 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.iscli-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isCli</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.iscli-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.iscli-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.iscli-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.iscli.php
     *
     * @return bool
     
*/
    public function isCli() {}

/**
* <div id="yaf-request-abstract.isdispatched" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isDispatched</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isDispatched</span> — <span class="dc-title">判断请求是否已发送</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isdispatched-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isDispatched</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isdispatched-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isdispatched-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.isdispatched-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::dispatch()} - 分发请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isdispached.php
     *
     * @return bool
     
*/
    final public function isDispatched() {}

/**
* <div id="yaf-request-abstract.isrouted" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isRouted</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isRouted</span> — <span class="dc-title">判断请求是否已路由</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isrouted-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isRouted</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isrouted-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isrouted-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isrouted.php
     *
     * @return bool
     
*/
    final public function isRouted() {}

/**
* <div id="yaf-request-abstract.isxmlhttprequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::isXmlHttpRequest</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::isXmlHttpRequest</span> — <span class="dc-title">判断请求是否是 AJAX 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.isxmlhttprequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::isXmlHttpRequest</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.isxmlhttprequest-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.isxmlhttprequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   boolean  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.isxmlhttprequest-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet()} - 判断请求是否是 GET 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.isxmlhttprequest.php
     *
     * @return bool
     
*/
    public function isXmlHttpRequest() {}

/**
* <div id="yaf-request-abstract.getserver" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getServer</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getServer</span> — <span class="dc-title">检索 SERVER 变量</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getserver-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getServer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   检索 SERVER 变量  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getserver-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      变量名     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">default</span></dt>    <dd>     <p class="para">      如果提供这个参数，在没找到变量值时候此参数的值将被返回     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getserver-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getserver-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam()} - 检索调用的参数</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getEnv()} - 检索 ENV 变量</span></li>  </ul> </div></div>
    *
     * Retrieve $_SERVER variable
     *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getserver.php
     *
     * @param string $name the variable name, if not provided returns all
     * @param string $default if this parameter is provide, this will be returned if the variable can not be found
     *
     * @return mixed
     
*/
    public function getServer($name = null, $default = null) {}

/**
* <div id="yaf-request-abstract.getenv" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getEnv</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getEnv</span> — <span class="dc-title">检索 ENV 变量</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getenv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getEnv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   检索 ENV 变量  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getenv-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      变量名     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">default</span></dt>    <dd>     <p class="para">      如果这个参数被提供了，当参数找不到的时候它将被返回     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getenv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getenv-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getServer()} - 检索 SERVER 变量</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam()} - 检索调用的参数</span></li>  </ul> </div></div>
    *
     * Retrieve $_ENV variable
     *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getenv.php
     *
     * @param string $name the variable name, if not provided returns all
     * @param string $default if this parameter is provide, this will be returned if the variable can not be found
     *
     * @return mixed
     
*/
    public function getEnv($name = null, $default = null) {}

/**
* <div id="yaf-request-abstract.getparam" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getParam</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getParam</span> — <span class="dc-title">检索调用的参数</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getparam-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getParam</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getparam-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">default</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getparam-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getparam-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setParam()} - 设置调用参数到请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getparam.php
     *
     * @param string $name
     * @param mixed $default
     *
     * @return mixed
     
*/
    public function getParam(string $name, $default = '') {}

/**
* <div id="yaf-request-abstract.getparams" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getParams</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getParams</span> — <span class="dc-title">获取所有调用的参数</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getparams-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getParams</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getparams-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getparams-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getparams-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setParam()} - 设置调用参数到请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getparams.php
     *
     * @return array
     
*/
    public function getParams() {}

/**
* <div id="yaf-request-abstract.getexception" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getException</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getException</span> — <span class="dc-title">The getException purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getexception-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getException</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getexception-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getexception-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getexception.php
     *
     * @return Yaf_Exception
     
*/
    public function getException() {}

/**
* <div id="yaf-request-abstract.getmodulename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getModuleName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getModuleName</span> — <span class="dc-title">The getModuleName purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getmodulename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getModuleName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getmodulename-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getmodulename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getmoudlename.php
     *
     * @return string
     
*/
    public function getModuleName() {}

/**
* <div id="yaf-request-abstract.getcontrollername" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getControllerName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getControllerName</span> — <span class="dc-title">The getControllerName purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getcontrollername-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getControllerName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getcontrollername-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getcontrollername-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getcontrollername.php
     *
     * @return string
     
*/
    public function getControllerName() {}

/**
* <div id="yaf-request-abstract.getactionname" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getActionName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getActionName</span> — <span class="dc-title">The getActionName purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getactionname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getActionName</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getactionname-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getactionname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getactionname.php
     *
     * @return string
     
*/
    public function getActionName() {}

/**
* <div id="yaf-request-abstract.setparam" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setParam</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setParam</span> — <span class="dc-title">设置调用参数到请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setparam-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setParam</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   设置参数到请求，可以由 <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam()}</span> 检索  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setparam-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">            </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setparam-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.setparam-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam()} - 检索调用的参数</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParams()} - 获取所有调用的参数</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setparam.php
     *
     * @param string|array $name the variable name, or an array of key=>value pairs
     * @param string $value
     *
     * @return Yaf_Request_Abstract|bool|null
     
*/
    public function setParam($name, $value = null) {}

/**
* <div id="yaf-request-abstract.setmodulename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setModuleName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setModuleName</span> — <span class="dc-title">设置模块名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setmodulename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setModuleName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    set module name to request, this is usually used by custom router to set route result module name.  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setmodulename-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">module</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，module 名，应该是骆驼样式，比如“Index”或“Foo_Bar”        </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">format_name</span></dt>    <dd>     <p class="para">      在 Yaf 3.2.0 中引入，Yaf 默认会将名称格式化为骆驼样式，如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，Yaf 将设置原始名称来请求。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setmodulename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setmodulename.php
     *
     * @param string $module
     * @param bool $format_name
     *
     * @return Yaf_Request_Abstract|bool
     
*/
    public function setModuleName($module, $format_name = true) {}

/**
* <div id="yaf-request-abstract.setcontrollername" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setControllerName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setControllerName</span> — <span class="dc-title">设置控制器名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setcontrollername-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setControllerName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    set controller name to request, this is usually used by custom router to set route result controller name.  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setcontrollername-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">controller</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，controller 名，应该是骆驼样式，比如“Index”或“Foo_Bar”       </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">format_name</span></dt>    <dd>     <p class="para">      在 Yaf 3.2.0 中引入，Yaf 默认会将名称格式化为骆驼样式，如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，Yaf 将设置原始名称来请求。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setcontrollername-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setcontrollername.php
     *
     * @param string $controller
     * @param bool $format_name
     *
     * @return Yaf_Request_Abstract|bool
     
*/
    public function setControllerName($controller, $format_name = true) {}

/**
* <div id="yaf-request-abstract.setactionname" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setActionName</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setActionName</span> — <span class="dc-title">设置 action 名</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setactionname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setActionName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   set action name to request, this is usually used by custom router to set route result action name.  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setactionname-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">action</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，action 名，应该是小写的，比如“index”或“foo_bar”      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">format_name</span></dt>    <dd>     <p class="para">      在 Yaf 3.2.0 中引入，Yaf 默认会将名称格式化为小写样式，如果设置为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>，Yaf 将设置原始名称来请求。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setactionname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setactionname.php
     *
     * @param string $action
     * @param bool $format_name
     *
     * @return Yaf_Request_Abstract|bool
     
*/
    public function setActionName($action, $format_name = true) {}

/**
* <div id="yaf-request-abstract.getmethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getMethod</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getMethod</span> — <span class="dc-title">检索请求方法</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getmethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getMethod</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getmethod-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getmethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串，像“POST”、“GET”等。  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-abstract.getmethod-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead()} - 判断请求是否是 HEAD 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli()} - 判断请求是否是 CLI 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost()} - 判断请求是否是 POST 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut()} - 判断请求是否是 PUT 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions()} - 判断请求是否是 OPTIONS 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>  </ul> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getmethod.php
     *
     * @return string
     
*/
    public function getMethod() {}

/**
* <div id="yaf-request-abstract.getlanguage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getLanguage</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getLanguage</span> — <span class="dc-title">检索客户端的首选语言</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getlanguage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getLanguage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getlanguage-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getlanguage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getlanguage.php
     *
     * @return string
     
*/
    public function getLanguage() {}

/**
* <div id="yaf-request-abstract.setbaseuri" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setBaseUri</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setBaseUri</span> — <span class="dc-title">设置基础 URI</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setbaseuri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setBaseUri</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   设置基础 URI，在路由时使用基础 URI，在路由阶段，请求 URI 用于路由请求，而基础 URI   用户跳过请求 URI 的前置部分（基础 URI）。   也就是说，如果请求 URI 是 a/b/c，然后设置基础 URI 为 “a/b”，则路由阶段只会使用“/c”   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     一般不需要设置，Yaf 会自动判断。    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setbaseuri-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">uir</span></dt>    <dd>     <p class="para">       基础 URI     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setbaseuri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div></div>
    *
     * <p>Set base URI, base URI is used when doing routing, in routing phase request URI is used to route a request, while base URI is used to skip the leading part(base URI) of request URI. That is, if comes a request with request URI a/b/c, then if you set base URI to "a/b", only "/c" will be used in routing phase.</p>
     * <br/>
     * <b>Note:</b>
     * <p>generally, you don't need to set this, Yaf will determine it automatically.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setbaseuri.php
     *
     * @param string $uri base URI
     *
     * @return bool
     
*/
    public function setBaseUri($uri) {}

/**
* <div id="yaf-request-abstract.getbaseuri" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getBaseUri</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getBaseUri</span> — <span class="dc-title">The getBaseUri purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getbaseuri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getBaseUri</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getbaseuri-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getbaseuri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getbaseuri.php
     *
     * @return string
     
*/
    public function getBaseUri() {}

/**
* <div id="yaf-request-abstract.getrequesturi" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::getRequestUri</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::getRequestUri</span> — <span class="dc-title">The getRequestUri purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.getrequesturi-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::getRequestUri</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.getrequesturi-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.getrequesturi-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.getrequesturi.php
     *
     * @return string
     
*/
    public function getRequestUri() {}

/**
* <div id="yaf-request-abstract.setrequesturi" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setRequestUri</h1>  <p class="verinfo">(Yaf &gt;=2.1.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setRequestUri</span> — <span class="dc-title">The setRequestUri purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setrequesturi-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setRequestUri</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setrequesturi-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">uir</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setrequesturi-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param string $uri request URI
     * @return Yaf_Request_Abstract|null
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setrequesturi.php
     *
     * @since 2.1.0
     
*/
    public function setRequestUri($uri) {}

/**
* <div id="yaf-request-abstract.setdispatched" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setDispatched</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setDispatched</span> — <span class="dc-title">The setDispatched purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setdispatched-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setDispatched</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setdispatched-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setdispatched-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Set request as dispatched
     *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setdispatched.php
     * @param bool $dispatched
     * @return Yaf_Request_Abstract|null
     
*/
    final public function setDispatched($dispatched = null) {}

/**
* <div id="yaf-request-abstract.setrouted" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Abstract::setRouted</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Abstract::setRouted</span> — <span class="dc-title">The setRouted purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-abstract.setrouted-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Abstract::setRouted</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-abstract.setrouted-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">flag</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-abstract.setrouted-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Set request as routed
     *
     * @link https://secure.php.net/manual/en/yaf-request-abstract.setrouted.php
     * @param bool $flag
     * @return Yaf_Request_Abstract|null
     
*/
    final public function setRouted($flag = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function get($name = null, $default = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function getFiles($name = null, $default = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function getCookie($name = null, $default = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function getPost(string $name = '', $default = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function getRequest($name = null, $default = null) {}

    /**
     * @param string $name
     * @param mixed $default
     * @return mixed
     */
    public function getQuery($name = null, $default = null) {}
}

/**
* <div id="class.yaf-plugin-abstract" class="reference"> <h1 class="title">Yaf_Plugin_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-plugin-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">     Plugins 允许轻松地定制和扩展框架。   </p>   <p class="para">    插件（Plugin）是类。实际定义的类将会基于组件变化——需要实现这些接口，但该插件（Plugin）本身就是一个类。   </p>   <p class="para">     插件（plugin）通过使用 <span class="methodname" style="color:#CC7832">{@link Yaf_Dispatcher::registerPlugin()}</span> 加载到 Yaf     中，在框架注册后，插件根据接口实现的所有方法将会在恰当的时间被调用。   </p>  </div> <div class="section">  <h2 class="title">示例</h2>  <div class="example" id="example-4178">   <p><strong>示例 #1 插件示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>   </span><span style="color: #FF8000">// bootstrap class should be defined under ./application/Bootstrap.php <br>   </span><span style="color: #007700">class </span><span style="color: #9876AA">Bootstrap </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Bootstrap_Abstract </span><span style="color: #007700">{<br>        public function </span><span style="color: #9876AA">_initPlugin</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Dispatcher $dispatcher</span><span style="color: #007700">) {<br>            </span><span style="color: #FF8000">// register a plugin <br>            </span><span style="color: #9876AA">$dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPlugin</span><span style="color: #007700">(new </span><span style="color: #9876AA">TestPlugin</span><span style="color: #007700">());<br>        }<br>   }<br><br>   </span><span style="color: #FF8000">// plugin class should be placed under ./application/plugins/ <br>   </span><span style="color: #007700">class </span><span style="color: #9876AA">TestPlugin </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Plugin_Abstract </span><span style="color: #007700">{<br>        public function </span><span style="color: #9876AA">routerStartup</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>            </span><span style="color: #FF8000">// 在路由之前执行,这个钩子里，你可以做url重写等功能 <br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"routerStartup"</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>           </span><span style="color: #FF8000">// 路由完成后，在这个钩子里，你可以做登陆检测等功能<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"routerShutdown"</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">dispatchLoopStartup</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"dispatchLoopStartup"</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">preDispatch</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"preDispatch"</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">postDispatch</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"postDispatch"</span><span style="color: #007700">);<br>        }<br>        public function </span><span style="color: #9876AA">dispatchLoopShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>            </span><span style="color: #FF8000">// final hook<br>               in this hook user can do logging or implement layout <br>            </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #DD0000">"dispatchLoopShutdown"</span><span style="color: #007700">);<br>        }<br>   }<br><br>   Class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>        public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">() {<br>            return </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">; </span><span style="color: #FF8000">//prevent rendering<br>        </span><span style="color: #007700">}<br>   }<br><br>   </span><span style="color: #9876AA">$config </span><span style="color: #007700">= array(<br>       </span><span style="color: #DD0000">"application" </span><span style="color: #007700">=&gt; array(<br>           </span><span style="color: #DD0000">"directory" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">dirname</span><span style="color: #007700">(</span><span style="color: #9876AA">__FILE__</span><span style="color: #007700">) . </span><span style="color: #DD0000">"/application/"</span><span style="color: #007700">,<br>       ),<br>   );<br> <br>   </span><span style="color: #9876AA">$app </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Application</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">);<br>   </span><span style="color: #9876AA">$app</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bootstrap</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">run</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="cdata"><blockquote style="border:1px gray solid;"><br>string(13) "routerStartup"<br>string(14) "routerShutdown"<br>string(19) "dispatchLoopStartup"<br>string(11) "preDispatch"<br>string(12) "postDispatch"<br>string(20) "dispatchLoopShutdown"<br></blockquote></div>   </div>  </div> </div>  <div class="section" id="yaf-plugin-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Plugin_Abstract</strong>     </span>     {</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.dispatchloopshutdown.php" class="methodname" style="color:#CC7832">dispatchLoopShutdown</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.dispatchloopstartup.php" class="methodname" style="color:#CC7832">dispatchLoopStartup</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.postdispatch.php" class="methodname" style="color:#CC7832">postDispatch</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.predispatch.php" class="methodname" style="color:#CC7832">preDispatch</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.preresponse.php" class="methodname" style="color:#CC7832">preResponse</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.routershutdown.php" class="methodname" style="color:#CC7832">routerShutdown</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-plugin-abstract.routerstartup.php" class="methodname" style="color:#CC7832">routerStartup</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Plugin_Abstract::dispatchLoopShutdown} — The dispatchLoopShutdown purpose</li><li>{@link Yaf_Plugin_Abstract::dispatchLoopStartup} — 在调度循环之前的 Hook</li><li>{@link Yaf_Plugin_Abstract::postDispatch} — The postDispatch purpose</li><li>{@link Yaf_Plugin_Abstract::preDispatch} — The preDispatch purpose</li><li>{@link Yaf_Plugin_Abstract::preResponse} — The preResponse purpose</li><li>{@link Yaf_Plugin_Abstract::routerShutdown} — The routerShutdown purpose</li><li>{@link Yaf_Plugin_Abstract::routerStartup} — RouterStartup hook</li></ul></div>
*
 * <p>Plugins allow for easy extensibility and customization of the framework.</p>
 * <br/>
 * <p>Plugins are classes. The actual class definition will vary based on the component -- you may need to implement this interface, but the fact remains that the plugin is itself a class.</p>
 * <br/>
 * <p>A plugin could be loaded into Yaf by using Yaf_Dispatcher::registerPlugin(), after registered, All the methods which the plugin implemented according to this interface, will be called at the proper time.</p>
 * @link https://secure.php.net/manual/en/class.yaf-plugin-abstract.php
 
*/
abstract class Yaf_Plugin_Abstract
{
/**
* <div id="yaf-plugin-abstract.routerstartup" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::routerStartup</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::routerStartup</span> — <span class="dc-title">RouterStartup hook</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.routerstartup-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::routerStartup</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    这个是 Yaf 插件的勾子系统最早被触发的的一个方法，如果一个用户插件实现了这个方法，它将在路由之前触发。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.routerstartup-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.routerstartup-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.routerstartup-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::routerShutdown()} - The routerShutdown purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - 在调度循环之前的 Hook</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::dispatchLoopShutdown()} - The dispatchLoopShutdown purpose</span></li>  </ul> </div></div>
    *
     * This is the earliest hook in Yaf plugin hook system, if a custom plugin implement this method, then it will be called before routing a request.
     *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.routerstartup.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.routershutdown" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::routerShutdown</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::routerShutdown</span> — <span class="dc-title">The routerShutdown purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.routershutdown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::routerShutdown</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    这个钩子在路由结束之后触发，通常被用于登陆检查。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.routershutdown-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.routershutdown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-plugin-abstract.routershutdown-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4179">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Plugin_Abstract::routerShutdown()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">UserInitPlugin </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Plugin_Abstract </span><span style="color: #007700">{<br><br>    public function </span><span style="color: #9876AA">routerShutdown</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Request_Abstract $request</span><span style="color: #007700">, </span><span style="color: #9876AA">Yaf_Response_Abstract $response</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">$controller </span><span style="color: #007700">= </span><span style="color: #9876AA">$request</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getControllerName</span><span style="color: #007700">();<br><br>        </span><span style="color: #FF8000">//*<br>         * Use access controller is unecessary for APIs<br>         <br>        </span><span style="color: #007700">if (</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$controller</span><span style="color: #007700">), array(<br>            </span><span style="color: #DD0000">'api'</span><span style="color: #007700">,  <br>        ))) {<br>            return </span><span style="color: #9876AA">TRUE</span><span style="color: #007700">;<br>        }<br>       <br>        if (</span><span style="color: #9876AA">Yaf_Session</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">has</span><span style="color: #007700">(</span><span style="color: #DD0000">"login"</span><span style="color: #007700">)) {<br>            return </span><span style="color: #9876AA">TRUE</span><span style="color: #007700">;<br>        }<br> <br>        </span><span style="color: #FF8000">// Use access check failed, need to login <br>        </span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRedirect</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://yourdomain.com/login/"</span><span style="color: #007700">);<br>        return </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">;<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.routershutdown-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::routerStartup()} - RouterStartup hook</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - 在调度循环之前的 Hook</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::dispatchLoopShutdown()} - The dispatchLoopShutdown purpose</span></li>  </ul> </div></div>
    *
     * This hook will be trigged after the route process finished, this hook is usually used for login check.
     *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.routershutdown.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.dispatchloopstartup" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::dispatchLoopStartup</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::dispatchLoopStartup</span> — <span class="dc-title">在调度循环之前的 Hook</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::dispatchLoopStartup</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   这个钩子将在分发循环开始之前触发。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.dispatchloopstartup-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.dispatchloopstartup.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.dispatchloopshutdown" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::dispatchLoopShutdown</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::dispatchLoopShutdown</span> — <span class="dc-title">The dispatchLoopShutdown purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::dispatchLoopShutdown</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   这个方式是 Yaf 插件钩子系统中最后的一个钩子，如果一个用户插件实现了这个方法，它将在分发循环结束之后触发。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-plugin-abstract.dispatchloopshutdown-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::routerStartup()} - RouterStartup hook</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::routerShutdown()} - The routerShutdown purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::dispatchLoopStartup()} - 在调度循环之前的 Hook</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::preDispatch()} - The preDispatch purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Plugin_Abstract::postDispatch()} - The postDispatch purpose</span></li>  </ul> </div></div>
    *
     * This is the latest hook in Yaf plugin hook system, if a custom plugin implement this method, then it will be called after the dispatch loop finished.
     *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.dispatchloopshutdown.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.predispatch" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::preDispatch</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::preDispatch</span> — <span class="dc-title">The preDispatch purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.predispatch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::preDispatch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.predispatch-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.predispatch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.predispatch.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.postdispatch" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::postDispatch</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::postDispatch</span> — <span class="dc-title">The postDispatch purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.postdispatch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::postDispatch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.postdispatch-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.postdispatch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.postdispatch.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}

/**
* <div id="yaf-plugin-abstract.preresponse" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Plugin_Abstract::preResponse</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Plugin_Abstract::preResponse</span> — <span class="dc-title">The preResponse purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-plugin-abstract.preresponse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Plugin_Abstract::preResponse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php" class="type Yaf_Response_Abstract" style="color:#EAB766">Yaf_Response_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$response</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">    这个钩子在响应(Yaf_Response)前被触发  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-plugin-abstract.preresponse-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">response</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-plugin-abstract.preresponse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-plugin-abstract.preresponse.php
     *
     * @param Yaf_Request_Abstract $request
     * @param Yaf_Response_Abstract $response
     *
     * @return bool true
     
*/
    public function preResponse(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}
}

/**
* <div id="class.yaf-response-abstract" class="reference"> <h1 class="title">Yaf_Response_Abstract 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-response-abstract.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-response-abstract.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Response_Abstract</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">      <span class="modifier">const</span>      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>       <var class="fieldsynopsis_varname"><var class="varname">DEFAULT_BODY</var></var><span class="initializer"> = "content"</span>;</div>     <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.header">$<var class="varname">_header</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.body">$<var class="varname">_body</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-response-abstract.php#yaf-response-abstract.props.sendheader">$<var class="varname">_sendheader</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.appendbody.php" class="methodname" style="color:#CC7832">appendBody</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.clearbody.php" class="methodname" style="color:#CC7832">clearBody</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.clearheaders.php" class="methodname" style="color:#CC7832">clearHeaders</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.getbody.php" class="methodname" style="color:#CC7832">getBody</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.getheader.php" class="methodname" style="color:#CC7832">getHeader</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.prependbody.php" class="methodname" style="color:#CC7832">prependBody</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.response.php" class="methodname" style="color:#CC7832">response</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">protected</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.setallheaders.php" class="methodname" style="color:#CC7832">setAllHeaders</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.setbody.php" class="methodname" style="color:#CC7832">setBody</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.setheader.php" class="methodname" style="color:#CC7832">setHeader</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$replace</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.setredirect.php" class="methodname" style="color:#CC7832">setRedirect</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$url</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>    <div class="destructorsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-response-abstract.destruct.php" class="methodname" style="color:#CC7832">__destruct</a></span>()</div>   }</div>  </div>    <div class="section" id="yaf-response-abstract.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-response-abstract.props.header"><var class="varname">_header</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-response-abstract.props.body"><var class="varname">_body</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-response-abstract.props.sendheader"><var class="varname">_sendheader</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Response_Abstract::appendBody} — 向响应 body 追加内容</li><li>{@link Yaf_Response_Abstract::clearBody} — 丢弃所有已存在的响应 body</li><li>{@link Yaf_Response_Abstract::clearHeaders} — 丢弃所有设置的 header</li><li>{@link Yaf_Response_Abstract::__construct} — The __construct purpose</li><li>{@link Yaf_Response_Abstract::__destruct} — The __destruct purpose</li><li>{@link Yaf_Response_Abstract::getBody} — 获取已存在的内容</li><li>{@link Yaf_Response_Abstract::getHeader} — The getHeader purpose</li><li>{@link Yaf_Response_Abstract::prependBody} — The prependBody purpose</li><li>{@link Yaf_Response_Abstract::response} — 发送响应</li><li>{@link Yaf_Response_Abstract::setAllHeaders} — The setAllHeaders purpose</li><li>{@link Yaf_Response_Abstract::setBody} — 设置内容到响应</li><li>{@link Yaf_Response_Abstract::setHeader} — 设置响应 header</li><li>{@link Yaf_Response_Abstract::setRedirect} — The setRedirect purpose</li><li>{@link Yaf_Response_Abstract::__toString} — 获取字符串形式的所有 body</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-response-abstract.php
 
*/
abstract class Yaf_Response_Abstract
{
    public const DEFAULT_BODY = "content";

    /**
     * @var string
     */
    protected $_header;

    /**
     * @var string
     */
    protected $_body;

    /**
     * @var bool
     */
    protected $_sendheader;

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.construct.php
     */
    public function __construct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.destruct.php
     */
    public function __destruct() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.clone.php
     */
    private function __clone() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.tostring.php
     */
    public function __toString() {}

/**
* <div id="yaf-response-abstract.response" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::response</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::response</span> — <span class="dc-title">发送响应</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.response-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::response</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   发送响应  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.response-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.response-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-response-abstract.response-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4183">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Response_Abstract::response()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$response </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">" World"</span><span style="color: #007700">, </span><span style="color: #DD0000">"footer"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">response</span><span style="color: #007700">();<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello World</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.response-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::setBody()} - 设置内容到响应</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::clearBody()} - 丢弃所有已存在的响应 body</span></li>  </ul> </div></div>
    *
     * Send response
     * @link https://secure.php.net/manual/en/yaf-response-abstract.response.php
     *
     * @return void
     
*/
    public function response() {}

/**
* <div id="yaf-response-abstract.setheader" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::setHeader</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::setHeader</span> — <span class="dc-title">设置响应 header</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.setheader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::setHeader</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$replace</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   用于发送 HTTP header  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.setheader-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.setheader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.setheader-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::getHeader()} - The getHeader purpose</span></li>   <li><span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::cleanHeaders()</strong></span></li>  </ul> </div></div>
    *
     * Set response header
     * @link https://secure.php.net/manual/en/yaf-response-abstract.setheader.php
     *
     * @param string $name
     * @param string $value
     * @param bool $rep
     *
     * @return bool
     
*/
    public function setHeader(string $name, string $value, bool $rep = false) {}

/**
* <div id="yaf-response-abstract.setbody" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::setBody</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::setBody</span> — <span class="dc-title">设置内容到响应</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.setbody-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::setBody</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   设置内容到响应  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.setbody-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">body</span></dt>    <dd>     <p class="para">      内容字符串     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      内容 key，可以使用 key 设置内容，如果未指定，然后默认使用      Yaf_Response_Abstract::DEFAULT_BODY。      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        此参数自 2.2.0 起引入      </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.setbody-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-response-abstract.setbody-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4184">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Response_Abstract::setBody()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$response </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">" World"</span><span style="color: #007700">, </span><span style="color: #DD0000">"footer"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br>echo </span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Yaf_Response_Http Object<br>(<br>    [_header:protected] =&gt; Array<br>        (<br>        )<br><br>    [_body:protected] =&gt; Array<br>        (<br>            [content] =&gt; Hello<br>            [footer] =&gt;  World<br>        )<br><br>    [_sendheader:protected] =&gt; 1<br>    [_response_code:protected] =&gt; 200<br>)<br>Hello World</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.setbody-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::getBody()} - 获取已存在的内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::appendBody()} - 向响应 body 追加内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::clearBody()} - 丢弃所有已存在的响应 body</span></li>  </ul> </div></div>
    *
     * Set content to response
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.setbody.php
     *
     * @param string $body content string
     * @param string $name <p>the content key, you can set a content with a key, if you don't specific, then Yaf_Response_Abstract::DEFAULT_BODY will be used</p>
     * <br/>
     * <b>Note:</b>
     * <p>this parameter is introduced as of 2.2.0</p>
     *
     * @return bool
     
*/
    public function setBody($body, $name = self::DEFAULT_BODY) {}

/**
* <div id="yaf-response-abstract.appendbody" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::appendBody</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::appendBody</span> — <span class="dc-title">向响应 body 追加内容</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.appendbody-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::appendBody</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   追加内容到已有的内存块  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.appendbody-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">body</span></dt>    <dd>     <p class="para">      内容字符串     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      响应内容的 key，可以使用 key 设置内容，如果没有指定，然后默认使用 Yaf_Response_Abstract::DEFAULT_BODY      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        此参数自 2.2.0 起引入       </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.appendbody-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-response-abstract.appendbody-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4180">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Response_Abstract::appendBody()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$response </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">appendBody</span><span style="color: #007700">(</span><span style="color: #DD0000">" World"</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello World</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.appendbody-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="classname"><a href="https://php.net/manual/zh/class.yaf-config-ini.php" class="classname">Yaf_Config_Ini</a></span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::getBody()} - 获取已存在的内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::setBody()} - 设置内容到响应</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::clearBody()} - 丢弃所有已存在的响应 body</span></li>  </ul> </div></div>
    *
     * append a content to a exists content block
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.appendbody.php
     *
     * @param string $body content string
     * @param string $name <p>the content key, you can set a content with a key, if you don't specific, then Yaf_Response_Abstract::DEFAULT_BODY will be used</p>
     * <br/>
     * <b>Note:</b>
     * <p>this parameter is introduced as of 2.2.0</p>
     *
     * @return bool
     
*/
    public function appendBody($body, $name = self::DEFAULT_BODY) {}

/**
* <div id="yaf-response-abstract.prependbody" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::prependBody</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::prependBody</span> — <span class="dc-title">The prependBody purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.prependbody-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::prependBody</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   往已有的内容块前插入内容  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.prependbody-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">body</span></dt>    <dd>     <p class="para">      内容字符串     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      内容 key，可以使用 key 设置内容，如果未指定，然后默认使用      Yaf_Response_Abstract::DEFAULT_BODY。      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        此参数自 2.2.0 起引入      </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.prependbody-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   bool  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-response-abstract.prependbody-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4182">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Response_Abstract::prependBody()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$response </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"World"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">prependBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello "</span><span style="color: #007700">);<br><br>echo </span><span style="color: #9876AA">$response</span><span style="color: #007700">;<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">Hello World</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.prependbody-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::getBody()} - 获取已存在的内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::setBody()} - 设置内容到响应</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::appendBody()} - 向响应 body 追加内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::clearBody()} - 丢弃所有已存在的响应 body</span></li>  </ul> </div></div>
    *
     * prepend a content to a exists content block
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.prependbody.php
     *
     * @param string $body content string
     * @param string $name <p>the content key, you can set a content with a key, if you don't specific, then Yaf_Response_Abstract::DEFAULT_BODY will be used</p>
     * <br/>
     * <b>Note:</b>
     * <p>this parameter is introduced as of 2.2.0</p>
     *
     * @return bool
     
*/
    public function prependBody($body, $name = self::DEFAULT_BODY) {}

/**
* <div id="yaf-response-abstract.clearbody" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::clearBody</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::clearBody</span> — <span class="dc-title">丢弃所有已存在的响应 body</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.clearbody-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::clearBody</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   清除已存在的内容  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.clearbody-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      内容 key，如果没有指定，将会清除所有内容。      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        此参数自 2.2.0 起引入      </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.clearbody-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.clearbody-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::setBody()} - 设置内容到响应</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::appendBody()} - 向响应 body 追加内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::getBody()} - 获取已存在的内容</span></li>  </ul> </div></div>
    *
     * Clear existing content
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.clearbody.php
     *
     * @param string $name <p>the content key, you can set a content with a key, if you don't specific, then Yaf_Response_Abstract::DEFAULT_BODY will be used</p>
     * <br/>
     * <b>Note:</b>
     * <p>this parameter is introduced as of 2.2.0</p>
     *
     * @return bool
     
*/
    public function clearBody($name = self::DEFAULT_BODY) {}

/**
* <div id="yaf-response-abstract.getbody" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Response_Abstract::getBody</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Response_Abstract::getBody</span> — <span class="dc-title">获取已存在的内容</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-response-abstract.getbody-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Response_Abstract::getBody</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$key</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   获取已存在的内容  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-response-abstract.getbody-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      内容 key，如果未指定，然后默认使用      Yaf_Response_Abstract::DEFAULT_BODY。如果传入 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>，所有的内容将会以数组形式被返回。      </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        </p><p class="para">        此参数自 2.2.0 起引入      </p>      </blockquote>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-response-abstract.getbody-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-response-abstract.getbody-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4181">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Response_Abstract::getBody()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$response </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Response_Http</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">setBody</span><span style="color: #007700">(</span><span style="color: #DD0000">" World"</span><span style="color: #007700">, </span><span style="color: #DD0000">"footer"</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">()); </span><span style="color: #FF8000">//default <br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #9876AA">Yaf_Response_Abstract</span><span style="color: #007700">::</span><span style="color: #9876AA">DEFAULT_BODY</span><span style="color: #007700">)); </span><span style="color: #FF8000">//same as above<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #DD0000">"footer"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getBody</span><span style="color: #007700">(</span><span style="color: #9876AA">NULL</span><span style="color: #007700">)); </span><span style="color: #FF8000">//get all<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(5) "Hello"<br>string(5) "Hello"<br>string(6) " World"<br>array(2) {<br>  ["content"]=&gt;<br>  string(5) "Hello"<br>  ["footer"]=&gt;<br>  string(6) " World"<br>}</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-response-abstract.getbody-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::setBody()} - 设置内容到响应</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::appendBody()} - 向响应 body 追加内容</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::prependBody()} - The prependBody purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Response_Abstract::clearBody()} - 丢弃所有已存在的响应 body</span></li>  </ul> </div></div>
    *
     * Retrieve an existing content
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.getbody.php
     *
     * @param string|null $name <p>the content key, if you don't specific, then Yaf_Response_Abstract::DEFAULT_BODY will be used. if you pass in a NULL, then all contents will be returned as a array</p>
     * <br/>
     * <b>Note:</b>
     * <p>this parameter is introduced as of 2.2.0</p>
     *
     * @return mixed
     
*/
    public function getBody($name = self::DEFAULT_BODY) {}
}

/**
 * Yaf provides a ability for developers to use custom view engine instead of build-in engine which is Yaf_View_Simple. There is a example to explain how to do this, please see Yaf_Dispatcher::setView()
 *
 * @link https://secure.php.net/manual/en/class.yaf-view-interface.php
 */
interface Yaf_View_Interface
{
    /**
     * Assign values to View engine, then the value can access directly by name in template.
     *
     * @link https://secure.php.net/manual/en/yaf-view-interface.assign.php
     *
     * @param string|array $name
     * @param mixed $value
     * @return Yaf_View_Interface|bool
     */
    public function assign($name, $value = '');

    /**
     * Render a template and output the result immediately.
     *
     * @link https://secure.php.net/manual/en/yaf-view-interface.display.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     * @return bool
     */
    public function display($tpl, $tpl_vars = null);

    /**
     * @link https://secure.php.net/manual/en/yaf-view-interface.getscriptpath.php
     *
     * @return string
     */
    public function getScriptPath();

    /**
     * Render a template and return the result.
     *
     * @link https://secure.php.net/manual/en/yaf-view-interface.render.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     * @return string|bool
     */
    public function render($tpl, $tpl_vars = null);

    /**
     * Set the templates base directory, this is usually called by Yaf_Dispatcher
     *
     * @link https://secure.php.net/manual/en/yaf-view-interface.setscriptpath.php
     *
     * @param string $template_dir An absolute path to the template directory, by default, Yaf_Dispatcher use application.directory . "/views" as this parameter.
     * @return bool
     */
    public function setScriptPath($template_dir);
}

/**
 * <b>Yaf_Route_Interface</b> used for developer defined their custom route.
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-interface.php
 */
interface Yaf_Route_Interface
{
    /**
     * <p><b>Yaf_Route_Interface::route()</b> is the only method that a custom route should implement.</p><br/>
     * <p>if this method return TRUE, then the route process will be end. otherwise, Yaf_Router will call next route in the route stack to route request.</p><br/>
     * <p>This method would set the route result to the parameter request, by calling Yaf_Request_Abstract::setControllerName(), Yaf_Request_Abstract::setActionName() and Yaf_Request_Abstract::setModuleName().</p><br/>
     * <p>This method should also call Yaf_Request_Abstract::setRouted() to make the request routed at last.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-interface.route.php
     *
     * @param Yaf_Request_Abstract $request
     * @return bool
     */
    public function route($request);

    /**
     * <p><b>Yaf_Route_Interface::assemble()</b> - assemble a request</p><br/>
     * <p>this method returns a url according to the argument info, and append query strings to the url according to the argument query.</p>
     * <p>a route should implement this method according to its own route rules, and do a reverse progress.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-interface.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     */
    public function assemble(array $info, ?array $query = null);
}

/**
* <div id="class.yaf-exception" class="reference"> <h1 class="title">Yaf_Exception 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-exception.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-exception.getprevious.php" class="methodname" style="color:#CC7832">getPrevious</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Exception::__construct} — The __construct purpose</li><li>{@link Yaf_Exception::getPrevious} — The getPrevious purpose</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception.php
 
*/
class Yaf_Exception extends Exception
{
    /**
     * @var string
     */
    protected $message;

    /**
     * @var string
     */
    protected $code;

    /**
     * @var string
     */
    protected $previous;
}

class Yaf_Response_Http extends Yaf_Response_Abstract
{
    /**
     * @var int
     */
    protected $_response_code = 0;

    private function __clone() {}

    /**
     * @return string
     */
    public function __toString() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.setheader.php
     *
     * @param string $name
     * @param string $value
     * @param bool $rep
     * @param int $response_code
     *
     * @return bool
     */
    public function setHeader(string $name = '', string $value = '', bool $rep = false, int $response_code = 0) {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.setallheaders.php
     *
     * @param array $headers
     * @return bool
     */
    public function setAllHeaders($headers) {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.getheader.php
     *
     * @param string $name
     *
     * @return mixed
     */
    public function getHeader($name = null) {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.clearheaders.php
     *
     *
     * @return Yaf_Response_Abstract|false
     */
    public function clearHeaders() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-response-abstract.setredirect.php
     *
     * @param string $url
     *
     * @return bool
     */
    public function setRedirect($url) {}

    /**
     * send response
     *
     * @link https://secure.php.net/manual/en/yaf-response-abstract.response.php
     *
     * @return bool
     */
    public function response() {}
}

class Yaf_Response_Cli extends Yaf_Response_Abstract
{
    private function __clone() {}

    /**
     * @return string
     */
    public function __toString() {}
}

/**
* <div id="class.yaf-request-http" class="reference"> <h1 class="title">The Yaf_Request_Http class</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-request-http.intro">   <h2 class="title">简介</h2>   <p class="para">    来自客户端的任何请求都会初始化为 <span class="classname"><strong class="classname">Yaf_Request_Http</strong></span>。可以通过该类的方法获取请求信息，像是 uri query 和 post 参数等。    </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      </p><p class="para">      为了安全，$_GET/$_POST 在 Yaf 中为只读，这意味着如果在全局变量中设置了值，将无法从 <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Http::getQuery()}</span>      或 <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Http::getPost()}</span> 获取。     </p>     <p class="para">      但确实有些用途需要这些功能，比如单元测试。因此 Yaf 可以使用 --enable-yaf-debug 编译，这将允许 Yaf 通过脚本读取用户设置的值。     </p>     <p class="para">      在这种情况下，Yaf 将会抛出 E_STRICT 警告来提醒：正在调试模式下运行 yaf。     </p>    </blockquote>     </div>  <div class="section" id="yaf-request-http.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Request_Http</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$request_uri</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$base_uri</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.get.php" class="methodname" style="color:#CC7832">get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getcookie.php" class="methodname" style="color:#CC7832">getCookie</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getfiles.php" class="methodname" style="color:#CC7832">getFiles</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getpost.php" class="methodname" style="color:#CC7832">getPost</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getquery.php" class="methodname" style="color:#CC7832">getQuery</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getraw.php" class="methodname" style="color:#CC7832">getRaw</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.getrequest.php" class="methodname" style="color:#CC7832">getRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-http.isxmlhttprequest.php" class="methodname" style="color:#CC7832">isXmlHttpRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::clearParams}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getActionName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getBaseUri}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getControllerName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getEnv}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getException}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getLanguage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getMethod}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getModuleName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParams}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getRequestUri}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getServer}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isDispatched}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isRouted}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHttpRequest}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setActionName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setBaseUri}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setControllerName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setDispatched}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setModuleName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setParam}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setRequestUri}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setRouted}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-request-http.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-request-http.props.module"><var class="varname">module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.controller"><var class="varname">controller</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.action"><var class="varname">action</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.method"><var class="varname">method</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.params"><var class="varname">params</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.language"><var class="varname">language</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.exception"><var class="varname">_exception</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.base-uri"><var class="varname">_base_uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.uri"><var class="varname">uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.dispatched"><var class="varname">dispatched</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-http.props.routed"><var class="varname">routed</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Http::__construct} — Yaf_Request_Http 构造方法</li><li>{@link Yaf_Request_Http::get} — 从客户端检索变量</li><li>{@link Yaf_Request_Http::getCookie} — 检索 Cookie 变量</li><li>{@link Yaf_Request_Http::getFiles} — The getFiles purpose</li><li>{@link Yaf_Request_Http::getPost} — 检索 POST 变量</li><li>{@link Yaf_Request_Http::getQuery} — 获取 query 参数</li><li>{@link Yaf_Request_Http::getRaw} — Retrieve Raw request body</li><li>{@link Yaf_Request_Http::getRequest} — The getRequest purpose</li><li>{@link Yaf_Request_Http::isXmlHttpRequest} — 是否为Ajax请求</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-request-http.php
 
*/
class Yaf_Request_Http extends Yaf_Request_Abstract
{
    /**
     * @link https://secure.php.net/manual/en/yaf-request-http.construct.php
     *
     * @param string $request_uri
     * @param string $base_uri
     */
    public function __construct($request_uri = '', $base_uri = '') {}
}

/**
* <div id="class.yaf-request-simple" class="reference"> <h1 class="title">Yaf_Request_Simple 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-request-simple.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Request_Simple</strong></span> 特别的被用于测试。例如：CLI模式下模拟一些特殊的请求。   </p>  </div>  <div class="section" id="yaf-request-simple.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Request_Simple</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="classname">Yaf_Request_Abstract</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.yaf-request-simple.php#yaf-request-simple.constants.scheme-http"><var class="varname">SCHEME_HTTP</var></a></var><span class="initializer"> = http</span>;</div>    <div class="fieldsynopsis"><span class="modifier">const</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="fieldsynopsis_varname"><a href="https://php.net/manual/zh/class.yaf-request-simple.php#yaf-request-simple.constants.scheme-https"><var class="varname">SCHEME_HTTPS</var></a></var><span class="initializer"> = https</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$method</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$params</span><span class="initializer"> = ?</span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.get.php" class="methodname" style="color:#CC7832">get</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.getcookie.php" class="methodname" style="color:#CC7832">getCookie</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.getfiles.php" class="methodname" style="color:#CC7832">getFiles</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.getpost.php" class="methodname" style="color:#CC7832">getPost</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.getquery.php" class="methodname" style="color:#CC7832">getQuery</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.getrequest.php" class="methodname" style="color:#CC7832">getRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-request-simple.isxmlhttprequest.php" class="methodname" style="color:#CC7832">isXmlHttpRequest</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::clearParams}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getActionName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getBaseUri}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getControllerName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getEnv}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getException}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getLanguage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getMethod}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getModuleName}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParam}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getParams}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getRequestUri}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::getServer}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$default</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isCli}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isDispatched}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isGet}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isHead}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isOptions}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPost}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isPut}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isRouted}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHttpRequest}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setActionName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setBaseUri}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setControllerName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setDispatched}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setModuleName}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$format_name</span><span class="initializer"> = true</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setParam}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setRequestUri}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setRouted}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$flag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>    <div class="section" id="yaf-request-simple.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-request-simple.props.module"><var class="varname">module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.controller"><var class="varname">controller</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.action"><var class="varname">action</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.method"><var class="varname">method</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.params"><var class="varname">params</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.language"><var class="varname">language</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.exception"><var class="varname">_exception</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.base-uri"><var class="varname">_base_uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.uri"><var class="varname">uri</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.dispatched"><var class="varname">dispatched</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.props.routed"><var class="varname">routed</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div>    <div class="section" id="yaf-request-simple.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="yaf-request-simple.constants.scheme-http"><strong><span>{@link Yaf_Request_Simple::SCHEME_HTTP}</span></strong></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-request-simple.constants.scheme-https"><strong><span>{@link Yaf_Request_Simple::SCHEME_HTTPS}</span></strong></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Request_Simple::__construct} — Yaf_Request_Simple 构造方法</li><li>{@link Yaf_Request_Simple::get} — The get purpose</li><li>{@link Yaf_Request_Simple::getCookie} — The getCookie purpose</li><li>{@link Yaf_Request_Simple::getFiles} — The getFiles purpose</li><li>{@link Yaf_Request_Simple::getPost} — The getPost purpose</li><li>{@link Yaf_Request_Simple::getQuery} — The getQuery purpose</li><li>{@link Yaf_Request_Simple::getRequest} — The getRequest purpose</li><li>{@link Yaf_Request_Simple::isXmlHttpRequest} — 判断请求是否是 Ajax 请求</li></ul></div>
*
 * <b>Yaf_Request_Simple</b> is particularly used for test purpose. ie. simulate a spacial request under CLI mode.
 * @link https://secure.php.net/manual/en/class.yaf-request-simple.php
 
*/
class Yaf_Request_Simple extends Yaf_Request_Abstract
{
/**
* <div id="yaf-request-simple.isxmlhttprequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Request_Simple::isXmlHttpRequest</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Request_Simple::isXmlHttpRequest</span> — <span class="dc-title">判断请求是否是 Ajax 请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-request-simple.isxmlhttprequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Request_Simple::isXmlHttpRequest</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-request-simple.isxmlhttprequest-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-request-simple.isxmlhttprequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="classname"><a href="https://php.net/manual/zh/class.yaf-request-simple.php" class="classname">Yaf_Request_Simple</a></span> 始终返回 false  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-request-simple.isxmlhttprequest-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::isXmlHTTPRequest()} - 判断请求是否是 AJAX 请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Request_Http::isXmlHTTPRequest()} - 是否为Ajax请求</span></li>  </ul> </div></div>
    *
     * Check the request whether it is a Ajax Request
     *
     * <br/>
     * <b>Note:</b>
     * <p>
     * This method depends on the request header: HTTP_X_REQUESTED_WITH, some Javascript library doesn't set this header while doing Ajax request
     * </p>
     * @link https://secure.php.net/manual/en/yaf-request-simple.isxmlhttprequest.php
     *
     * @return bool
     
*/
    public function isXmlHttpRequest() {}

    /**
     * @link https://secure.php.net/manual/en/yaf-request-simple.construct.php
     *
     * @param string $method
     * @param string $module
     * @param string $controller
     * @param string $action
     * @param array $params
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($method = '', $module = '', $controller = '', $action = '', $params = null) {}
}

/**
* <div id="class.yaf-config-ini" class="reference"> <h1 class="title">Yaf_Config_Ini 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-config-ini.intro">   <h2 class="title">简介</h2>   <p class="para">   Yaf_Config_Ini 允许开发者通过嵌套的对象属性语法在应用程序中用熟悉的INI格式存储和读取配置数据。   INI格式在提供拥有配置数据键的等级结构和配置数据节之间的继承能力方面具有专长。   配置数据等级结构通过用点或者句号（“.”）分离键值。   一个节可以扩展或者通过在节的名称之后带一个冒号（“:”）和被继承的配置数据的节的名称来从另一个节继承。  </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">   Yaf_Config_Ini 利用 PHP 的函数 parse_ini_file() 来解析配置文件的。   请仔细查看这个函数的文档，注意它的一些特殊用途。以及它传递给 Yaf_Config_Ini 的一些比如   “<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>”、“<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>”、“yes”、“no”和“<strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>”的特殊值的处理方式。   </p>  </blockquote>    </div>  <div class="section" id="yaf-config-ini.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Config_Ini</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.arrayaccess.php" class="interfacename">ArrayAccess</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$config_file</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$section</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.get.php" class="methodname" style="color:#CC7832">__get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.isset.php" class="methodname" style="color:#CC7832">__isset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.key.php" class="methodname" style="color:#CC7832">key</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.next.php" class="methodname" style="color:#CC7832">next</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.readonly.php" class="methodname" style="color:#CC7832">readonly</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.set.php" class="methodname" style="color:#CC7832">__set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.toarray.php" class="methodname" style="color:#CC7832">toArray</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-ini.valid.php" class="methodname" style="color:#CC7832">valid</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::readonly}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::set}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::toArray}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>   }</div>  </div>    <div class="section" id="yaf-config-ini.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-config-ini.props.config"><var class="varname">_config</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-config-ini.props.readonly"><var class="varname">_readonly</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> <div class="section">  <h2 class="title">示例</h2>  <div class="example" id="example-4155">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Config_Ini()</strong></span> 示例</strong></p>   <div class="example-contents"><p>    这个例子说明了使用 Yaf_Config_Ini 从一个 INI 配置文件中获取配置数据的基本用法。    这个例子中既有生产环境的配置方法也有演示环境的配置方法。    因为演示环境的配置跟生产环境的非常类似，所以演示环境的配置继承了生产环境的配置。    在复杂的情况下，决定是任意的，也可以写成相反的。在更复杂的情况下，生产环境继承自演示环境不是不可能的。    假设，以下配置数据都包含在 /path/to/config.ini 中：   </p></div>   <div class="example-contents"><div class="inicode"><blockquote style="border:1px gray solid;">; Production site configuration data<br>[production]<br>webhost                  = www.example.com<br>database.adapter         = pdo_mysql<br>database.params.host     = db.example.com<br>database.params.username = dbuser<br>database.params.password = secret<br>database.params.dbname   = dbname<br> <br>; Staging site configuration data inherits from production and<br>; overrides values as necessary<br>[staging : production]<br>database.params.host     = dev.example.com<br>database.params.username = devuser<br>database.params.password = devsecret</blockquote></div>   </div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>$config </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Config_Ini</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/config.ini'</span><span style="color: #007700">, </span><span style="color: #DD0000">'staging'</span><span style="color: #007700">);<br> <br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">params</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">host</span><span style="color: #007700">); <br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">database</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">params</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">dbname</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$config</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">get</span><span style="color: #007700">(</span><span style="color: #DD0000">"database.params.username"</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="cdata"><blockquote style="border:1px gray solid;"><br>string(15) "dev.example.com"<br>string(6) "dbname"<br>string(7) "devuser<br></blockquote></div>   </div>  </div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Ini::__construct} — Yaf_Config_Ini 构造方法</li><li>{@link Yaf_Config_Ini::count} — Yaf_Config.ini 中所有元素的数量</li><li>{@link Yaf_Config_Ini::current} — 检索当前值</li><li>{@link Yaf_Config_Ini::__get} — 检索元素</li><li>{@link Yaf_Config_Ini::__isset} — 检查节点是否存在</li><li>{@link Yaf_Config_Ini::key} — 返回当前元素的键</li><li>{@link Yaf_Config_Ini::next} — 向前移动到下一个元素</li><li>{@link Yaf_Config_Ini::offsetExists} — 检查一个偏移位置是否存在</li><li>{@link Yaf_Config_Ini::offsetGet} — 获取一个偏移位置的值</li><li>{@link Yaf_Config_Ini::offsetSet} — 设置一个偏移位置的值</li><li>{@link Yaf_Config_Ini::offsetUnset} — 复位一个偏移位置的值</li><li>{@link Yaf_Config_Ini::readonly} — 检查配置是否只读</li><li>{@link Yaf_Config_Ini::rewind} — 检查当前位置是否有效</li><li>{@link Yaf_Config_Ini::__set} — The __set purpose</li><li>{@link Yaf_Config_Ini::toArray} — 配置作为数组返回</li><li>{@link Yaf_Config_Ini::valid} — 检查迭代器是否有效</li></ul></div>
*
 * <p>Yaf_Config_Ini enables developers to store configuration data in a familiar INI format and read them in the application by using nested object property syntax. The INI format is specialized to provide both the ability to have a hierarchy of configuration data keys and inheritance between configuration data sections. Configuration data hierarchies are supported by separating the keys with the dot or period character ("."). A section may extend or inherit from another section by following the section name with a colon character (":") and the name of the section from which data are to be inherited.</p><br/>
 * <b>Note:</b>
 * <p>Yaf_Config_Ini utilizes the » parse_ini_file() PHP function. Please review this documentation to be aware of its specific behaviors, which propagate to Yaf_Config_Ini, such as how the special values of "TRUE", "FALSE", "yes", "no", and "NULL" are handled.</p>
 * @link https://secure.php.net/manual/en/class.yaf-config-ini.php
 
*/
class Yaf_Config_Ini extends Yaf_Config_Abstract implements Iterator, ArrayAccess, Countable
{
    /**
     * @param array|string $config_file
     * @param ?string $section
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($config_file, ?string $section = null) {}

    /**
     * @see Yaf_Config_Abstract::__get
     * @param string $name
     * @return mixed
     */
    public function __get($name = null) {}

    /**
     * @see Yaf_Config_Abstract::__set
     * @param mixed $name
     * @param mixed $value
     */
    public function __set($name, $value) {}

/**
* <div id="yaf-config-ini.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::__get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::__get</span> — <span class="dc-title">检索元素</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::__get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::get
     * @param ?string $name
     * @return mixed
     
*/
    public function get(?string $name = null) {}

/**
* <div id="yaf-config-ini.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::__set</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::__set</span> — <span class="dc-title">The __set purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::__set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::set
     * @param string $name
     * @param mixed $value
     
*/
    public function set(string $name, $value): bool {}

/**
* <div id="yaf-config-ini.toarray" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::toArray</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::toArray</span> — <span class="dc-title">配置作为数组返回</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.toarray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::toArray</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   从 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-config-ini.php" class="classname">Yaf_Config_Ini</a></span> 中返回 PHP 数组  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.toarray-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.toarray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::toArray
     * @return array
     
*/
    public function toArray(): array {}

/**
* <div id="yaf-config-ini.readonly" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::readonly</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::readonly</span> — <span class="dc-title">检查配置是否只读</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.readonly-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::readonly</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.readonly-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.readonly-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::readonly
     * @return bool
     
*/
    public function readonly(): bool {}

    /**
     * @see Yaf_Config_Abstract::__isset
     * @param string $name
     * @return bool
     */
    public function __isset(string $name): bool {}

/**
* <div id="yaf-config-ini.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::count</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::count</span> — <span class="dc-title">Yaf_Config.ini 中所有元素的数量</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.count-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::count
     * @return int
     
*/
    public function count(): int {}

/**
* <div id="yaf-config-ini.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::rewind</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::rewind</span> — <span class="dc-title">检查当前位置是否有效</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::rewind</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.rewind-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.rewind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::rewind
     * @return void
     
*/
    public function rewind(): void {}

/**
* <div id="yaf-config-ini.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::current</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::current</span> — <span class="dc-title">检索当前值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.current-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::current
     * @return mixed
     
*/
    public function current() {}

/**
* <div id="yaf-config-ini.next" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::next</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::next</span> — <span class="dc-title">向前移动到下一个元素</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.next-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::next</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.next-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.next-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::next
     * @return void
     
*/
    public function next(): void {}

/**
* <div id="yaf-config-ini.valid" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::valid</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::valid</span> — <span class="dc-title">检查迭代器是否有效</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.valid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::valid</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.valid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.valid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::valid
     * @return bool
     
*/
    public function valid(): bool {}

/**
* <div id="yaf-config-ini.key" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::key</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::key</span> — <span class="dc-title">返回当前元素的键</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::key</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.key-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::key
     * @return mixed
     
*/
    public function key() {}

/**
* <div id="yaf-config-ini.offsetunset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::offsetUnset</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetUnset</span> — <span class="dc-title">复位一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetunset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::offsetUnset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetunset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetunset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetUnset
     * @param mixed $name
     * @return void
     * @deprecated not_implemented
     
*/
    public function offsetUnset($name): void {}

/**
* <div id="yaf-config-ini.offsetget" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::offsetGet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetGet</span> — <span class="dc-title">获取一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetget-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::offsetGet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetget-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetget-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetGet
     * @param mixed $name
     * @return mixed
     
*/
    public function offsetGet($name) {}

/**
* <div id="yaf-config-ini.offsetexists" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::offsetExists</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetExists</span> — <span class="dc-title">检查一个偏移位置是否存在</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetexists-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::offsetExists</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetexists-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetexists-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetExists
     * @param mixed $name
     * @return bool
     
*/
    public function offsetExists($name): bool {}

/**
* <div id="yaf-config-ini.offsetset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Ini::offsetSet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Ini::offsetSet</span> — <span class="dc-title">设置一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-ini.offsetset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Ini::offsetSet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-ini.offsetset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-ini.offsetset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetSet
     * @param mixed $offset
     * @param mixed $value
     * @return void
     
*/
    public function offsetSet($offset, $value): void {}
}

/**
* <div id="class.yaf-config-simple" class="reference"> <h1 class="title">Yaf_Config_Simple 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-config-simple.intro">   <h2 class="title">简介</h2>   <p class="para">       Yaf_Config_Simple 是 Yad_Config_ini 的简洁版本，只允许传入数组进行初始化，并提供了设置 readonly 的参数。   </p>  </div>  <div class="section" id="yaf-config-simple.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Config_Simple</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="classname">Yaf_Config_Abstract</a>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.arrayaccess.php" class="interfacename">ArrayAccess</a></span><span class="oointerface">,  <a href="https://php.net/manual/zh/class.countable.php" class="interfacename">Countable</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-config-simple.php#yaf-config-simple.props.readonly">$<var class="varname">_readonly</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$configs</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> <span class="parameter" style="color:#3A95FF">$readonly</span><span class="initializer"> = false</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.count.php" class="methodname" style="color:#CC7832">count</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.get.php" class="methodname" style="color:#CC7832">__get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.isset.php" class="methodname" style="color:#CC7832">__isset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.key.php" class="methodname" style="color:#CC7832">key</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.next.php" class="methodname" style="color:#CC7832">next</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.offsetexists.php" class="methodname" style="color:#CC7832">offsetExists</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.offsetget.php" class="methodname" style="color:#CC7832">offsetGet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.offsetset.php" class="methodname" style="color:#CC7832">offsetSet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.offsetunset.php" class="methodname" style="color:#CC7832">offsetUnset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.readonly.php" class="methodname" style="color:#CC7832">readonly</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.set.php" class="methodname" style="color:#CC7832">__set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.toarray.php" class="methodname" style="color:#CC7832">toArray</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-config-simple.valid.php" class="methodname" style="color:#CC7832">valid</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::get}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::readonly}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::set}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-config-abstract.php" class="type Yaf_Config_Abstract" style="color:#EAB766">Yaf_Config_Abstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Config_Abstract::toArray}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>   }</div>  </div>    <div class="section" id="yaf-config-simple.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-config-simple.props.config"><var class="varname">_config</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-config-simple.props.readonly"><var class="varname">_readonly</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Config_Simple::__construct} — 构造函数</li><li>{@link Yaf_Config_Simple::count} — 返回配置的节数量</li><li>{@link Yaf_Config_Simple::current} — 返回当前节点</li><li>{@link Yaf_Config_Simple::__get} — 读取节点配置</li><li>{@link Yaf_Config_Simple::__isset} — 检查节点是否存在</li><li>{@link Yaf_Config_Simple::key} — 返回当前元素的键</li><li>{@link Yaf_Config_Simple::next} — 向前移动到下一个元素</li><li>{@link Yaf_Config_Simple::offsetExists} — 检查一个偏移位置是否存在</li><li>{@link Yaf_Config_Simple::offsetGet} — 获取一个偏移位置的值</li><li>{@link Yaf_Config_Simple::offsetSet} — 设置一个偏移位置的值</li><li>{@link Yaf_Config_Simple::offsetUnset} — 复位一个偏移位置的值</li><li>{@link Yaf_Config_Simple::readonly} — 检查配置是否只读</li><li>{@link Yaf_Config_Simple::rewind} — 检查当前位置是否有效</li><li>{@link Yaf_Config_Simple::__set} — 设置节点配置</li><li>{@link Yaf_Config_Simple::toArray} — 返回 PHP 数组</li><li>{@link Yaf_Config_Simple::valid} — 检查迭代器是否有效</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-config-simple.php
 
*/
class Yaf_Config_Simple extends Yaf_Config_Abstract implements Iterator, ArrayAccess, Countable
{
    /**
     * @param array|string $config_file
     * @param ?string $section
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($config_file, ?string $section = null) {}

    /**
     * @see Yaf_Config_Abstract::__get
     * @param string $name
     * @return mixed
     */
    public function __get($name = null) {}

    /**
     * @see Yaf_Config_Abstract::__set
     * @param mixed $name
     * @param mixed $value
     */
    public function __set($name, $value) {}

/**
* <div id="yaf-config-simple.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::__get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::__get</span> — <span class="dc-title">读取节点配置</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::__get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::get
     * @param ?string $name
     * @return mixed
     
*/
    public function get(?string $name = null) {}

/**
* <div id="yaf-config-simple.set" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::__set</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::__set</span> — <span class="dc-title">设置节点配置</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.set-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::__set</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.set-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.set-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::set
     * @param string $name
     * @param mixed $value
     
*/
    public function set(string $name, $value): bool {}

/**
* <div id="yaf-config-simple.toarray" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::toArray</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::toArray</span> — <span class="dc-title">返回 PHP 数组</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.toarray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::toArray</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   从 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-config-simple.php" class="classname">Yaf_Config_Simple</a></span> 中返回 PHP 数组  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.toarray-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.toarray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::toArray
     * @return array
     
*/
    public function toArray(): array {}

/**
* <div id="yaf-config-simple.readonly" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::readonly</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::readonly</span> — <span class="dc-title">检查配置是否只读</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.readonly-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::readonly</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.readonly-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.readonly-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::readonly
     * @return bool
     
*/
    public function readonly(): bool {}

    /**
     * @see Yaf_Config_Abstract::__isset
     * @param string $name
     * @return bool
     */
    public function __isset($name): bool {}

/**
* <div id="yaf-config-simple.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::count</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::count</span> — <span class="dc-title">返回配置的节数量</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::count</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.count-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::count
     * @return int
     
*/
    public function count(): int {}

/**
* <div id="yaf-config-simple.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::rewind</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::rewind</span> — <span class="dc-title">检查当前位置是否有效</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::rewind</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.rewind-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.rewind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::rewind
     * @return void
     
*/
    public function rewind(): void {}

/**
* <div id="yaf-config-simple.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::current</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::current</span> — <span class="dc-title">返回当前节点</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.current-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::current
     * @return mixed
     
*/
    public function current() {}

/**
* <div id="yaf-config-simple.next" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::next</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::next</span> — <span class="dc-title">向前移动到下一个元素</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.next-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::next</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.next-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.next-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::next
     * @return void
     
*/
    public function next(): void {}

/**
* <div id="yaf-config-simple.valid" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::valid</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::valid</span> — <span class="dc-title">检查迭代器是否有效</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.valid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::valid</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.valid-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.valid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::valid
     * @return bool
     
*/
    public function valid(): bool {}

/**
* <div id="yaf-config-simple.key" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::key</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::key</span> — <span class="dc-title">返回当前元素的键</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::key</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.key-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::key
     * @return mixed
     
*/
    public function key() {}

/**
* <div id="yaf-config-simple.offsetunset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::offsetUnset</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetUnset</span> — <span class="dc-title">复位一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetunset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::offsetUnset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetunset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetunset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetUnset
     * @param mixed $name
     * @return void
     
*/
    public function offsetUnset($name): void {}

/**
* <div id="yaf-config-simple.offsetget" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::offsetGet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetGet</span> — <span class="dc-title">获取一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetget-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::offsetGet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetget-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetget-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetGet
     * @param mixed $name
     * @return mixed
     
*/
    public function offsetGet($name) {}

/**
* <div id="yaf-config-simple.offsetexists" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::offsetExists</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetExists</span> — <span class="dc-title">检查一个偏移位置是否存在</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetexists-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::offsetExists</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetexists-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetexists-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetExists
     * @param mixed $name
     * @return bool
     
*/
    public function offsetExists($name): bool {}

/**
* <div id="yaf-config-simple.offsetset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Config_Simple::offsetSet</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Config_Simple::offsetSet</span> — <span class="dc-title">设置一个偏移位置的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-config-simple.offsetset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Config_Simple::offsetSet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-config-simple.offsetset-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-config-simple.offsetset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @see Yaf_Config_Abstract::offsetSet
     * @param mixed $offset
     * @param mixed $value
     * @return void
     
*/
    public function offsetSet($offset, $value): void {}
}

/**
* <div id="class.yaf-view-simple" class="reference"> <h1 class="title">Yaf_View_Simple 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-view-simple.intro">   <h2 class="title">简介</h2>   <p class="para">     <span class="classname"><strong class="classname">Yaf_View_Simple</strong></span> 这是 Yaf 内建的模板引擎，是个简单而快速的模板引擎，只支持 PHP 脚本模板。   </p>  </div>  <div class="section" id="yaf-view-simple.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_View_Simple</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-view-interface.php" class="interfacename">Yaf_View_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-view-simple.php#yaf-view-simple.props.tpl-vars">$<var class="varname">_tpl_vars</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-view-simple.php#yaf-view-simple.props.tpl-dir">$<var class="varname">_tpl_dir</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$template_dir</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.assign.php" class="methodname" style="color:#CC7832">assign</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.assignref.php" class="methodname" style="color:#CC7832">assignRef</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.display.php" class="methodname" style="color:#CC7832">display</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.eval.php" class="methodname" style="color:#CC7832">eval</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl_content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.get.php" class="methodname" style="color:#CC7832">__get</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.getscriptpath.php" class="methodname" style="color:#CC7832">getScriptPath</a></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.isset.php" class="methodname" style="color:#CC7832">__isset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.render.php" class="methodname" style="color:#CC7832">render</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.set.php" class="methodname" style="color:#CC7832">__set</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-view-simple.setscriptpath.php" class="methodname" style="color:#CC7832">setScriptPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$template_dir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-view-simple.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-view-simple.props.tpl-vars"><var class="varname">_tpl_vars</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-view-simple.props.tpl-dir"><var class="varname">_tpl_dir</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_View_Simple::assign} — 为视图引擎分配一个模板变量</li><li>{@link Yaf_View_Simple::assignRef} — The assignRef purpose</li><li>{@link Yaf_View_Simple::clear} — 清除分配的值</li><li>{@link Yaf_View_Simple::__construct} — Yaf_View_Simple 的构造方法</li><li>{@link Yaf_View_Simple::display} — 渲染一个视图模板, 并直接输出给请求端</li><li>{@link Yaf_View_Simple::eval} — 渲染模板</li><li>{@link Yaf_View_Simple::__get} — 获取视图引擎的一个模板变量值</li><li>{@link Yaf_View_Simple::getScriptPath} — 获取模板目录</li><li>{@link Yaf_View_Simple::__isset} — The __isset purpose</li><li>{@link Yaf_View_Simple::render} — 渲染模板</li><li>{@link Yaf_View_Simple::__set} — 为视图引擎分配一个模板变量</li><li>{@link Yaf_View_Simple::setScriptPath} — 设置模板的目录</li></ul></div>
*
 * <b>Yaf_View_Simple</b> is the built-in template engine in Yaf, it is a simple but fast template engine, and only support PHP script template.
 * @link https://secure.php.net/manual/en/class.yaf-view-simple.php
 
*/
class Yaf_View_Simple implements Yaf_View_Interface
{
    /**
     * @var string
     */
    protected $_tpl_dir;

    /**
     * @var array
     */
    protected $_tpl_vars;

    /**
     * @var array
     */
    protected $_options;

    /**
     * @link https://secure.php.net/manual/en/yaf-view-simple.construct.php
     *
     * @param string $template_dir The base directory of the templates, by default, it is APPLICATION . "/views" for Yaf.
     * @param array|null $options <p>Options for the engine, as of Yaf 2.1.13, you can use short tag
     * "<?=$var?>" in your template(regardless of "short_open_tag"),
     * so comes a option named "short_tag",  you can switch this off
     * to prevent use short_tag in template.
     * </p>
     * @throws Yaf_Exception_TypeError
     */
    final public function __construct($template_dir, ?array $options = null) {}

    /**
     * @link https://secure.php.net/manual/en/yaf-view-simple.isset.php
     *
     * @param string $name
     */
    public function __isset($name) {}

/**
* <div id="yaf-view-simple.assign" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::assign</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::assign</span> — <span class="dc-title">为视图引擎分配一个模板变量</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.assign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::assign</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   为视图引擎分配一个模板变量  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.assign-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">       字符串或者数组     </p>     <p class="para">       如果为字符串, 则下一个参数 $value 不能为空     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">       混合值     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.assign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-view-simple.assign-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4161">   <p><strong>示例 #1 <span class="function"><strong>Yaf_View_Simple::assign()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">, </span><span style="color: #DD0000">"bar"</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_view</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">( array( </span><span style="color: #DD0000">"key" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"value"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name" </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"value"</span><span style="color: #007700">));<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4162">   <p><strong>示例 #2 Template 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">&lt;html&gt;<br> &lt;head&gt;<br>  &lt;title&gt;<span style="color: #9876AA">&lt;?php </span><span style="color: #007700">echo </span><span style="color: #9876AA">$foo</span><span style="color: #007700">; </span><span style="color: #9876AA">?&gt;</span>&lt;/title&gt;<br> &lt;/head&gt;  <br>&lt;body&gt;<br>  <span style="color: #9876AA">&lt;?php <br>    </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_tpl_vars </span><span style="color: #007700">as </span><span style="color: #9876AA">$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br>         echo $</span><span style="color: #9876AA">$name</span><span style="color: #007700">; </span><span style="color: #FF8000">// or echo $this-&gt;_tpl_vars[$name];<br>    </span><span style="color: #007700">}<br>  </span><span style="color: #9876AA">?&gt;<br></span>&lt;/body&gt;<br>&lt;/html&gt;</span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-view-simple.assign-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::assignRef()} - The assignRef purpose</span></li>   <li><span class="methodname" style="color:#CC7832"><strong>Yaf_View_Interface::clear()</strong></span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>  </ul>                        </div>  </div>
    *
     * assign variable to view engine
     *
     * @link https://secure.php.net/manual/en/yaf-view-simple.assign.php
     *
     * @param string|array $name A string or an array.<br/>if is string, then the next argument $value is required.
     * @param mixed $value mixed value
     * @return Yaf_View_Interface|bool
     
*/
    public function assign($name, $value = null) {}

/**
* <div id="yaf-view-simple.render" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::render</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::render</span> — <span class="dc-title">渲染模板</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.render-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::render</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">    渲染模板并返回结果  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.render-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">tpl</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">tpl_vars</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.render-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-view-simple.render.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     *
     * @throws Yaf_Exception_LoadFailed_View
     *
     * @return string|bool
     
*/
    public function render($tpl, $tpl_vars = null) {}

/**
* <div id="yaf-view-simple.display" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::display</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::display</span> — <span class="dc-title">渲染一个视图模板, 并直接输出给请求端</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.display-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::display</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   渲染视图模板, 并直接输出给请求端。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.display-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">tpl</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">tpl_vars</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.display-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * <p>Render a template and display the result instantly.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-view-simple.display.php
     *
     * @param string $tpl
     * @param array $tpl_vars
     *
     * @throws Yaf_Exception_LoadFailed_View
     *
     * @return bool
     
*/
    public function display($tpl, $tpl_vars = null) {}

/**
* <div id="yaf-view-simple.assignref" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::assignRef</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::assignRef</span> — <span class="dc-title">The assignRef purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.assignref-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::assignRef</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.mixed.php" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;$value</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">    不同于 <span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::assign()}</span>，这个方法传递一个引用变量给模板引擎。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.assignref-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">       字符串名，被用来传递值给模板。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      混合值     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.assignref-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-view-simple.assignref-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4163">   <p><strong>示例 #1 <span class="function"><strong>Yaf_View_Simple::assignRef()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$value </span><span style="color: #007700">= </span><span style="color: #DD0000">"bar"</span><span style="color: #007700">;<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">assign</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br><br>        </span><span style="color: #FF8000">// plz note that there was a bug before Yaf 2.1.4, <br>         * which make following output "bar";<br>         <br>        </span><span style="color: #9876AA">$dummy </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">render</span><span style="color: #007700">(</span><span style="color: #DD0000">"index/index.phtml"</span><span style="color: #007700">);<br>        echo </span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br><br>        </span><span style="color: #FF8000">//prevent the auto-render<br>        </span><span style="color: #9876AA">Yaf_Dispatcher</span><span style="color: #007700">::</span><span style="color: #9876AA">getInstance</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">autoRender</span><span style="color: #007700">(</span><span style="color: #9876AA">FALSE</span><span style="color: #007700">);<br>    }<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div>  <div class="example" id="example-4164">   <p><strong>示例 #2 Template 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">&lt;html&gt;<br> &lt;head&gt;<br>  &lt;title&gt;<span style="color: #9876AA">&lt;?php </span><span style="color: #007700">echo </span><span style="color: #9876AA">$foo</span><span style="color: #007700">;  </span><span style="color: #9876AA">$foo </span><span style="color: #007700">= </span><span style="color: #DD0000">"changed"</span><span style="color: #007700">; </span><span style="color: #9876AA">?&gt;</span>&lt;/title&gt;<br> &lt;/head&gt;  <br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">// access the index controller will result: <br>changed</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-view-simple.assignref-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::assign()} - 为视图引擎分配一个模板变量</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>  </ul>                        </div>  </div>
    *
     * <p>unlike Yaf_View_Simple::assign(), this method assign a ref value to engine.</p>
     * @link https://secure.php.net/manual/en/yaf-view-simple.assignref.php
     *
     * @param string $name A string name which will be used to access the value in the template.
     * @param mixed &$value mixed value
     *
     * @return Yaf_View_Simple
     
*/
    public function assignRef($name, &$value) {}

/**
* <div id="yaf-view-simple.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::clear</h1>  <p class="verinfo">(Yaf &gt;=2.2.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::clear</span> — <span class="dc-title">清除分配的值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::clear</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   清除分配的变量  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.clear-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">       分配的变量名     </p>     <p class="para">      如果为空，将会清除所有分配的变量     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-view-simple.clear-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4165">   <p><strong>示例 #1 <span class="function"><strong>Yaf_View_Simple::clear()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">class </span><span style="color: #9876AA">IndexController </span><span style="color: #007700">extends </span><span style="color: #9876AA">Yaf_Controller_Abstract </span><span style="color: #007700">{<br>    public function </span><span style="color: #9876AA">indexAction</span><span style="color: #007700">() {<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getView</span><span style="color: #007700">()-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #DD0000">"bar"</span><span style="color: #007700">); </span><span style="color: #FF8000">// clear "foo" and "bar"<br>        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">_view</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">(); </span><span style="color: #FF8000">//clear all assigned variables<br>    </span><span style="color: #007700">}<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-view-simple.clear-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::assignRef()} - The assignRef purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Interface::assign()} - 为视图引擎分配模板变量</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_View_Simple::__set()} - 为视图引擎分配一个模板变量</span></li>  </ul>                        </div>  </div>
    *
     * clear assigned variable
     * @link https://secure.php.net/manual/en/yaf-view-simple.clear.php
     *
     * @param string $name assigned variable name. <br/>if empty, will clear all assigned variables.
     *
     * @return Yaf_View_Simple
     
*/
    public function clear($name = null) {}

/**
* <div id="yaf-view-simple.setscriptpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::setScriptPath</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::setScriptPath</span> — <span class="dc-title">设置模板的目录</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.setscriptpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::setScriptPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$template_dir</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.setscriptpath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">template_dir</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.setscriptpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * Set the templates base directory, this is usually called by Yaf_Dispatcher
     *
     * @link https://secure.php.net/manual/en/yaf-view-simple.setscriptpath.php
     *
     * @param string $template_dir An absolute path to the template directory, by default, Yaf_Dispatcher use application.directory . "/views" as this parameter.
     * @return bool
     
*/
    public function setScriptPath($template_dir) {}

/**
* <div id="yaf-view-simple.getscriptpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::getScriptPath</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::getScriptPath</span> — <span class="dc-title">获取模板目录</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.getscriptpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::getScriptPath</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.getscriptpath-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.getscriptpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-view-simple.getscriptpath.php
     *
     * @return string
     
*/
    public function getScriptPath() {}

    /**
     * <p>Retrieve assigned variable</p>
     * <br/>
     * <b>Note:</b>
     * <p>$name parameter can be empty since 2.1.11</p>
     * @link https://secure.php.net/manual/en/yaf-view-simple.get.php
     *
     * @param string $name <p>the assigned variable name</p>
     * <br/>
     * <p>if this is empty, all assigned variables will be returned</p>
     *
     * @return mixed
     */
    public function __get($name = null) {}

    /**
     * <p>This is a alternative and easier way to Yaf_View_Simple::assign().</p>
     *
     * @link https://secure.php.net/manual/en/yaf-view-simple.set.php
     *
     * @param string $name A string value name.
     * @param mixed $value mixed value
     */
    public function __set($name, $value = null) {}

/**
* <div id="yaf-view-simple.eval" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::eval</h1>  <p class="verinfo">(Yaf &gt;=2.2.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::eval</span> — <span class="dc-title">渲染模板</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.eval-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::eval</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$tpl_content</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$tpl_vars</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">    渲染一个字符串模板，然后返回结果。  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.eval-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">tpl_content</span></dt>    <dd>     <p class="para">       字符串模板     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">tpl_vars</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.eval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * <p>Render a string template and return the result.</p>
     * @link https://secure.php.net/manual/en/yaf-view-simple.eval.php
     * @param string $tpl_str string template
     * @param array $vars
     * @return void|false return FALSE on failure
     
*/
    public function eval($tpl_str, $vars = null) {}

/**
* <div id="yaf-view-simple.get" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_View_Simple::__get</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_View_Simple::__get</span> — <span class="dc-title">获取视图引擎的一个模板变量值</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-view-simple.get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_View_Simple::__get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   获取视图引擎的一个模板变量值   </p><blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     </p><p class="para">     从 2.1.11 以后，参数可以为空    </p>   </blockquote>   </div> <div class="refsect1 parameters" id="refsect1-yaf-view-simple.get-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      分配的变量名     </p>     <p class="para">      如果为空，所有传递的变量都会被返回     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-view-simple.get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param string $name
     * @return mixed
     
*/
    public function get($name = '') {}
}

/**
* <div id="class.yaf-route-static" class="reference"> <h1 class="title">Yaf_Route_Static 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-static.intro">   <h2 class="title">简介</h2>   <p class="para">     默认的情况下，<span class="classname"><a href="https://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a></span> 只将 <span class="classname"><strong class="classname">Yaf_Route_Static</strong></span> 作为默认路由。   </p>   <p class="para">     <span class="classname"><strong class="classname">Yaf_Route_Static</strong></span> 旨在处理 80% 的需求。   </p>   <p class="para">     请注意：没有必要实例化 <span class="classname"><strong class="classname">Yaf_Route_Static</strong></span>，也没必要将其加入到 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a></span>     的路由栈，因为在 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-router.php" class="classname">Yaf_Router</a></span> 的路由堆栈中始终存在它的实例，并且总是在最后调用。   </p>  </div>  <div class="section" id="yaf-route-static.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Static</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-router.php" class="interfacename">Yaf_Router</a></span> {</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-static.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-static.match.php" class="methodname" style="color:#CC7832">match</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-static.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Static::assemble} — 组合 url</li><li>{@link Yaf_Route_Static::match} — The match purpose</li><li>{@link Yaf_Route_Static::route} — 路由请求</li></ul></div>
*
 * <p>by default, Yaf_Router only have a <b>Yaf_Route_Static</b> as its default route.</p>
 * <br/>
 * <p><b>Yaf_Route_Static</b> is designed to handle 80% of normal requirements.</p>
 * <br/>
 * <b>Note:</b>
 * <p> it is unnecessary to instance a <b>Yaf_Route_Static</b>, also unnecessary to add it into Yaf_Router's routes stack, since there is always be one in Yaf_Router's routes stack, and always be called at the last time.</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-static.php
 
*/
class Yaf_Route_Static implements Yaf_Route_Interface
{
/**
* <div id="yaf-route-static.match" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Static::match</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::match</span> — <span class="dc-title">The match purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-static.match-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Static::match</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-static.match-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.match-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @param string $uri
     *
     * @return bool
     * @deprecated not_implemented
     * @link https://secure.php.net/manual/en/yaf-route-static.match.php
     
*/
    public function match($uri) {}

/**
* <div id="yaf-route-static.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Static::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::route</span> — <span class="dc-title">路由请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-static.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Static::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-static.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-static.route-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4212">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Static::route()</strong></span>example</strong></p>   <div class="example-contents"><div class="shellcode"><blockquote style="border:1px gray solid;">// assuming there is only one module defined:Index<br>Request: http://yourdomain.com/a/b<br>=&gt; module = index, controller=a, action=b<br><br>//assuming ap.action_prefer = On<br>Request: http://yourdomain.com/b<br>=&gt; module = default(index), controller = default(index), action = b<br><br>//assuming ap.action_prefer = Off<br>Request: http://yourdomain.com/b<br>=&gt; module = default(index), controller = b, action = default(index)<br><br><br>Request: http://yourdomain.com/a/b/foo/bar/test/a/id/4<br>=&gt; module = default(index), controller = a, action = b, request parameters: foo = bar, test = a, id = 4</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-yaf-route-static.route-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Supervar::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Simple::route()} - 路由请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Regex::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Rewrite::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Map::route()} - The route purpose</span></li>  </ul>                        </div>  </div>
    *
     * @link https://secure.php.net/manual/en/yaf-route-static.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool always TRUE
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-static.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Static::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Static::assemble</span> — <span class="dc-title">组合 url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-static.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Static::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将 static 这个 route 组合成一个 url  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-static.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组中每个 key 可为 :m、:c、:a，:m 代表 module，:c 代表 controller, :a 代表 action     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query string，将根据此路由规则拼接在 url 中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-static.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。  </p> </div> <div class="refsect1 errors" id="refsect1-yaf-route-static.assemble-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">info</span> 中 <span class="literal">':c'</span> 和 <span class="literal">':a'</span>   键未设置，抛出 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-exception-typeerror.php" class="classname">Yaf_Exception_TypeError</a></span>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-static.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4211">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Static::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$router </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Static</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"static"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'static'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>            array(<br>                </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafmodule'<br>            </span><span style="color: #007700">),<br>        )<br>);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'static'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>            array(<br>                </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafmodule'<br>            </span><span style="color: #007700">),<br>            array(<br>                </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'<br>            </span><span style="color: #007700">)<br>        )<br>);</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(%d) "/yafmodule/yafcontroller/yafaction"<br>string(%d) "/yafmodule/yafcontroller/yafaction?tkey1=tval1&amp;tkey2=tval2"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Static::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-static.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, ?array $query = null) {}
}

/**
* <div id="class.yaf-route-simple" class="reference"> <h1 class="title">Yaf_Route_Simple 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-simple.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Route_Simple</strong></span> 会匹配 query 字符串，然后找到路由信息。   </p>   <p class="para">    需要做的只是告诉 <span class="classname"><strong class="classname">Yaf_Route_Simple</strong></span>，在 $_GET 中哪个键是 Module，哪个键是 Controller，哪个键是 Action。   </p>   <p class="para">    <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Simple::route()}</span> 始终返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，所以把 <span class="classname"><strong class="classname">Yaf_Route_Simple</strong></span>    放在路由栈前面很重要，否则不会调用所有其它路由。   </p>  </div>  <div class="section" id="yaf-route-simple.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Simple</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.controller">$<var class="varname">controller</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.module">$<var class="varname">module</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-simple.php#yaf-route-simple.props.action">$<var class="varname">action</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-simple.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$module_name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller_name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$action_name</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-simple.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-simple.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-route-simple.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-route-simple.props.controller"><var class="varname">controller</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-simple.props.module"><var class="varname">module</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-simple.props.action"><var class="varname">action</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Simple::assemble} — 组合url</li><li>{@link Yaf_Route_Simple::__construct} — Yaf_Route_Simple 构造方法</li><li>{@link Yaf_Route_Simple::route} — 路由请求</li></ul></div>
*
 * <p><b>Yaf_Route_Simple</b> will match the query string, and find the route info.</p>
 * <br/>
 * <p>all you need to do is tell <b>Yaf_Route_Simple</b> what key in the $_GET is module, what key is controller, and what key is action.</p>
 * <br/>
 * <p>Yaf_Route_Simple::route() will always return TRUE, so it is important put <b>Yaf_Route_Simple</b> in the front of the Route stack, otherwise all the other routes will not be called</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-simple.php
 
*/
final class Yaf_Route_Simple implements Yaf_Route_Interface
{
    /**
     * @var string
     */
    protected $controller;

    /**
     * @var string
     */
    protected $module;

    /**
     * @var string
     */
    protected $action;

    /**
     * <p>Yaf_Route_Simple will get route info from query string. and the parameters of this constructor will used as keys while searching for the route info in $_GET.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-simple.construct.php
     *
     * @param string $module_name
     * @param string $controller_name
     * @param string $action_name
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($module_name, $controller_name, $action_name) {}

/**
* <div id="yaf-route-simple.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Simple::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Simple::route</span> — <span class="dc-title">路由请求</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-simple.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Simple::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   参阅 <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Simple::__construct()}</span>  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-simple.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-simple.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   始终为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>  </p> </div> <div class="refsect1 seealso" id="refsect1-yaf-route-simple.route-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Supervar::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Static::route()} - 路由请求</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Regex::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Rewrite::route()} - The route purpose</span></li>   <li><span class="methodname" style="color:#CC7832">{@link Yaf_Route_Map::route()} - The route purpose</span></li>  </ul>                        </div>  </div>
    *
     * <p>see Yaf_Route_Simple::__construct()</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-simple.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool always TRUE
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-simple.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Simple::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Simple::assemble</span> — <span class="dc-title">组合url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-simple.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Simple::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将simple这个route组合成一个url  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-simple.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组中每个 key 可为 :m、:c、:a，:m 代表 module，:c 代表 controller, :a 代表 action     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query string，将根据此路由规则拼接在 url 中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-simple.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。  </p> </div> <div class="refsect1 errors" id="refsect1-yaf-route-simple.assemble-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">info</span> 中 <span class="literal">':c'</span> 和 <span class="literal">':a'</span>   键未设置，抛出 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-exception-typeerror.php" class="classname">Yaf_Exception_TypeError</a></span>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-simple.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4208">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Simple::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$router </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Simple</span><span style="color: #007700">(</span><span style="color: #DD0000">'m'</span><span style="color: #007700">, </span><span style="color: #DD0000">'c'</span><span style="color: #007700">, </span><span style="color: #DD0000">'a'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"simple"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'simple'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>            array(<br>                </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafmodule'<br>                </span><span style="color: #007700">),<br>            array(<br>                </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'<br>                </span><span style="color: #007700">)<br>            ));</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64) "?m=yafmodule&amp;c=yafcontroller&amp;a=yafaction&amp;tkey1=tval1&amp;tkey2=tval2"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Simple::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-simple.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, ?array $query = null) {}
}

/**
* <div id="class.yaf-route-supervar" class="reference"> <h1 class="title">Yaf_Route_Supervar 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-supervar.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-route-supervar.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Supervar</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-supervar.php#yaf-route-supervar.props.var-name">$<var class="varname">_var_name</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-supervar.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$supervar_name</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-supervar.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-supervar.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-route-supervar.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-route-supervar.props.var-name"><var class="varname">_var_name</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Supervar::assemble} — 组合 url</li><li>{@link Yaf_Route_Supervar::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Supervar::route} — The route purpose</li></ul></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-route-supervar.php
 
*/
final class Yaf_Route_Supervar implements Yaf_Route_Interface
{
    /**
     * @var string
     */
    protected $_var_name;

    /**
     * <p>Yaf_Route_Supervar is similar to Yaf_Route_Static, the difference is that Yaf_Route_Supervar will look for path info in query string, and the parameter supervar_name is the key.</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-supervar.construct.php
     *
     * @param string $supervar_name The name of key.
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($supervar_name) {}

/**
* <div id="yaf-route-supervar.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Supervar::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Supervar::route</span> — <span class="dc-title">The route purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-supervar.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Supervar::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-supervar.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-supervar.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    如果在 $_GET 中有键（在 <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Supervar::__construct()}</span> 中定义），返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-route-supervar.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool If there is a key(which was defined in Yaf_Route_Supervar::__construct()) in $_GET, return TRUE. otherwise return FALSE.
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-supervar.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Supervar::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Supervar::assemble</span> — <span class="dc-title">组合 url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-supervar.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Supervar::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将 supervar 这个 route 组合成 url  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-supervar.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组中每个 key 可为 :m、:c、:a，:m 代表 module，:c 代表 controller, :a 代表 action     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query string，将根据此路由规则拼接在 url 中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-supervar.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。  </p> </div> <div class="refsect1 errors" id="refsect1-yaf-route-supervar.assemble-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">info</span> 中 <span class="literal">':c'</span> 和 <span class="literal">':a'</span>   键未设置，抛出 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-exception-typeerror.php" class="classname">Yaf_Exception_TypeError</a></span>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-supervar.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4213">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Supervar::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$router </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Supervar</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"supervar"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'supervar'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>        array(<br>              </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">'tkey' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafcontroller'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafmodule'<br>        </span><span style="color: #007700">),<br>        array(<br>              </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'<br>        </span><span style="color: #007700">)<br>));<br><br>try {<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'supervar'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>        array(<br>              </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafaction'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">'tkey' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'yafmodule'<br>        </span><span style="color: #007700">),<br>        array(<br>              </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>              </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'</span><span style="color: #007700">,<br>              </span><span style="color: #9876AA">1 </span><span style="color: #007700">=&gt; array(),<br>        )<br>));<br>} catch (</span><span style="color: #9876AA">Exception $e</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">());<br>}</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(%d) "?r=/yafmodule/yafcontroller/yafaction&amp;tkey1=tval1&amp;tkey2=tval2"<br>string(%d) "You need to specify the controller by ':c'"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Supervar::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-supervar.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, ?array $query = null) {}
}

/**
* <div id="class.yaf-route-rewrite" class="reference"> <h1 class="title">Yaf_Route_Rewrite 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-rewrite.intro">   <h2 class="title">简介</h2>   <p class="para">     用法请看 <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Rewrite::__construct()}</span> 的示例部分   </p>  </div>  <div class="section" id="yaf-route-rewrite.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Rewrite</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="classname">Yaf_Route_Interface</a>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.route">$<var class="varname">_route</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.default">$<var class="varname">_default</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-rewrite.php#yaf-route-rewrite.props.verify">$<var class="varname">_verify</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-rewrite.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$match</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$route</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$verify</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-rewrite.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-rewrite.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Interface::assemble}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Interface::route}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-route-rewrite.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-route-rewrite.props.route"><var class="varname">_route</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-rewrite.props.default"><var class="varname">_default</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-rewrite.props.verify"><var class="varname">_verify</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Rewrite::assemble} — 组合 url</li><li>{@link Yaf_Route_Rewrite::__construct} — Yaf_Route_Rewrite 构造方法</li><li>{@link Yaf_Route_Rewrite::route} — The route purpose</li></ul></div>
*
 * <p>For usage, please see the example section of Yaf_Route_Rewrite::__construct()</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-rewrite.php
 
*/
final class Yaf_Route_Rewrite extends Yaf_Router implements Yaf_Route_Interface
{
    /**
     * @var string
     */
    protected $_route;

    /**
     * @var array
     */
    protected $_default;

    /**
     * @var array
     */
    protected $_verify;

    /**
     * @link https://secure.php.net/manual/en/yaf-route-rewrite.construct.php
     *
     * @param string $match A pattern, will be used to match a request uri, if doesn't matched, Yaf_Route_Rewrite will return FALSE.
     * @param array $route <p>When the match pattern matches the request uri, Yaf_Route_Rewrite will use this to decide which m/c/a to routed.</p>
     * <br/>
     * <p>either of m/c/a in this array is optional, if you don't assign a specific value, it will be routed to default.</p>
     * @param array|null $verify
     * @param string|null $reverse
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($match, array $route, array $verify = null, $reverse = null) {}

/**
* <div id="yaf-route-rewrite.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Rewrite::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Rewrite::route</span> — <span class="dc-title">The route purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-rewrite.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Rewrite::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-rewrite.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-rewrite.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-route-rewrite.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-rewrite.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Rewrite::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Rewrite::assemble</span> — <span class="dc-title">组合 url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-rewrite.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Rewrite::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将 rewrite 这个 route 组合成一个 url  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-rewrite.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组中每个 key 必须和初始化 rewrite route 时 $match 参数中的带冒号的参数名一致     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query 字符串，将根据此路由规则拼接在 url 中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-rewrite.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-rewrite.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4194">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Rewrite::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000">router = new Yaf_Router();<br><br>$route  = new Yaf_Route_Rewrite(<br>                "/product/:name/:id//",<br>                array(<br>                        'controller' =&gt; "product",<br>                ),<br>                array()<br>);<br><br>$router-&gt;addRoute("rewrite", $route);<br><br>var_dump($router-&gt;getRoute('rewrite')-&gt;assemble(<br>                        array(<br>                                ':name' =&gt; 'foo',<br>                                ':id' =&gt; 'bar',<br>                                ':tmpkey1' =&gt; 'tmpval1'<br>                        ),<br>                        array(<br>                                'tkey1' =&gt; 'tval1',<br>                                'tkey2' =&gt; 'tval2'<br>                             )<br>                        )<br>);</span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(57) "/product/foo/bar/tmpkey1/tmpval1/?tkey1=tval1&amp;tkey2=tval2"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Rewrite::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-rewrite.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, ?array $query = null) {}

    /**
     * @param string $uri
     * @return bool
     */
    public function match($uri) {}
}

/**
* <div id="class.yaf-route-regex" class="reference"> <h1 class="title">Yaf_Route_Regex 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-regex.intro">   <h2 class="title">简介</h2>   <p class="para">     <span class="classname"><strong class="classname">Yaf_Route_Regex</strong></span> 是 Yaf 内置的路由中最灵活的。   </p>  </div>  <div class="section" id="yaf-route-regex.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Regex</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="classname">Yaf_Route_Interface</a>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.route">$<var class="varname">_route</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.default">$<var class="varname">_default</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.maps">$<var class="varname">_maps</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-regex.php#yaf-route-regex.props.verify">$<var class="varname">_verify</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-regex.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$match</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$route</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$map</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$verify</span><span class="initializer"> = ?</span></span>,<br>    <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$reverse</span><span class="initializer"> = ?</span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-regex.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-regex.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Interface::assemble}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">abstract</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Interface::route}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-route-regex.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-route-regex.props.route"><var class="varname">_route</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-regex.props.default"><var class="varname">_default</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-regex.props.maps"><var class="varname">_maps</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-regex.props.verify"><var class="varname">_verify</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Regex::assemble} — 组合 url</li><li>{@link Yaf_Route_Regex::__construct} — Yaf_Route_Regex 构造方法</li><li>{@link Yaf_Route_Regex::route} — The route purpose</li></ul></div>
*
 * <p><b>Yaf_Route_Regex</b> is the most flexible route among the Yaf built-in routes.</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-regex.php
 
*/
final class Yaf_Route_Regex extends Yaf_Router implements Yaf_Route_Interface
{
    /**
     * @var string
     */
    protected $_route;

    /**
     * @var array
     */
    protected $_default;

    /**
     * @var array
     */
    protected $_maps;

    /**
     * @var array
     */
    protected $_verify;

    /**
     * @var string
     */
    protected $_reverse;

    /**
     * @link https://secure.php.net/manual/en/yaf-route-regex.construct.php
     *
     * @param string $match A complete Regex pattern, will be used to match a request uri, if doesn't matched, Yaf_Route_Regex will return FALSE.
     * @param array $route <p>When the match pattern matches the request uri, Yaf_Route_Regex will use this to decide which m/c/a to routed.</p>
     * <br/>
     * <p>either of m/c/a in this array is optional, if you don't assign a specific value, it will be routed to default.</p>
     * @param array|null $map A array to assign name to the captures in the match result.
     * @param array|null $verify
     * @param string $reverse
     *
     * @throws Yaf_Exception_TypeError
     */
    public function __construct($match, array $route, ?array $map = null, ?array $verify = null, $reverse = null) {}

/**
* <div id="yaf-route-regex.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Regex::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Regex::route</span> — <span class="dc-title">The route purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-regex.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Regex::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   路由一个传进来的请求。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-regex.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-regex.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Regex::_construct()</strong></span> 的第一个参数给出的模式与请求 uri 匹配，则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>，否则返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
    *
     * Route a incoming request.
     *
     * @link https://secure.php.net/manual/en/yaf-route-regex.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool If the pattern given by the first parameter of Yaf_Route_Regex::_construct() matches the request uri, return TRUE, otherwise return FALSE.
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-regex.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Regex::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Regex::assemble</span> — <span class="dc-title">组合 url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-regex.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Regex::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将 regex 这个 route 组合成一个 url  </p>  <p class="para">	   在 regex route 使用 assemble 需要在初始化时指定 reverse 参数，否则将不能正常工作	  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-regex.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组的 key 可以为 :a、:c、:m，:a 表示 action，:c 表示 controller，:m 表示 module。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query 字符串，将根据此路由规则拼接在 url 中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-regex.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-regex.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4189">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Regex::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$router </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Regex</span><span style="color: #007700">(<br>            </span><span style="color: #DD0000">"#^/product/([^/]+)/([^/])+#"</span><span style="color: #007700">,<br>            array(<br>                </span><span style="color: #DD0000">'controller' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"product"</span><span style="color: #007700">,  </span><span style="color: #FF8000">//route to product controller,<br>                </span><span style="color: #007700">),<br>            array(),<br>            array(),<br>            </span><span style="color: #DD0000">'/:m/:c/:a'<br>        </span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"regex"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'regex'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>            array(<br>                </span><span style="color: #DD0000">':m' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'module'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'controller'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'action'<br>                </span><span style="color: #007700">),<br>            array(<br>                </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>                </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt;<br>                </span><span style="color: #DD0000">'tval2'<br>                </span><span style="color: #007700">)<br>            )<br>        );</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(49) "/module/controller/action?tkey1=tval1&amp;tkey2=tval2"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Regex::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-regex.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, array $query = null) {}

    /**
     * @param string $uri
     * @return bool
     */
    public function match($uri) {}
}

/**
* <div id="class.yaf-route-map" class="reference"> <h1 class="title">Yaf_Route_Map 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-route-map.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Yaf_Route_Map</strong></span> 是内置路由，它只是将 URI 端点（位于基础 URI 之后的 URI 部分：参阅    <span class="methodname" style="color:#CC7832">{@link Yaf_Request_Abstract::setBaseUri()}</span>）转换为 controller 名或 action 名（取决于传递给    <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Map::__construct()}</span> 的参数），遵循以下规则：    A =&gt; controller A。    A/B/C =&gt; controller A_B_C。    A/B/C/D/E =&gt; controller A_B_C_D_E。   </p>    <p class="para">     如果指定 <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Map::__construct()}</span> 的第二个参数，则只有 URI 之前的部分用于路由，URI     之后的部分用于路由请求参数（参考 <span class="methodname" style="color:#CC7832">{@link Yaf_Route_Map::__construct()}</span> 的示例部分）。   </p>  </div>  <div class="section" id="yaf-route-map.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Route_Map</strong>     </span>          <span class="oointerface"><span class="modifier">implements</span>        <a href="https://php.net/manual/zh/class.yaf-route-interface.php" class="interfacename">Yaf_Route_Interface</a></span> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-map.php#yaf-route-map.props.ctl-router">$<var class="varname">_ctl_router</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>      <var class="varname"><a href="https://php.net/manual/zh/class.yaf-route-map.php#yaf-route-map.props.delimiter">$<var class="varname">_delimiter</var></a></var>;</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-map.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$controller_prefer</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">$delimiter</span><span class="initializer"> = ""</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-map.assemble.php" class="methodname" style="color:#CC7832">assemble</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://php.net/manual/zh/yaf-route-map.route.php" class="methodname" style="color:#CC7832">route</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>   }</div>  </div>    <div class="section" id="yaf-route-map.props">   <h2 class="title">属性</h2>   <dl>         <dt id="yaf-route-map.props.ctl-router"><var class="varname">_ctl_router</var></dt>     <dd>      <p class="para"></p>     </dd>             <dt id="yaf-route-map.props.delimiter"><var class="varname">_delimiter</var></dt>     <dd>      <p class="para"></p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Yaf_Route_Map::assemble} — 组合url</li><li>{@link Yaf_Route_Map::__construct} — The __construct purpose</li><li>{@link Yaf_Route_Map::route} — The route purpose</li></ul></div>
*
 * <p><b>Yaf_Route_Map</b> is a built-in route, it simply convert a URI endpoint (that part of the URI which comes after the base URI: see Yaf_Request_Abstract::setBaseUri()) to a controller name or action name(depends on the parameter passed to Yaf_Route_Map::__construct()) in following rule: A => controller A. A/B/C => controller A_B_C. A/B/C/D/E => controller A_B_C_D_E.</p>
 * <br/>
 * <p>If the second parameter of Yaf_Route_Map::__construct() is specified, then only the part before delimiter of URI will used to routing, the part after it is used to routing request parameters (see the example section of Yaf_Route_Map::__construct()).</p>
 *
 * @link https://secure.php.net/manual/en/class.yaf-route-map.php
 
*/
final class Yaf_Route_Map implements Yaf_Route_Interface
{
    /**
     * @var string
     */
    protected $_ctl_router = '';

    /**
     * @var string
     */
    protected $_delimiter;

    /**
     * @link https://secure.php.net/manual/en/yaf-route-map.construct.php
     *
     * @param bool $controller_prefer Whether the result should considering as controller or action
     * @param string $delimiter
     */
    public function __construct($controller_prefer = false, $delimiter = '') {}

/**
* <div id="yaf-route-map.route" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Map::route</h1>  <p class="verinfo">(Yaf &gt;=1.0.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Map::route</span> — <span class="dc-title">The route purpose</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-map.route-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Map::route</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.yaf-request-abstract.php" class="type Yaf_Request_Abstract" style="color:#EAB766">Yaf_Request_Abstract</a></span> <span class="parameter" style="color:#3A95FF">$request</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-map.route-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">request</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-map.route-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div></div>
    *
     * @link https://secure.php.net/manual/en/yaf-route-map.route.php
     *
     * @param Yaf_Request_Abstract $request
     *
     * @return bool
     
*/
    public function route($request) {}

/**
* <div id="yaf-route-map.assemble" class="refentry"> <div class="refnamediv">  <h1 class="refname">Yaf_Route_Map::assemble</h1>  <p class="verinfo">(Yaf &gt;=2.3.0)</p><p class="refpurpose"><span class="refname">Yaf_Route_Map::assemble</span> — <span class="dc-title">组合url</span></p> </div> <div class="refsect1 description" id="refsect1-yaf-route-map.assemble-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Yaf_Route_Map::assemble</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$info</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span> <span class="parameter" style="color:#3A95FF">$query</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   根据指定参数和自定义参数将 map 这个 route 组合成一个 url  </p> </div> <div class="refsect1 parameters" id="refsect1-yaf-route-map.assemble-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">info</span></dt>    <dd>     <p class="para">      需要传入一个数组，数组的 key 可以为 :a 或者 :c，:a 表示 action，:c 表示 controller。     </p>     <p class="para">	      当 map route 初始化时，controller_prefer 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> 时，这个参数需要传入 :c。当      controller_prefer 为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> 时，这个参数需要传入 :a。	      </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">query</span></dt>    <dd>     <p class="para">      用户自定义的 query 字符串，将根据此路由规则拼接在url中     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-yaf-route-map.assemble-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>，失败时为 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong>。  </p> </div> <div class="refsect1 errors" id="refsect1-yaf-route-map.assemble-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   可能抛出 <span class="classname"><a href="https://php.net/manual/zh/class.yaf-exception-typeerror.php" class="classname">Yaf_Exception_TypeError</a></span>。  </p> </div> <div class="refsect1 examples" id="refsect1-yaf-route-map.assemble-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-4185">   <p><strong>示例 #1 <span class="function"><strong>Yaf_Route_Map::assemble()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>$router </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Router</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$route  </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Map</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"map"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'map'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>                        array(<br>                                </span><span style="color: #DD0000">':c' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'foo_bar'<br>                        </span><span style="color: #007700">),<br>                        array(<br>                                </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>                                </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'<br>                        </span><span style="color: #007700">)<br>                   )<br>);<br><br></span><span style="color: #9876AA">$route </span><span style="color: #007700">= new </span><span style="color: #9876AA">Yaf_Route_Map</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #DD0000">'_'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">"map"</span><span style="color: #007700">, </span><span style="color: #9876AA">$route</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$router</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRoute</span><span style="color: #007700">(</span><span style="color: #DD0000">'map'</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">assemble</span><span style="color: #007700">(<br>                        array(<br>                                </span><span style="color: #DD0000">':a' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'foo_bar'<br>                        </span><span style="color: #007700">),<br>                        array(<br>                                </span><span style="color: #DD0000">'tkey1' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval1'</span><span style="color: #007700">,<br>                                </span><span style="color: #DD0000">'tkey2' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'tval2'<br>                        </span><span style="color: #007700">)<br>                   )<br>);</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(%d) "/foo/bar?tkey1=tval1&amp;tkey2=tval2"<br>string(%d) "/foo/bar/_/tkey1/tval1/tkey2/tval2"</blockquote></div>   </div>  </div> </div></div>
    *
     * <p><b>Yaf_Route_Map::assemble()</b> - Assemble a url</p>
     *
     * @link https://secure.php.net/manual/en/yaf-route-map.assemble.php
     *
     * @param array $info
     * @param array|null $query
     * @return bool
     
*/
    public function assemble(array $info, ?array $query = null) {}
}

/**
* <div id="class.yaf-exception-typeerror" class="reference"> <h1 class="title">Yaf_Exception_TypeError 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-typeerror.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-typeerror.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_TypeError</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-typeerror.php
 
*/
class Yaf_Exception_TypeError extends Yaf_Exception {}

/**
* <div id="class.yaf-exception-startuperror" class="reference"> <h1 class="title">Yaf_Exception_StartupError 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-startuperror.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-startuperror.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_StartupError</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-startuperror.php
 
*/
class Yaf_Exception_StartupError extends Yaf_Exception {}

/**
* <div id="class.yaf-exception-routerfailed" class="reference"> <h1 class="title">Yaf_Exception_RouterFailed 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-routerfailed.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-routerfailed.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_RouterFailed</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-routefaild.php
 
*/
class Yaf_Exception_RouterFailed extends Yaf_Exception {}

/**
* <div id="class.yaf-exception-dispatchfailed" class="reference"> <h1 class="title">Yaf_Exception_DispatchFailed 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-dispatchfailed.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-dispatchfailed.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_DispatchFailed</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-dispatchfaild.php
 
*/
class Yaf_Exception_DispatchFailed extends Yaf_Exception {}

/**
* <div id="class.yaf-exception-loadfailed" class="reference"> <h1 class="title">Yaf_Exception_LoadFailed 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-loadfailed.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-loadfailed.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_LoadFailed</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception.php" class="classname">Yaf_Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-loadfaild.php
 
*/
class Yaf_Exception_LoadFailed extends Yaf_Exception {}

/**
* <div id="class.yaf-exception-loadfailed-module" class="reference"> <h1 class="title">Yaf_Exception_LoadFailed_Module 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-loadfailed-module.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-loadfailed-module.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_LoadFailed_Module</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-loadfaild-module.php
 
*/
class Yaf_Exception_LoadFailed_Module extends Yaf_Exception_LoadFailed {}

/**
* <div id="class.yaf-exception-loadfailed-controller" class="reference"> <h1 class="title">Yaf_Exception_LoadFailed_Controller 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-loadfailed-controller.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-loadfailed-controller.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_LoadFailed_Controller</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-loadfaild-controller.php
 
*/
class Yaf_Exception_LoadFailed_Controller extends Yaf_Exception_LoadFailed {}

/**
* <div id="class.yaf-exception-loadfailed-action" class="reference"> <h1 class="title">Yaf_Exception_LoadFailed_Action 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-loadfailed-action.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-loadfailed-action.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_LoadFailed_Action</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-loadfaild-action.php
 
*/
class Yaf_Exception_LoadFailed_Action extends Yaf_Exception_LoadFailed {}

/**
* <div id="class.yaf-exception-loadfailed-view" class="reference"> <h1 class="title">Yaf_Exception_LoadFailed_View 类</h1>  <div class="partintro"><p class="verinfo">(Yaf &gt;=1.0.0)</p>  <div class="section" id="yaf-exception-loadfailed-view.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="yaf-exception-loadfailed-view.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">Yaf_Exception_LoadFailed_View</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://php.net/manual/zh/class.yaf-exception-loadfailed.php" class="classname">Yaf_Exception_LoadFailed</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Yaf_Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div>   </div></div>
*
 * @link https://secure.php.net/manual/en/class.yaf-exception-loadfaild-view.php
 
*/
class Yaf_Exception_LoadFailed_View extends Yaf_Exception_LoadFailed {}
