<?php

use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;

const SODIUM_CRYPTO_AEAD_AES256GCM_KEYBYTES = 32;
const SODIUM_CRYPTO_AEAD_AES256GCM_NSECBYTES = 0;
const SODIUM_CRYPTO_AEAD_AES256GCM_NPUBBYTES = 12;
const SODIUM_CRYPTO_AEAD_AES256GCM_ABYTES = 16;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES = 32;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES = 0;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES = 8;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_ABYTES = 16;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES = 32;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES = 0;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES = 12;
const SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES = 16;
const SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES = 32;
const SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NSECBYTES = 0;
const SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES = 24;
const SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES = 16;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES = 17;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES = 24;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_KEYBYTES = 32;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX = 274877906816;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE = 0;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH = 1;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY = 2;
const SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL = 3;
const SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13 = 2;
const SODIUM_BASE64_VARIANT_ORIGINAL = 1;
const SODIUM_BASE64_VARIANT_ORIGINAL_NO_PADDING = 3;
const SODIUM_BASE64_VARIANT_URLSAFE = 5;
const SODIUM_BASE64_VARIANT_URLSAFE_NO_PADDING = 7;
const SODIUM_CRYPTO_AUTH_BYTES = 32;
const SODIUM_CRYPTO_AUTH_KEYBYTES = 32;
const SODIUM_CRYPTO_BOX_SEALBYTES = 48;
const SODIUM_CRYPTO_BOX_SECRETKEYBYTES = 32;
const SODIUM_CRYPTO_BOX_PUBLICKEYBYTES = 32;
const SODIUM_CRYPTO_BOX_KEYPAIRBYTES = 64;
const SODIUM_CRYPTO_BOX_MACBYTES = 16;
const SODIUM_CRYPTO_BOX_NONCEBYTES = 24;
const SODIUM_CRYPTO_BOX_SEEDBYTES = 32;
const SODIUM_CRYPTO_KX_BYTES = 32;
const SODIUM_CRYPTO_KX_PUBLICKEYBYTES = 32;
const SODIUM_CRYPTO_KX_SECRETKEYBYTES = 32;
const SODIUM_CRYPTO_GENERICHASH_BYTES = 32;
const SODIUM_CRYPTO_GENERICHASH_BYTES_MIN = 16;
const SODIUM_CRYPTO_GENERICHASH_BYTES_MAX = 64;
const SODIUM_CRYPTO_GENERICHASH_KEYBYTES = 32;
const SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MIN = 16;
const SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MAX = 64;
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES = 32;
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX = '$7$';
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE = 524288;
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE = 16777216;
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE = 33554432;
const SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE = 1073741824;
const SODIUM_CRYPTO_SCALARMULT_BYTES = 32;
const SODIUM_CRYPTO_SCALARMULT_SCALARBYTES = 32;
const SODIUM_CRYPTO_SHORTHASH_BYTES = 8;
const SODIUM_CRYPTO_SHORTHASH_KEYBYTES = 16;
const SODIUM_CRYPTO_SECRETBOX_KEYBYTES = 32;
const SODIUM_CRYPTO_SECRETBOX_MACBYTES = 16;
const SODIUM_CRYPTO_SECRETBOX_NONCEBYTES = 24;
const SODIUM_CRYPTO_SIGN_BYTES = 64;
const SODIUM_CRYPTO_SIGN_SEEDBYTES = 32;
const SODIUM_CRYPTO_SIGN_PUBLICKEYBYTES = 32;
const SODIUM_CRYPTO_SIGN_SECRETKEYBYTES = 64;
const SODIUM_CRYPTO_SIGN_KEYPAIRBYTES = 96;
const SODIUM_CRYPTO_STREAM_KEYBYTES = 32;
const SODIUM_CRYPTO_STREAM_NONCEBYTES = 24;
const SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE = 2;
const SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE = 67108864;
const SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE = 3;
const SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE = 268435456;
const SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE = 4;
const SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE = 1073741824;
const SODIUM_LIBRARY_VERSION = "1.0.19";
const SODIUM_LIBRARY_MAJOR_VERSION = 26;
const SODIUM_LIBRARY_MINOR_VERSION = 1;
const SODIUM_CRYPTO_KDF_BYTES_MIN = 16;
const SODIUM_CRYPTO_KDF_BYTES_MAX = 64;
const SODIUM_CRYPTO_KDF_CONTEXTBYTES = 8;
const SODIUM_CRYPTO_KDF_KEYBYTES = 32;
const SODIUM_CRYPTO_KX_SEEDBYTES = 32;
const SODIUM_CRYPTO_KX_SESSIONKEYBYTES = 32;
const SODIUM_CRYPTO_KX_KEYPAIRBYTES = 64;
const SODIUM_CRYPTO_PWHASH_ALG_ARGON2I13 = 1;
const SODIUM_CRYPTO_PWHASH_ALG_DEFAULT = 2;
const SODIUM_CRYPTO_PWHASH_SALTBYTES = 16;
const SODIUM_CRYPTO_PWHASH_STRPREFIX = '$argon2id$';
const SODIUM_CRYPTO_STREAM_XCHACHA20_NONCEBYTES = 24;
const SODIUM_CRYPTO_STREAM_XCHACHA20_KEYBYTES = 32;
const SODIUM_CRYPTO_SCALARMULT_RISTRETTO255_BYTES = 32;
const SODIUM_CRYPTO_SCALARMULT_RISTRETTO255_SCALARBYTES = 32;
const SODIUM_CRYPTO_CORE_RISTRETTO255_BYTES = 32;
const SODIUM_CRYPTO_CORE_RISTRETTO255_HASHBYTES = 64;
const SODIUM_CRYPTO_CORE_RISTRETTO255_SCALARBYTES = 32;
const SODIUM_CRYPTO_CORE_RISTRETTO255_NONREDUCEDSCALARBYTES = 64;

/**
 * <div id="function.sodium-crypto-core-ristretto255-add" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_add</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_add</span> — <span class="dc-title">Adds an element</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-add-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$p</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$q</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Adds an element <span class="parameter" style="color:#3A95FF">q</span> to <span class="parameter" style="color:#3A95FF">p</span>.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-add-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">p</span></dt>    <dd>     <p class="para">      An element.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">q</span></dt>    <dd>     <p class="para">      An element.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-add-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1038">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_add()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-add-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_random()} - Generates a random key</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_sub()} - Subtracts an element</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_add(string $p, string $q): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-from-hash" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_from_hash</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_from_hash</span> — <span class="dc-title">Maps a vector</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-from-hash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_from_hash</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Maps a 64-bytes vector <span class="parameter" style="color:#3A95FF">s</span> to a group element.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-from-hash-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      A 64-bytes vector.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-from-hash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-from-hash-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1039">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_from_hash()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$hashes </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_hex2bin</span><span style="color: #007700">(<br>    </span><span style="color: #DD0000">'5d1be09e3d0c82fc538112490e35701979d99e06ca3e2b5b54bffe8b4dc772c1' </span><span style="color: #007700">.<br>    </span><span style="color: #DD0000">'4d98b696a1bbfb5ca32c436cc61c16563790306c79eaca7705668b47dffe5bb6'<br></span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_crypto_core_ristretto255_from_hash</span><span style="color: #007700">(</span><span style="color: #9876AA">\$hashes</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64)&nbsp;"3066f82a1a747d45120d1740f14358531a8f04bbffe6a819f86dfe50f44a0a46"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-from-hash-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_hex2bin()} - Decodes a hexadecimally encoded binary string</span></li>    <li><span class="function">{@link sodium_bin2hex()} - Encode to hexadecimal</span></li>    <li><span class="function"><strong>sodium_crypto_core_ristretto255_from_hash()</strong></span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_from_hash(string $s): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-is-valid-point" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_is_valid_point</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_is_valid_point</span> — <span class="dc-title">Determines if a point on the ristretto255 curve</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-is-valid-point-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_is_valid_point</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Determines if a point on the ristretto255 curve,   in canonical form, on the main subgroup, and that the point doesn't have a small order.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-is-valid-point-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      An Elliptic-curve point.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-is-valid-point-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if <span class="parameter" style="color:#3A95FF">s</span> is on the ristretto255 curve, <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-is-valid-point-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1040">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_is_valid_point()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_scalarmult_ristretto255_base</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_crypto_core_ristretto255_is_valid_point</span><span style="color: #007700">(</span><span style="color: #9876AA">\$bar</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-is-valid-point-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>    <li><span class="function">{@link sodium_crypto_scalarmult_ristretto255_base()} - Calculates the public key from a secret key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_is_valid_point(string $s): bool {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-random" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_random</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_random</span> — <span class="dc-title">Generates a random key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-random-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_random</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generates a random key.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-random-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-random-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-random-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1041">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_random()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-random-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_add()} - Adds an element</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_sub()} - Subtracts an element</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_random(): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-add" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_add</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_add</span> — <span class="dc-title">Adds a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-add-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$y</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Adds an element <span class="parameter" style="color:#3A95FF">y</span> to <span class="parameter" style="color:#3A95FF">x</span>.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-add-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">x</span></dt>    <dd>     <p class="para">      Scalar, representing the X coordinate.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">y</span></dt>    <dd>     <p class="para">      Scalar, representing the Y coordinate.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-add-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1042">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_scalar_add()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-add-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_sub()} - Subtracts a scalar value</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_add(string $x, string $y): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-complement" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_complement</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_complement</span> — <span class="dc-title">The sodium_crypto_core_ristretto255_scalar_complement purpose</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-complement-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_complement</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-complement-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      Scalar value.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-complement-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-complement-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_complement(string $s): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-invert" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_invert</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_invert</span> — <span class="dc-title">Inverts a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-invert-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_invert</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Inverts a scalar value.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-invert-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      Scalar value.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-invert-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-invert-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1043">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_scalar_invert()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$inverted </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_invert</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$reInverted </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_invert</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inverted</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$reInverted</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-invert-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_invert(string $s): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-mul" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_mul</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_mul</span> — <span class="dc-title">Multiplies a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-mul-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_mul</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$y</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Multiplies a scalar value.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-mul-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">x</span></dt>    <dd>     <p class="para">      Scalar, representing the X coordinate.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">y</span></dt>    <dd>     <p class="para">      Scalar, representing the Y coordinate.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-mul-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-mul-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_mul(string $x, string $y): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-negate" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_negate</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_negate</span> — <span class="dc-title">Negates a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-negate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_negate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Negates a scalar value.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-negate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      Scalar value.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-negate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-negate-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1044">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_scalar_negate()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$negate </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_negate</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$reNegate </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_negate</span><span style="color: #007700">(</span><span style="color: #9876AA">\$negate</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$reNegate</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-negate-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_negate(string $s): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-reduce" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_reduce</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_reduce</span> — <span class="dc-title">Reduces a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-reduce-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_reduce</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$s</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Reduces a scalar value.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-reduce-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">s</span></dt>    <dd>     <p class="para">      Scalar value.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-reduce-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-reduce-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_reduce(string $s): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-sub" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_sub</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_sub</span> — <span class="dc-title">Subtracts a scalar value</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-sub-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_sub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$y</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Subtracts a scalar <span class="parameter" style="color:#3A95FF">y</span> from <span class="parameter" style="color:#3A95FF">x</span>.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-sub-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">x</span></dt>    <dd>     <p class="para">      Scalar, representing the X coordinate.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">y</span></dt>    <dd>     <p class="para">      Scalar, representing the Y coordinate.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-sub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-sub-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1046">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_scalar_sub()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-sub-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_random()} - Generates a random key</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_add()} - Adds a scalar value</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_sub(string $x, string $y): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-scalar-random" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_scalar_random</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_scalar_random</span> — <span class="dc-title">Generates a random key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-random-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_scalar_random</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generates a random key.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-random-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-random-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-random-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1045">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_scalar_random()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_scalar_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-scalar-random-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_add()} - Adds a scalar value</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_scalar_sub()} - Subtracts a scalar value</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_scalar_random(): string {}

/**
 * <div id="function.sodium-crypto-core-ristretto255-sub" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_core_ristretto255_sub</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_core_ristretto255_sub</span> — <span class="dc-title">Subtracts an element</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-core-ristretto255-sub-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_core_ristretto255_sub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$p</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$q</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Subtracts an element <span class="parameter" style="color:#3A95FF">q</span> from <span class="parameter" style="color:#3A95FF">p</span>.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-core-ristretto255-sub-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">p</span></dt>    <dd>     <p class="para">      An element.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">q</span></dt>    <dd>     <p class="para">      An element.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-core-ristretto255-sub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-core-ristretto255-sub-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1047">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_core_ristretto255_sub()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br><br>\$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_random</span><span style="color: #007700">();<br><br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_add</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$value </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_core_ristretto255_sub</span><span style="color: #007700">(</span><span style="color: #9876AA">\$value</span><span style="color: #007700">, </span><span style="color: #9876AA">\$bar</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">\$foo</span><span style="color: #007700">, </span><span style="color: #9876AA">\$value</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-core-ristretto255-sub-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_core_ristretto255_random()} - Generates a random key</span></li>    <li><span class="function">{@link sodium_crypto_core_ristretto255_add()} - Adds an element</span></li>   </ul>   </div></div>
 */
function sodium_crypto_core_ristretto255_sub(string $p, string $q): string {}

/**
 * <div id="function.sodium-crypto-scalarmult-ristretto255" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_scalarmult_ristretto255</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.1)</p><p class="refpurpose"><span class="refname">sodium_crypto_scalarmult_ristretto255</span> — <span class="dc-title">Computes a shared secret</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_scalarmult_ristretto255</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$n</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$p</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Calculates scalar <span class="parameter" style="color:#3A95FF">n</span> times point <span class="parameter" style="color:#3A95FF">p</span>.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">n</span></dt>    <dd>     <p class="para">      A scalar, which is typically a secret key.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">p</span></dt>    <dd>     <p class="para">      A point (x-coordinate), which is typically a public key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_scalarmult_ristretto255_base()} - Calculates the public key from a secret key</span></li>   </ul>   </div></div>
 */
function sodium_crypto_scalarmult_ristretto255(string $n, string $p): string {}

/**
 * <div id="function.sodium-crypto-scalarmult-ristretto255-base" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_scalarmult_ristretto255_base</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.1)</p><p class="refpurpose"><span class="refname">sodium_crypto_scalarmult_ristretto255_base</span> — <span class="dc-title">Calculates the public key from a secret key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-base-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_scalarmult_ristretto255_base</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$n</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given a secret key, calculates the corresponding public key.   Available as of libsodium 1.0.18.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-base-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">n</span></dt>    <dd>     <p class="para">      A secret key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-base-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte random <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-scalarmult-ristretto255-base-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_scalarmult_ristretto255()} - Computes a shared secret</span></li>   </ul>   </div></div>
 */
function sodium_crypto_scalarmult_ristretto255_base(string $n): string {}

/**
 * <div id="function.sodium-crypto-stream-xchacha20" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_xchacha20</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_xchacha20</span> — <span class="dc-title">Expands the key and nonce into a keystream of pseudorandom bytes</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-xchacha20-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_xchacha20</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Expands the <span class="parameter" style="color:#3A95FF">key</span> and <span class="parameter" style="color:#3A95FF">nonce</span> into a keystream of pseudorandom bytes.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-xchacha20-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      Number of bytes desired.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      24-byte nonce.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Key, possibly generated from <span class="function">{@link sodium_crypto_stream_xchacha20_keygen()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-xchacha20-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a pseudorandom stream that can be used with <span class="function">{@link sodium_crypto_stream_xchacha20_xor()}</span>.  </p> </div></div>
 */
function sodium_crypto_stream_xchacha20(int $length, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-stream-xchacha20-xor" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_xchacha20_xor</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_xchacha20_xor</span> — <span class="dc-title">Encrypts a message using a nonce and a secret key (no authentication)</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_xchacha20_xor</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypts a <span class="parameter" style="color:#3A95FF">message</span> using a <span class="parameter" style="color:#3A95FF">nonce</span>   and a secret <span class="parameter" style="color:#3A95FF">key</span> (no authentication).  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    This encryption is unauthenticated, and does not prevent chosen-ciphertext attacks.    Make sure to combine the ciphertext with a Message Authentication Code,    for example with <span class="function">{@link sodium_crypto_aead_xchacha20poly1305_ietf_encrypt()}</span> function,    or <span class="function">{@link sodium_crypto_auth()}</span>.   </p>  </div>   </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      24-byte nonce.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Key, possibly generated from <span class="function">{@link sodium_crypto_stream_xchacha20_keygen()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Encrypted message.  </p> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_stream_xchacha20_xor_ic()} - Encrypts a message using a nonce and a secret key (no authentication)</span></li>   </ul>   </div></div>
 */
function sodium_crypto_stream_xchacha20_xor(string $message, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-stream-xchacha20-xor-ic" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_xchacha20_xor_ic</h1>  <p class="verinfo">(PHP 8 &gt;= 8.2.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_xchacha20_xor_ic</span> — <span class="dc-title">Encrypts a message using a nonce and a secret key (no authentication)</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-ic-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_xchacha20_xor_ic</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$counter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   The function is similar to <span class="function">{@link sodium_crypto_stream_xchacha20_xor()}</span>   but adds the ability to set the initial value of the block counter to a non-zero value.   This permits direct access to any block without having to compute the previous ones.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    This encryption is unauthenticated, and does not prevent chosen-ciphertext attacks.    Make sure to combine the ciphertext with a Message Authentication Code,    for example with <span class="function">{@link sodium_crypto_aead_xchacha20poly1305_ietf_encrypt()}</span> function,    or <span class="function">{@link sodium_crypto_auth()}</span>.   </p>  </div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-ic-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      24-byte nonce.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">counter</span></dt>    <dd>     <p class="para">      The initial value of the block counter.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Key, possibly generated from <span class="function">{@link sodium_crypto_stream_xchacha20_keygen()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-ic-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Encrypted message,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-ic-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-1060">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_stream_xchacha20_xor_ic()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$n2 </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">SODIUM_CRYPTO_STREAM_XCHACHA20_NONCEBYTES</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$left  </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"\x01"</span><span style="color: #007700">, </span><span style="color: #9876AA">64</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$right </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">"\xfe"</span><span style="color: #007700">, </span><span style="color: #9876AA">64</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// All at once:<br></span><span style="color: #9876AA">\$stream7_unified </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_stream_xchacha20_xor</span><span style="color: #007700">(</span><span style="color: #9876AA">\$left </span><span style="color: #007700">. </span><span style="color: #9876AA">\$right</span><span style="color: #007700">, </span><span style="color: #9876AA">\$n2</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Piecewise, with initial counter:<br></span><span style="color: #9876AA">\$stream7_left  </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_stream_xchacha20_xor_ic</span><span style="color: #007700">(</span><span style="color: #9876AA">\$left</span><span style="color: #007700">, </span><span style="color: #9876AA">\$n2</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$stream7_right </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_stream_xchacha20_xor_ic</span><span style="color: #007700">(</span><span style="color: #9876AA">\$right</span><span style="color: #007700">, </span><span style="color: #9876AA">\$n2</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$stream7_concat </span><span style="color: #007700">= </span><span style="color: #9876AA">\$stream7_left </span><span style="color: #007700">. </span><span style="color: #9876AA">\$stream7_right</span><span style="color: #007700">;<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream7_concat</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$stream7_unified </span><span style="color: #007700">=== </span><span style="color: #9876AA">\$stream7_concat</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">int(128)<br>bool(true)</blockquote></div>   </div>  </div> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-stream-xchacha20-xor-ic-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_stream_xchacha20_xor()} - Encrypts a message using a nonce and a secret key (no authentication)</span></li>   </ul>   </div></div>
 */
function sodium_crypto_stream_xchacha20_xor_ic(#[\SensitiveParameter] string $message, string $nonce, int $counter, #[\SensitiveParameter] string $key): string {}

/**
 * <div id="function.sodium-crypto-stream-xchacha20-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_xchacha20_keygen</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_xchacha20_keygen</span> — <span class="dc-title">Returns a secure random key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-xchacha20-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_xchacha20_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Returns a secure random key for use with <span class="function">{@link sodium_crypto_stream_xchacha20()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-xchacha20-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-xchacha20-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 32-byte secure random key for use with <span class="function">{@link sodium_crypto_stream_xchacha20()}</span>.  </p> </div></div>
 */
function sodium_crypto_stream_xchacha20_keygen(): string {}

/**
 * <div id="function.sodium-crypto-aead-aes256gcm-is-available" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_aes256gcm_is_available</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_aes256gcm_is_available</span> — <span class="dc-title">Check if hardware supports AES256-GCM</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-aes256gcm-is-available-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_aes256gcm_is_available</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   The return value of this function depends on whether or not the hardware supports hardware-accelerated AES.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-aes256gcm-is-available-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-aes256gcm-is-available-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if it is safe to encrypt with AES-256-GCM, and <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div></div>
 * 
 * Can you access AES-256-GCM? This is only available if you have supported
 * hardware.
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-is-available
 * @return bool
 * @since 7.2
 */
function sodium_crypto_aead_aes256gcm_is_available(): bool {}

/**
 * <div id="function.sodium-crypto-aead-aes256gcm-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_aes256gcm_decrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_aes256gcm_decrypt</span> — <span class="dc-title">Verify then decrypt a message with AES-256-GCM</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-aes256gcm-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_aes256gcm_decrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Verify then decrypt with AES-256-GCM.   Only available if <span class="function">{@link sodium_crypto_aead_aes256gcm_is_available()}</span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-aes256gcm-decrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      Must be in the format provided by <span class="function">{@link sodium_crypto_aead_aes256gcm_encrypt()}</span>      (ciphertext and tag, concatenated).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 12 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-aes256gcm-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the plaintext on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (decrypt)
 * AES-256-GCM
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-decrypt.php
 * @param string $ciphertext encrypted message
 * @param string $additional_data additional data
 * @param string $nonce
 * @param string $key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_aes256gcm_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false {}

/**
 * <div id="function.sodium-crypto-aead-aes256gcm-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_aes256gcm_encrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_aes256gcm_encrypt</span> — <span class="dc-title">Encrypt then authenticate with AES-256-GCM</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-aes256gcm-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_aes256gcm_encrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt then authenticate with AES-256-GCM.   Only available if <span class="function">{@link sodium_crypto_aead_aes256gcm_is_available()}</span> returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-aes256gcm-encrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The plaintext message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 12 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-aes256gcm-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ciphertext and authentication tag as a string of raw binary bytes. (Format: ciphertext, then tag.)  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (encrypt)
 * AES-256-GCM
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-encrypt.php
 * @param string $message plaintext message
 * @param string $additional_data
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_aes256gcm_encrypt(string $message, string $additional_data, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_decrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_decrypt</span> — <span class="dc-title">Verify then decrypt with ChaCha20-Poly1305</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_decrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Verify then decrypt with ChaCha20-Poly1305.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-decrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      Must be in the format provided by <span class="function">{@link sodium_crypto_aead_chacha20poly1305_encrypt()}</span>      (ciphertext and tag, concatenated).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 8 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the plaintext on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (decrypt)
 * ChaCha20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-decrypt.php
 * @param string $ciphertext encrypted message
 * @param string $additional_data additional data
 * @param string $nonce
 * @param string $key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_chacha20poly1305_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_encrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_encrypt</span> — <span class="dc-title">Encrypt then authenticate with ChaCha20-Poly1305</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_encrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt then authenticate with ChaCha20-Poly1305.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-encrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The plaintext message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 8 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ciphertext and tag on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (encrypt)
 * ChaCha20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-encrypt.php
 * @param string $message plaintext message
 * @param string $additional_data additional data
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_chacha20poly1305_encrypt(string $message, string $additional_data, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_ietf_decrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_ietf_decrypt</span> — <span class="dc-title">Verify that the ciphertext includes a valid tag</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_ietf_decrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Verify then decrypt with ChaCha20-Poly1305 (IETF variant).  </p>  <p class="para">   The IETF variant uses 96-bit nonces and 32-bit internal counters, instead of 64-bit for both.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      Must be in the format provided by <span class="function">{@link sodium_crypto_aead_chacha20poly1305_ietf_encrypt()}</span>      (ciphertext and tag, concatenated).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 12 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the plaintext on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (decrypt)
 * ChaCha20 + Poly1305 (IETF version)
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt.php
 * @param string $ciphertext encrypted message
 * @param string $additional_data additional data
 * @param string $nonce
 * @param string $key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_chacha20poly1305_ietf_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_ietf_encrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_ietf_encrypt</span> — <span class="dc-title">Encrypt a message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_ietf_encrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt then authenticate with ChaCha20-Poly1305 (IETF variant).  </p>  <p class="para">   The IETF variant uses 96-bit nonces and 32-bit internal counters, instead of 64-bit for both.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The plaintext message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 12 bytes long.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ciphertext and tag on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Authenticated Encryption with Associated Data (encrypt)
 * ChaCha20 + Poly1305 (IETF version)
 * @link https://www.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt.php
 * @param string $message plaintext message
 * @param string $additional_data additional data
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_aead_chacha20poly1305_ietf_encrypt(
    string $message,
    string $additional_data,
    string $nonce,
    string $key
): string {}

/**
 * <div id="function.sodium-crypto-auth" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_auth</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_auth</span> — <span class="dc-title">Compute a tag for the message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-auth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_auth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Symmetric message authentication via <span class="function"><strong>sodium_crypto_auth()</strong></span> provides   integrity, but not confidentiality.  </p>  <p class="para">   Unlike with digital signatures (e.g. <span class="function">{@link sodium_crypto_sign_detached()}</span>),   any party capable of verifying a message is also capable of authenticating   their own messages. (Hence, symmetric authentication.)  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-auth-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message you intend to authenticate     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Authentication key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-auth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Authentication tag  </p> </div></div>
 * 
 * Secret-key message authentication
 * HMAC SHA-512/256
 * @link https://www.php.net/manual/en/function.sodium-crypto-auth.php
 * @param string $message
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_auth(
    string $message,
    string $key
): string {}

/**
 * <div id="function.sodium-crypto-auth-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_auth_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_auth_keygen</span> — <span class="dc-title">Generate a random key for sodium_crypto_auth</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-auth-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_auth_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a key for use with <span class="function">{@link sodium_crypto_auth()}</span> and <span class="function">{@link sodium_crypto_auth_verify()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-auth-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-auth-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 256-bit random key.  </p> </div></div>
 * 
 * Get random bytes for key
 * @link https://php.net/manual/zh/function.sodium-crypto-auth-keygen.php
 * @return string
 * @since 7.2
 */
function sodium_crypto_auth_keygen(): string {}

/**
 * <div id="function.sodium-crypto-kx-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_keypair</span> — <span class="dc-title">Creates a new sodium keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_keypair</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Create a new sodium keypair consisting of the secret key (32 bytes)   followed by the public key (32 bytes). The keys can be retrieved by calling   <span class="function">{@link sodium_crypto_kx_secretkey()}</span> and   <span class="function">{@link sodium_crypto_kx_publickey()}</span>, respectively.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-keypair-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the new keypair on success; throws an exception otherwise.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-kx-keypair-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-kx-keypair.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_kx_keypair()</strong></span> usage</strong></p>   <div class="example-contents"><p>     Create a new keypair and retrieve the secret and the public key from it.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$keypair </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_kx_keypair</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$secret </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_kx_secretkey</span><span style="color: #007700">(</span><span style="color: #9876AA">\$keypair</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$public </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_kx_publickey</span><span style="color: #007700">(</span><span style="color: #9876AA">\$keypair</span><span style="color: #007700">);<br></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"secret: %s\npublic: %s"</span><span style="color: #007700">, </span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$secret</span><span style="color: #007700">), </span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$public</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">secret:&nbsp;e7c5c918fdc40762e6000542c0118f4368ce8fd242b0e48c1e17202797a25daf<br>public:&nbsp;d1f59fda8652caf40ed1a01d2b6f3802b60846986372cd8fa337b7c12c428b18</blockquote></div>   </div>  </div> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-keypair.php
 * @since 7.2
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_keypair(): string {}

/**
 * <div id="function.sodium-crypto-kx-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_publickey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_publickey</span> — <span class="dc-title">Extract the public key from a crypto_kx keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-publickey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_publickey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Extract the public key from a crypto_kx keypair.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-publickey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      X25519 keypair, such as one generated by      <span class="function">{@link sodium_crypto_kx_keypair()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-publickey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 public key.  </p> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-publickey.php
 * @since 7.2
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_publickey(string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-kx-secretkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_secretkey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_secretkey</span> — <span class="dc-title">Extract the secret key from a crypto_kx keypair.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-secretkey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_secretkey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Extract the secret key from a crypto_kx keypair.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-secretkey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      X25519 keypair, such as one generated by      <span class="function">{@link sodium_crypto_kx_keypair()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-secretkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 secret key.  </p> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-secretkey.php
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_secretkey(string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-kx-seed-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_seed_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_seed_keypair</span> — <span class="dc-title">Description</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-seed-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_seed_keypair</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$seed</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-seed-keypair-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">seed</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-seed-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-seed-keypair.php
 * @since 7.2
 * @param string $seed
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_seed_keypair(string $seed): string {}

/**
 * <div id="function.sodium-crypto-kx-server-session-keys" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_server_session_keys</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_server_session_keys</span> — <span class="dc-title">Calculate the server-side session keys.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-server-session-keys-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_server_session_keys</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$server_key_pair</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$client_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Calculate the server-side session keys, using the X25519 + BLAKE2b key-exchange method.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-server-session-keys-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">server_key_pair</span></dt>    <dd>     <p class="para">      A crypto_kx keypair, such as one generated by <span class="function">{@link sodium_crypto_kx_keypair()}</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">client_key</span></dt>    <dd>     <p class="para">      A crypto_kx public key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-server-session-keys-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array consisting of two strings. The first should be used for receiving data   from the client. The second should be used for sending data to the client.  </p> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-server-session-keys.php
 * @since 7.2
 * @param string $server_key_pair
 * @param string $client_key
 * @return string[]
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_server_session_keys(string $server_key_pair, string $client_key): array {}

/**
 * <div id="function.sodium-crypto-generichash-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_generichash_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_generichash_keygen</span> — <span class="dc-title">Generate a random generichash key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-generichash-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_generichash_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random key for use with the generichash API.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-generichash-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-generichash-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A random 256-bit key.  </p> </div></div>
 * 
 * Get random bytes for key
 * @link https://php.net/manual/zh/function.sodium-crypto-generichash-keygen.php
 * @return string
 * @since 7.2
 */
function sodium_crypto_generichash_keygen(): string {}

/**
 * <div id="function.sodium-crypto-kx-client-session-keys" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kx_client_session_keys</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kx_client_session_keys</span> — <span class="dc-title">Calculate the client-side session keys.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kx-client-session-keys-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kx_client_session_keys</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$client_key_pair</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$server_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Calculate the client-side session keys, using the X25519 + BLAKE2b key-exchange method.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kx-client-session-keys-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">client_key_pair</span></dt>    <dd>     <p class="para">      A crypto_kx keypair, such as one generated by <span class="function">{@link sodium_crypto_kx_keypair()}</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">server_key</span></dt>    <dd>     <p class="para">      A crypto_kx public key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kx-client-session-keys-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array consisting of two strings. The first should be used for receiving data   from the server. The second should be used for sending data to the server.  </p> </div></div>
 * 
 * @link https://php.net/manual/zh/function.sodium-crypto-kx-client-session-keys.php
 * @param string $client_key_pair
 * @param string $server_key
 * @return string[]
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kx_client_session_keys(string $client_key_pair, string $server_key): array {}

/**
 * <div id="function.sodium-crypto-kdf-derive-from-key" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kdf_derive_from_key</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kdf_derive_from_key</span> — <span class="dc-title">Derive a subkey</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kdf-derive-from-key-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kdf_derive_from_key</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$subkey_length</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$subkey_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$context</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Derive a subkey from a root key and additional context.  </p>  <p class="para">   Similar to <span class="function">{@link hash_hkdf()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kdf-derive-from-key-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">subkey_length</span></dt>    <dd>     <p class="para">      Length of the key to return (in bytes)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">subkey_id</span></dt>    <dd>     <p class="para">      Return the Nth subkey from a given root key. Useful for seeking.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">context</span></dt>    <dd>     <p class="para">      Application-specific context.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      The root key from which the subkey is derived.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kdf-derive-from-key-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string of pseudorandom (raw binary) bytes.  </p> </div></div>
 * 
 * @link https://www.php.net/manual/en/function.sodium-crypto-kdf-derive-from-key.php
 * @param int $subkey_length
 * @param int $subkey_id
 * @param string $context
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_kdf_derive_from_key(int $subkey_length, int $subkey_id, string $context, string $key): string {}

/**
 * <div id="function.sodium-crypto-kdf-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_kdf_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_kdf_keygen</span> — <span class="dc-title">Generate a random root key for the KDF interface</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-kdf-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_kdf_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generates a random key suitable for serving as the root key for <span class="function">{@link sodium_crypto_kdf_derive_from_key()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-kdf-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-kdf-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A random 256-bit key.  </p> </div></div>
 * 
 * Get random bytes for key
 * @link https://php.net/manual/zh/function.sodium-crypto-kdf-keygen.php
 * @since 7.2
 * @return string
 */
function sodium_crypto_kdf_keygen(): string {}

/**
 * <div id="function.sodium-crypto-shorthash-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_shorthash_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_shorthash_keygen</span> — <span class="dc-title">Get random bytes for key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-shorthash-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_shorthash_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a key for use with <span class="function">{@link sodium_crypto_shorthash()}</span>.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-shorthash-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-shorthash-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
 * Get random bytes for key
 * @link https://php.net/manual/zh/function.sodium-crypto-shorthash-keygen.php
 * @since 7.2
 * @return string
 */
function sodium_crypto_shorthash_keygen(): string {}

/**
 * <div id="function.sodium-crypto-stream-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_keygen</span> — <span class="dc-title">Generate a random sodium_crypto_stream key.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a key for use with <span class="function">{@link sodium_crypto_stream()}</span> and <span class="function">{@link sodium_crypto_stream_xor()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Encryption key (256-bit).  </p> </div></div>
 * 
 * Get random bytes for key
 * @link https://php.net/manual/zh/function.sodium-crypto-stream-keygen.php
 * @since 7.2
 * @return string
 */
function sodium_crypto_stream_keygen(): string {}

/**
 * <div id="function.sodium-pad" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_pad</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_pad</span> — <span class="dc-title">Add padding data</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-pad-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_pad</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$block_size</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Right-pad a string to a desired length. Timing-safe.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-pad-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      Unpadded string.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">block_size</span></dt>    <dd>     <p class="para">      The string will be padded until it is an even multiple of the block size.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-pad-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Padded string.  </p> </div></div>
 * 
 * Add padding data
 * @link https://php.net/manual/zh/function.sodium-pad.php
 * @param string $string
 * @param int $block_size
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_pad(string $string, int $block_size): string {}

/**
 * <div id="function.sodium-unpad" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_unpad</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_unpad</span> — <span class="dc-title">Remove padding data</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-unpad-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_unpad</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$block_size</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Unpad a padded string. Timing-safe.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-unpad-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      Padded string.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">block_size</span></dt>    <dd>     <p class="para">      The block size for padding.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-unpad-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Unpadded string.  </p> </div></div>
 * 
 * Remove padding data
 * @link https://php.net/manual/zh/function.sodium-unpad.php
 * @param string $string
 * @param int $block_size
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_unpad(string $string, int $block_size): string {}

/**
 * <div id="function.sodium-crypto-auth-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_auth_verify</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_auth_verify</span> — <span class="dc-title">Verifies that the tag is valid for the message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-auth-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_auth_verify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$mac</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Verify the authentication tag is valid for a given message and key.  </p>  <p class="para">   Unlike with digital signatures (e.g. <span class="function">{@link sodium_crypto_sign_verify_detached()}</span>),   any party capable of verifying a message is also capable of authenticating   their own messages. (Hence, symmetric authentication.)  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-auth-verify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">mac</span></dt>    <dd>     <p class="para">      Authentication tag produced by <span class="function">{@link sodium_crypto_auth()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      Message     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Authentication key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-auth-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
 * Secret-key message verification
 * HMAC SHA-512/256
 * @link https://www.php.net/manual/en/function.sodium-crypto-auth-verify.php
 * @param string $mac
 * @param string $message
 * @param string $key
 * @return bool
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_auth_verify(string $mac, string $message, string $key): bool {}

/**
 * <div id="function.sodium-crypto-box" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box</span> — <span class="dc-title">Authenticated public-key encryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt a message using asymmetric (public key) cryptography.  </p>  <p class="para">   The algorithm used by functions prefixed with <span class="function"><strong>sodium_crypto_box()</strong></span> are   Elliptic Curve Diffie-Hellman over the Montgomery curve, Curve25519; usually abbreviated as   X25519.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to be encrypted.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      See <span class="function">{@link sodium_crypto_box_keypair_from_secretkey_and_publickey()}</span>.      This should include the sender's X25519 secret key and the recipient's X25519 public key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the encrypted message (ciphertext plus authentication tag). The ciphertext will be   16 bytes longer than the plaintext, and a raw binary string. See <span class="function">{@link sodium_bin2base64()}</span>   for safe encoding for storage.  </p> </div></div>
 * 
 * Public-key authenticated encryption (encrypt)
 * X25519 + Xsalsa20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-box.php
 * @param string $message
 * @param string $nonce
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box(string $message, string $nonce, string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-box-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_keypair</span> — <span class="dc-title">Randomly generate a secret key and a corresponding public key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_keypair</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generates a secret key and a public key as one string.  </p>  <p class="para">   To get the secret key out of this unified keypair string, see <span class="function">{@link sodium_crypto_box_secretkey()}</span>.   To get the public key out of this unified keypair string, see <span class="function">{@link sodium_crypto_box_publickey()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-keypair-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   One string containing both the X25519 secret key and corresponding X25519 public key.  </p> </div></div>
 * 
 * Generate an X25519 keypair for use with the sodium_crypto_box API
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-keypair.php
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_keypair(): string {}

/**
 * <div id="function.sodium-crypto-box-seed-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_seed_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_seed_keypair</span> — <span class="dc-title">Deterministically derive the key pair from a single key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-seed-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_seed_keypair</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$seed</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Clamps the seed to form a secret key, derives the public key, and returns the two as a keypair.  </p>  <p class="para">   The <span class="literal">*_seed_keypair</span> functions are ideal for generating a keypair from a   password and salt. Use the result as a <span class="parameter" style="color:#3A95FF">seed</span> to generate the desired keys.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-seed-keypair-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">seed</span></dt>    <dd>     <p class="para">      Some cryptographic input. Must be 32 bytes.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-seed-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 Keypair (secret key and public key).  </p> </div></div>
 * 
 * Derive an X25519 keypair for use with the sodium_crypto_box API from a seed
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-seed-keypair.php
 * @param string $seed
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_seed_keypair(string $seed): string {}

/**
 * <div id="function.sodium-crypto-box-keypair-from-secretkey-and-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_keypair_from_secretkey_and_publickey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_keypair_from_secretkey_and_publickey</span> — <span class="dc-title">Create a unified keypair string from a secret key and public key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-keypair-from-secretkey-and-publickey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_keypair_from_secretkey_and_publickey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   This function exists to satisfy the API requirements of e.g. <span class="function"><strong>crypto_box()</strong></span>.   Pass in one party's secret key and the other's public key, and you will obtain a "keypair" for   your conversation.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-keypair-from-secretkey-and-publickey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Secret key.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      Public key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-keypair-from-secretkey-and-publickey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 Keypair.  </p> </div></div>
 * 
 * Create an X25519 keypair from an X25519 secret key and X25519 public key
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-keypair-from-secretkey-and-publickey.php
 * @param string $secret_key
 * @param string $public_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_keypair_from_secretkey_and_publickey(string $secret_key, string $public_key): string {}

/**
 * <div id="function.sodium-crypto-box-open" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_open</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_open</span> — <span class="dc-title">Authenticated public-key decryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Decrypt a message using asymmetric (public key) cryptography.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-open-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      The encrypted message to attempt to decrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      See <span class="function">{@link sodium_crypto_box_keypair_from_secretkey_and_publickey()}</span>.      This should include the sender's public key and the recipient's secret key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the plaintext message on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Public-key authenticated encryption (decrypt)
 * X25519 + Xsalsa20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-open.php
 * @param string $ciphertext
 * @param string $nonce
 * @param string $key_pair
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_open(string $ciphertext, string $nonce, string $key_pair): string|false {}

/**
 * <div id="function.sodium-crypto-box-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_publickey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_publickey</span> — <span class="dc-title">Extract the public key from a crypto_box keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-publickey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_publickey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given a keypair, fetch only the public key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-publickey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      A keypair, such as one generated by <span class="function">{@link sodium_crypto_box_keypair()}</span> or      <span class="function">{@link sodium_crypto_box_seed_keypair()}</span>     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-publickey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 public key.  </p> </div></div>
 * 
 * Get an X25519 public key from an X25519 keypair
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-publickey.php
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_publickey(string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-box-publickey-from-secretkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_publickey_from_secretkey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_publickey_from_secretkey</span> — <span class="dc-title">Calculate the public key from a secret key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-publickey-from-secretkey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_publickey_from_secretkey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given a secret key, calculate the corresponding public key.  </p>  <p class="para">   This only works with the type of keys intended for use with <span class="function"><strong>crypto_box()</strong></span>   (which uses Elliptic Curve Diffie-Hellman over the Montgomery curve, Curve25519; abbreviated as X25519),   not <span class="function"><strong>crypto_sign()</strong></span> (which uses Edwards Digital Signature Algorithm over the Edwards   Curve with the corresponding paramaters; abbreviated Ed25519).  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-publickey-from-secretkey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      X25519 secret key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-publickey-from-secretkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 public key.  </p> </div></div>
 * 
 * Derive an X25519 public key from an X25519 secret key
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-publickey-from-secretkey.php
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_publickey_from_secretkey(string $secret_key): string {}

/**
 * <div id="function.sodium-crypto-box-seal" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_seal</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_seal</span> — <span class="dc-title">Anonymous public-key encryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-seal-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_seal</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt a message such that only the recipient can decrypt it.  </p>  <p class="para">   Unlike with <span class="function">{@link sodium_crypto_box()}</span>, you only need to know the recipient's   public key to use <span class="function"><strong>sodium_crypto_box_seal()</strong></span>. One consequence of this   convenience, however, is that the ciphertext isn't bound to a static public key,   and is therefore not authenticated. Hence, anonymous public-key encryption.  </p>  <p class="para">   <span class="function"><strong>sodium_crypto_box_seal()</strong></span> still provides ciphertext integrity. Just not   sender identity authentication.  </p>  <p class="para">   If you also need sender authentication, the <span class="function">{@link sodium_crypto_sign()}</span> functions   are likely the best place to start.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-seal-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      The public key that corresponds to the only key that can decrypt the message.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-seal-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A ciphertext string in the format of (one-time public key, encrypted message, authentication tag).  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-box-seal-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-box-seal.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_box_seal()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$keypair </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_box_keypair</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$public_key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_box_publickey</span><span style="color: #007700">(</span><span style="color: #9876AA">\$keypair</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Obfuscated plaintext to make the example more fun<br></span><span style="color: #9876AA">\$plaintext_b64 </span><span style="color: #007700">= </span><span style="color: #DD0000">"V3JpdGluZyBzb2Z0d2FyZSBpbiBQSFAgY2FuIGJlIGEgZGVsaWdodCE="</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$decoded_plaintext </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_base642bin</span><span style="color: #007700">(</span><span style="color: #9876AA">\$plaintext_b64</span><span style="color: #007700">, </span><span style="color: #9876AA">SODIUM_BASE64_VARIANT_ORIGINAL</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$sealed </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_box_seal</span><span style="color: #007700">(</span><span style="color: #9876AA">\$decoded_plaintext</span><span style="color: #007700">, </span><span style="color: #9876AA">\$public_key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sealed</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$opened </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_box_seal_open</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sealed</span><span style="color: #007700">, </span><span style="color: #9876AA">\$keypair</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$opened</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(120)&nbsp;"oRBXXAV4iQBrxlV4A21Bord8Yo/D8ZlrIIGNyaRCcGBfpz0map52I3xq6l+CST+1NSgQkbV+HiYyFjXWiWiaCGupGf+zl4bgWj/A9Adtem7Jt3h3emrMsLw="<br>string(41)&nbsp;"Writing&nbsp;software&nbsp;in&nbsp;PHP&nbsp;can&nbsp;be&nbsp;a&nbsp;delight!"</blockquote></div>   </div>  </div> </div></div>
 * 
 * Anonymous public-key encryption (encrypt)
 * X25519 + Xsalsa20 + Poly1305 + BLAKE2b
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-seal.php
 * @param string $message
 * @param string $public_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_seal(string $message, string $public_key): string {}

/**
 * <div id="function.sodium-crypto-box-seal-open" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_seal_open</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_seal_open</span> — <span class="dc-title">Anonymous public-key decryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-seal-open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_seal_open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Decrypt a message that was encrypted with <span class="function">{@link sodium_crypto_box_seal()}</span>  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-seal-open-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      The encrypted message     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      The keypair of the recipient. Must include the secret key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-seal-open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The plaintext on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-box-seal-open-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-box-seal-open.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_box_seal_open()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// Ciphertext is not sensitive; base64_decode is fine<br></span><span style="color: #9876AA">\$sealed_b64 </span><span style="color: #007700">= </span><span style="color: #DD0000">"oRBXXAV4iQBrxlV4A21Bord8Yo/D8ZlrIIGNyaRCcGBfpz0map52I3xq6l+CST+1NSgQkbV+HiYyFjXWiWiaCGupGf+zl4bgWj/A9Adtem7Jt3h3emrMsLw="</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$sealed </span><span style="color: #007700">= </span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sealed_b64</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// Keypair contains a cryptographic secret; use a timing-safe decoder<br></span><span style="color: #9876AA">\$keypair_b64 </span><span style="color: #007700">= </span><span style="color: #DD0000">"KZkF8wnB7bnC2aXB3lFOqCTc0Z6MllvaQb9ASVG8o2/MsewkuE4u1uaEgTzSakeiYyIW8DGj+02/L3cWIbs9bQ=="</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$keypair </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_base642bin</span><span style="color: #007700">(</span><span style="color: #9876AA">\$keypair_b64</span><span style="color: #007700">, </span><span style="color: #9876AA">SODIUM_BASE64_VARIANT_ORIGINAL</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$opened </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_box_seal_open</span><span style="color: #007700">(</span><span style="color: #9876AA">\$sealed</span><span style="color: #007700">, </span><span style="color: #9876AA">\$keypair</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">\$opened</span><span style="color: #007700">);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(41)&nbsp;"Writing&nbsp;software&nbsp;in&nbsp;PHP&nbsp;can&nbsp;be&nbsp;a&nbsp;delight!"</blockquote></div>   </div>  </div> </div></div>
 * 
 * Anonymous public-key encryption (decrypt)
 * X25519 + Xsalsa20 + Poly1305 + BLAKE2b
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-seal-open.php
 * @param string $ciphertext
 * @param string $key_pair
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_seal_open(string $ciphertext, string $key_pair): string|false {}

/**
 * <div id="function.sodium-crypto-box-secretkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_box_secretkey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_box_secretkey</span> — <span class="dc-title">Extracts the secret key from a crypto_box keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-box-secretkey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_box_secretkey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given a keypair, fetch only the secret key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-box-secretkey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      A keypair, such as one generated by <span class="function">{@link sodium_crypto_box_keypair()}</span> or      <span class="function">{@link sodium_crypto_box_seed_keypair()}</span>     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-box-secretkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   X25519 secret key.  </p> </div></div>
 * 
 * Extract the X25519 secret key from an X25519 keypair
 * @link https://www.php.net/manual/en/function.sodium-crypto-box-secretkey.php
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_box_secretkey(string $key_pair): string {}

/**
 * Elliptic Curve Diffie Hellman Key Exchange
 * X25519
 * @param string $secret_key
 * @param string $public_key
 * @param string $client_publickey
 * @param string $server_publickey
 * @return string
 * @since 7.2
 */
function sodium_crypto_kx(
    string $secret_key,
    string $public_key,
    string $client_publickey,
    string $server_publickey
): string {}

/**
 * <div id="function.sodium-crypto-generichash" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_generichash</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_generichash</span> — <span class="dc-title">Get a hash of the message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-generichash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_generichash</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-generichash-bytes">SODIUM_CRYPTO_GENERICHASH_BYTES</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Hash a message with BLAKE2b.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-generichash-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message being hashed.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      (Optional) cryptographic key. This serves the same function as a HMAC key, but it's      utilized as a reserved section of the internal BLAKE2 state.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      Output size.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-generichash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The cryptographic hash as raw bytes. If a hex-encoded output is desired,   the result can be passed to <span class="function">{@link sodium_bin2hex()}</span>.  </p> </div></div>
 * 
 * Fast and secure cryptographic hash
 * @link https://www.php.net/manual/en/function.sodium-crypto-generichash.php
 * @param string $message
 * @param string $key
 * @param int $length
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_generichash(string $message, string $key = '', int $length = 32): string {}

/**
 * <div id="function.sodium-crypto-generichash-init" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_generichash_init</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_generichash_init</span> — <span class="dc-title">Initialize a hash for streaming</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-generichash-init-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_generichash_init</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-generichash-bytes">SODIUM_CRYPTO_GENERICHASH_BYTES</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   The initialization method for the streaming generichash API.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-generichash-init-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      The generichash key.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      The expected output length of the hash function.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-generichash-init-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a hash state, serialized as a raw binary string.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-generichash-init-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-generichash-init.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_generichash_init()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$messages </span><span style="color: #007700">= [</span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">16</span><span style="color: #007700">)];<br></span><span style="color: #9876AA">\$state </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_init</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br>foreach (</span><span style="color: #9876AA">\$messages </span><span style="color: #007700">as </span><span style="color: #9876AA">\$message</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">sodium_crypto_generichash_update</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$message</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">\$final </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_final</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$final</span><span style="color: #007700">));<br></span><span style="color: #9876AA">\$allAtOnce </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash</span><span style="color: #007700">(</span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">\$messages</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$allAtOnce</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64)&nbsp;"a2939a9163cb7c796ec28e01028489e72475c136b2697ea59e3e760ab4a8ab20"<br>string(64)&nbsp;"a2939a9163cb7c796ec28e01028489e72475c136b2697ea59e3e760ab4a8ab20"</blockquote></div>   </div>  </div> </div></div>
 * 
 * Create a new hash state (e.g. to use for streams)
 * BLAKE2b
 * @link https://www.php.net/manual/en/function.sodium-crypto-generichash-init.php
 * @param string $key
 * @param int $length
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_generichash_init(
    string $key = '',
    int $length = 32
): string {}

/**
 * <div id="function.sodium-crypto-generichash-update" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_generichash_update</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_generichash_update</span> — <span class="dc-title">Add message to a hash</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-generichash-update-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>sodium_crypto_generichash_update</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$state</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type true" style="color:#EAB766">true</a></span></div>  <p class="para rdfs-comment">   Appends a message to the internal hash state.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-generichash-update-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">state</span></dt>    <dd>     <p class="para">      The return value of <span class="function">{@link sodium_crypto_generichash_init()}</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      Data to append to the hashing state.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-generichash-update-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>。  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-generichash-update-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-generichash-update.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_generichash_update()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$messages </span><span style="color: #007700">= [</span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">16</span><span style="color: #007700">)];<br></span><span style="color: #9876AA">\$state </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_init</span><span style="color: #007700">();<br>foreach (</span><span style="color: #9876AA">\$messages </span><span style="color: #007700">as </span><span style="color: #9876AA">\$message</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">sodium_crypto_generichash_update</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$message</span><span style="color: #007700">);<br>}<br></span><span style="color: #9876AA">\$final </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_final</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$final</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$allAtOnce </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash</span><span style="color: #007700">(</span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">\$messages</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$allAtOnce</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64)&nbsp;"e16e28bbbbcc39d9f5b1cbc33c41f1d217808640103e57a41f24870f79831e04"<br>string(64)&nbsp;"e16e28bbbbcc39d9f5b1cbc33c41f1d217808640103e57a41f24870f79831e04"</blockquote></div>   </div>  </div> </div></div>
 * 
 * Update the hash state with some data
 * BLAKE2b
 * @link https://www.php.net/manual/en/function.sodium-crypto-generichash-update.php
 * @param string &$state
 * @param string $message
 * @return bool
 * @throws SodiumException
 * @since 7.2
 */
#[LanguageLevelTypeAware(['8.2' => 'true'], default: 'bool')]
function sodium_crypto_generichash_update(string &$state, string $message): bool {}

/**
 * <div id="function.sodium-crypto-generichash-final" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_generichash_final</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_generichash_final</span> — <span class="dc-title">Complete the hash</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-generichash-final-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_generichash_final</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$state</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-generichash-bytes">SODIUM_CRYPTO_GENERICHASH_BYTES</a></span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   The finalization method for the streaming generichash API.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-generichash-final-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">state</span></dt>    <dd>     <p class="para">      Hash state returned from <span class="function">{@link sodium_crypto_generichash_init()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      Output length.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-generichash-final-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Cryptographic hash.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-generichash-final-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-generichash-final.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_generichash_final()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$messages </span><span style="color: #007700">= [</span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">), </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">16</span><span style="color: #007700">)];<br></span><span style="color: #9876AA">\$state </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_init</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br>foreach (</span><span style="color: #9876AA">\$messages </span><span style="color: #007700">as </span><span style="color: #9876AA">\$message</span><span style="color: #007700">) {<br>    </span><span style="color: #9876AA">sodium_crypto_generichash_update</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$message</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #9876AA">\$final </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash_final</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$final</span><span style="color: #007700">));<br><br></span><span style="color: #9876AA">\$allAtOnce </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_generichash</span><span style="color: #007700">(</span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">\$messages</span><span style="color: #007700">));<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$allAtOnce</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64)&nbsp;"a2939a9163cb7c796ec28e01028489e72475c136b2697ea59e3e760ab4a8ab20"<br>string(64)&nbsp;"a2939a9163cb7c796ec28e01028489e72475c136b2697ea59e3e760ab4a8ab20"</blockquote></div>   </div>  </div> </div></div>
 * 
 * Get the final hash
 * BLAKE2b
 * @link https://www.php.net/manual/en/function.sodium-crypto-generichash-final.php
 * @param string &$state
 * @param int $length
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_generichash_final(
    string &$state,
    int $length = 32
): string {}

/**
 * <div id="function.sodium-crypto-pwhash" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash</span> — <span class="dc-title">Derive a key from a password, using Argon2</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$salt</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$opslimit</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$memlimit</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$algo</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-alg-default">SODIUM_CRYPTO_PWHASH_ALG_DEFAULT</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   This function provides low-level access to libsodium's crypto_pwhash key derivation function. Unless you have specific reason to use this function, you should use <span class="function">{@link sodium_crypto_pwhash_str()}</span> or <span class="function">{@link password_hash()}</span> functions instead.  </p>  <p class="para">   A common reason to use this particular function is to derive the seeds for cryptographic keys from a password and salt,   and then use these seeds to generate the actual keys needed for some purpose (e.g. <span class="function">{@link sodium_crypto_sign_detached()}</span>).  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>; The length of the password hash to generate, in bytes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>; The password to generate a hash for.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">salt</span></dt>    <dd>     <p class="para">      A salt to add to the password before hashing. The salt should be unpredictable, ideally generated from a good random number source such as <span class="function">{@link random_bytes()}</span>, and have a length of exactly <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-saltbytes">SODIUM_CRYPTO_PWHASH_SALTBYTES</a></span></strong> bytes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">opslimit</span></dt>    <dd>     <p class="para">      Represents a maximum amount of computations to perform. Raising this number will make the function require more CPU cycles to compute a key. There are some constants available to set the operations limit to appropriate values depending on intended use, in order of strength: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-interactive">SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-moderate">SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE</a></span></strong> and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-sensitive">SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE</a></span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">memlimit</span></dt>    <dd>     <p class="para">      The maximum amount of RAM that the function will use, in bytes. There are constants to help you choose an appropriate value, in order of size: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-interactive">SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-moderate">SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE</a></span></strong>, and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-sensitive">SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE</a></span></strong>. Typically these should be paired with the matching <span class="parameter" style="color:#3A95FF">opslimit</span> values.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">algo</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> A number indicating the hash algorithm to use. By default <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-alg-default">SODIUM_CRYPTO_PWHASH_ALG_DEFAULT</a></span></strong> (the currently recommended algorithm, which can change from one version of libsodium to another), or explicitly using <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-alg-argon2id13">SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13</a></span></strong>, representing the Argon2id algorithm version 1.3.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the derived key. The return value is a binary string of the hash, not an ASCII-encoded representation, and does not contain additional information about the parameters used to create the hash, so you will need to keep that information if you are ever going to verify the password in future. Use <span class="function">{@link sodium_crypto_pwhash_str()}</span> to avoid needing to do all that.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-pwhash-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1052">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_pwhash()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">//Need to keep the salt if we're ever going to be able to check this password<br></span><span style="color: #9876AA">\$salt </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_SALTBYTES</span><span style="color: #007700">);<br></span><span style="color: #FF8000">//Using bin2hex to keep output readable<br></span><span style="color: #007700">echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">sodium_crypto_pwhash</span><span style="color: #007700">(<br>        </span><span style="color: #9876AA">16</span><span style="color: #007700">, </span><span style="color: #FF8000">// == 128 bits<br>        </span><span style="color: #DD0000">'password'</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">\$salt</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE</span><span style="color: #007700">,<br>        </span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13<br>    </span><span style="color: #007700">)<br>);<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">a18f346ba57992eb7e4ae6abf3fd30ee</blockquote></div>    </div>   </div>    </div></div>
 * 
 * Secure password-based key derivation function
 * Argon2i
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash.php
 * @param int $length
 * @param string $password
 * @param string $salt
 * @param int $opslimit
 * @param int $memlimit
 * @param int $algo [optional]
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_pwhash(int $length, string $password, string $salt, int $opslimit, int $memlimit, int $algo = SODIUM_CRYPTO_PWHASH_ALG_DEFAULT): string {}

/**
 * <div id="function.sodium-crypto-pwhash-str" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_str</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_str</span> — <span class="dc-title">Get an ASCII-encoded hash</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-str-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_str</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$opslimit</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$memlimit</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">Uses a CPU- and memory-hard hash algorithm along with a randomly-generated salt, and memory and CPU limits to generate an ASCII-encoded hash suitable for password storage.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-str-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>; The password to generate a hash for.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">opslimit</span></dt>    <dd>     <p class="para">      Represents a maximum amount of computations to perform. Raising this number will make the function require more CPU cycles to compute a key. There are constants available to set the operations limit to appropriate values depending on intended use, in order of strength: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-interactive">SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-moderate">SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE</a></span></strong> and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-opslimit-sensitive">SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE</a></span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">memlimit</span></dt>    <dd>     <p class="para">      The maximum amount of RAM that the function will use, in bytes. There are constants to help you choose an appropriate value, in order of size: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-interactive">SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE</a></span></strong>, <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-moderate">SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE</a></span></strong>, and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-memlimit-sensitive">SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE</a></span></strong>. Typically these should be paired with the matching opslimit values.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-str-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the hashed password.  </p>  <p class="para">   In order to produce the same password hash from the same password, the same values for <span class="parameter" style="color:#3A95FF">opslimit</span> and <span class="parameter" style="color:#3A95FF">memlimit</span> must be used. These are embedded within the generated hash, so   everything that's needed to verify the hash is included. This allows   the <span class="function">{@link sodium_crypto_pwhash_str_verify()}</span> function to verify the hash without   needing separate storage for the other parameters.  </p> </div>  <div class="refsect1 examples" id="refsect1-function.sodium-crypto-pwhash-str-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1053">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_pwhash_str()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$password </span><span style="color: #007700">= </span><span style="color: #DD0000">'password'</span><span style="color: #007700">;<br>echo </span><span style="color: #9876AA">sodium_crypto_pwhash_str</span><span style="color: #007700">(<br>    </span><span style="color: #9876AA">\$password</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE</span><span style="color: #007700">,<br>    </span><span style="color: #9876AA">SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE<br></span><span style="color: #007700">);</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">\$argon2id\$v=19\$m=65536,t=2,p=1\$oWIfdaXwWwhVmovOBc2NAQ\$EbsZ+JnZyyavkafS0hoc4HdaOB0ILWZESAZ7kVGa+Iw</blockquote></div>    </div>   </div>    </div> <div class="refsect1 notes" id="refsect1-function.sodium-crypto-pwhash-str-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Hashes are calculated using the Argon2ID algorithm,    providing resistance to both GPU and side-channel attacks.    In contrast to the <span class="function">{@link password_hash()}</span> function,    there is no salt parameter (a salt is generated automatically),    and the <span class="parameter" style="color:#3A95FF">opslimit</span> and    <span class="parameter" style="color:#3A95FF">memlimit</span> parameters are not optional.   </p>  </blockquote> </div>  <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-pwhash-str-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_pwhash_str_verify()} - Verifies that a password matches a hash</span></li>    <li><span class="function">{@link sodium_crypto_pwhash()} - Derive a key from a password, using Argon2</span></li>    <li><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    <li><span class="function">{@link password_verify()} - 验证密码是否和散列值匹配</span></li>    <li><a href="https://download.libsodium.org/doc/password_hashing/the_argon2i_function.html" class="link external">»&nbsp;Libsodium Argon2 docs</a></li>   </ul>   </div></div>
 * 
 * Get a formatted password hash (for storage)
 * Argon2i
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash-str.php
 * @param string $password
 * @param int $opslimit
 * @param int $memlimit
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_pwhash_str(string $password, int $opslimit, int $memlimit): string {}

/**
 * <div id="function.sodium-crypto-pwhash-str-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_str_verify</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_str_verify</span> — <span class="dc-title">Verifies that a password matches a hash</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-str-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_str_verify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hash</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Checks that a password hash created using <span class="function">{@link sodium_crypto_pwhash_str()}</span> matches a given plain-text password. Note that the parameters are in the opposite order to the same parameters in the similar <span class="function">{@link password_verify()}</span> function.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-str-verify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">hash</span></dt>    <dd>     <p class="para">      一个由 <span class="function">{@link password_hash()}</span> 创建的散列值。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      用户的密码。     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-str-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the password and hash match, or <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> otherwise.  </p> </div> <div class="refsect1 notes" id="refsect1-function.sodium-crypto-pwhash-str-verify-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    </p><p class="para">    Hashes are calculated using the Argon2ID algorithm, providing resistance to both GPU and side-channel attacks.   </p>  </blockquote> </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-pwhash-str-verify-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_pwhash_str()} - Get an ASCII-encoded hash</span></li>    <li><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    <li><span class="function">{@link password_verify()} - 验证密码是否和散列值匹配</span></li>   </ul>   </div></div>
 * 
 * Verify a password against a hash
 * Argon2i
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash-str-verify.php
 * @param string $hash
 * @param string $password
 * @return bool
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_pwhash_str_verify(string $hash, string $password): bool {}

/**
 * <div id="function.sodium-crypto-pwhash-scryptsalsa208sha256" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_scryptsalsa208sha256</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_scryptsalsa208sha256</span> — <span class="dc-title">Derives a key from a password, using scrypt</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_scryptsalsa208sha256</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$salt</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$opslimit</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$memlimit</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   This is the scrypt counterpart to <span class="function">{@link sodium_crypto_pwhash()}</span>.  </p>  <p class="para">   A common reason to use this particular function is to derive the seeds for cryptographic keys from a password and salt,   and then use these seeds to generate the actual keys needed for some purpose (e.g. <span class="function">{@link sodium_crypto_sign_detached()}</span>).  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      The length of the password hash to generate, in bytes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      The password to generate a hash for.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">salt</span></dt>    <dd>     <p class="para">      A salt to add to the password before hashing. The salt should be unpredictable, ideally generated from a good random number source such as <span class="function">{@link random_bytes()}</span>, and have a length of at least <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-scryptsalsa208sha256-saltbytes">SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES</a></span></strong> bytes.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">opslimit</span></dt>    <dd>     <p class="para">      Represents a maximum amount of computations to perform. Raising this number will make the function require more CPU cycles to compute a key. There are some constants available to set the operations limit to appropriate values depending on intended use, in order of strength: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-scryptsalsa208sha256-opslimit-interactive">SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE</a></span></strong> and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-scryptsalsa208sha256-opslimit-sensitive">SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE</a></span></strong>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">memlimit</span></dt>    <dd>     <p class="para">      The maximum amount of RAM that the function will use, in bytes. There are constants to help you choose an appropriate value, in order of size: <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-scryptsalsa208sha256-memlimit-interactive">SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE</a></span></strong> and <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-pwhash-scryptsalsa208sha256-memlimit-sensitive">SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE</a></span></strong>. Typically these should be paired with the matching <span class="parameter" style="color:#3A95FF">opslimit</span> values.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string of bytes of the desired length.  </p> </div></div>
 * 
 * Secure password-based key derivation function
 * Scrypt
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256.php
 * @param int $length
 * @param string $password
 * @param string $salt
 * @param int $opslimit
 * @param int $memlimit
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_pwhash_scryptsalsa208sha256(
    int $length,
    string $password,
    string $salt,
    int $opslimit,
    int $memlimit,
    #[PhpStormStubsElementAvailable(from: '7.2', to: '7.4')] $alg = null
): string {}

/**
 * <div id="function.sodium-crypto-pwhash-scryptsalsa208sha256-str" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_scryptsalsa208sha256_str</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_scryptsalsa208sha256_str</span> — <span class="dc-title">Get an ASCII encoded hash</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_scryptsalsa208sha256_str</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$opslimit</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$memlimit</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">opslimit</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">memlimit</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
 * Get a formatted password hash (for storage)
 * Scrypt
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256-str.php
 * @param string $password
 * @param int $opslimit
 * @param int $memlimit
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_pwhash_scryptsalsa208sha256_str(string $password, int $opslimit, int $memlimit): string {}

/**
 * <div id="function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_scryptsalsa208sha256_str_verify</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_scryptsalsa208sha256_str_verify</span> — <span class="dc-title">Verify that the password is a valid password verification string</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_scryptsalsa208sha256_str_verify</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$hash</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">hash</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
 * Verify a password against a hash
 * Scrypt
 * @link https://www.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify
 * @param string $hash
 * @param string $password
 * @return bool
 * @since 7.2
 */
function sodium_crypto_pwhash_scryptsalsa208sha256_str_verify(string $hash, string $password): bool {}

/**
 * <div id="function.sodium-crypto-scalarmult" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_scalarmult</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_scalarmult</span> — <span class="dc-title">Compute a shared secret given a user's secret key and another user's public key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-scalarmult-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_scalarmult</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$n</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$p</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Elliptic Curve Diffie-Hellman. Calculates scalar n times point p, on an elliptic curve.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-scalarmult-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">n</span></dt>    <dd>     <p class="para">      scalar, which is typically a secret key     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">p</span></dt>    <dd>     <p class="para">      point (x-coordinate), which is typically a public key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-scalarmult-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A 32-byte random string.  </p> </div></div>
 * 
 * Elliptic Curve Diffie Hellman over Curve25519
 * X25519
 * @link https://www.php.net/manual/en/function.sodium-crypto-scalarmult.php
 * @param string $n
 * @param string $p
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_scalarmult(string $n, string $p): string {}

/**
 * <div id="function.sodium-crypto-secretbox" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretbox</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretbox</span> — <span class="dc-title">Authenticated shared-key encryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretbox-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretbox</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt a message with a symmetric (shared) key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretbox-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The plaintext message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretbox-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the encrypted string.  </p> </div> <div class="refsect1 errors" id="refsect1-function.sodium-crypto-secretbox-errors">  <h3 class="title">错误／异常</h3>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     If <span class="parameter" style="color:#3A95FF">nonce</span> has a length of bytes different than     <a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-noncebytes" class="link"><strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-noncebytes">SODIUM_CRYPTO_SECRETBOX_NONCEBYTES</a></span></strong></a>     (24 bytes), a <span class="classname"><a href="https://php.net/manual/zh/class.sodiumexception.php" class="classname">SodiumException</a></span> will be thrown.    </span>   </li>   <li class="listitem">    <span class="simpara">     If <span class="parameter" style="color:#3A95FF">key</span> has a length of bytes different than     <a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-keybytes" class="link"><strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-keybytes">SODIUM_CRYPTO_SECRETBOX_KEYBYTES</a></span></strong></a>     (32 bytes), a <span class="classname"><a href="https://php.net/manual/zh/class.sodiumexception.php" class="classname">SodiumException</a></span> will be thrown.    </span>   </li>   <li class="listitem">    <span class="simpara">     Throws a <span class="classname"><a href="https://php.net/manual/zh/class.sodiumexception.php" class="classname">SodiumException</a></span> on failure.    </span>   </li>  </ul> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-secretbox-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1054">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_secretbox()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// The \$key must be kept confidential<br></span><span style="color: #9876AA">\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox_keygen</span><span style="color: #007700">();<br></span><span style="color: #FF8000">// Do not reuse \$nonce with the same key<br></span><span style="color: #9876AA">\$nonce </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">SODIUM_CRYPTO_SECRETBOX_NONCEBYTES</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$plaintext </span><span style="color: #007700">= </span><span style="color: #DD0000">"message to be encrypted"</span><span style="color: #007700">;<br></span><span style="color: #9876AA">\$ciphertext </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox</span><span style="color: #007700">(</span><span style="color: #9876AA">\$plaintext</span><span style="color: #007700">, </span><span style="color: #9876AA">\$nonce</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ciphertext</span><span style="color: #007700">));<br></span><span style="color: #FF8000">// The same nonce and key are required to decrypt the \$ciphertext<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_crypto_secretbox_open</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ciphertext</span><span style="color: #007700">, </span><span style="color: #9876AA">\$nonce</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(78)&nbsp;"3a1fa3e9f7b72ef8be51d40abf8e296c6899c185d07b18b4c93e7f26aa776d24c50852cd6b1076"<br>string(23)&nbsp;"message&nbsp;to&nbsp;be&nbsp;encrypted"</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-secretbox-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_secretbox_open()} - Authenticated shared-key decryption</span></li>    <li><span class="function">{@link sodium_crypto_secretbox_keygen()} - Generate random key for sodium_crypto_secretbox</span></li>    <li><span class="function">{@link random_bytes()} - Get cryptographically secure random bytes</span></li>   </ul>   </div></div>
 * 
 * Authenticated secret-key encryption (encrypt)
 * Xsals20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-secretbox.php
 * @param string $message
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_secretbox(string $message, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-secretbox-open" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretbox_open</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretbox_open</span> — <span class="dc-title">Authenticated shared-key decryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretbox-open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretbox_open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Decrypt an encrypted message with a symmetric (shared) key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretbox-open-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      Must be in the format provided by <span class="function">{@link sodium_crypto_secretbox()}</span>      (ciphertext and tag, concatenated).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretbox-open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The decrypted string on success 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div> <div class="refsect1 errors" id="refsect1-function.sodium-crypto-secretbox-open-errors">  <h3 class="title">错误／异常</h3>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     If <span class="parameter" style="color:#3A95FF">nonce</span> has a length of bytes different than     <a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-noncebytes" class="link"><strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-noncebytes">SODIUM_CRYPTO_SECRETBOX_NONCEBYTES</a></span></strong></a>     (24 bytes), a <span class="classname"><a href="https://php.net/manual/zh/class.sodiumexception.php" class="classname">SodiumException</a></span> will be thrown.    </span>   </li>   <li class="listitem">    <span class="simpara">     If <span class="parameter" style="color:#3A95FF">key</span> has a length of bytes different than     <a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-keybytes" class="link"><strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretbox-keybytes">SODIUM_CRYPTO_SECRETBOX_KEYBYTES</a></span></strong></a>     (32 bytes), a <span class="classname"><a href="https://php.net/manual/zh/class.sodiumexception.php" class="classname">SodiumException</a></span> will be thrown.    </span>   </li>  </ul> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-secretbox-open-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1057">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_secretbox_open()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #FF8000">// The \$key must be kept confidential<br></span><span style="color: #9876AA">\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">SODIUM_CRYPTO_SECRETBOX_KEYBYTES</span><span style="color: #007700">);<br></span><span style="color: #FF8000">// Do not reuse \$nonce with the same key<br></span><span style="color: #9876AA">\$nonce </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">SODIUM_CRYPTO_SECRETBOX_NONCEBYTES</span><span style="color: #007700">);<br></span><span style="color: #9876AA">\$ciphertext </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox</span><span style="color: #007700">(</span><span style="color: #DD0000">'message to be encrypted'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$nonce</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br><br></span><span style="color: #FF8000">// The same nonce and key are required to decrypt the \$ciphertext<br></span><span style="color: #9876AA">\$plaintext </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox_open</span><span style="color: #007700">(</span><span style="color: #9876AA">\$ciphertext</span><span style="color: #007700">, </span><span style="color: #9876AA">\$nonce</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br>if (</span><span style="color: #9876AA">\$plaintext </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br>    echo </span><span style="color: #9876AA">\$plaintext </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br>}<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">message&nbsp;to&nbsp;be&nbsp;encrypted</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-secretbox-open-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_crypto_secretbox()} - Authenticated shared-key encryption</span></li>    <li><span class="function">{@link sodium_crypto_secretbox_keygen()} - Generate random key for sodium_crypto_secretbox</span></li>    <li><span class="function">{@link random_bytes()} - Get cryptographically secure random bytes</span></li>   </ul>   </div></div>
 * 
 * Authenticated secret-key encryption (decrypt)
 * Xsals20 + Poly1305
 * @link https://www.php.net/manual/en/function.sodium-crypto-secretbox-open.php
 * @param string $ciphertext
 * @param string $nonce
 * @param string $key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_secretbox_open(string $ciphertext, string $nonce, string $key): string|false {}

/**
 * <div id="function.sodium-crypto-shorthash" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_shorthash</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_shorthash</span> — <span class="dc-title">Compute a short hash of a message and key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-shorthash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_shorthash</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>sodium_crypto_shorthash()</strong></span> wraps a hash function called   SipHash-2-4, which is ideal for implementing hash tables that are not susceptible   to hash collision denial of service attacks (Hash-DoS).  </p>  <p class="para">   SipHash-2-4 isn't a general purpose cryptographic hash function.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-shorthash-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to hash.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      The hash key.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-shorthash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
 * 
 * A short keyed hash suitable for data structures
 * SipHash-2-4
 * @link https://www.php.net/manual/en/function.sodium-crypto-shorthash.php
 * @param string $message
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_shorthash(string $message, string $key): string {}

/**
 * <div id="function.sodium-crypto-sign" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign</span> — <span class="dc-title">Sign a message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Sign a message with a secret key, that can be verified by the corresponding public key.   This function attaches the signature to the message. See <span class="function">{@link sodium_crypto_sign_detached()}</span>   for detached signatures.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      Message to sign.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Secret key. See <span class="function">{@link sodium_crypto_sign_secretkey()}</span>     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Signed message (not encrypted).  </p> </div></div>
 * 
 * Digital Signature
 * Ed25519
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign.php
 * @param string $message
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign(string $message, string $secret_key): string {}

/**
 * <div id="function.sodium-crypto-sign-detached" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_detached</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_detached</span> — <span class="dc-title">Sign the message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-detached-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_detached</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Sign a message with a secret key, that can be verified by the corresponding public key.   This function returns a detached signature.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-detached-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      Message to sign.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Secret key. See <span class="function">{@link sodium_crypto_sign_secretkey()}</span>     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-detached-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Cryptographic signature.  </p> </div></div>
 * 
 * Digital Signature (detached)
 * Ed25519
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-detached.php
 * @param string $message
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_detached(string $message, string $secret_key): string {}

/**
 * <div id="function.sodium-crypto-sign-ed25519-pk-to-curve25519" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_ed25519_pk_to_curve25519</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_ed25519_pk_to_curve25519</span> — <span class="dc-title">Convert an Ed25519 public key to a Curve25519 public key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-ed25519-pk-to-curve25519-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_ed25519_pk_to_curve25519</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given an Ed25519 public key, calculate the birationally equivalent X25519 public key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-ed25519-pk-to-curve25519-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      Public key suitable for the crypto_sign functions.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-ed25519-pk-to-curve25519-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Public key suitable for the crypto_box functions.  </p> </div></div>
 * 
 * Convert an Ed25519 public key to an X25519 public key
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-ed25519-pk-to-curve25519.php
 * @param string $public_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_ed25519_pk_to_curve25519(string $public_key): string {}

/**
 * <div id="function.sodium-crypto-sign-ed25519-sk-to-curve25519" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_ed25519_sk_to_curve25519</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_ed25519_sk_to_curve25519</span> — <span class="dc-title">Convert an Ed25519 secret key to a Curve25519 secret key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-ed25519-sk-to-curve25519-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_ed25519_sk_to_curve25519</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Given an Ed25519 secret key, calculate the birationally equivalent X25519 secret key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-ed25519-sk-to-curve25519-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Secret key suitable for the crypto_sign functions.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-ed25519-sk-to-curve25519-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Secret key suitable for the crypto_box functions.  </p> </div></div>
 * 
 * Convert an Ed25519 secret key to an X25519 secret key
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-ed25519-sk-to-curve25519.php
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_ed25519_sk_to_curve25519(string $secret_key): string {}

/**
 * <div id="function.sodium-crypto-sign-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_keypair</span> — <span class="dc-title">Randomly generate a secret key and a corresponding public key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_keypair</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random Ed25519 keypair as one string.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-keypair-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Ed25519 keypair.  </p> </div></div>
 * 
 * Generate an Ed25519 keypair for use with the crypto_sign API
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-keypair.php
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_keypair(): string {}

/**
 * <div id="function.sodium-crypto-sign-keypair-from-secretkey-and-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_keypair_from_secretkey_and_publickey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_keypair_from_secretkey_and_publickey</span> — <span class="dc-title">Join a secret key and public key together</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-keypair-from-secretkey-and-publickey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_keypair_from_secretkey_and_publickey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Join a secret key and public key together.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-keypair-from-secretkey-and-publickey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Ed25519 secret key     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      Ed25519 public key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-keypair-from-secretkey-and-publickey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Keypair  </p> </div></div>
 * 
 * Create an Ed25519 keypair from an Ed25519 secret key + Ed25519 public key
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-keypair-from-secretkey-and-publickey.php
 * @param string $secret_key
 * @param string $public_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_keypair_from_secretkey_and_publickey(
    string $secret_key,
    string $public_key
): string {}

/**
 * <div id="function.sodium-crypto-sign-open" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_open</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_open</span> — <span class="dc-title">Check that the signed message has a valid signature</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$signed_message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Verify the signature attached to a message and return the message  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-open-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">signed_message</span></dt>    <dd>     <p class="para">      A message signed with <span class="function">{@link sodium_crypto_sign()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      An Ed25519 public key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the original signed message on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * Verify a signed message and return the plaintext
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-open.php
 * @param string $signed_message
 * @param string $public_key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_open(string $signed_message, string $public_key): string|false {}

/**
 * <div id="function.sodium-crypto-sign-publickey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_publickey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_publickey</span> — <span class="dc-title">Extract the Ed25519 public key from a keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-publickey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_publickey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Extract the Ed25519 public key from a keypair  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-publickey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      Ed25519 keypair (see: <span class="function">{@link sodium_crypto_sign_keypair()}</span>)     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-publickey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Ed25519 public key  </p> </div></div>
 * 
 * Get the public key from an Ed25519 keypair
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-publickey.php
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_publickey(string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-sign-secretkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_secretkey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_secretkey</span> — <span class="dc-title">Extract the Ed25519 secret key from a keypair</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-secretkey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_secretkey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key_pair</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Extract the Ed25519 secret key from a keypair  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-secretkey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key_pair</span></dt>    <dd>     <p class="para">      Ed25519 keypair (see: <span class="function">{@link sodium_crypto_sign_keypair()}</span>)     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-secretkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Ed25519 secret key  </p> </div></div>
 * 
 * Get the secret key from an Ed25519 keypair
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-secretkey.php
 * @param string $key_pair
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_secretkey(string $key_pair): string {}

/**
 * <div id="function.sodium-crypto-sign-publickey-from-secretkey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_publickey_from_secretkey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_publickey_from_secretkey</span> — <span class="dc-title">Extract the Ed25519 public key from the secret key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-publickey-from-secretkey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_publickey_from_secretkey</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$secret_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Extract the Ed25519 public key from the secret key  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-publickey-from-secretkey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">secret_key</span></dt>    <dd>     <p class="para">      Ed25519 secret key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-publickey-from-secretkey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Ed25519 public key  </p> </div></div>
 * 
 * Derive an Ed25519 public key from an Ed25519 secret key
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-publickey-from-secretkey.php
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_publickey_from_secretkey(string $secret_key): string {}

/**
 * <div id="function.sodium-crypto-sign-seed-keypair" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_seed_keypair</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_seed_keypair</span> — <span class="dc-title">Deterministically derive the key pair from a single key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-seed-keypair-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_seed_keypair</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$seed</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Clamps the seed to form a secret key, derives the public key, and returns the two as a keypair.  </p>  <p class="para">   The <span class="literal">*_seed_keypair</span> functions are ideal for generating a keypair from a   password and salt. Use the result as a <span class="parameter" style="color:#3A95FF">seed</span> to generate the desired keys.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-seed-keypair-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">seed</span></dt>    <dd>     <p class="para">      Some cryptographic input. Must be 32 bytes.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-seed-keypair-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Keypair (secret key and public key)  </p> </div></div>
 * 
 * Derive an Ed25519 keypair for use with the crypto_sign API from a seed
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-seed-keypair.php
 * @param string $seed
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_seed_keypair(string $seed): string {}

/**
 * <div id="function.sodium-crypto-sign-verify-detached" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_sign_verify_detached</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_sign_verify_detached</span> — <span class="dc-title">Verify signature for the message</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-sign-verify-detached-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_sign_verify_detached</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$signature</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$public_key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Verify signature for the message  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-sign-verify-detached-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">signature</span></dt>    <dd>     <p class="para">      The cryptographic signature obtained from <span class="function">{@link sodium_crypto_sign_detached()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message being verified     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">public_key</span></dt>    <dd>     <p class="para">      Ed25519 public key     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-sign-verify-detached-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong>， 或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>。  </p> </div></div>
 * 
 * Verify a detached signature
 * @link https://www.php.net/manual/en/function.sodium-crypto-sign-verify-detached.php
 * @param string $signature
 * @param string $message
 * @param string $public_key
 * @return bool
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_sign_verify_detached(string $signature, string $message, string $public_key): bool {}

/**
 * <div id="function.sodium-crypto-stream" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream</span> — <span class="dc-title">Generate a deterministic sequence of bytes from a seed</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$length</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a deterministic sequence of bytes from a seed, using the XSalsa20 stream cipher.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">      The number of bytes to return.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   String of pseudorandom bytes.  </p> </div></div>
 * 
 * Create a keystream from a key and nonce
 * Xsalsa20
 * @link https://www.php.net/manual/en/function.sodium-crypto-stream.php
 * @param int $length
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_stream(
    int $length,
    string $nonce,
    string $key
): string {}

/**
 * <div id="function.sodium-crypto-stream-xor" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_stream_xor</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_stream_xor</span> — <span class="dc-title">Encrypt a message without authentication</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-stream-xor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_stream_xor</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   This function encrypts a message with XSalsa20, but does not provide any ciphertext   guarantees about the plaintext.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-stream-xor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The message to encrypt     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-stream-xor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Encrypted message.  </p> </div></div>
 * 
 * Encrypt a message using a stream cipher
 * Xsalsa20
 * @link https://www.php.net/manual/en/function.sodium-crypto-stream-xor.php
 * @param string $message
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_stream_xor(
    string $message,
    string $nonce,
    string $key
): string {}

/**
 * Generate a string of random bytes
 * /dev/urandom
 *
 * @param int $length
 * @return string|false
 * @since 7.2
 */
function sodium_randombytes_buf(int $length): string {}

/**
 * Generate a 16-bit integer
 * /dev/urandom
 *
 * @return int
 * @since 7.2
 */
function sodium_randombytes_random16(): int {}

/**
 * Generate an unbiased random integer between 0 and a specified value
 * /dev/urandom
 *
 * @param int $upperBoundNonInclusive
 * @return int
 * @since 7.2
 */
function sodium_randombytes_uniform(int $upperBoundNonInclusive): int {}

/**
 * <div id="function.sodium-bin2hex" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_bin2hex</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_bin2hex</span> — <span class="dc-title">Encode to hexadecimal</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-bin2hex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_bin2hex</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Converts a raw binary string into a hex-encoded string. Unlike the standard hex-encoding function,   <span class="function"><strong>sodium_bin2hex()</strong></span> is constant-time (a property that is important for any code that   touches cryptographic inputs, such as plaintexts or keys).  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-bin2hex-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      Raw binary string.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-bin2hex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Hex encoded string.  </p> </div></div>
 * 
 * Convert to hex without side-chanels
 * @link https://www.php.net/manual/en/function.sodium-bin2hex.php
 * @param string $string
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_bin2hex(string $string): string {}

/**
 * <div id="function.sodium-compare" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_compare</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_compare</span> — <span class="dc-title">Compare large numbers</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-compare-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_compare</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Compare two strings as if they were arbitrary-length, unsigned little-endian integers, without side-channel leakage.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-compare-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>    <dd>     <p class="para">      Left operand     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>    <dd>     <p class="para">      Right operand     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-compare-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="literal">-1</span> if <span class="parameter" style="color:#3A95FF">string1</span> is less than <span class="parameter" style="color:#3A95FF">string2</span>.  </p>  <p class="para">   Returns <span class="literal">1</span> if <span class="parameter" style="color:#3A95FF">string1</span> is greater than <span class="parameter" style="color:#3A95FF">string2</span>.  </p>  <p class="para">   Returns <span class="literal">0</span> if both strings are equal.  </p> </div></div>
 * 
 * Compare two strings in constant time
 * @link https://www.php.net/manual/en/function.sodium-compare.php
 * @param string $string1
 * @param string $string2
 * @return int
 * @throws SodiumException
 * @since 7.2
 */
function sodium_compare(string $string1, string $string2): int {}

/**
 * <div id="function.sodium-hex2bin" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_hex2bin</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_hex2bin</span> — <span class="dc-title">Decodes a hexadecimally encoded binary string</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-hex2bin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_hex2bin</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ignore</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Decodes a hexadecimally encoded binary string.  </p>  <p class="para">   Like <span class="function">{@link sodium_bin2hex()}</span>, <span class="function"><strong>sodium_hex2bin()</strong></span>   is resistant to side-channel attacks while <span class="function">{@link hex2bin()}</span> is not.  </p>  </div> <div class="refsect1 parameters" id="refsect1-function.sodium-hex2bin-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      Hexadecimal representation of data.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">ignore</span></dt>    <dd>     <p class="para">      Optional string argument for characters to ignore.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-hex2bin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the binary representation of the given <span class="parameter" style="color:#3A95FF">string</span> data.  </p> </div></div>
 * 
 * Convert from hex without side-chanels
 * @link https://www.php.net/manual/en/function.sodium-hex2bin.php
 * @param string $string
 * @param string $ignore
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_hex2bin(string $string, string $ignore = ''): string {}

/**
 * <div id="function.sodium-increment" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_increment</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_increment</span> — <span class="dc-title">Increment large number</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-increment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_increment</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$string</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Treat the string as a little-endian unsigned integer, then increase it by 1.   Constant-time.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-increment-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      String to increment.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-increment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
 * Increment a string in little-endian
 * @link https://www.php.net/manual/en/function.sodium-increment.php
 * @param string &$string
 * @return void
 * @throws SodiumException
 * @since 7.2
 */
function sodium_increment(string &$string): void {}

/**
 * <div id="function.sodium-add" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_add</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_add</span> — <span class="dc-title">Add large numbers</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-add-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_add</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   This adds the parameter <span class="parameter" style="color:#3A95FF">string2</span> to <span class="parameter" style="color:#3A95FF">string1</span>, overwriting   the value stored in <span class="parameter" style="color:#3A95FF">string1</span>. This function assumes both parameters are binary   strings that represent unsigned integers in little-endian byte order.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-add-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>    <dd>     <p class="para">      String representing an arbitrary-length unsigned integer in little-endian byte order.      This parameter is passed by reference and will hold the sum of the two parameters.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>    <dd>     <p class="para">      String representing an arbitrary-length unsigned integer in little-endian byte order.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
 * Add the right operand to the left
 * @link https://www.php.net/manual/en/function.sodium-add.php
 * @param string &$string1
 * @param string $string2
 * @throws SodiumException
 * @since 7.2
 */
function sodium_add(string &$string1, string $string2): void {}

/**
 * Get the true major version of libsodium
 * @return int
 * @since 7.2
 */
function sodium_library_version_major(): int {}

/**
 * Get the true minor version of libsodium
 * @return int
 * @since 7.2
 */
function sodium_library_version_minor(): int {}

/**
 * <div id="function.sodium-memcmp" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_memcmp</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_memcmp</span> — <span class="dc-title">Test for equality in constant-time</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-memcmp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_memcmp</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string1</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string2</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div>  <p class="para rdfs-comment">   Compare two strings in constant-time.  </p>  <p class="para">   In practice, you almost always want to use <span class="function">{@link hash_equals()}</span> instead,   since it provides the same logic but returns a <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span> instead of an   <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>. However, if you're using the return value of a comparison in a   calculation that's timing-sensitive, and worried about timing leaks with bool-to-int   conversions, <span class="function"><strong>sodium_memcmp()</strong></span> is an ideal replacement.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-memcmp-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>    <dd>     <p class="para">      String to compare     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>    <dd>     <p class="para">      Other string to compare     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-memcmp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <span class="literal">0</span> if both strings are equal; <span class="literal">-1</span> otherwise.  </p> </div></div>
 * 
 * Compare two strings in constant time
 * @link https://www.php.net/manual/en/function.sodium-memcmp.php
 * @param string $string1
 * @param string $string2
 * @return int
 * @throws SodiumException
 * @since 7.2
 */
function sodium_memcmp(string $string1, string $string2): int {}

/**
 * <div id="function.sodium-memzero" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_memzero</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_memzero</span> — <span class="dc-title">Overwrite a string with NUL characters</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-memzero-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_memzero</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$string</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong>sodium_memzero()</strong></span> zeroes out the string that is passed by reference.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-memzero-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      String.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-memzero-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
 * Wipe a buffer
 * @link https://www.php.net/manual/en/function.sodium-memzero.php
 * @param string &$string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_memzero(string &$string): void {}

/**
 * Get the version string
 *
 * @return string
 * @since 7.2
 */
function sodium_version_string(): string {}

/**
 * <div id="function.sodium-crypto-scalarmult-base" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_scalarmult_base</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_scalarmult_base</span> — <span class="dc-title">别名 <span class="function">{@link sodium_crypto_box_publickey_from_secretkey()}</span></span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-scalarmult-base-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link sodium_crypto_box_publickey_from_secretkey()}</span>.  </p> </div></div>
 * 
 * Scalar multiplication of the base point and your key
 * @link https://www.php.net/manual/en/function.sodium-crypto-scalarmult-base
 * @param string $secret_key
 * @return string
 * @throws SodiumException
 * @since 7.2
 */
function sodium_crypto_scalarmult_base(
    string $secret_key,
    #[PhpStormStubsElementAvailable(from: '7.2', to: '7.4')] $string_2
): string {}

/**
 * <div id="function.sodium-crypto-secretbox-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretbox_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretbox_keygen</span> — <span class="dc-title">Generate random key for sodium_crypto_secretbox</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretbox-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretbox_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a key for use with <span class="function">{@link sodium_crypto_secretbox()}</span> and <span class="function">{@link sodium_crypto_secretbox_open()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretbox-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretbox-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the generated string of cryptographically secure random bytes.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-secretbox-keygen-examples">  <h3 class="title">示例</h3>  <p class="para">   </p><div class="example" id="example-1055">    <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_secretbox_keygen()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox_keygen</span><span style="color: #007700">();<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">( </span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">( </span><span style="color: #9876AA">\$key </span><span style="color: #007700">) );<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(64)&nbsp;"88bd1dc51ec81984f3ddc5a8f59a3d95b647e2da3e879f1b9ceb0abd89e7286c"</blockquote></div>    </div>   </div>   <div class="example" id="example-1056">    <p><strong>示例 #2      Comparing <span class="function"><strong>sodium_crypto_secretbox_keygen()</strong></span>     with <span class="function">{@link random_bytes()}</span>    </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br>\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretbox_keygen</span><span style="color: #007700">();<br></span><span style="color: #9876AA">\$bytes </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">( </span><span style="color: #9876AA">SODIUM_CRYPTO_SECRETBOX_KEYBYTES </span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">( </span><span style="color: #9876AA">mb_strlen</span><span style="color: #007700">( </span><span style="color: #9876AA">\$key</span><span style="color: #007700">, </span><span style="color: #DD0000">'8bit' </span><span style="color: #007700">) === </span><span style="color: #9876AA">mb_strlen</span><span style="color: #007700">( </span><span style="color: #9876AA">\$bytes</span><span style="color: #007700">, </span><span style="color: #DD0000">'8bit' </span><span style="color: #007700">) );<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">bool(true)</blockquote></div>    </div>   </div>   </div> <div class="refsect1 seealso" id="refsect1-function.sodium-crypto-secretbox-keygen-seealso">  <h3 class="title">参见</h3>  <p class="para">   </p><ul class="simplelist">    <li><span class="function">{@link sodium_bin2hex()} - Encode to hexadecimal</span></li>    <li><span class="function">{@link random_bytes()} - Get cryptographically secure random bytes</span></li>   </ul>   </div></div>
 * 
 * Creates a random key
 *
 * It is equivalent to calling random_bytes() but improves code clarity and can
 * prevent misuse by ensuring that the provided key length is always be correct.
 *
 * @since 7.2
 * @see https://secure.php.net/manual/en/function.sodium-crypto-secretbox-keygen.php
 */
function sodium_crypto_secretbox_keygen(): string {}

/**
 * <div id="function.sodium-crypto-aead-aes256gcm-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_aes256gcm_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_aes256gcm_keygen</span> — <span class="dc-title">Generate a random AES-256-GCM key</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-aes256gcm-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_aes256gcm_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random key for use with <span class="function">{@link sodium_crypto_aead_aes256gcm_encrypt()}</span> and   <span class="function">{@link sodium_crypto_aead_aes256gcm_decrypt()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-aes256gcm-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-aes256gcm-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 256-bit random key.  </p> </div></div>
 * 
 * Creates a random key
 *
 * It is equivalent to calling random_bytes() but improves code clarity and can
 * prevent misuse by ensuring that the provided key length is always be correct.
 *
 * @since 7.2
 * @see https://secure.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-keygen.php
 */
function sodium_crypto_aead_aes256gcm_keygen(): string {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_keygen</span> — <span class="dc-title">Generate a random ChaCha20-Poly1305 key.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random key for use with <span class="function">{@link sodium_crypto_aead_chacha20poly1305_encrypt()}</span> and   <span class="function">{@link sodium_crypto_aead_chacha20poly1305_decrypt()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 256-bit random key.  </p> </div></div>
 * 
 * Creates a random key
 * It is equivalent to calling random_bytes() but improves code clarity and can
 * prevent misuse by ensuring that the provided key length is always be correct.
 *
 * @since 7.2
 * @see https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-keygen.php
 */
function sodium_crypto_aead_chacha20poly1305_keygen(): string {}

/**
 * <div id="function.sodium-crypto-aead-chacha20poly1305-ietf-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_chacha20poly1305_ietf_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_chacha20poly1305_ietf_keygen</span> — <span class="dc-title">Generate a random ChaCha20-Poly1305 (IETF) key.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_chacha20poly1305_ietf_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random key for use with <span class="function">{@link sodium_crypto_aead_chacha20poly1305_ietf_encrypt()}</span> and   <span class="function">{@link sodium_crypto_aead_chacha20poly1305_ietf_decrypt()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-chacha20poly1305-ietf-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 256-bit random key.  </p> </div></div>
 * 
 * Creates a random key
 *
 * It is equivalent to calling random_bytes() but improves code clarity and can
 * prevent misuse by ensuring that the provided key length is always be correct.
 *
 * @since 7.2
 * @see https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-keygen.php
 */
function sodium_crypto_aead_chacha20poly1305_ietf_keygen(): string {}

/**
 * <div id="function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_decrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_decrypt</span> — <span class="dc-title">(Preferred) Verify then decrypt with XChaCha20-Poly1305</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_xchacha20poly1305_ietf_decrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Verify then decrypt with ChaCha20-Poly1305 (eXtended-nonce variant).  </p>  <p class="para">   Generally, XChaCha20-Poly1305 is the best of the provided AEAD modes to use.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      Must be in the format provided by <span class="function">{@link sodium_crypto_aead_chacha20poly1305_ietf_encrypt()}</span>      (ciphertext and tag, concatenated).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the plaintext on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * @param string $ciphertext
 * @param string $additional_data
 * @param string $nonce
 * @param string $key
 * @return string|false
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt.php
 */
function sodium_crypto_aead_xchacha20poly1305_ietf_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false {}

/**
 * <div id="function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_encrypt</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_encrypt</span> — <span class="dc-title">(Preferred) Encrypt then authenticate with XChaCha20-Poly1305</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_xchacha20poly1305_ietf_encrypt</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$nonce</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt then authenticate with XChaCha20-Poly1305 (eXtended-nonce variant).  </p>  <p class="para">   Generally, XChaCha20-Poly1305 is the best of the provided AEAD modes to use.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">      The plaintext message to encrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Additional, authenticated data. This is used in the verification of the authentication tag      appended to the ciphertext, but it is not encrypted or stored in the ciphertext.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>    <dd>     <p class="para">      A number that must be only used once, per message. 24 bytes long.      This is a large enough bound to generate randomly (i.e. <span class="function">{@link random_bytes()}</span>).     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ciphertext and tag on success,  或者在失败时返回 <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong>.  </p> </div></div>
 * 
 * @param string $message
 * @param string $additional_data
 * @param string $nonce
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 * https://www.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt.php
 */
function sodium_crypto_aead_xchacha20poly1305_ietf_encrypt(string $message, string $additional_data, string $nonce, string $key): string {}

/**
 * <div id="function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_aead_xchacha20poly1305_ietf_keygen</span> — <span class="dc-title">Generate a random XChaCha20-Poly1305 key.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_aead_xchacha20poly1305_ietf_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random key for use with <span class="function">{@link sodium_crypto_aead_xchacha20poly1305_ietf_encrypt()}</span> and   <span class="function">{@link sodium_crypto_aead_xchacha20poly1305_ietf_decrypt()}</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a 256-bit random key.  </p> </div></div>
 * 
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen.php
 */
function sodium_crypto_aead_xchacha20poly1305_ietf_keygen(): string {}

/**
 * <div id="function.sodium-crypto-pwhash-str-needs-rehash" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_pwhash_str_needs_rehash</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_pwhash_str_needs_rehash</span> — <span class="dc-title">Determine whether or not to rehash a password</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-pwhash-str-needs-rehash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_pwhash_str_needs_rehash</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$password</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$opslimit</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$memlimit</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.boolean.php" class="type bool" style="color:#EAB766">bool</a></span></div>  <p class="para rdfs-comment">   Determine whether or not to rehash a password, based on the current hash <span class="parameter" style="color:#3A95FF">opslimit</span> and <span class="parameter" style="color:#3A95FF">memlimit</span>.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-pwhash-str-needs-rehash-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">password</span></dt>    <dd>     <p class="para">      Password hash     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">opslimit</span></dt>    <dd>     <p class="para">      Configured opslimit; see <span class="function">{@link sodium_crypto_pwhash_str()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">memlimit</span></dt>    <dd>     <p class="para">      Configured memlimit; see <span class="function">{@link sodium_crypto_pwhash_str()}</span>     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-pwhash-str-needs-rehash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.true">true</a></span></strong> if the provided memlimit/opslimit do not match what's stored in the hash.   Returns <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.false">false</a></span></strong> if they match.  </p> </div></div>
 * 
 * @param string $password
 * @param int $opslimit
 * @param int $memlimit
 * @return bool
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-pwhash-str-needs-rehash.php
 */
function sodium_crypto_pwhash_str_needs_rehash(string $password, int $opslimit, int $memlimit): bool {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-keygen" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_keygen</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_keygen</span> — <span class="dc-title">Generate a random secretstream key.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-keygen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_keygen</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Generate a random secretstream key.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-keygen-parameters">  <h3 class="title">参数</h3>  <p class="para">此函数没有参数。</p> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-keygen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string of random bytes.  </p> </div></div>
 * 
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-keygen.php
 */
function sodium_crypto_secretstream_xchacha20poly1305_keygen(): string {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-init-push" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_init_push</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_init_push</span> — <span class="dc-title">Initialize a secretstream context for encryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-push-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_init_push</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div>  <p class="para rdfs-comment">   Initialize a secretstream context for encryption.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-push-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Cryptography key. See <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_keygen()}</span>.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-push-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array with two string values:  </p>  <ul class="simplelist">   <li>The secretstream state, needed for further pushes</li>   <li>The secretstream header, which needs to be provided to the recipient so they can pull data</li>  </ul> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-push-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-secretstream-xchacha20poly1305-init-push.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_secretstream_xchacha20poly1305_init_push()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">encrypt_file</span><span style="color: #007700">(</span><span style="color: #9876AA">string \$inputFilePath</span><span style="color: #007700">, </span><span style="color: #9876AA">string \$outputFilePath</span><span style="color: #007700">, </span><span style="color: #9876AA">string \$key</span><span style="color: #007700">): </span><span style="color: #9876AA">void<br></span><span style="color: #007700">{<br>    [</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$header</span><span style="color: #007700">] = </span><span style="color: #9876AA">sodium_crypto_secretstream_xchacha20poly1305_init_push</span><span style="color: #007700">(</span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">\$inputFile </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFilePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'rb'</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$outputFile </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFilePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'wb'</span><span style="color: #007700">);<br>    </span><span style="color: #FF8000">// Write the header:<br>    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">\$header</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$inputFileSize </span><span style="color: #007700">= </span><span style="color: #9876AA">fstat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">)[</span><span style="color: #DD0000">'size'</span><span style="color: #007700">];<br><br>    </span><span style="color: #FF8000">// Encrypt the file and write its contents to the output file:<br>    </span><span style="color: #007700">for (</span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$inputFileSize</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">+= </span><span style="color: #9876AA">8175</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$ptxt_chunk </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">8175</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">\$ctxt_chunk </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretstream_xchacha20poly1305_push</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$ptxt_chunk</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">\$ctxt_chunk</span><span style="color: #007700">);<br>    }<br><br>    </span><span style="color: #9876AA">sodium_memzero</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFile</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// sodium_crypto_secretstream_xchacha20poly1305_keygen()<br></span><span style="color: #9876AA">\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_base642bin</span><span style="color: #007700">(</span><span style="color: #DD0000">'MS0lzb7HC+thY6jY01pkTE/cwsQxnRq0/2L1eL4Hxn8='</span><span style="color: #007700">, </span><span style="color: #9876AA">SODIUM_BASE64_VARIANT_ORIGINAL</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Hello world!'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">encrypt_file</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'hello.txt.encrypted'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">sodium_bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.txt.encrypted'</span><span style="color: #007700">)));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(106)&nbsp;"971e33b255f0990ef3931caf761c59136efa77b434832f28ec719e3ff73f5aec38b3bba1574ab5b70a8844d8da36a668e802cfea2c"</blockquote></div>   </div>  </div> </div></div>
 * 
 * @param string $key
 * @return array
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-init-push.php
 */
function sodium_crypto_secretstream_xchacha20poly1305_init_push(string $key): array {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-push" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_push</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_push</span> — <span class="dc-title">Encrypt a chunk of data so that it can safely be decrypted in a streaming API</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-push-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_push</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$state</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span><span class="initializer"> = ""</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$tag</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-message">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE</a></span></strong></span></span><br>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Encrypt a chunk of data so that it can safely be decrypted in a streaming API.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-push-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">state</span></dt>    <dd>     <p class="para">      See <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_init_pull()}</span>      and <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_init_push()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">message</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">tag</span></dt>    <dd>     <p class="para">      Optional. Can be used to assert decryption behavior      (i.e. re-keying or indicating the final chunk in a stream).     </p>     <ul class="simplelist">      <li>       <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-message">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE</a></span></strong>:       the most common tag, that doesn't add any information about the nature of the message.      </li>      <li>       <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-final">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL</a></span></strong>:       indicates that the message marks the end of the stream, and erases the secret key used to encrypt the previous sequence.      </li>      <li>       <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-push">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH</a></span></strong>:       indicates that the message marks the end of a set of messages, but not the end of the stream.       For example, a huge JSON string sent as multiple chunks can use this tag to indicate to the application that the       string is complete and that it can be decoded. But the stream itself is not closed, and more data may follow.      </li>      <li>       <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-rekey">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY</a></span></strong>:       "forget" the key used to encrypt this message and the previous ones, and derive a new secret key.      </li>     </ul>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-push-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the encrypted ciphertext.  </p> </div></div>
 */
function sodium_crypto_secretstream_xchacha20poly1305_push(string &$state, #[\SensitiveParameter] string $message, string $additional_data = "", int $tag = SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE): string {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-init-pull" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_init_pull</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_init_pull</span> — <span class="dc-title">Initialize a secretstream context for decryption</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-pull-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_init_pull</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$header</span></span>, <span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$key</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Initialize a secretstream context for decryption.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-pull-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">header</span></dt>    <dd>     <p class="para">      The header of the secretstream. This should be one of the values produced by      <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_init_push()}</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      Encryption key (256-bit).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-pull-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Secretstream state.  </p> </div> <div class="refsect1 examples" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-init-pull-examples">  <h3 class="title">示例</h3>  <div class="example" id="sodium-crypto-secretstream-xchacha20poly1305-init-pull.example.basic">   <p><strong>示例 #1 <span class="function"><strong>sodium_crypto_secretstream_xchacha20poly1305_init_pull()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#1E1F22;"><blockquote style="border:1px gray solid;white-space:pre-wrap"><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br></span><span style="color: #007700">function </span><span style="color: #9876AA">decrypt_file</span><span style="color: #007700">(</span><span style="color: #9876AA">string \$inputFilePath</span><span style="color: #007700">, </span><span style="color: #9876AA">string \$outputFilePath</span><span style="color: #007700">, </span><span style="color: #9876AA">string \$key</span><span style="color: #007700">): </span><span style="color: #9876AA">void<br></span><span style="color: #007700">{<br>    </span><span style="color: #9876AA">\$inputFile </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFilePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'rb'</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$outputFile </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFilePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'wb'</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$header </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">24</span><span style="color: #007700">);<br><br>    </span><span style="color: #9876AA">\$state </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_crypto_secretstream_xchacha20poly1305_init_pull</span><span style="color: #007700">(</span><span style="color: #9876AA">\$header</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">\$inputFileSize </span><span style="color: #007700">= </span><span style="color: #9876AA">fstat</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">)[</span><span style="color: #DD0000">'size'</span><span style="color: #007700">];<br><br>    </span><span style="color: #FF8000">// Decrypt the file and write its contents to the output file:<br>    </span><span style="color: #007700">for (</span><span style="color: #9876AA">\$i </span><span style="color: #007700">= </span><span style="color: #9876AA">24</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">\$inputFileSize</span><span style="color: #007700">; </span><span style="color: #9876AA">\$i </span><span style="color: #007700">+= </span><span style="color: #9876AA">8192</span><span style="color: #007700">) {<br>        </span><span style="color: #9876AA">\$ctxt_chunk </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">8192</span><span style="color: #007700">);<br><br>        </span><span style="color: #FF8000">// We're not using \$tag, but in real protocols you can use this on encrypt to e.g.<br>        // trigger a re-key or indicate the end of file. Then, on decrypt, you can assert<br>        // this behavior.<br>        </span><span style="color: #007700">[</span><span style="color: #9876AA">\$ptxt_chunk</span><span style="color: #007700">, </span><span style="color: #9876AA">\$tag</span><span style="color: #007700">] = </span><span style="color: #9876AA">sodium_crypto_secretstream_xchacha20poly1305_pull</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">, </span><span style="color: #9876AA">\$ctxt_chunk</span><span style="color: #007700">);<br>        </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFile</span><span style="color: #007700">, </span><span style="color: #9876AA">\$ptxt_chunk</span><span style="color: #007700">);<br>    }<br><br>    </span><span style="color: #9876AA">sodium_memzero</span><span style="color: #007700">(</span><span style="color: #9876AA">\$state</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$inputFile</span><span style="color: #007700">);<br>    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">\$outputFile</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #FF8000">// sodium_crypto_secretstream_xchacha20poly1305_keygen()<br></span><span style="color: #9876AA">\$key </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_base642bin</span><span style="color: #007700">(</span><span style="color: #DD0000">'MS0lzb7HC+thY6jY01pkTE/cwsQxnRq0/2L1eL4Hxn8='</span><span style="color: #007700">, </span><span style="color: #9876AA">SODIUM_BASE64_VARIANT_ORIGINAL</span><span style="color: #007700">);<br><br></span><span style="color: #9876AA">\$example </span><span style="color: #007700">= </span><span style="color: #9876AA">sodium_hex2bin</span><span style="color: #007700">(</span><span style="color: #DD0000">'971e33b255f0990ef3931caf761c59136efa77b434832f28ec719e3ff73f5aec38b3bba1574ab5b70a8844d8da36a668e802cfea2c'</span><span style="color: #007700">);<br></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.enc'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$example</span><span style="color: #007700">);<br></span><span style="color: #9876AA">decrypt_file</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.enc'</span><span style="color: #007700">, </span><span style="color: #DD0000">'hello.txt.decrypted'</span><span style="color: #007700">, </span><span style="color: #9876AA">\$key</span><span style="color: #007700">);<br></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello.txt.decrypted'</span><span style="color: #007700">));<br></span><span style="color: #9876AA">?&gt;</span></span></blockquote></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="border-color:gray;background:#1E1F22;"><div class="examplescode"><blockquote style="border:1px gray solid;">string(12)&nbsp;"Hello&nbsp;world!"</blockquote></div>   </div>  </div> </div></div>
 * 
 * @param string $header
 * @param string $key
 * @return string
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-init-pull.php
 */
function sodium_crypto_secretstream_xchacha20poly1305_init_pull(string $header, string $key): string {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-pull" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_pull</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_pull</span> — <span class="dc-title">Decrypt a chunk of data from an encrypted stream</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-pull-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_pull</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$state</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ciphertext</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$additional_data</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>|<span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.singleton.php" class="type false" style="color:#EAB766">false</a></span></span></div>  <p class="para rdfs-comment">   Decrypt a chunk of data from an encrypted stream.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-pull-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">state</span></dt>    <dd>     <p class="para">      See <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_init_pull()}</span>      and <span class="function">{@link sodium_crypto_secretstream_xchacha20poly1305_init_push()}</span>     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">ciphertext</span></dt>    <dd>     <p class="para">      The ciphertext chunk to decrypt.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">additional_data</span></dt>    <dd>     <p class="para">      Optional additional data to include in the authentication tag.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-pull-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array with two values:   </p><ul class="itemizedlist">    <li class="listitem">     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>; The decrypted chunk     </p>    </li>    <li class="listitem">     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>; An optional tag (if provided during push). Possible values:      </p><ul class="simplelist">       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-message">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE</a></span></strong>:        the most common tag, that doesn't add any information about the nature of the message.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-final">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL</a></span></strong>:        indicates that the message marks the end of the stream, and erases the secret key used to encrypt the previous sequence.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-push">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH</a></span></strong>:        indicates that the message marks the end of a set of messages, but not the end of the stream.        For example, a huge JSON string sent as multiple chunks can use this tag to indicate to the application that the        string is complete and that it can be decoded. But the stream itself is not closed, and more data may follow.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-crypto-secretstream-xchacha20poly1305-tag-rekey">SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY</a></span></strong>:        "forget" the key used to encrypt this message and the previous ones, and derive a new secret key.       </li>      </ul>         </li>   </ul>   </div></div>
 */
function sodium_crypto_secretstream_xchacha20poly1305_pull(string &$state, string $ciphertext, string $additional_data = ""): array|false {}

/**
 * <div id="function.sodium-crypto-secretstream-xchacha20poly1305-rekey" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_crypto_secretstream_xchacha20poly1305_rekey</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_crypto_secretstream_xchacha20poly1305_rekey</span> — <span class="dc-title">Explicitly rotate the key in the secretstream state</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-rekey-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_crypto_secretstream_xchacha20poly1305_rekey</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter reference" style="color:#3A95FF">&amp;\$state</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>  <p class="para rdfs-comment">   Explicitly rotate the key in the secretstream state. Overwrites the value passed in.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-rekey-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">state</span></dt>    <dd>     <p class="para">      Secretstream state.     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-crypto-secretstream-xchacha20poly1305-rekey-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
 * 
 * @param string &$state
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-rekey.php
 */
function sodium_crypto_secretstream_xchacha20poly1305_rekey(string &$state): void {}

/**
 * <div id="function.sodium-bin2base64" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_bin2base64</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_bin2base64</span> — <span class="dc-title">Encodes a raw binary string with base64.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-bin2base64-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_bin2base64</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$id</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Converts a raw binary string into a base64-encoded string. Unlike <span class="function">{@link base64_encode()}</span>,   <span class="function"><strong>sodium_bin2base64()</strong></span> is constant-time (a property that is important for any code that   touches cryptographic inputs, such as plaintexts or keys) and supports multiple character sets.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-bin2base64-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      Raw binary string.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">id</span></dt>    <dd>     <p class="para">      </p><ul class="simplelist">       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-original">SODIUM_BASE64_VARIANT_ORIGINAL</a></span></strong> for standard (<span class="literal">A-Za-z0-9/\+</span>)        Base64 encoding.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-original-no-padding">SODIUM_BASE64_VARIANT_ORIGINAL_NO_PADDING</a></span></strong> for standard (<span class="literal">A-Za-z0-9/\+</span>)        Base64 encoding, without <span class="literal">=</span> padding characters.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-urlsafe">SODIUM_BASE64_VARIANT_URLSAFE</a></span></strong> for URL-safe (<span class="literal">A-Za-z0-9\-_</span>) Base64 encoding.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-urlsafe-no-padding">SODIUM_BASE64_VARIANT_URLSAFE_NO_PADDING</a></span></strong> for URL-safe (<span class="literal">A-Za-z0-9\-_</span>)        Base64 encoding, without <span class="literal">=</span> padding characters.       </li>      </ul>         </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-bin2base64-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Base64-encoded string.  </p> </div></div>
 * 
 * @param string $string
 * @param int $id
 * @return string
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-bin2base64.php
 */
function sodium_bin2base64(string $string, int $id): string {}

/**
 * <div id="function.sodium-base642bin" class="refentry"> <div class="refnamediv">  <h1 class="refname">sodium_base642bin</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">sodium_base642bin</span> — <span class="dc-title">Decodes a base64-encoded string into raw binary.</span></p> </div> <div class="refsect1 description" id="refsect1-function.sodium-base642bin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sodium_base642bin</strong></span>(<span class="methodparam"><span class="attribute"><a href="https://php.net/manual/zh/class.sensitiveparameter.php">#[\SensitiveParameter]</a> </span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$ignore</span><span class="initializer"> = ""</span></span>): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div>  <p class="para rdfs-comment">   Converts a base64 encoded string into raw binary. Unlike <span class="function">{@link base64_decode()}</span>,   <span class="function"><strong>sodium_base642bin()</strong></span> is constant-time (a property that is important for any code that   touches cryptographic inputs, such as plaintexts or keys) and supports multiple character sets.  </p> </div> <div class="refsect1 parameters" id="refsect1-function.sodium-base642bin-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <p class="para">      <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>; Encoded string.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">id</span></dt>    <dd>     <p class="para">      </p><ul class="simplelist">       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-original">SODIUM_BASE64_VARIANT_ORIGINAL</a></span></strong> for standard (<span class="literal">A-Za-z0-9/\+</span>)        Base64 encoding.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-original-no-padding">SODIUM_BASE64_VARIANT_ORIGINAL_NO_PADDING</a></span></strong> for standard (<span class="literal">A-Za-z0-9/\+</span>)        Base64 encoding, without <span class="literal">=</span> padding characters.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-urlsafe">SODIUM_BASE64_VARIANT_URLSAFE</a></span></strong> for URL-safe (<span class="literal">A-Za-z0-9\-_</span>) Base64 encoding.       </li>       <li>        <strong><span><a href="https://php.net/manual/zh/sodium.constants.php#constant.sodium-base64-variant-urlsafe-no-padding">SODIUM_BASE64_VARIANT_URLSAFE_NO_PADDING</a></span></strong> for URL-safe (<span class="literal">A-Za-z0-9\-_</span>)        Base64 encoding, without <span class="literal">=</span> padding characters.       </li>      </ul>         </dd>          <dt><span class="parameter" style="color:#3A95FF">ignore</span></dt>    <dd>     <p class="para">      Characters to ignore when decoding (e.g. whitespace characters).     </p>    </dd>     </dl> </div> <div class="refsect1 returnvalues" id="refsect1-function.sodium-base642bin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Decoded string.  </p> </div></div>
 * 
 * @param string $string
 * @param int $id
 * @param string $ignore
 * @throws SodiumException
 * @since 7.2
 * @see https://www.php.net/manual/en/function.sodium-base642bin.php
 * @return string
 */
function sodium_base642bin(string $string, int $id, string $ignore = ''): string {}

/**
 * <div id="class.sodiumexception" class="reference"> <h1 class="title">The SodiumException class</h1>  <div class="partintro"><p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p>  <div class="section" id="sodiumexception.intro">   <h2 class="title">简介</h2>   <p class="para">    Exceptions thrown by the sodium functions.   </p>  </div>  <div class="section" id="sodiumexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">SodiumException</strong></strong>             <span class="modifier">extends</span>      <a href="https://php.net/manual/zh/class.exception.php" class="classname">Exception</a>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.message">\$<var class="varname">message</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.string">\$<var class="varname">string</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.code">\$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.file">\$<var class="varname">file</var></a></var><span class="initializer"> = ""</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.line">\$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.trace">\$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://php.net/manual/zh/class.exception.php#exception.props.previous">\$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__construct}</span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span> <span class="parameter" style="color:#3A95FF">\$message</span><span class="initializer"> = ""</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span> <span class="parameter" style="color:#3A95FF">\$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span> <span class="parameter" style="color:#3A95FF">\$previous</span><span class="initializer"> = <strong><span><a href="https://php.net/manual/zh/reserved.constants.php#constant.null">null</a></span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.null.php" class="type null" style="color:#EAB766">?</a></span><span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.integer.php" class="type int" style="color:#EAB766">int</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.array.php" class="type array" style="color:#EAB766">array</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.string.php" class="type string" style="color:#EAB766">string</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><a href="https://php.net/manual/zh/language.types.void.php" class="type void" style="color:#EAB766">void</a></span></div>   }</div>  </div> </div></div>
 */
class SodiumException extends Exception {}
